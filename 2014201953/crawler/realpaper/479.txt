Terminological Cycles in a Description Logic with Existential Restrictions* 

Franz Baader 

Theoretical Computer Science 

TU Dresden 

D-01062 Dresden, Germany 
baader@inf.tu-dresden.de 

Abstract 

Cyclic  definitions  in  description  logics  have  un(cid:173)
til  now been  investigated only  for description  log(cid:173)
ics  allowing  for  value  restrictions.  Even  for  the 
most  basic  language 
which  allows  for con(cid:173)
junction and value restrictions only,  deciding sub-
sumption  in  the  presence  of terminological  cycles 
is a PSPACE-complete problem.  This paper inves(cid:173)
tigates subsumption in the presence of terminolog(cid:173)
ical cycles for the language . 
,  which  allows  for 
conjunction,  existential  restrictions,  and  the  top-
concept. 
, sub-
sumption  in 
remains polynomial,  independent 
of whether we use least  fixpoint  semantics, greatest 
fixpoint  semantics, or descriptive semantics. 

In  contrast  to  the  results  for 

Introduction 

but  not  of existential  restrictions 

1 
Early description logic (DL) systems allowed the use of value 
restrictions 
Thus, one could express that all  children are male using the 
Male, but not that someone has a son 
value restriction 
using the  existential  restriction 
The main rea(cid:173)
son  was  that,  when  clarifying  the  logical  status of property 
arcs  in  semantic  networks and  slots  in  frames,  the  decision 
was taken that arcs/slots should be read as value restrictions 
(see, e.g., [Nebel,  1990]).  Once one considers more expres(cid:173)
sive  DLs  allowing  for  full  negation,  existential  restrictions 
come  in  as  the  dual  of value  restrictions  [Schmidt-SchauB 
and  Smolka,  1991].  Thus,  for historical  reasons,  DLs  that 
allow for existential, but not for value restrictions, are largely 
In  the  present  paper,  we  investigate  termino(cid:173)
unexplored. 
logical  cycles  in  the  DL 
which  allows  for conjunction, 
existential  restrictions,  and  the  top-concept. 
In  contrast  to 
(even  very  inexpressive)  DLs  with  value  restrictions,  sub-
remains  polynomial  in  the  presence  of ter(cid:173)
sumption  in 
It  should  be  noted  that  there  are  in(cid:173)
minological  cycles. 
deed applications where the small 
appears to be suffi(cid:173)
cient.  In fact,  SNOMED, the  Systematized Nomenclature of 
Medicine [Cote et a/.,  1993] employs 
[Spackman, 2001; 
Spackman  et  al.,  1997].  Even  though  SNOMED  does  not 
appear to  use  cyclic  definitions,  this  may  be  due  to  a  lack 

* Partially supported by the DFG under grant BA 1122/4-3. 

of technology  rather than  need. 
In  fact,  the  Galen  medical 
knowledge base  contains  many cyclic  dependencies  [Rector 
and Horrocks,  1997].  Also,  even  in the case  of acyclic  ter(cid:173)
minologies, our polynomial subsumption algorithm improves 
on  the  usual  approach  that  first  unfolds the  TBox  (a poten(cid:173)
tially exponential step) and then applies the polynomial sub(cid:173)
sumption  algorithm  for 
-concept descriptions  [Baader et 
al.,  1999]. 

The  first  thorough  investigation of cyclic  terminologies  in 
description  logics  (DL)  is  due  to  Nebel  [1991],  who  intro(cid:173)
duced three different semantics for such terminologies:  least 
fixpoint (lfp) semantics, which considers only the models that 
interpret the defined concepts as small  as  possible;  greatest 
fixpoint  (gfp)  semantics,  which  considers  only  the  models 
that interpret the defined concepts as  large as possible;  and 
descriptive semantics, which considers all models. 

In  [Baader,  1990;  1996],  subsumption  w.r.t.  cyclic termi(cid:173)
nologies in the small  DL 
which  allows for conjunction 
and value restrictions only, was characterized with the help of 
finite automata.  This characterization provided PSPACE de(cid:173)
cision procedures for subsumption in 
with cyclic termi(cid:173)
nologies for the three types of semantics introduced by Nebel. 
In addition, it was shown that subsumption is PSPACE-hard. 
-terminologies were  extended by 
The  results  for  cyclic 
Kiisters [ 1998] to  ALN,  which extends 
by atomic nega(cid:173)
tion and number restrictions. 

The  fact  that  the  DL  ACC  (which  extends  FL0  by  full 
negation)  is  a  syntactic  variant  of the  multi-modal  logic  K 
opens a way for treating cyclic terminologies and more gen(cid:173)
eral  recursive  definitions  in  more  expressive  languages  like 
ACC and extensions thereof by a reduction to the modal mu-
calculus [Schild, 1994; De Giacomo and Lenzerini, 1994]. In 
this setting, one can use a mix of the three types of semantics 
introduced  by  Nebel.  However,  the  complexity  of the  sub(cid:173)
sumption problem is EXPTIME-complete. 

In spite of these  very general  results  for cyclic  definitions 
in expressive languages, there are still good reasons to look 
at  cyclic  terminologies in  less  expressive  (in  particular sub-
Boolean)  description  logics.  One  reason  is,  of course,  that 
one can hope for a lower complexity of the subsumption prob(cid:173)
lem. For DLs with value restrictions, this hope is not fulfilled, 
though.  Even in the inexpressive  DL 
subsumption be(cid:173)
comes PSPACE-complete if one allows for cyclic definitions. 
This is still better than the EXPTIME-completeness that one 

DESCRIPTION LOGICS 

325 

For  some  applications,  it  is  more  appropriate  to  interpret 
cyclic concept definitions with the help of an appropriate  fix-
point  semantics.  Before  defining  least  and  greatest  fixpoint 
semantics formally,  let us  illustrate their effect on an exam(cid:173)
ple. 
Example 1  Assume that our interpretations are graphs where 
we  have  nodes  (elements  of the  concept  name  Node)  and 
edges (represented by the role edge), and we want to define 
the concept I node of all nodes lying on an infinite (possibly 
cyclic) path of the graph.  The following is a possible defini(cid:173)
tion  of Inode: 

Now consider the following interpretation of the primitive 

concepts and roles: 

Where 
there 
are  four possible  ways of extending this  interpretation of the 
primitive concepts and roles to a model of the TBox consist(cid:173)
ing of the above concept definition:  Inode can be interpreted 
by  M  U  N,  M,  N,  or 
All  these  models  are  admissible 
w.r.t. descriptive semantics, whereas the first is the gfp-model 
and  the  last  is  the  lfp-model  of the  TBox.  Obviously,  only 
the gfp-model captures the intuition underlying the definition 
(namely, nodes lying on an infinite path) correctly. 

It  should  be  noted,  however,  that  in  other cases  descrip(cid:173)
tive semantics appears to be more appropriate.  For example, 
consider the definitions 

With respect to gfp-semantics, the defined concepts Tiger and 
Lion must always be interpreted as the same set whereas this 
is not the case for descriptive semantics.l 

Before we can define lfp- and gfp-semantics formally, we 
con(cid:173)
the primitive concepts  Nprim  and the 
.  A  primitive  inter(cid:173)
, an interpreta(cid:173)

must  introduce  some  notation.  Let  T  be an 
taining the roles 
defined concepts . 
pretations  J  for  T  is  given  by  a  domain 
tion  of the  roles 
.  by  binary  relations 
and  an  interpretation of the  primitive  concepts 
by subsets 
.  Obviously, a primitive interpretation 
differs from an interpretation in that it does not interpret the 
defined  concepts  in 
We  say  that the  interpretation X 
is  based on  the primitive interpretation J  iff it has the same 
domain as J and coincides with J on  Nrole  and  Nprim.  For 
a fixed primitive interpretation J, the  interpretations X based 
on  it  are  uniquely  determined  by  the  t u p l e of 
the interpretations of the defined concepts in 

, We define 

lnt{J)  :=  {X  I  X  is  an  interpretation  based  on  J}. 

Interpretations based on J can be compared by the following 
ordering, which realizes a pairwise inclusion test between the 

'This example is similar to the "humans and horses" example 
used by Nebel [ 1991 ] to illustrate the difference between descriptive 
semantics and gfp-semantics in ACM. 

has  in  ACC  with  cyclic  definitions,  but  from  the  practical 
point  of view  it  still  means  that  the  subsumption  algorithm 
may need exponential time. 

In contrast, the subsumption problem in 

can be decided 
in  polynomial  time  w.r.t.  the three  types of semantics  intro(cid:173)
duced by  Nebel.  The  main  tool  used to  show  these results 
is a characterization of subsumption through the existence of 
so-called simulation relations. 

In  the  next  section  we  will  introduce the  DL 

as well 
as  cyclic  terminologies and the  three types of semantics  for 
these  terminologies.  Then  we  will  show  in  Section  3  how 
such terminologies can be translated into description graphs. 
In this section, we will also define the notion of a simulation 
between nodes of a description graph, and mention some use(cid:173)
ful properties of simulations. The next three sections are then 
devoted  to  the  characterization  of subsumption  in 
w.r.t. 
gfp, Ifp, and descriptive semantics, respectively. 

2  Cyclic terminologies in the  DL 
Concept descriptions arc inductively defined with the help of 
a set of constructors, starting with a set Nc ofconcept names 
and a set  NR  of role names.  The constructors determine the 
expressive power of the  DL.  We  restrict the attention to  the 
whose concept descriptions are formed using the con(cid:173)
, and existen(cid:173)
.  The semantics of £L-concept descrip(cid:173)

structors top-concept (T), conjunction 
tial restriction 
tions  is defined  in terms of an  interpretation 
The domain 
is a non-empty set of individuals and the 
interpretation  function  I  maps each  concept name  A  £  Nc 
to a binary re(cid:173)
to a subset 
lation 
to  arbitrary  concept 
descriptions is inductively defined, as shown in the third col(cid:173)
umn of Table  1. 

of _  and  each  role 
The  extension  of 

A  terminology  (or  TBox  for  short)  is  a  finite  set  of con(cid:173)
cept  definitions  of the  form 
where  A  is  a concept 
name  and  D  a concept description.  In  addition, we require 
that  TBoxes  do  not  contain  multiple  definitions,  i.e.,  there 
cannot be two  distinct concept descriptions D\  and D2  such 
that both 
belongs to the TBox.  Con(cid:173)
cept names occurring on the left-hand side of a definition are 
called defined concepts.  All  other concept names occurring 
in  the TBox  are  called primitive concepts.  Note that we  al(cid:173)
low  for  cyclic  dependencies  between  the  defined  concepts, 
i.e.,  the  definition  of A  may  refer  (directly  or  indirectly)  to 
A  itself.  An  interpretation  X  is  a  model  of the  TBox  T  iff 
it  satisfies  all  its  concept definitions,  i.e., 
for  all 
definitions 

The  semantics  of (possibly  cyclic) 

we  have 
just  defined  is  called descriptive semantic by Nebel  [1991]. 

326 

DESCRIPTION  LOGICS 

respective interpretations of the defined concepts:  if 
Int(J), 

then 

It is easy to see that 
induces  a  complete  lattice  on  Jnt(J), 
i.e., every subset of Int (J) has a least upper bound (lub) and 
a greatest lower bound (gib). Using Tarski 's fixpoint theorem 
[Tarski,  1955]  for  complete  lattices,  it  is  not  hard  to  show 
[Nebel,  1991]  that,  for  a  given  primitive  interpretation  J, 
there  is  always  a  greatest  and  a  least 
model  of 
T based on J.  We call these models respectively the greatest 
fixpoint model (gfp-model) and the least  fixpoint  model (lfp-
model)  of T.  Greatest  (least)  fixpoint  semantics  considers 
only gfp-models (lfp-models) as admissible models. 
Definition 2  Let T be an  £L-TBox  and A, B be defined con(cid:173)
cepts2  occurring in T.  Then, 

•  A  is subsumed by  B w.r.t. descriptive semantics 

B)  iff. 

holds for all  models  I  of T. 

•  A  is subsumed by B w.r.t.  gfp-scmantics 

iff 

_ 

holds for all  gfp-models X of T. 

•  A  is  subsumed by B w.r.t.  lfp-semantics 

iff 

holds  for all  lfp-models 1  of T. 

We  will  show  in  the  following that  all  three  subsumption 
problems are decidable  in  polynomial time.  To do this,  we 
represent EL-TBoxes as graphs. 

3  Description  graphs and simulations 
£L-TBoxes  as  well  as primitive  interpretations can  be  rep(cid:173)
resented as description graphs.  Before we can  translate £L-
TBoxes into description graphs, we must normalize them.  In 
the  following,  let  T be an 
the defined con(cid:173)
cepts of T, Nprim  the primitive concepts of T, and  Nrol€  the 
roles  of T. 

Ndef 

We say that the 

implies that  D  is of the form 

is  normalized  iff 

Since there  is a polynomial translation of general TBoxes 
into normalized ones [Baader, 2002], one can restrict the at(cid:173)
tention  to  normalized  TBoxes.  Thus,  we  will  assume  that 
all  TBoxes  are  normalized.  Normalized  £L-TBoxes  can 
be viewed as graphs whose nodes are the defined concepts, 
which  are  labeled by  sets  of primitive  concepts,  and  whose 
edges are given by the existential restrictions.  For the rest of 
this  section,  we fix a  n o r m a l
concepts 
Definition  3  An  £  C-description  graph  is  a  graph  G  = 
{V,E,L)  where 

defined  c o n c e p t s a nd  roles 

i z e d w i th primitive 

•  V  is a set of nodes; 

2Obviously, we can restrict the attention to subsumption between 
defined concepts since subsumption between arbitrary concept de(cid:173)
scriptions can be reduced to this problem by introducing definitions 
for the descriptions. 

• 

• 

names; 

is  a  set of edges  labeled  by  role 

of primitive  concepts. 

is a function that labels nodes with sets 

The normalized TBox T can be translated into the follow(cid:173)

ing £ L-description graph 

•  the  nodes of  GT  are the defined concepts of T; 
•  if A  is a defined concept and 

its definition in T, then 

Any  primitive  interpretation 
lated  into 

the 

following  EL-description  graph  Gj 

can  be  trans(cid:173)
= 

•  the nodes of Gj  are the elements  of 

The translation between £L-TBoxes (primitive interpreta(cid:173)
tions)  and  £L-description  graphs  works  in  both  directions, 
i.e.,  any  EL-description  graph  can  also  be  view  as  an  £L-
TBox  (primitive interpretation). 

Simulations are binary relations between nodes of two £C-
description graphs that respect labels and edges in the sense 
defined below. 
Definition 4 
description graphs.  The  binary  relation 
simulation from Gi  to G-i  iff 

It is easy to see that the set of all simulations from G\ to G2 
is closed under arbitrary unions.  Consequently, there always 
exists a greatest simulation from G1 to G2- If G1, G2 are  finite, 
then this greatest simulation can be computed in polynomial 
time  [Henzinger et a/.,  1995].  The  following proposition is 
an easy consequence of this fact (see [Baader, 2002]). 
Propositions  Let  G1,G2  be 
finite  EL-description 
graphs,  V1  a  node  of G\  and  V2  a  node  of  G2.  Then  we 
can  decide  in polynomial time  whether there  is  a  simulation 

two 

4  Subsumption w.r.t gfp-semantics 
In the following, let T be a normalized EL-TBox with primi(cid:173)
tive concepts  Nprim,  defined concepts  Ndef,  and roles Nrole. 
Before  characterizing  subsumption  w.r.t.  gfp-semantics,  we 
give a characterization of when an individual of a gfp-model 
belongs to a defined concept in this model. 

DESCRIPTION  LOGICS 

327 

Proposition  6  Let  J  be a primitive  interpretation  and X  the 
gfp-model  of  T  based  on  J.  Then  the  following  are  equiva-
lent  for  any. 

2.  There is a simulation 
This  proposition  (whose  proof can  be  found  in  [Baader, 
2002]), can now be used to prove the following characteriza(cid:173)
tion of subsumption w.r.t. gfp-semantics in 
Theorem 7  Let T be an £C-TBox and A, B defined concepts 
in  T.  Then  the  following  are  equivalent: 

Figure  1:  The  £L-description  graph GT of Example 9. 

1.  A  Cg f,r  B. 
2.  There is  a simulation  Z:  GT  ~  GT WITH (B, A)  E  Z. 
Proof  (2 =>  1) Assume that the simulation  Z:  GT  ~  GT
  sat" 
isfies 
.  Let  J  be  a  primitive  interpretation and I 
the gfp-model of T based  on  J.  We  must show that x  €  A1 
implies  x  €  BI. 

By Proposition 6, 

implies that there is a simulation 
such that (A,  x)  Y.  It is easy to show that the 
such 

composition X  :—  Z o Y is a simulation from 
that  (B,  x)  X.  By Proposition 6, this implies 

h

(1  => 2)  Assume  t

a
£7r>  and view  it  as an 
description  graph  of a  primitive 
interpretation.  Thus, let J be the primitive interpretation with 
GT  =  GJ  and  let I be the gfp-model  of T based  on J. 

t We  consider the graph 

satisfies 

B  implies  A 

Since the identity is a simulation Id: GT  GT  =  Gj  that 
, Proposition 6 yields A  A1.  But  then 
, and thus Proposition 6 yields 
such that 
D 
The  theorem together with  Proposition 5  shows that sub-

the  existence  of a  simulation 
(B,A) 

is tractable. 
sumption w.r.t. gfp-semantics in 
Corollary 8  Subsumption  w.r.t. gfp-semantics in 
decided in polynomial time. 
Example 9 Consider the TBox T consisting of the following 
concept definitions: 

can be 

Z. 

The £ L-description graph GT corresponding to this TBox can 
be  found  in  Figure  1.  Let  VT  -  {A, A',B, C, D}  denote  the 
set of nodes of this graph. Then 
is a simulation 
from GT to GT-  Consequently, all the defined concepts in T 
subsume each other w.r.t. gfp-semantics. 

5  Subsumption w.r.t. Ifp-semantics 
For  the  sake  of completeness,  we  also  treat  lfp-semantics. 
It  should  be  noted,  however,  that  the  results  of this  section 
demonstrate that lfp-semantics is not interesting in 

Let  T  be  an 

and  GT THE corresponding 

description  graph.  Where  A,B  are  nodes  of GT, We write 
B  to  denote  that  there  is  a  path  in  GT  from  AtoB, 
B to denote that there is a non-empty path in GT 

and 
from A to B.  We define the set 

as 
there exists a node B such that 

i.e.,  CycT  consists of the nodes in GT that can reach a cyclic 
path in GT• The following proposition is an easy consequence 
of the  definition  of lfp-semantics and  of 
(see  [Baader, 
2002]). 
Proposition  10  Let T be an  £C-TBox and A  a defined con(cid:173)
cept  in  T
semantics,  i.  e.,  holds  for  all  Ifp-models  X  of  T. 

en  A  is  unsatisfiable  w.r.t.  lfp-

.t

h

In Example 9, all the defined concepts belong to CycT, and 

thus they are all unsatisfiable w.r.t. lfp-semantics. 

Since  all  the  defined  concepts  in  Cycr  are  unsatisfiable, 
their  definitions  can  be  removed  from  the  TBox  without 
changing the meaning of the concepts not belonging to CycT. 
(Their  definition  cannot  refer  to  an  element  of Cycr.)  This 
leaves us with an acyclic terminology, on which gfp- and lfp-
semantics coincide  [Nebel,  1991].  Thus,  subsumption w.r.t. 
lfp-semantics in  £L  can be reduced to subsumption w.r.t. gfp-
semantics. 
Corollary 11  Subsumption w.r.t.  lfp-semantics in £C can be 
decided in polynomial time. 

6  Subsumption w.r.t. descriptive semantics 
Let  T  be  an  £L-TBox  and  GT  the  corresponding  £L-
description  graph.  Since  every  gfp-model  of T  is  a  model 
of  T, 
Consequently, 
implies that there is a simulation Z:  GT  ~  GT with 
(B, A) 
Z.  In  the  following we will  show what additional 
properties  the  simulation  Z  must  satisfy  for the  implication 
in the other direction to hold. 

implies 

To get an intuition on the difference between gfp- and de(cid:173)
scriptive semantics, let us consider Example 9.  With respect 
to gfp-semantics, all the defined concepts of T are equivalent 
(i.e., subsume each other). With respect to descriptive seman(cid:173)
tics, A, B, D are still equivalent, C is equivalent to A', but A' 
is not equivalent to  B,  and C  and  D  are  also not equivalent 
(in  both cases,  the  concepts  are  not even  comparable w.r.t. 
subsumption). 

To  see that  C  and A'  are  equivalent  w.r.t.  descriptive  se(cid:173)
mantics, it is enough to note that the following identities hold 
.A  similar 
in  every  model  X  of  T: 
argument  shows  that  B  and  D  are  equivalent. 
In  addition, 
equivalence  of C  and  A'  also  implies  equivalence  of A  and 
B.  The  following  model  of T  is  a  counterexample  to  the 
other subsumption relationships: 

328 

DESCRIPTION  LOGICS 

Figure 2:  A (B, i4)-simulation chain. 

Figure 3:  A partial (B, A)-simulation chain. 

We will see below that the reason  for A!  and B  not being 
equivalent  is  that  in  the  infinite path  in  Gr  starting  with  Af, 
one  reaches  D  with  an  odd  number of edges,  whereas  C  is 
reached  with  an even  number;  for the path  starting  with  B, 
it  is just the opposite.  In contrast, the infinite paths starting 
respectively with A and B "synchronize" after a finite number 
of steps.  To formalize this intuition, we must introduce some 
notation. 

Definition 14  The simulation 
is called (B, ,4)-
synchronized iff there  exists  a  selection  function  S  for A, B 
and  Z  such  that  the  following  holds:  for  every  infinite  S-
selected (B, A)-simulation chain of the form depicted in Fig(cid:173)
ure 2 there exists an i 
We  are  now  ready to  state  our characterization  of subsump-
tion  w.r.t.  descriptive  semantics  (see  [Baader,  2002]  for the 
proof). 
Theorem  15  Let T be an 
cepts in T. Then the following are equivalent: 

and A, B  defined con(cid:173)

0 such that 

7. 
2.  There is a 

such that (B, A)  

Z. 

(B,A)-synchronizedsimulation 

Consider the T Box T and the simulation Z introduced in 

Example 9. Then 

is a  (B,  A-simulation  chain w.r.t.  Z, and 

It remains to be shown that property (2) of the theorem can 
be decided in polynomial time. To this purpose, we construct 
a simulation Y  such that (2) of Theorem  15  is equivalent to 
(B,A)  €  Y  (see  [Baader,  2002]  for  the  proof that  this  is 
indeed the case): 
We define Y  :=  (J 

Un>o Yn, where the relations Yn are defined 
by  induction on n:  Y0  is the  identity on  the  nodes of  GT-  If 
Yn  is already defined, then 

is a  (B,  A'-simulation  chain w.r.t. Z. Note that the first chain 
synchronizes after a  finite  number of steps  in  the  sense  that 
there is a Z-link between the same defined concept.  In con(cid:173)
trast, the second chain does not synchronize in this sense. 

If (B,  A) 

Z,  then  (S2)  of Definition  4  implies that,  for 
every infinite path  p1 starting with B0  :=  B, there is an infi(cid:173)
nite path p2 starting with  A0  :=  A such thatpi  is Z-simulated 
by p2.  In the following we construct such a simulating path 
step by  step.  The  main point  is,  however, that the decision 
which  concept  An  to  take  in  step  n  should  depend  only  on 
the partial  (B,,4)-simulation chain already constructed, and 
not on the parts of the path p1 not yet considered. 
Definition  13  A  partial  (B,A)-simulation  chain 
is  of  the 
form  depicted  in  Figure  3.  A  selection function  S  for  A, B 
and Z assigns to each partial  (B,  A-simulation  chain of this 
form  a  defined  concept  An  such  that 
is an 
edge  in  Gr  and  (Bn,  An) 

Z. 

Given a p a t h_ 

• • • and a 
defined concept A such that 
one can use a selec(cid:173)
tion  function  5  for  A, B  and  Z  to  construct  a  Z-simulating 
path.  In this case we say that the resulting (B, A-simulation 
chain is S-selected. 

The  relation  Y  can  obviously be  computed  in  time  polyno(cid:173)
mial  in  the  size  of  GT-  By  using  the  techniques  employed 
to  decided  Horn-SAT  in  linear  time  [Dowling  and  Gallier, 
1984], it is not hard to show that Y can actually be computed 
in  time quadratic  in  the size of GT 
Corollary 16  Subsumption w.r.t. descriptive semantics in 
can be decided in polynomial time. 

An  alternative  way  for  showing  the  polynomiality  result 
would  be  to  reduce  the  existence  of a  (B, A)-synchronized 
simulation  Z  satisfying  (B,  A)  
Z  to the  strategy problem 
for a certain two-player game with a positional winning con(cid:173)
dition.  The existence of a  winning strategy is  in this case a 
polynomial time problem [Gradel, 2002]. 

7  Future and related work 
We have seen that subsumption in 
with cyclic terminolo(cid:173)
gies is polynomial for the three types of semantics introduced 

DESCRIPTION LOGICS 

329 

by  Nebel  [1991].  In  some  applications,  it  would  be  interest­
ing  to  have  a  mix  of all  three  semantics,  and  it  remains  to 
be  seen  whether the  polynomiality results  also  hold  in  such a 
setting  (which  would  correspond to  a  restriction  of the  modal 

-calculus  [Kozen,  1983]). 
Sub-Boolean  DLs  (like   C)  have  attracted  renewed  at­
tention  in  the  context  of  so-called  non-standard  inferences 
[Kiisters,  2001]  like  computing  the  least  common  subsumer 
and  the  most  specific  concept. 
In  [Baader,  2003]  we  have 
shown  that  the  characterization  of subsumption  in   C  w.r.t. 
gfp-semantics also yields an approach for computing the least 
common  subsumer  in  
In  addition, 
we  have  extended  the  characterization  of subsumption  in  £L 
w.r.t.  gfp-semantics to the  instance problem,  and have shown 
how this can  be  used  to  compute the  most specific  concept. 

w.r.t.  gfp-semantics. 

Simulations  and  bisimulations  play  an  important  role  in 
modal  logics  (and  thus  also  in  description  logics).  How­
ever,  until  now  they  have  mostly  been  considered  for  modal 
logics  that  are  closed  under  all  the  Boolean  operators,  and 
they  have  usually  not  been  employed  for  reasoning  in  the 
logic.  A notable exception are  [Kurtonina and de Rijke,  1997; 
1999],  where  bisimulation  characterizations  are  given  for 
sub-Boolean Modal  Logics and  DLs.  However, these  charac­
terizations are  used to give a  formal  account of the expressive 
power  of these  logics.  They  are  not  employed  for  reasoning 
purposes. 

In  [Baader et  al,  1999], subsumption between  

-concept 

descriptions  was  characterized  through  the  existence  of ho-
momorphisms  between  the  description  trees  (basically  the 
syntax  trees)  associated  with  the  descriptions. 
If  one  looks 
at  the  polynomial  time  algorithm  for  deciding  the  existence 
of such a homomorphism, then it  is easy to  see that it actually 
computes the greatest simulation between the trees.  For trees, 
the existence of a homomorphism mapping the root to the root 
coincides  with  the  existence  of  a  simulation  containing  the 
tuple  of the  roots.  For  graphs,  a  similar  connection does  not 
hold. 
In  fact,  for  graphs  the  existence  of a  homomorphism 
is  an  NP-complete  problem.  For  simple  conceptual  graphs 
(or  equivalently,  conjunctive  queries)  the  implication  (con­
tainment)  problem  can  be  characterized  via  the  existence  of 
certain homomorphisms between graphs  [Chein  et al.,  1998], 
and  is thus NP-complete. 

References 
[Baader, 2003]  F. Baader.  Least common subsumers and most spe­
cific  concepts  in  a  description  logic with  existential  restrictions 
and terminological  cycles.  In Proc.  IJCAI'03,  2003. 

[Baader, 2002]  F.  Baader.  Terminological  cycles  in  a  description 
logic with existential restrictions.  LTCS-Report 02-02, TU Dres­
den, 2002.  See http://lat.inf.tu-dresden.de/research/reports.html. 
[Baader  et  al,  1999]  F. Baader, R. Kiisters, and R. Molitor.  Com­
puting least common  subsumers  in description logics with exis­
tential restrictions.  In Proc.  IJCAI'99,  1999. 

[Baader,  1990]  F. Baader. Terminological cycles in KL-ONE-based 

knowledge  representation languages.  In Proc. AAAI'90,  1990. 

[Baader,  1996]  F. Baader.  Using automata theory for characterizing 
the semantics of terminological cycles. Ann. of Mathematics and 
Artificial Intelligence,  18,  1996. 

[Chein etal,  1998]  M.  Chein,  M.-L.  Mugnier,  and  G.  Simonet. 
Nested graphs:  A  graph-based  knowledge  representation  model 
with FOL semantics.  In Proc.  KR'98,  1998. 

[Cote et  al,  1993]  R. Cote, D. Rothwell, J. Palotay, R. Beckett, and 
L. Brochu.  The systematized nomenclature of human and veteri­
nary medicine. Technical report, SNOMED International, North-
field, IL: College of American Pathologists,  1993. 

[De Giacomo and Lenzerini,  1994]  G.  De  Giacomo  and  M.  Lenz-
erini.  Concept  language  with  number restrictions  and  fixpoints, 
and its relationship with  μ-calculus.  In  Proc.  ECAI'94,  1994. 

[Dowling and Gallier,  1984]  W. F. Dowling and J. Gallicr.  Linear-
time algorithms for testing the satisfiability of propositional Horn 
formulae.  J.  Logic Programming,  1(3),  1984. 

[Gradel, 2002]  E. Gradel.  Model  checking games.  In Proc.  WOL-
LIC 02,  volume  67  of Electronic Notes  in  Theoretical  Computer 
Science. Elsevier, 2002. 

[Henzingeret  a/.,  1995]  M.  R.  Henzinger,  T.  A.  Henzinger,  and 
P. W. Kopke. Computing simulations on finite and infinite graphs. 
In 36th Annual Symposium on Foundations of Computer Science, 
1995. IEEE Computer Society Press. 

[Kozen,  1983]  D.  Kozen.  Results on the propositional /i-calculus. 

Theoretical Computer Science, 27,  1983. 

[Kurtonina and de Rijke,  1997]  N.  Kurtonina  and  M.  de  Rijke. 
Simulating without negation. J.  Logic and Computation, 1,  1997. 
[Kurtonina and de Rijke,  1999]  N. Kurtonina and M. de Rijke.  Ex­
pressiveness of concept expressions in first-order description log­
ics.  Artificial Intelligence,  107(2),  1999. 

[Kiisters,  1998]  R.  Kiisters.  Characterizing the semantics of termi­
nological  cycles in ACAf using  finite  automata.  In Proc.  KR '98, 
1998. 

[Kiisters,  2001]  R.  Kiisters.  Nonstandard  Inferences  in  Descrip­

tion Logics, Springer LNAI  2100, 2001. 

[Nebel,  1990]  B.  Nebel.  Reasoning and Revision  in  Hybrid Repre­

sentation Systems, Springer LNAI 422,  1990. 

[Nebel,  1991]  B.  Nebel.  Terminological  cycles:  Semantics  and 
computational properties. In J. F. Sowa, editor, Principles of Se­
mantic Networks. Morgan Kaufmann, Los Altos,  1991. 

[Rector and Horrocks,  1997]  A.  Rector  and  I.  Horrocks.  Experi­
ence  building  a  large,  re-usable  medical  ontology  using  a  de­
scription logic with transitivity and concept inclusions.  In Proc. 
of  the  WS  on  Ontological  Engineering,  AAA  ISpring  Symposium 
(AAAI'97).  A A AI  Press,  1997. 

[Schild,  1994]  K.  Schild.  Terminological  cycles  and  the  proposi­

tional  μ-calculus.  In Proc. KR '94,  1994. 

[Schmidt-SchauB and Smolka,  1991]  M.  Schmidt-SchauB 

and 
G.  Smolka.  Attributive concept descriptions with complements. 
Artificial Intelligence,  48( 1): 1-26,  1991. 

[Spackman etal,  1997]  K.  Spackman,  K.  Campbell,  and  R.  Cote. 
SNOMED RT: A reference terminology for health care. J. of the 
American  Medical  Informatics  Association,  1997.  Fall  Sympo­
sium Supplement. 

[Spackman, 2001]  K.  Spackman.  Normal  forms  for  description 
logic expressions of clinical concepts in SNOMED RT. J. of the 
American  Medical  Informatics  Association,  2001.  Symposium 
Supplement. 

[Tarski,  1955]  A. Tarski.  A lattice-theoretical  fixpoint  theorem and 

its applications.  Pacific J.  Mathematics, 5:285-309,  1955. 

330 

DESCRIPTION LOGICS 

