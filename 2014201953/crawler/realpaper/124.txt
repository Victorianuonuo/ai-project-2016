Accurate and Low-cost Location Estimation Using Kernels

Jeffery Junfeng Pana

James T. Kwoka

Qiang Yang a

Yiqiang Chenb

a Department of Computer Science, The Hong Kong University of Science and Technology, Hong Kong

b Institute of Computer Technology, Chinese Academy of Sciences, China

{panjf,jamesk,qyang}@cs.ust.hk, yqchen@ict.ac.cn

Abstract

We present a novel method for indoor-location esti-
mation using a vector-space model based on signals
received from a wireless client. Our aim is to ob-
tain an accurate mapping between the signal space
and the physical space without incurring too much
human calibration effort. This problem has tradi-
tionally been tackled through probabilistic models
trained on manually labeled data, which are expen-
sive to obtain.
In this paper, we present a novel
approach to building a mapping between the signal-
vector space and the physical location space using
kernel canonical correlation analysis (KCCA). Its
training requires much less human labor. More-
over, unlike traditional location-estimation systems
that treat grid points as independent and discrete
target classes during training, we use the physical
location as a continuous feedback to build a similar-
ity mapping using KCCA. We test our algorithm in
a 802.11 wireless LAN environment, and demon-
strate the advantage of our method in both accu-
racy and its ability to utilize a much smaller set of
labeled training data than previous methods.
Introduction

1
Location estimation is a major area of pervasive comput-
ing applications that range from context-dependent content
delivery to people monitoring . However, accurate loca-
tion information may not be always available. For example,
many buildings cannot be reached by location-determination
devices such as GPS. In such environments, a commonly-
used technique is to leverage the signal strength values of
a wireless network such as the IEEE 802.11b wireless LAN
network (WLAN). Many systems utilize the signal strength
values received from the access points to infer the location
of mobile devices, based on deterministic or probabilistic
techniques [Ladd et al., 2002; Gentile and Berndt, 2004;
Youssef et al., 2003; Bahl and Padmanabhan, 2000; Ni et al.,
2003]. Similarly, in a sensor network, the location informa-
tion must also be inferred from signals received from various
deployed sensors. A major issue in these applications is how
to build an accurate mapping between the signal space and
the physical space while incurring minimal human effort.

In general, location-estimation systems using (RF)-based
signal-strength values function in two phases: an ofﬂine train-
ing phase and an online, localization phase.
In the ofﬂine
phase, a probabilistic model is trained by considering the sig-
nal strength values received from the access points at selected

locations in the area of interest. These values comprise the
training data gathered from a physical region, which are used
to calibrate a probabilistic location-estimation system. In the
online localization phase, the real-time signal strength sam-
ples received from the access points are used to estimate the
current location based on the learned model.
In the training phase, the learned model is essentially a
mapping function f(S,P) between the signal space S and
the physical location space P. Deterministic techniques build
such a mapping function by assuming a signal propagation
model based on properties of electro-magnetic ﬁelds. These
signal-propagation models often cannot accurately describe a
realistic environment due to uncertainty in the devices and the
obstacles in the signal paths. Probabilistic techniques are of-
ten more accurate by directly handling the uncertainty. These
techniques construct the function f(·,·) by maximizing the
likelihood of the observation given the probabilistic distribu-
tion of the training data used for calibration.

However, the probabilistic methods suffer from several
major shortcomings. First, these techniques require a huge
amount of labeled data for the trained model to be accurate.
In reality, the data collection is a time-consuming process.
In our experience, for example, in our earlier test it took
many hours to collect and label the signal-strength data in
a limited indoor environment. Second, the mapping between
the signal and physical spaces are very difﬁcult to construct
due to nonlinearity. Nonlinearity exists when similar loca-
tions have very different signal signatures. Therefore, a direct
mapping between the two spaces may not always work well,
even when much data are collected. Third, many probabilistic
techniques adopt a classiﬁcation-based approach, by treating
the locations as discrete classes to be classiﬁed. However,
this approach ignores the important information inherent in
the physical proximity of the locations. Furthermore, pre-
vious methods that apply regression based techniques treat
the physical dimensions (x, y) separately, they cannot fully
exploit the geometric information imparted by considering x
and y together.

In this paper, we present a similarity-based approach to
building a mapping function. Our main intuition is to per-
form a kernel-based transformation of the signal and physical
spaces to capture the nonlinear relationship between the sig-
nals and locations. Furthermore, we perform a kernel canoni-
cal correlation analysis (KCCA) in the two spaces for feature
extraction. This allows the pairwise similarity of samples that
are measured in both spaces to be maximally correlated. We
apply a Gaussian kernel to adapt the noisy characteristic of
signal strength and use a Mat´ern kernel to sense the change

in physical locations.

A major advantage of our proposed technique is that we
can obtain higher accuracy while reducing the training cost by
requiring only a fraction of the labeled samples as compared
to previous methods. We demonstrate this result in a series of
tests on WLAN location estimation using the data collected
in a realistic environment.

2 Related Work
2.1 Location Estimation
Location-estimation systems are an integral component for
probabilistic plan-recognition systems in AI [Liao et al.,
2004; Bui et al., 2002].
In general, they operate in two
phases: an ofﬂine training phase and an online localization
phase. During the ofﬂine phase, a radio map is built which
tabulates the signal strength received from the access points
at selected locations in the area of interest. During the local-
ization phase, the signal strength samples received from the
access points are used to search the radio map to estimate a
user’s location. In building the radio maps, two techniques
have been attempted: deterministic and probabilistic.

Deterministic techniques rely on radio propagation models
which take into account such environmental factors as path-
loss functions [Roos et al., 2002a; Kaemarungsi and Krishna-
murthy, 2004]. When this is possible to do where uncertainty
is relatively low, signal distribution models can be derived
with a relatively small number of samples using knowledge
on propagation channels [Hashemi, 1993]. This also enables
the nearest neighbor or triangulation techniques to be used
[Bahl and Padmanabhan, 2000; Smailagic and Kogan, 2002;
Bhasker et al., 2004]. For example, the RADAR system
by Microsoft Research [Bahl and Padmanabhan, 2000] uses
nearest neighbor heuristics and triangulation methods to in-
fer a user’s location. Each signal strength sample is com-
pared against the radio map and the coordinates of the best
matches are averaged to give location estimation. The accu-
racy of RADAR is about three meters with ﬁfty percent prob-
ability. In [Bhasker et al., 2004], an online procedure based
on feedback from users was employed to correct the loca-
tion estimation of the system. A similar technique for sensor
networks has been applied; for example, the LANDMARC
system [Ni et al., 2003] utilizes the concept of reference tags
to alleviate the effects caused by the ﬂuctuation in RF signal
strength. The method ﬁrst computes the distance between the
signal-strength vectors received from the tracking tags and
those from different reference-tags’ respectively. It then uses
k nearest reference tags’ coordinates to calculate the approx-
imate coordinate of the tracking tag.

Probabilistic techniques confront the uncertainty in an
indoor wireless environment, by constructing the signal-
strength distributions over different locations in the radio
map and use probabilistic inference methods for localization
[Roos et al., 2002b; Youssef et al., 2003]. [Youssef et al.,
2003] used a joint clustering technique to group locations to-
gether in order to reduce the computational cost of the sys-
tem. The method ﬁrst determines a most likely cluster within
which to search for the most probable location, then applies

a maximum likelihood estimation (MLE) method to infer the
most probable location within the cluster.

More recently, intense research efforts have been spent to
seek additional knowledge in order to boost the accuracy of
the location determination systems. For example, to handle
the sequential characteristic of user traces, [Ladd et al., 2002]
suggest a sensor fusion model and shows a strong correla-
tion between consecutive samples. The robotics-based loca-
tion sensing system in [Ladd et al., 2002] applies Bayesian
inference to compute the conditional probabilities over lo-
cations based on received signal-strength samples from var-
ious access points. Then a postprocessing step, which uti-
lizes the spatial constraints of a user’s movement trajectories,
reﬁnes the location estimation and rejects the estimates that
show signiﬁcant changes in the location space. Depending
on whether the postprocessing step is used or not, the accu-
racy of this method is 83% or 77% within 1.5 meters. [Yin et
al., 2005; Ni et al., 2003] study the dynamic features of signal
strength and build a regression model to adapt the change of
radio map with reference points. A radio map is constructed
using data mining methods in an effort to reduce the samples
collected for calibration[Chai and Yang, 2005].

In contrast to the above works, our approach builds a simi-
larity based mapping function by making full use of the con-
tinuous location information in kernel-based transformation.
In the next section, we ﬁrst review kernels and kernel canon-
ical correlation analysis.

2.2 (Kernel) Canonical Correlation Analysis
Canonical Correlation Analysis
Given two sets of variables, canonical correlation anal-
[Hotelling, 1936] attempts to ﬁnd a ba-
ysis (CCA)
such that
sis
for each set
the correlation between
the projections of
the variables onto these basis vec-
tors are mutually maximized. Mathematically, given
n instances S = {(x1, y1), (x2, y2), . . . , (xn, yn)} of
the pair (x, y), CCA ﬁnds directions (canonical vec-
tors) wx and wy so that
the transformed variables
(canonical variates) ((cid:1)wx, x1(cid:2),(cid:1)wx, x2(cid:2), . . . ,(cid:1)wx, xn(cid:2)) and
((cid:1)wy, y1(cid:2),(cid:1)wy, y2(cid:2), . . . ,(cid:1)wy, yn(cid:2)), are maximally corre-
lated. Now, deﬁne the total covariance matrix by

(cid:1)(cid:2)

(cid:3)(cid:2)

(cid:3)(cid:1)(cid:4)

(cid:5)

(cid:6)

,

C = ˆE

x
y

x
y

=

Cxx Cxy
Cyx Cyy

where ˆE[·] is the empirical expectation operator, Cxx, Cyy
are the within-sets covariance matrices and Cxy = C(cid:1)
yx is
It can be shown that
the between-sets covariance matrix.
wx can be obtained by solving the generalized eigenprob-
lem CxyC−1
yyCyxwx = λ2Cxxwx, and then subsequently
obtain wy as wy = 1
Kernel Canonical Correlation Analysis
A major limitation of CCA is that it can only exploit linear
relationships between x and y. As is now well-known, the
use of kernels offers an efﬁcient, nonlinear extension of CCA.
Kernel canonical correlation analysis (KCCA) [Hardoon et
al., 2004] implicitly maps x and y to φx(x) and φy(y), and
then performs traditional CCA in the two high-dimensional

yyCyxwx [Hardoon et al., 2004].

C−1

λ

feature spaces. To control the ﬂexibility of the projections,
the norms of the associated weight vectors are penalized.

Using the dual representations for the projection directions

wφx(x) and wφy(y):
wφx(x) = S(cid:1)

and wφy(y) = S(cid:1)

φy(y)β,

φx(x)α,

(1)
where Sφx(x) = [φx(x1), . . . , φx(xn)](cid:1) Sφy(y) =
, and α, β ∈ Rn. Denote the corre-
[φy(y1), . . . , φy(yn)](cid:1)
sponding kernel functions by kx(·,·) and ky(·,·), and the ker-
nel matrices (deﬁned on all n instances) by Kx and Ky. It
can be shown that α can be obtained by solving the general-
ized eigenproblem
(Kx + κI)

(2)
where I is the identity matrix and κ is a user-deﬁned regular-
ization parameter. Subsequently, β can be obtained as

−1Ky(Ky + κI)

−1Kxα = λ2α,

β =

1
λ

(Ky + κI)

−1Kxα.

Given any ˜x, its projection on wφx(x) is given by

Px(˜x) = φx(˜x)

(cid:1)wφx(x) = k(cid:1)

˜xα,

(3)

(4)

where k˜x = [kx(˜x, x1), kx(˜x, x2), . . . , kx(˜x, xn)](cid:1)
larly, the projection of any ˜y onto wφy(y) is Py(˜y) = k(cid:1)
where k˜y = [ky(˜y, y1), ky(˜y, y2), . . . , ky(˜y, yn)](cid:1)

. Simi-
˜yβ,

The generalized eigenproblem in (2) can be solved by us-
ing the (complete) Cholesky decomposition. However, the
kernel matrices Kx and Ky are of size n, and so obtaining
the Cholesky decomposition can become computational ex-
pensive for large training sets. In that case, the incomplete
Cholesky decomposition or the partial Gram-Schmidt orthog-
onalization can be used instead [Hardoon et al., 2004].

.

3 Location Estimation using KCCA
3.1 Motivation
Consider the two-dimensional location estimation problem1.
Its goal is to obtain a mapping between the space of sig-
nal strengths obtained at p access points S = {s ≡
[s1, s2, . . . , sp](cid:1) ∈ Rp} and the physical space P = {(cid:3) ≡
[x, y](cid:1) ∈ R
2}. Traditional approaches typically learn the two
mappings, S → {x} and S → {y}, independently [Brunato
and Battiti, 2004]. In this paper, we consider x and y together
and emphasize the correlation between signal and physical
spaces, observing that the pairwise similarity in the signal
space should match the pairwise similarity in the physical
space. For example, in Figure 1, signal SA should be more
similar to SB than SC, since A is closer to B in the physical
space. Consequently, we consider both x and y together and
use KCCA to learn the mapping between the two spaces.

3.2 The LE-KCCA Algorithm
Ofﬂine Training Phase
In the training phase, the following steps are taken:

Figure 1: Correlation between the signal and physical spaces.

1. Signal strengths are collected at various grid locations.
2. KCCA, with appropriate choices for the two kernels
(Section 3.3), is used to learn the relationship between
the signal and physical spaces. In particular, λi’s and
αi’s are obtained from the generalized eigenproblem in
(2), and the corresponding β

i’s from (3).

3. For each training pair (si, (cid:3)i), its projections

(cid:1)
P (si) = [P1(si), P2(si), . . . , PT (si)]

(5)

on the T canonical vectors are obtained from (4).

Online Localization Phase
In the localization phase, the location of a new signal strength
vector ˜s is estimated as follows:

1. Use (4) to project ˜s onto the canonical vectors and obtain

P (˜s) = [P1(˜s), P2(˜s), . . . , PT (˜s)](cid:1)

.

(cid:7)
2. Among the projections (5) from the training samples,
In this paper,
j=1 λj(Pj(˜s)−

ﬁnd the M neighbors closest to P (˜s).
the weighted Euclidean distance di =
Pj(si))2 is employed.

T

3. Interpolate these neighbors’ physical locations to predict
the physical location of ˜s. In this paper, we simply out-
put the median (or mean for continuous location estima-
tion) of the (x, y) coordinates of these M neighbors.

3.3 Choice of Kernels
Signal-strength values are often noisy. The empirical dis-
tribution (radio map) is difﬁcult to obtain, especially when
the training samples are scarce. As a ﬁrst approximation, the
Gaussian distribution has been used in characterizing the non-
linearity of the signal strengths [Roos et al., 2002b]. Hence,
in this paper, we also use the Gaussian kernel G(x1, x2):

exp(−w2

(cid:6)x1 − x2(cid:6)2)

G

(6)
for the S space. Here, wG is a user-deﬁned parameter that
reﬂects the smoothness of the radio map.
On the other hand, measurements of the physical locations
are relatively clean. As in [Schwaighofer et al., 2004], we
adopt the Mat´ern kernel M(x1, x2) (Figure 2):

√
2(

νw(cid:6)x1 − x2(cid:6))ν

Γ(ν)

√
Kν(2

νwM(cid:6)x1 − x2(cid:6)),

(7)

1Extension

to

the

three-dimensional

dimensional) case is straight-forward

(or

even

higher-

where ν is a smoothness parameter, Γ(ν) is the Gamma func-
tion and Kν(r) is the modiﬁed Bessel function of the second

kernel exp(−√

It can be shown that when ν → ∞, the Mat´ern ker-
kind.
nel degenerates to the Gaussian kernel, and to the exponential
2w(cid:6)x1 − x2(cid:6)) when ν = 0.5. Note that both
the Gaussian and Mat´ern kernels are isotropic and so are in-
variant to the location of origin and to arbitrary rotation.

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0
−6

Mν,w(x, x

(cid:1)) , w =0.4

ν=+∞ Gaussian
ν=1.5
ν=0.5 Exponential

−4

−2

0
||x−x
(cid:1)||

2

4

6

Figure 2: The Mat´ern kernel.

4 Experiments
In this Section, experiments are performed to measure the ac-
curacy of LE-KCCA, and also test whether this is useful in
reducing calibration effort. For comparison, we also run: (1)
support vector machine (SVM) [Brunato and Battiti, 2004];
(2) maximum likelihood estimation (MLE) [Youssef et al.,
2003]; and (3) RADAR [Bahl and Padmanabhan, 2000].

4.1 Setup
Experiments are performed based on the ofﬁce layout in the
Department of Computer Science , The Hong Kong Univer-
sity of Science and Technology (Figure 3). There are four
hallways with a total of 99 grids, where each grid measures
1.5m × 1.5m. There are only three access points in Fig-
ure 3, though a total of eight access points (including some
from other ﬂoors) are detected. Each sample is thus an 8-
dimensional signal strength vector, with the measurements
averaged in one second. 100 such samples are collected at
the center of each grid, with a total of 9,900 samples obtained.
We randomly use 65% of the 9,900 samples for training and
the rest for testing. To reduce statistical variability, results
here are based on averages over 10 repetitions.

Figure 3: Ofﬁce layout used in the experiments.

We set wG in (6) to 0.1, wM in (7) to 0.05, and M
(the number of neighbors used in the localization phase) to
17. Preliminary studies show that the accuracy only changes

slightly (within 1%) when M varies in the range 7 to 31.
Moreover, ν in (7) is set to 0.5, and thus the Mat´ern kernel
degenerates to the exponential kernel.

4.2 Location Estimation Accuracy
Figure 4 plots the average testing accuracies (and the cor-
responding standard deviations) at different acceptable error
distances. At an error distance of 3.0m, the accuracy of LE-
KCCA is 91.6% while those of SVM, MLE and RADAR are
87.8%, 86.1% and 78.8% respectively. Thus, by utilizing
the pairwise distance similarities in physical locations, LE-
KCCA obtains better performance than the other methods.

Figure 4: Testing accuracies at different error distances.

4.3 Reduction in Calibration Effort
In the ﬁrst experiment, we use all the 99 grid locations but
only a random subset of the signal samples available at each
location for training. Figure 5 shows the testing accuracies at
error distances of 1.5m or 3.0m. As can be seen, by using only
10-15 random training samples at each location, LE-KCCA
can already outperform the other methods that use a full set.
In the second experiment, we select a subset of the avail-
able grid locations, and then use all the training signal sam-
ples at those selected locations for training. Evaluation is
performed on both the unseen signal samples at the selected
grid locations and also at the unseen locations. Again, Fig-
ure 6 shows that LE-KCCA yields better performance. Thus,
LE-KCCA, by maximizing the correlation between signal
and physical spaces, can reduce the calibration effort dra-
matically. With the physical location similarity as feedback,
samples from the same locations move closer together, while
those from different locations are pushed away under the
feature-space mapping built by LE-KCCA.

We believe that LE-KCCA performs well. To validate this
claim, we conduct another three experiments for comparison.
The ﬁrst one treats all the grid locations separately, which can
be achieved by using a large value for wM in the Mat´ern ker-
nel (in this experiment, we set wM = 50). This is denoted
as Isolated-KCCA in the sequel. Another extreme case is to
modify the LE-KCCA algorithm so that the signal space is
correlated with x and y separately (denoted 1D-KCCA). A
third experiment is to modify both Gaussian and Mat´ern ker-
nels to linear ones (Linear CCA). Experiments are performed
in the same setting as for Figure 5. As can be seen in Figure 7,
all three variants lead to degraded performance as expected.

Figure 5: Effect on varying the number of training samples at each grid location.

Figure 6: Effect on varying the number of grid locations in training.

Figure 7: The effect when the information in both physical dimensions (x and y) are not used together.
Isolated-KCCA
considers each grid location as independent, while 1D-KCCA considers x and y as independent. Linear CCA has even lower
accuracy and the curve is not shown in the ﬁgure.

Linear CCA has an accuracy that is lower than 60% on every
test set, and so its results are not shown in the ﬁgure.
5 Conclusions and Future Work
This paper focuses on using KCCA to improve the accuracy
of location estimation in wireless LANs. We have found that
kernel transformation and CCA allow the construction of an
accurate mapping between the physical space and the signal
space. One advantage is the higher accuracy obtained in lo-
calization with much less calibration effort. We use a Gaus-
sian kernel for the signal space to adapt to the noisy character-
istic of radio-propagation channels, and a Mat´ern kernel for
the physical space. The advantage of KCCA is shown through
extensive experimental tests in a realistic environment. In this
paper, we constructed the mapping without considering the
additional information of user motion proﬁles. In the future,
we plan to take the user-motion proﬁles into account, which
may lead to higher accuracy with even less calibration effort.
Likewise, we wish to experiment more with other environ-
mental and contextual factors to boost the performance.
Acknowledgment
We would like to thank Hong Kong RGC for supporting this
work under grant HKUST6187 / 04E. We would also like to
thank Jie Yin and Xiaoyong Chai for their effort in collecting
the data and discussing the research problems.
References
[Bahl and Padmanabhan, 2000] P. Bahl and V.N. Padmanab-
han. RADAR: An in-building RF-based user location
and tracking system.
In Proceedings of the Conference
on Computer Communications, volume 2, pages 775–784,
2000.

[Bhasker et al., 2004] E.S. Bhasker, S.W. Brown, and W.G.
Griswold. Employing user feedback for fast, accurate,
low-maintenance geolocationing.
In IEEE International
Conference on Pervasive Computing and Communica-
tions, pages 111–120, Orlando, Florida, USA, March
2004.

[Brunato and Battiti, 2004] M. Brunato and R. Battiti. Statis-
tical learning theory for location ﬁngerprinting in wireless
LANs. Computer Networks, 2004.

[Bui et al., 2002] H.H. Bui, S. Venkatesh, and G. West. Pol-
icy recognition in the abstract hidden Markov model. Jour-
nal of Artiﬁcial Intelligence Research, 17:451–499, 2002.
[Chai and Yang, 2005] X. Chai and Q. Yang. Reducing cali-
bration effort for location estimation using unlabeled sam-
ples. In Proceedings of the Third IEEE International Con-
ference on Pervasive Computing and Communications,
Kauai Island, Hawaii, USA, 2005.

[Gentile and Berndt, 2004] C. Gentile and L.K. Berndt. Ro-
bust location using system dynamics and motion con-
straints. In Proceedings of the IEEE International Confer-
ence on Communications, pages 1360–1364, June 2004.

[Hardoon et al., 2004] D.R. Hardoon, S. Szedmak, and
Canonical correlation analysis; an
J. Shawe-Taylor.
overview with application to learning methods. Neural
Computation, 16:2639–2664, 2004.

[Hashemi, 1993] Homayoun Hashemi. The indoor radio
propagation channel. Proceedings of the IEEE, 81(7):943–
968, 1993.

[Hotelling, 1936] H. Hotelling. Relations between two sets

of variates. Biometrika, 28:312–377, 1936.

[Kaemarungsi and Krishnamurthy, 2004] K. Kaemarungsi
and P. Krishnamurthy. Modeling of indoor positioning
systems based on location ﬁngerprinting. In Proceedings
of
the IEEE International Conference on Computer
Communications, volume 23, pages 1013–1023, 2004.

[Ladd et al., 2002] A. Ladd, K. Bekris, G. Marceau,
A. Rudys, L. Kavraki, and D. Wallach. Robotics-based lo-
cation sensing using wireless ethernet. In Proceedings of
the Eighth ACM International Conference on Mobile Com-
puting and Networking, pages 227–238, Atlanta, Georgia,
USA, September 2002.

[Liao et al., 2004] L. Liao, D. Fox, and H. Kautz. Learning
and inferring transportation routines. In Proceedings of the
Nineteenth National Conference on Artiﬁcial Intelligence,
pages 348–353, San Jose, CA, USA, July 2004.

[Ni et al., 2003] L.M. Ni, Y. Liu, Y.C. Lau, and A.P. Patil.
LANDMARC: Indoor location sensing using active RFID.
In Proceedings of the First IEEE International Confer-
ence on Pervasive Computing and Communications, pages
407–416, Dallas, TX, USA, March 2003.

[Roos et al., 2002a] T. Roos, P. Myllym¨aki, and H. Tirri. A
statistical modeling approach to location estimation. IEEE
Transactions on Mobile Computing, 1(1):59– 69, 2002.

[Roos et al., 2002b] T. Roos, P. Myllymaki, H. Tirri,
P. Misikangas, and J. Sievanen. A probabilistic approach
to WLAN user location estimation. International Journal
of Wireless Information Networks, 9(3):155–164, 2002.

[Schwaighofer et al., 2004] A. Schwaighofer, M. Grigoras,
V. Tresp, and C. Hoffmann. GPPS: A Gaussian process
positioning system for cellular networks.
In S. Thrun,
L. Saul, and B. Sch¨olkopf, editors, Advances in Neural In-
formation Processing Systems 16, Cambridge, MA, 2004.
MIT Press.

[Smailagic and Kogan, 2002] A. Smailagic and D. Kogan.
Location sensing and privacy in a context-aware com-
puting environment.
IEEE Wireless Communications,
9(5):10–17, October 2002.

[Yin et al., 2005] J. Yin, Q. Yang, and L. Ni. Adaptive tem-
poral radio maps for indoor location estimation. In Pro-
ceedings of the 3rd Annual IEEE International Conference
on Pervasive Computing and Communications, Kauai Is-
land, Hawaii, USA, March 2005.

[Youssef et al., 2003] M. Youssef, A. Agrawala,

and
U. Shankar. WLAN location determination via clustering
and probability distributions. In Proceedings of the First
IEEE International Conference on Pervasive Computing
and Communications, pages 143–150, Fort Worth,Texas,
USA, March 2003.

