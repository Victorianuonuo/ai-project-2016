Ordering Default Theories 

Department of Computer and Communication Sciences 

Chiaki Sakama 

Wakayama University 

Sakaedani, Wakayama 640 8510, Japan 
sakama @ sys. wakayama-u. ac. jp 

Abstract 

In  first-order  logic,  a  theory  T1  is  considered 
stronger  than  another  theory  T2  if  every  formula 
derived  from  T2  is  also  derived  from  T1.  Such 
an  order  relation  is  useful  to  know  relative  value 
between  different  theories. 
In  the  context  of de(cid:173)
fault  logic,  a  theory  contains  default  information 
as  well  as  definite  information.  To  order default 
theories,  it  is  necessary  to  assess  the  information 
content of a default  theory.  To this end,  we intro(cid:173)
duce  a  multi-valued  interpretation  of default  the(cid:173)
ories  based  on  a  nine-valued  bilattice. 
It  distin(cid:173)
guishes definite and credulous/skeptical default in(cid:173)
formation  derived  from  a  theory,  and  is  used  for 
ordering  default  theories  based  on  their  informa(cid:173)
tion contents.  The technique is also applied to or(cid:173)
der nonmonotonic  logic  programs.  The  results  of 
this paper provide  a method  for comparing  differ(cid:173)
ent default theories and have important application 
to learning nonmonotonic theories. 

Introduction 

1 
In knowledge representation based on logic, the relative value 
of  a  given  theory  is  formally  assessed  by  comparing  the 
amount of information between theories.  In first-order logic, 
a theory  T1  is  considered stronger than  another theory  T2  if 
every  formula  derived  from  T2  is  also  derived  from  T\  but 
not vice-versa 
For instance, the 
theory  

is stronger than the theory 

In the context of default logic  [Reiter,  1980J,  however, the 
problem  is not so simple.  For instance, consider the default 
theory: 

In  this  case,  both  T\  and  T3  imply  flies,  but  the  fact  flics 
from  T\  is  a  conclusion  from  definite  information,  while 
the  same  fact  from  T3  is  a  conclusion  from  default  infor(cid:173)
mation.  Introducing another fact 
flies  to  each  theory,  the 

conclusion  flies  is  still  derived  from  the  inconsistent  theory 
T\  U  { -iflies  }, while it is withdrawn from T 3  U  { -iflics }. 
Thus,  two theories T]  and  T3  have the  same extension,  but 
conclusions derived from T\  are stronger than those of T3. 

To  compare  and  order  default  theories,  it  is  necessary  to 
distinguish different sorts of information derived from a the(cid:173)
ory. Such consideration is meaningful and important with the 
following reasons. 

•  Studies  in  nonmonotonic  logics  have been  centered on 
answering the question:  "What information is concluded 
from  a  theory  (with  common-sense)?"  On  the  other 
hand,  few  studies  answer  the  question:  "What  sort  of 
information is concluded from a theory?"  Since default 
theories contain definite and default information, distin(cid:173)
guishing different  sorts  of information  is  meaningful  to 
assess the information content of a theory.  Default the(cid:173)
ories contain incomplete information, so that the assess(cid:173)
ment provides  a theoretical  ground  to  measure  the de(cid:173)
gree of "incompleteness"  of a theory.  These  arguments 
are also effective in the  field  of nonmonotonic logic pro(cid:173)
gramming [Baral and Gelfond,  1994]. 

•  It is  important  to know  relative value between theories. 
A theory is considered more valuable than another the(cid:173)
ory if the former contains more information than the lat(cid:173)
ter.  Comparison of theories is especially important when 
there  exist  multiple  sources  of information  as  in  multi-
agent systems.  In  first-order  logic, theories are ordered 
by logical entailment.  In default  logic,  however, exten(cid:173)
sions  of theories  are  not  necessarily helpful  forjudging 
relative strength between theories (as presented above). 
To order default theories, it is necessary to provide a bet(cid:173)
ter ability of comparing default theories beyond their ex(cid:173)
tensions.  It should distinguish different sorts of informa(cid:173)
tion in a default theory, and order theories according to 
their information contents. 

•  In first-order logic, a theory is called more general than 
another  theory  if the  former is  stronger  than  the  latter. 
Generality  relations  over  first-order  clauses  have  been 
extensively studied in the fields of machine learning and 
inductive  logic programming  [Nienhuys-Cheng  and  de 
Wolf,  1997].  In  these  fields,  generalization  is  used  as 
a  basic  operation  for  inductive  learning,  but  it  is  un(cid:173)
known  how to extend  the notion  to nonmonotonic  the-

NONMONOTONIC  REASONING 

839 

ones.  To  construct  induction  systems  that  learn  non(cid:173)
monotonic  theories,  it  is  necessary  to  extend  the  gen(cid:173)
eralization  operation  and to  build a theory for ordering 
nonmonotonic  theories.  Ordering  default  theories  thus 
has  potential  application  to  the  theory  of induction  in 
nonmonotonic  logics and nonmonotonic  inductive  logic 
programming. 

With these background and motivation, this paper studies a 
method for ordering default theories. To this end, we first pro(cid:173)
vide  a  multi-valued  interpretation  for default  theories  based 
on  a  nine-valued  bilattice.  It  can  distinguish  different  sorts 
of information derived from default theories.  We then  intro(cid:173)
duce  ordering  over  default  theories,  which  orders  different 
default  theories  based  on  the  multi-valued  interpretations  of 
formulas. The techniques are also applied to order nonmono(cid:173)
tonic  logic  programs  under  the  answer set  semantics.  The 
rest of this paper is  organized as follows.  Section  2 reviews 
the framework of default  logic.  Section  3  develops a theory 
of ordering default theories.  Section  4 applies the technique 
to nonmonotonic logic programming.  Section 5 discusses re(cid:173)
lated issues and Section 6 summarizes the paper. 

2  Default Logic 
A default theory is defined as a  pair 
=  (D,  W)  where  D 
is a set of default rules and W  is a set of first-order formulas 
(called facts). A default rule (or simply default) is of the form: 

and 

where 
are  first-order  formulas  and  re(cid:173)
spectively  called  the  prerequisite,  the justifications  and  the 
consequent.  In this paper, any default is assumed to have at 
.  A  default  theory  is  called 
least  one justification 
super-normal  if every  default  is  of the  form 
As  defaults 
and  facts  are  syntactically distinguishable,  we often  write  a 
default  theory 
as  far  as  no  confusion 
arises.  Any variable  appearing  in  D  and  W  is  free  and  any 
default/fact with variables represents the set of its ground in(cid:173)
stances  over  the  Herbrand  universe  of 
Throughout  this 
paper we  assume  a default theory which  is  already  ground-
instantiated,  i.e.,  for  any  default  theory  (D, W),  D  and  W 
contain no variable.  Also,  a formula means  a propositional 
formula unless stated otherwise. 

as  a set 

" 

" 
imply 

A  set  E  of  formulas  is  an  extension  of  (D,W)  if  it  co(cid:173)
incides  with  the  smallest  deductively  closed  set  E1  of  for(cid:173)
,  and  (ii)  for 
mulas  satisfying  the  conditions: 
from  D, 
any ground  default 
and 
A  default theory may 
have none,  one or multiple extensions in general.  The set of 
.  Given a default 
all  extensions  of 
theory 
if  it  be(cid:173)
longs to some (but not all) extensions.  By contrast, a formula 
is a skeptical conclusion  of 
if it  belongs  to  all  extensions. 
An  extension  E  is  inconsistent if it  is  the  set  of all  formulas 
in the language. 
Proposition 2.1  [Reiter,  1980] 
= 
(£>, W)  has the inconsistent extension  iffW  is inconsistent. 

,  a formula is a credulous conclusion  of 

l  A  default  theory 

is written as 

Figure  1:  A  lattice  for  logic  IX 

3  Ordering Default Theories 
In  classical  logic,  a  formula  F  is  interpreted  true/false  if 
is  a  logical  consequence  of a  theory;  otherwise  it  is 
undefined.  In default logic,  on  the other hand,  a formula  is 
either a definite consequence by W  or a default  consequence 
by  D.  Moreover,  default  consequences  are  brought  by  two 
different modes of inferences - skeptical or credulous reason(cid:173)
ing.  To characterize  these  different  types  of inferences,  we 
first introduce a multi-valued logic for default reasoning. 

IX  has 

, d t s , d f s , d t c , d f c,  

Definition 3.1  The  logic 
the  nine  truth  values 
t , f,  
,  which  respectively  mean 
true, false,  contradictory,  undefined,  skeptically  true  by  de(cid:173)
fault,  skeptically  false  by  default,  credulously  true  by  default, 
credulously false  by default,  and  contradictory  by default. 

The  truth  values  of  IX  constitute  a  bilattice  under  the 

Under IX  the  interpretation  of a  formula  in  a default the(cid:173)

ory is defined as follows. 

(D,  W),  the 
Definition 3.2  Given  a  default  theory 
mapping <j>A associates a propositional formula F with a truth 

= 

'This property holds for defaults with non-empty justifications. 

840 

NONMONOTONIC  REASONING 

The relation <DL is a pre-order, i.e., a reflexive and transi(cid:173)
tive relation on the set of all default theories in the language. 
Throughout  the  paper,  when  we  compare  different  default 
theories, we assume that they have the same underlying lan(cid:173)
guage. 

Intuitively, a default theory A i  is stronger than another de(cid:173)
fault  theory  A2  if  Ai  entails  more  certain  information  than 
A 2.  In other words, when A 2  <DL  A I, conclusions derived 
from Ai  are relatively more stable and reliable than those de(cid:173)
rived from A 2.  The 'stronger' relation reduces to the relation 
between (propositional) first-order theories when default the(cid:173)
ories have no defaults. 
Proposition 3.4 
two default theories. Then,  

be 

Thus, the relation 

is a natural extension of the one for 

NONMONOTONIC  REASONING 

versa. 

(propositional) first-order theories. 
Proposition 3.5  Given  two  default  theories 

implies 

and 

,  but not vice-

 

841 

The above proposition presents that the order-equivalence 
relation  c ^ /,  provides  an  equivalence  relation  which  is 
stronger than the equivalence based on extensions. 
Example 3.5  (introductory example)  Let 
and 
default theories: 

be two 

Theorem  3.7  provides  a  sufficient  condition  to  judge 

using extensions of default theories. 

4  Ordering Nonmonotonic Logic Programs 
In logic programming, default reasoning is realized by nega(cid:173)
tion  as failure  (NAF).  Logic  programs  containing  NAF  are 
called  nonmonotonic  logic programs. 

Nonmonotonic logic programs considered in this paper are 
the  class  of  extended  logic  programs  (ELPs)  iGelfond  and 
Lifschitz,  1991],  which  contain  two  kinds  of negation;  ex(cid:173)
plicit (or classical) negation -* and NAF (or default negation) 
not.  An  extended  logic  program (or simply a  program)  is  a 
set of rules of the form: 

The introduction of new information may block the appli(cid:173)
cation  of some  default  rules,  which  would  cause  the  with(cid:173)
drawal of some default conclusions in a theory. This is a typ(cid:173)
ical  feature of default reasoning. 

We  finally  provide a connection between the order relation 

, and default extensions. 

Theorem3.7  Let  "  _  =  ( D i . W i)  and  
two  default  theories.  Then, 
conditions are satisfied: 

= 
(D2,W2)  be 
if  the  following 

where each 
is a positive/negative literal and 
not  represents NAF.  The literal  Lo  is the head and the con(cid:173)
. . .,  not L n  is  the body of 
junction 
the rule.  A rule or a program  is called not-free  if it  contains 
no  NAF  (i.e.,  m  =  n).  Given  an  ELP  11,  the  set  of not-
free rules from II  is denoted by 
rule with the empty 
is  identified  with  the  literal  L.  The  head  of any 
body 
rule  is  non-empty.4  Like  default  theories,  every  variable  in 
a program is  interpreted as a free variable.  A program  II  is 
semantically identified with  its ground instantiation,  i.e., the 
set of ground rules obtained from II  by substituting variables 
with elements of the Herbrand universe of II  in every possible 
way. We handle ground programs throughout the paper. 

tains  the ground rule 

The  semantics  of  ELPs  is  given  by  the  answer  set  se(cid:173)
mantics  [Gclfond  and  Lifschitz,  1991].  Let  Lit  be  the  set 
of all  ground  literals  in  the  language  of a  program  (called 
the  literal  base).  Suppose  an  ELP  II  and  a  set  of  literals 
.  Then,  the  reduct ITS  is  the program which con(cid:173)
iff there  is  a  rule 
not Ln  in  the  ground  in(cid:173)
stantiation  of II  such that 
. Given 
a not-free ELP I I, Cn(II)  denotes the smallest set of ground 
literals  which  is  (i)  closed  under 
,  i.e.,  for  every  ground 
from the  ground  instantiation  of H, 
rule 
and (ii) logi(cid:173)
implies 
cally closed, i.e.,  it is either consistent or equal  to Lit.  Given 
an  ELP II  and  a set S of literals,  5  is  an  answer set of II  if 

Answer sets represent possible beliefs of a program, and an 
ELP may have none, one, or multiple answer sets. In particu(cid:173)
lar, every not-free ELP has the unique answer set. An answer 
set  is  consistent  if it  is  not Lit.  The  set of all  answer sets  of 
an  ELP II  is  written  as  AS(U). 
Proposition 4.1  An ELP II  has the unique answer set Lit  iff 

4Under the answer set semantics which we consider in this paper, 
F is expressed by the semantically 

a rule with the empty head 
equivalent rule 

not L with a literal L. 

842 

NONMONOTONIC  REASONING 

According to [Gelfond and Lifschitz, 1991 ], the rule L0  <-
not Ln  is  interpreted  as  the 

default rule: 

for a positive literal L.  ln this case, there is 
where 
a  1-1  correspondence between the answer sets of a program 
and the extensions of the corresponding default theory.5 
Proposition 4.2  [Gelfond and Lifschitz,  19911  Let  II  be  an 
ELP  and 
its corresponding default theory.  If S  is an an(cid:173)
swer set ofU,  then the deductive closure ofS is an extension 
of 
is the deductive 
Conversely, every extension  of 
closure of exactly one answer set of II. 

Using the correspondence, a multi-valued interpretation for 

ELPs  is  defined  under the  logic  IX. 
Definition 4.1  Given an ELP I I, the mapping <pu associates 
a positive  literal  L  €  Lit with a truth value of IX  as follows: 

Remark that literals L and  L are included in every answer 
set of II  iff they are in  C n ( I I + )  (Proposition 4.1).  So it does 
not happen that 

takes both dts and dfs for any L. 

The intuitive meaning of i 

is analogous to that of  

Example 4.1  Let II be the program: 

Example 4.2  Let II be the program: 

which has two answer sets  {p\ and 

Then, 

 

has properties obtained from Proposition 3.2 by replac(cid:173)

ing 

with 

and formulas with literals. 

Ordering between ELPs is defined as follows. 

Precisely  speaking,  no/,-free  rules  in  an  ELP  correspond  to 
justification-free defaults. Although we supposed defaults with non(cid:173)
empty justifications in the previous sections, the following discus(cid:173)
sion is valid apart from the results of Section 3. 

entail more certain information than 

The relation  AS  is  a pre-ordcr on the set of all  ELPs in 
if the answer 
the language.  A program II j  is stronger than 
sets of 
. Different 
from the case of default logic, we compare programs in terms 
of literals  included  in  answer  sets.  This  is  because  in  non(cid:173)
monotonic logic programs the meaning of a program is deter(cid:173)
mined not by individual rules in a program, but by consequent 
literals included  in selected models of a program.  Thus, we 
capture the information content of a program as consequences 
brought by answer sets. 
Proposition 4.3  Let 
have the same literal base. Then,  

be two not-free ELPs which 

and 

Proposition 4.4  Given  two  ELPs   
implies . 
Example 4.3  Let 

and 

, but not vice-versa. 
j  be two programs: 

where IIi  and U2  have the same answer set 

. Then, 
=  dfs. 

It  is easily  verified that  the  order 

has  nonmonotonic 
properties  which correspond  to Proposition  3.6 with respect 
to the introduction of new rules to a program. 

A connection  between the order relation 

and answer 
sets is given as follows (The proof is similar to Theorem 3.7). 
be two ELPs which have the 
Theorem 4.5  Let 
same literal base. Then, 
if the following  condi(cid:173)
tions are satisfied: 

and 

5  Discussion 
In the context of multi-valued logics, Ginsberg  [19881 firstly 
introduces  a  bilattice  for  default  logic.  He  distinguishes 
definite  and  default  conclusions  obtained  from  a  (super(cid:173)
normal) default theory using the  bilattice of Figure 2.  How(cid:173)
ever, Ginsberg's bilattice is seven-valued and does not distin(cid:173)
guish  between  skeptical  and  credulous  default conclusions. 
For instance,  suppose the  super-normal  default theory 
= 

which has two default extensions  Th( 

and 

Then, 

dtc,  and 
=  dts  in  our  framework,  while  Ginsberg  in(cid:173)
terprets p as * but handles both q and 
as dt. Thus, to 
distinguish  skeptical/credulous  default  inference,  additional 
truth values are necessary as introduced in this paper.  Dion-
isio  etal.  [1998]  distinguish  skeptical/credulous  default  in(cid:173)
ference  in  super-normal  default theories  using  modal  logic. 

NONMONOTONIC  REASONING 

843 

ground  for  inductive  generalization  in  nonmonotonic  logic 
programs.  For instance, for the programs 
bird(x), 
bird(tweety) 
bird(x),  not  abnormal(x), 
tion 
while it has the value dts  in  __  ;.  Thus, if we read the order 
is considered a generalization of 
.  This coincides  with the  view  in the ILP literature  [Bain 

holds  (flics(twecty)  has  the  value  t  in 

and 
 
bird(twcety) 

as "more general", 

the  rela(cid:173)

, 

. 

is a specialization of 

and Muggleton,  1992] in which 
6  Conclusion 
In this paper, we introduced a multi-valued  interpretation of 
default  theories,  which  can  distinguish  definite  and  skepti(cid:173)
cal/credulous default consequences. Based on this, we devel(cid:173)
oped  a  theory  for ordering  default  theories  and  applied  the 
technique to ordering nonmonotonic  logic programs.  The 9-
valued bilattice is used for characterizing other nonmonotonic 
formalisms which have the same inference modes as default 
logic.  The  results  of  this  paper  provide  a  method  of com(cid:173)
paring  default  theories  or  nonmonotonic  logic  programs  in 
a manner different from the conventional extension-based or 
model-based standpoint.  The proposed framework is consid(cid:173)
ered to have potential application to inductive learning in non(cid:173)
monotonic logics, which we will investigate in future study. 
References 
[Bain and Muggleton,  1992]  M.  Bain  and  S.  Muggleton. 
Non-monotonic  learning.  In:  Muggleton  (ed.),  Inductive 
Logic Programming, Academic Press, pp.  145-161,  1992. 
[Baral and Gelfond,  1994]  C.  Baral and M. Gelfond.  Logic 
programming and knowledge representation../. Logic Pro(cid:173)
gramming  19/20:73-148,  1994. 

[Damasio and Pereira,  1998]  C.  V.  Damasio  and  L.  M. 
Pereira.  A  survey  of paraconsistent  semantics  for  logic 
programs. In: Handbook of Defeasible Reasoning and Un(cid:173)
certainty Management Systems, vol. 2, D. M. Gabbay and 
Ph. Smets (eds.), Kluwer Academic, pp. 241-320, 1998. 
[Dionisio et al., 1998]  F. M. Dionisio, S. Brass, M. Ryan, U. 
Lipeck.  Hypothetical  reasoning  with  defaults.  In:  Proc. 
Workshop on Computational Aspects of NMR, 1998. 

[Dix,  1992]  J. Dix.  A framework for representing and char(cid:173)

acterizing semantics of logic programs.  In:  Proc.  KR'92,   
Morgan Kaufmann, pp. 591-602, 1992. 

[Fitting,  1991]  M.  Fitting.  Bilattices  and  the  semantics  of 
logic programming.  J. Logic Program.  11:91-116,  1991. 
[Gelfond and Lifschitz,  1991]  M.  Gelfond  and  V.  Lifschitz. 
Classical  negation  in  logic  programs  and  disjunctive 
databases.  New Generation Computing 9:365-385,  1991. 
[Ginsberg,  19881  M.  L.  Ginsberg.  Multi-valued  logics:  a 
uniform  approach  to  inference  in  artificial  intelligence. 
Computational Intelligence  4:265-316,  1988. 

[Lifschitz et al.t 2001]  V.  Lifschitz,  D.  Pearce,  and  A. 
Valverde. Strongly equivalent logic programs. ACM Trans. 
Computational Logic 2:526-541, 2001. 

[Nienhuys-Cheng and de Wolf,  1997 ]  S.-H. 

Nienhuys-
Cheng  and  R.  de  Wolf.  Foundations  of inductive  logic 
programming.  LNA11228,  Springer,  1997. 

[Reiter,  1980]  R. Reiter.  A  logic for default reasoning.  Arti(cid:173)

ficial  Intelligence  13:81-132,1980. 

Figure 2:  Ginsberg's bilattice for default logic 

Their goal is reasoning about defaults and is not ordering de(cid:173)
fault theories. 

In  logic  programming,  Fitting  [19911  uses  bilattices  to 
characterize the semantics of normal logic programs.  He uses 
a four-valued logic and does not distinguish definite and de(cid:173)
fault  information.  Dix  [1992]  uses  the  knowledge  ordering 
under a  three-valued  logic  to compare  information  obtained 
from  a  single  normal  logic  program  under different  seman(cid:173)
tics.  This  is  in  contrast  to our approach  in  which  we com(cid:173)
pare different  programs  under the  single  answer set  seman(cid:173)
tics.  Lattice-valued  logics  are  also  used  for  characterizing 
the  "paraconsistenf  semantics  of logic  programs  [Damasio 
and Pereira,  1998].  To our best knowledge, however, the 9-
valued bilattice used in this paper never appears in the litera(cid:173)
ture. Moreover, existing studies all use multi-valued logics to 
provide a semantics of a single program, while we use them to 
compare information between different programs. The order-
equivalence provides a stronger relation than the usual model-
based  equivalence  (Proposition  4.4).  On  the  other hand,  it 
is  known  another strong equivalence relation  between  logic 
programs  [Lifschitz  etal.,  2001].  At  the  moment,  we  have 
an evidence that there is no stronger/weaker relation between 
the strong equivalence and the order-equivalence in general. 
From the computational viewpoint, there is a difficulty for 
for  an  arbitrary  formula  F.  This  is 
directly  computing 
of a  formula  F  is 
due  to the  fact  that the  interpretation 
generally  not constructive  by  those  of the  sub-formulas of F 
(Proposition 3.3). The same problem happens in the restricted 
class of super-normal default theories  [Ginsberg,  1988].  For 
checking an order between default theories, however, Theo(cid:173)
rem 3.7  provides a sufficient condition  to judge the relation 
using default extensions.  In the context of logic 
is checked by Theorem 4.5 using 

programming, 
the existing procedures for computing answer sets. 

In  the fields of machine  learning  and inductive  logic pro(cid:173)
gramming,  a  theory  of generalization  has  been  extensively 
studied  in  the  context  of  first-order  logic  iNienhuys-Cheng 
and  de  Wolf,  1997].  However,  generalization  under  logi(cid:173)
cal  entailment 
is  not  directly  applicable  to  default  theo(cid:173)
ries  and  nonmonotonic  logic  programs.  A  default  ordering 
introduced in  this  paper can order default theories and non(cid:173)
monotonic  logic  programs,  thereby could  give a  theoretical 

844 

NONMONOTONIC REASONING 

