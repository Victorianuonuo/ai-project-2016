Session  15  Robot  Problem  Solving 

PLANNING  IN  A  HIERARCHY  OF  ABSTRACTION  SPACES* 

by 

Earl  D.  Sacerdott 

Stanford  Research 

I n s t i t u te 

A r t i f i c i al 
Intelligence  Center 
Menlo  Park,  C a l i f o r n ia  94025 

Abstract 

A  problem  domain  can  be  represented  as  a  hierarchy 
of  abstraction  spaces  in  which  successively  f i n er  levels 
of  d e t a il  are  introduced.  The  problem  solver  ABSTRIPS, 
a  modification  of  STRIPS,  can  define  an  abstraction 
space  hierarchy  from  the  STRIPS  representation  of  a 
problem  domain,  and 
the  hierarchy  in 
solving  problems.  Examples  of  the  system's  performance 
are  presented  that  demonstrate  the  s i g n i f i c a nt 
creases 
provides.  Then  some  further  Implications  of 
archical  planning  approach  are  explored. 

in  problem-solving  power  that 

it  can  u t i l i ze 

t h is  approach 

the  h i e r(cid:173)

i n(cid:173)

Key  Words:  Problem  solving,  h e u r i s t ic  search, 
representation,  abstraction  space,  robot  planning, 
hierarchical  planning. 

Introduction 

is  not  possible 

General  purpose  problem  solvers,  such  as  STRIPS 

st 
or  GPS,3  must  do  t h e ir  work  using  general  purpose  search 
h e u r i s t i c s.  Unfortunately,  by  using  such  h e u r i s t i c s, 
it 
to  solve  any  reasonably  complex  set 
of  problems  in  a  reasonably  complex  domain.  Regardless 
of  how  good  such  h e u r i s t i cs  are  at  d i r e c t i ng  search, 
attempts  to  traverse  a  complex  problem  space  can  be 
caught  in  a  combinatorial  quagmire. 

This  paper  presents  an  approach  to  augmenting  the 
power  of  the  h e u r i s t ic  search  process.  The  essence  of 
t h is  approach 
is  to  u t i l i ze  a  means  for  discriminating 
between  important  information  and  details  in  the  prob(cid:173)
lem  space.  By  planning  in  a  hierarchy  of  abstraction 
spaces  in  which  successive 
i n t r o(cid:173)
duced,  s i g n i f i c a nt  increases  in  problem-solving  power 
have  been  achieved. 

levels  of  d e t a il  are 

Section  II  sketches  the  hierarchical  planning  ap(cid:173)
proach  and  gives  motivation  f or  i ts  use.  Sections  I II 
and  IV  describe  the  d e f i n i t i on  and  use  of  abstraction 
spaces  by  ABSTRIPS  (Abstraction-Based  STRIPS),  a  modi(cid:173)
f i c a t i on  of 
the  STRIPS  problem-solving  system  that  i n(cid:173)
corporates  t h is  approach.  Section  V  describes  the  per(cid:173)
formance  of  the  system.  Section  VI  discusses  the  i m p l i(cid:173)
cations  of  t h is  approach  for  problem  solving  and  for 
robotics. 

The  work  reported  herein  was  sponsored  by  the  Advanced 
Research  Projects  Agency  of  the  Department  of  Defense 
under  Contract  DAHC04-72-C-0008  with  the  U.S.  Army 
Research  O f f i c e. 
References  are  l i s t ed  at  the  end  of 

t h is  paper. 

II  The  Motivation  f or  Using 

Abstract  ion  Spaces  in  Problem  Solving 

It  was  not  quite  f a ir  to assert  in 

the  previous  sec(cid:173)
t i on  that  a  complex  problem  domain  is  beyond  the  combi(cid:173)
n a t o r i al  capability  of  general  purpose  problem  solverB. 
A  problem  solver  deals  not  with 
the  problem  domain  it-
s e l f,  but  with  some  representation  of  that  domain.  So 
it  would  be  more  correct  to  state  that  a  complex  repre(cid:173)
sentation  exceeds  the  scope  of  general  purpose  problem 
solvers. 

Unfortunately,  a  straightforward  t r a n s c r i p t i on  of 
a  complex  problem  domain  w i ll  y i e ld  a  complex  represen(cid:173)
t a t i o n.  However,  a  well-chosen  t r a n s c r i p t i on  can  lead 
to  a  simpler  representation.  By  choosing  such  a  simpli-
f y i ng  representation,  one  can  have  the  problem  solver 
do  i ts  work  in  a  context  that  is  simple  enough  for  some 
useful  problem  solving  to  take  place. 

In  other  words, 

the  h e u r i s t ic  search 

through 

the 

simplifying  representation  w i ll  be  of  s u f f i c i e n t ly  short 
duration  that  a  goal  state  in  the  problem  space  can  be 
reached.  Such  a  representation  displays  what  McCarthy 
and  Hayes 

term  "heuristic  adequacy," 

Attempts 

to  achieve  simplifying  representations, 

t r i ed 

that  i s, 

the  d e t a il 

to  preserve, 

the  STRIPS 
in 
terminology,  "epistemological  ade(cid:173)
the  simplifying  representations  had  to 

such  as  the  "macro  operator,"  or  MACROP,  of 
problem  solver,2  have  heretofore 
McCarthy  and  Hayes' 
quacy"; 
preserve  a ll 
problem  at  hand.  A  MACROP  s i m p l i f i es  the  representation 
of  a  problem  domain  by  providing  a  means  of  selecting  at 
one  time  an  e n t i re  sequence  of  p r i m i t i ve  operators, 
linked 
serves  every  d e t a il  of  the  preconditions  and  effects  of 
i ts  constituent  operators. 

in  a  semantically  sensible  manner.  But 

that  was  needed 

to  solve 

it  pre(cid:173)

the 

Such  simplifying  representations  can  provide  only 
l i m i t ed  enhancement  to  the  power  of  a  problem-solving 
system  because  of  a  somewhat  dismaying  f a c t;  For  a  suf(cid:173)
f i c i e n t ly  complex  problem  domain,  no  epistemologically 
adequate  representation  can  be  h e u r i s t i c a l ly  adequate. 

Epistemological  adequacy 

implies 

that  every  r e l e(cid:173)

vant  d e t a il  is  properly  dealt  w i t h.  But  a t t e n t i on  to 
d e t a il 
is  precisely  what  defeats  h e u r i s t ic  adequacy. 
A  good  h e u r i s t ic  evaluation  function  w i ll  enable  a  prob(cid:173)
lem  solver  to  reject  most  of 
the  possible  paths  in  a 
s i t u a t i on  space.  But  if  a ll  the  d e t a i ls  are  attended 
to, 
the 
nodes  at  which  the  d e t a i ls  are  affected.  The  combina(cid:173)
t o r i cs  of 
problem  solver  to  solve  only  rather  simple  problems. 

the  evaluation  function  must  be  applied  at  a ll 

the  expanding  search  space  w i ll  enable  the 

A  superior  approach  to  problem  solving  would  be  to 
search  f i r st  through  an  abstraction  space,  a  simplifying 

412 

representation  of  the  problem  space  in  which  unimportant 
d e t a i ls  are  ignored.  When  a  solution  to  the  problem  in 
the  abstraction  space  is  discovered,  a ll  that  remains 
is  to  account  f or  the  d e t a i ls  of  the  linkup  between  the 
steps  of  the  s o l u t i o n.  This  can  be  regarded  as  a  se- 
quence  of  subproblems  in  the  o r i g i n al  problem  space. 
If  they  can  be  solved,  a  solution  to  the  overall  prob- 
lem  w i ll  have  been  achieved. 
If  they  cannot  be  solved, 
more  planning  in  the  abstraction  space  is  required  to 
discover  an  alternative  solution. 

PolyaB  c i t es  the  importance  of  this  approach  for 
It  has  been  used  by  computer 
(ignoring 

human  problem  solving. 
programs  to  f i nd  proofs  in  symbolic  logic6 
the  nature  of  the  connectives  and  the  ordering  of  sym- 
bols  as  d e t a i l s)  and  to  detect  edges  in  scenes7 
(using 
a  shrunken  picture  with  less  d e t a i l ). 

The  concept  can  readily  be  extended  to  a  hierarchy 

of  spaces,  each  dealing  with  fewer  details  than  the 
ground  space  below  it  and  with  more  details  than  the 
i b s t r a c t i on  space  above  i t.  By  considering  d e t a i ls 
only  when  a  successful  plan  in  a  higher  level  space 
gives  strong  evidence  of  their  importance,  a  heuristic 
search  process  w i ll  investigate  a  greatly  reduced  por- 
tion  of  the  search  space. 

it 

in  that 

is  not  domain-dependent. 

The  process  of  abstraction  defined 

in  Section  I II 
is  general 
it 
is  highly  structured  and  very  dependent  on  the  syntax 
of  the  problem  domain. 
It  is  a  f i r st  step,  providing 
no  capability  for  a  "representational  s h i f t"  that  would 
restate  a  d i f f i c u lt  problem  in  terms  that  render  i ts 
solution  markedly  easier.  Rather, 
it  employs  a  series 
of  representational  nudges  that  increase  the  power  of 
the  h e u r i s t ic  search  process  over  a  problem  space. 

But 

I II  Automated  D e f i n i t i on 

of  Abstraction  Spaces 

For 

an 

(2)  A  Set  of  Operator  Descriptionsâ€”Each  action 

in  the  problem  domain  is  represented  by  an 
"operator"  for  changing  one  model 
i n to  an-
other.  An  operator  is  defined  by  a  precon-
d i t i on  wff,  an  add  l i s t,  and  a  delete  l i s t. 
to  be  applicable  in  a  given 

operator 

model,its  precondition  wff  must  be  s a t i s f i e d, 
The  add  and  delete  l i s ts  describe  which  wffs 
a re  changed  when  an  application  of  the  opera-
t or  transforms  the  world  model. 

A  problem  is  stated  to  STRIPS  as  a  goal  wff. 

STRIPS  must  develop  a  sequence  of  operator  applications 
that  w i ll 

lead  to  a  world  model  in  which  the  goal  wff 
true.  A  GPS-like  means-ends  analysis  strategy3  is 

is 

employed 

to  generate 

the  operator  sequence. 

If  it  is  applicable 

A  "difference"  between  the  i n i t i al  model  and  the 
goal  model  is  extracted.  STRIPS  determines  which  i n-
stances  of  which  operators  would  reduce  the  difference; 
the  instance  that  most  reduces  the  difference 
lected. 
i ts  precondition  wff 
model), 
created. 
If  not,  the  difference  between  the  new 
STRIPS  is  done. 
state  and  the  goal  state  is  extracted,  and  the  process 
continues, 

the  operator  is  applied,  and  a  new  world  model 

If  the  goal  wff  is  true  in  the  new  model, 

i n i t i al  world 

i n i t i al  state 

is  se-
(i.e., 

true 

the 

the 

in 

in 

is 

if 

the  operator 

instance 

that  most  reduced 
i n i t i al  state 

the 
( i . e ., 

in 

in  the 

the  world 

is  not  provable 

difference  is  not  applicable 
i ts  Drecondition  wff 
model),  the  precondition  is  set  up  as  a  subgoal  wff. 
STRIPS  w i ll  then  try  to  develop  a  sequence  of  operator 
in  which 
applications  that  w i ll 
the  subgoal  wff 
is  achieved, 
the  operator  instance  can  be  applied  as  before. 
If 
not,  another  operator  instance  is  selected,  and  the 
process  continues  as  before. 

to  a  world  model 

the  subgoal 

lead 
If 

is  true. 

The  following  sections  describe  the  ABSTRIPS  sys- 

Abstraction  Spaces  in  the  STRIPS  Context 

tem,  a  modification  of  the  STRIPS  problem  solver.1'2 
A  b r i ef  description  of  the  aspects  of  STRIPS  that  are 
relevant  to  the  discussion  to  follow  is  presented  be- 
low.* 
The  reader  is  encouraged  to  see  Section  II  of 
Ref.  2  for  a  b r i ef  but  thorough  summary  of  the  opera- 
tion  of  STRIPS  or  Ref.  1  for  a  f u ll  description. 

as 

B r i e f l y, 

the  representation  of  a  problem  domain 

with  which  STRIPS  deals  consists  of: 

(1)  A  World  Modelâ€”The  world  model  is  a  set  of 
wffs  in  the  predicate  calculus,  describing 
facts  ( e . g .,  CONNECTS(D00R1.R00M1,R00M2))  or 
laws  ( e . g .,  VRx,Ry,Dx  CONNECTS(Dx,Rx,Ry) 
CONNECTS(Dx.Ry.Rx))  of  the  problem  domain. 

<=> 

For 

a 

practical  problem-solving  system,  one  would 

l i ke  to  have  an  abstraction  space  d i f f er  from  i ts 
ground  space  enough  to  achieve  a  s i g n i f i c a nt  improve-
ment  in  problem-solving  e f f i c i e n c y,  but  yet  not  so  much 
to  make  the  mapping  from  abstraction  space  to  ground 

space  complex  and  time-consuming. 

For  the  STRIPS  system, 

t h is  c r i t e r i on  is  met  by 

having  the  abstraction  spaces  d i f f er  from  their  ground 
spaces  only  in  the  level  of  d e t a il  used  to  specify  the 
preconditions  of  operators.  Although  the  change 
representation  provided  by  t h is  choice  may  seem  i n t u i-
t i v e ly 
The  world  model  can  remain  unchanged; 
to  delete  unimportant  d e t a i ls  from  it  because 
simply  be  ignored.  No  operators  need  be  deleted  in 
their  e n t i r e t y; 
they 
w i ll  never  be  selected  as  relevant.  Any  change  to  the 

if  a ll  they  do  is  achieve  d e t a i l s, 

there  Is  no  need 
they  can 

the  c r i t e r i on  w e l l. 

i n s u f f i c i e n t, 

it  s a t i s f i es 

in 

* ln  the  interests  of  brevity  and  c l a r i t y,  no  further 
mention  w i ll  be  made  of  the  MACROPs  in  the  STRIPS  sys- 
tem.  A  MACROP  is  the  result  of  generalizing  a  p r e v i- 
ously  completed  plan.  Most  of  i ts  valid  subsequences 
of  operators  can  be  extracted  f or  use  in  further  plan- 
ning.  Each  such  subsequence  could  be  treated  by 

add  or  delete  l i s ts  of  the  operators  would  cause  the 
operators'  effects 
to  be  very  d i f f e r e nt  in  d i f f e r e nt 
spaces.  Since  the  a p p l i c a b i l i ty  of  a  particular  oper-
ator  at  some  intermediate  state  might  depend  on  any 
effects  of  any  previously  applied  operators, 
the  map-
Ping  of  plans  among  spaces  would  be  rendered  too  com-

Thus,  an  abstraction  space  in  the  STRIPS  context 

in  i ts 

in  the  preconditions 
i ts  operators.  The  precondition  wffs  in  an  abstrac(cid:173)

d i f f e rs  from  i ts  ground  space  only 
of 
tion  space  w i ll  have  fewer  l i t e r a ls  than  those 
ground  space.  The  l i t e r a ls  omitted  w i ll  be  those  that 
are  " d e t a i l s"  in  the  sense  that  a  simple  plan  can  be 
found  to  achieve  them  once  the  more  " c r i t i c a l"  l i t e r a ls 
have  been  achieved.  For  instance,  consider a  PUSHTHRUDR 
operator,  which  describes  the  effects  of  a  robot  push(cid:173)
ing  a  p a r t i c u l ar  object  through  a  doorway  i n to  an  adja(cid:173)
cent  room. 
the  op-
erator  would  be  applicable  whenever  the  object  was 
pushable  and  a  doorway  into  the  desired  room  existed. 
In  a  lower  level  space, 
it  would  also  be  required  that 
the  robot  and  the  object  be  in  the  room  connected  by 
the  doorway  with  the  target  room, 
abstraction  space, 
F i n a l l y, 
space, 
and  the  box  would  have  to  be  next  to  the  door. 

the  door  would  also  have  to  be  open. 
the  problem 
the  robot  would  also  have  to  be  next  to  the  box, 

In  a  high  level  abstraction  space, 

in  the  o r i g i n al  representation  of 

in  a  s t i ll  lower 

For  ABSTRIPS  to  be  able  to  discriminate  among  var(cid:173)
levels  of  d e t a i l,  each  l i t e r al  within  the  precon(cid:173)

ious 
d i t i o ns  of  each  operator  in  a  problem  domain  is  assigned 
a  " c r i t i c a l i t y"  value  at  the  time  the  domain  is  f i r st 
defined.  Only  the  most  c r i t i c al  l i t e r a ls  w i ll  be 
in 
the  highest  abstraction  space,  whereas  in  lower  spaces 
less  c r i t i c al  ones  w i ll  also  appear. 

Assigning  C r i t l c a l l ty 
Precondition 

to  the  L i t e r a ls  of  a 

There  are  many  possible  approaches  to  the  assign(cid:173)
ment  of  c r i t i c a l i ty  values  to  the  l i t e r a ls  of  an  oper(cid:173)
a t o r 's  precondition  wff.  They  span  a  range  from  a 
manual  assignment  as  part  of  the  specification  of 
problem  domain  to  a  completely  automatic  assignment  of 
c r i t i c a l i t i e s. 

the 

At  one  extreme, 

the  d e f i n i t i on  of  a  problem  domain 

could  include  an  e x p l i c it  specification  of  c r i t i c a l i(cid:173)
t i e s,  r e f l e c t i ng  the  d e f l n e r 's  i n t u i t i on  about  the  do(cid:173)
main.  For  example, 
if  one  were  to  define  a  "Turn  on 
the  lamp(X)"  operator,  he  might  say  it  was  essential 
that  /  he  a  lamp.  He  might  say  it  was  very  important 
to  be  in  the  room  with  the  lamp, 
the  lamp's  cord  be  plugged  i n,  and  s t i ll  less  important 
to  be  next  to  the  lamp.  Specifying  the  c r i t i c a l i ty 
value  of  a  l i t e r al  by  a  number  preceding  it  in  braces, 
one  might  define  the  precondition  wff  of 
the  "Turn  on 
the  lamp"  operator  as 

less  important  that 

For  ABSTRIPS,  an  intermediate  approach  to  c r i t i c a l(cid:173)

l i t e r a ls  of 

i ty  assignment  was  adopted,  A  predetermined  ( p a r t i a l) 
ordering  of  a ll  the  predicates  used  in  describing  the 
problem  domain  was  used  to  specify  an  order  for  examin(cid:173)
ing  the 
the  precondition  wffs  of  a ll  the 
operators  in  the  domain.  F i r s t,  a ll  l i t e r a ls  whose 
t r u th  value  could  not  be  changed  by  any  operator  in  the 
domain  were  assigned  a  maximum  c r i t i c a l i ty  value.  Then, 
each  remaining  l i t e r al  was  examined 
mined  by  the  p a r t i al  ordering. 
be  found  to  achieve  a  l i t e r al  from  a  state  in  which  a ll 
previously  processed  l i t e r a ls  were  assumed  to  be  true, 
then  the 
l i t e r al  in  question  was  said  to  be  a  d e t a il  and 
was  assigned  a  c r i t i c a l i ty  equal  to  i ts  rank  in  the  par(cid:173)
t i al  ordering. 
the  l i t(cid:173)
e r al  was  assigned  a  c r i t i c a l i ty  greater  than  the  highest 
rank  in  the  p a r t i al  order. 

in  an  order  deter(cid:173)
If  a  short  plan  could 

If  no  such  plan  could  be  found, 

For  the  domain  including  the  "Turn  on  the  l a m pW 
the  p a r t i al  ordering  might  look  l i ke  the  f o l(cid:173)

operator, 
lowing: 

The  Type(j!,Lamp)  l i t e r al  could  not  be  changed  by 

any  operator  in  the  domain,  and  so  it  would  be  assigned 
a  maximum  c r i t i c a l i ty  (6, 
in  t h is  case).  The  two  Inroom 
l i t e r a ls  would  be  examined  next  (an  a r b i t r a ry  order  can 
be  chosen  f or  l i t e r a ls  whose  predicates  have  equal  rank 
in  the  p a r t i al  ordering).  They  cannot  be  achieved  from 
a  state  in  which  Type(4,Lamp) 
is  asserted,  and  so  they 
would  be  assigned  a  c r i t i c a l i ty  greater  than  the  highest 
rank  in  the  p a r t i al  order, 
in  t h is  case  5.  Plugged-in 
(Â£.)  can  be  achieved  from  a  state  in  which  the  Inroom 
l i t e r a ls  and  the  Type  l i t e r al  are  t r u e. 
achieved  by  a  plan  to  go  to  the  lamp  cord,  pick  it  up, 
bring  it 
assigned  a  c r i t i c a l i ty  equal  to  i ts  rank  in 
the  p a r t i al 
ordering,  namely,  2,  S i m i l a r l y,  a  plan  can  be  found  to 
achieve  Nextto(Me.i) 
in  which  the  previously 
processed  l i t e r a ls  are  t r u e,  and  so  it  would  be  assigned 
a  c r i t i c a l i ty  of  1. 

to  a  socket,  and  plug  it  i n.  So  it  would  be 

from  a  state 

It  can  be 

Regardless  of  the  method  used  to  determine  the 

c r i t i c a l i ty  values, 
t i on  spaces.  The  next  section  shows  how  such  a  h i e r(cid:173)
archy  can  be  used  to  aid  the  planning  process. 

they  define  a  hierarchy  of  abstrac(cid:173)

At  the  other  extreme,  a  scheme  can  be  developed  to 
perform  an  exhaustive  analysis  of  the  nl  possible  ordar-
ings  of  the  n  l i t e r a ls  in  a  precondition  in  order  to 
determine  which  l i t e r a ls  can  be  achieved  once  other 
l i t e r a ls  are  assumed  to  be 
t h is 
analysis  can  be  used  to  specify  the  c r i t i c a l i ty  values 
for  l i t e r a ls  of 

true.  The  r e s u l ts  at 

the  precondition. 

To  take  advantage  of  the  h i e r a r c h i c al  planning  ap(cid:173)

proach  offered  by  the  use  of  abstraction  spaces, 
ABSTRIPS  systemâ€”whose  flow  of  control  is  shown  in  Fig(cid:173)
ure  1â€”has  a  recursive  executive  program.  This  program 
accepts  two  parameters.  The  f i r st  is  a  c r i t i c a l i ty 
value  i n d i c a t i ng  the  abstraction  space  in  which  planning 
is  to  occur. 
search  tree  in  the  higher  space,  representing  a  skeleton 

is  a  l i st  of  nodes  front  the 

The  second 

the 

414 

415 

plan.  When  a  new  problem  is  posed  to  ABSTRIPS,  the 
external  Interface  program  sets  the  preconditions  of  a 
dummy  operator  to  the  goal  wtt. 
The  domain's  maximum 
c r i t i c a l i t y,  which  was  determined  when  c r i t i c a l i t i eB 
were  assigned, 
is  r e t r i e v e d.  The  executive  is  called 
with  the  c r i t i c a l i ty  set  to  the  maximum  and  the  skele(cid:173)
ton  consisting  of  the  dummy  operator. 

i . e ., 

the  executive  computes  the  c r i t i c a l i ty 

the  execu(cid:173)
the  dummy 
the  main  goal.  When 

Within  the  highest  abstraction  space, 
t i ve  plans  to  achieve  the  preconditions  of 
step  in  the  skeleton  plan, 
a  plan  is  found, 
of  the  next  lowest  space  in  which  planning  Is  needed, 
and  it  builds  a  skeleton  of  nodes  along  the  path  of 
the 
successful  plan.  The  executive  then  invokes  i t s e lf  r e(cid:173)
cursively.  The  new  invocation  solves  in  turn  the  sub-
problems  of  bridging  the  gaps  between  steps  in  the 
skeleton  plan  and  of  ensuring  that  the  steps  in  the 
skeleton  plan  are  s t i ll  applicable  at  the  appropriate 
points  In  the  new  plan. 
The  f i n al  step  in  the  skeleton 
is  always  the  dummy  operator,  and  so  the  f i n al  applica(cid:173)
that  the  o r i g i n al  goal  has  been 
b i l i ty  check  ensures 
the 
reached.  Mien  a ll  subproblems  have  been  solved, 
executive 
lower 
in  a  s t i ll 
space.  This  recursion  continues  u n t il  a  complete  plan 
is  b u i lt  up  in  the  problem  space 

invokes  i t s e lf 

for  planning 

i t s e l f. 

This  search  strategy  might  be  termed  a  " l e n g t h-

It  pushes  the  planning  process 

f i r s t"  search. 
in  each 
abstraction  space  a ll  the  way  to  the  o r i g i n al  goal  state 
before  beginning  to  plan  in  a  lower  space.  This  enables 
the  system  to  recognize  as  early  as  possible  the  steps 
to  dead  ends  or  very  i n e f f i c i e nt  plans. 
that  would  lead 

If  any  subproblem  in  a  p a r t i c u l ar  space  cannot  be 

solved,  control  is  returned  to  the  process 
s t r a c t i on  space.  The  search  tree 
state  p r i or  to  the  selection  of 
f a i l u re 
from  consideration,  and  the  search  for  a  successful 
plan  at  the  higher  level  continues. 

in  i ts  ab(cid:173)
to  i ts 
the  node  that  led  to 

in  the  ground  space.  That  node  is  eliminated 

is  restored 

This  f a i l u re  mechanism  is  analogous  to  the  auto(cid:173)
matic  backtracking  feature  of  the  PLANNER  language. 
It  has  the  major  defect  that  when  a  f a i l u re  of  a  lower 
l e v el  process  is  reported, 
the  process  and  the  context 
in  which  the  f a i l u re  occurred  are  no  longer  around  for 
analysis.  So  ABSTRIPS  r e l i es  heavily  on  being  able  to 
produce  good  plans  at  the  highest 

l e v e l. 

This  requirement  has  led 

to  two  modifications  to 

it  has  a  tendency  to  f i nd  a  s l i g h t ly 

the  search  algorithm  o r i g i n a l ly  employed  by  STRIPS. 
The  f i r st  is  an  a l t e r a t i on  of  the  evaluation  function 
used  to  select  which  node  in  the  search  tree  to  expand 
next.  STRIPS  emphasizes  the  estimated  cost  of  achiev(cid:173)
ing  the  goal  from  the  given  node  and  deemphasizes  the 
cost  of  a r r i v i ng  at  the  node  from  the  i n i t i al  s t a t e. 
Thus, 
quickly,  rather  than  the  cheapest  plan  more  slowly. 
But  each  extra  step  in  a  high  abstraction  space  is 
l i k e ly  to  lead  to  many  extra  steps  in  the  corresponding 
plan  in  the  problem  space.  Thus, 
evaluation  function  has 
the  level  of  abstraction.  At  the  highest  l e v e l,  AB(cid:173)
STRIPS  gives  equal  weight  to  the  cost  of  reaching  a 
given  node  and  to  the  estimated  cost  of  reaching  the 
goal  from  that  node.  This  evaluation  function  changes 

i t s e lf  been  made  a  function  of 

f or  ABSTRIPS, 

longer  plan 

the 

level  of  abstraction  decreases, 
it  reaches  the  old  STRIPS  function  at  the  l e v el 

incrementally  as  the 
u n t il 
of  the  problem  space. 

The  second  modification  involves  postponing  the 

selection  of  one  among  several  equivalent  instances  of 
a  relevant  operator.  During  the  process  of  selecting 
relevant  operators  to  reduce  a  p a r t i c u l ar  difference, 
the  operators'  parameters 
a  p a r t i al  i n s t a n t i a t i on  of 
the  difference  were  that 
may  occur. 
For  example, 
if 
the  robot  was  not  in  Room  3, 
then  the  operator  "Go 
through  a  door  i n to  a  room"  might  be  selected  and  i n(cid:173)
stantiated  to  "Go  through  a  door  i n to  Room  3 ."  The  pre(cid:173)
conditions  of  t h is  operator  would  then  be  analyzed  by 
the  theorem  prover  to  determine  which  door  to  choose. 
If  several  choices  seem  equally  good  to  STRIPS  ( 3 , e ,, 
the  states  in  which  the  various  choices  can  be  applied 
are  equally  d i f f i c u lt 
then  it  would  a r b i t r a r(cid:173)
i ly  pick  a  door. 

to  reach), 

For  ABSTRIPS,  alternative  i n s t a n t i a t i o ns  in  an  ab(cid:173)

s t r a c t i on  space  might  appear  equivalent,  and  yet  one 
choice  might  be  substantially  superior  when  f u r t h er  de(cid:173)
t a i ls  are  considered.  So  ABSTRIPS  defers  i ts  decision 
when  more  than  one  equivalent  "best  choice"  of  a  r e l e(cid:173)
vant  operator  is  found. 
relevant  operator  (e.g.,  "Go  through  a  door  i n to  Room  3") 
is  used  in  planning.  When  subsequent  analysis  in  a 
lower  abstraction  space  reveals  a  preferred  i n s t a n t i a(cid:173)
t i o n, 
t h is  selec(cid:173)
t i on  should  eventually 
stantiations  can  s t i ll  be  chosen  through  the  backtrack(cid:173)
ing  mechanism. 

i n s t a n t i a t i on  is  then  chosen. 

The  p a r t i a l ly  instantiated 

lead  to  f a i l u r e, 

the  other 

that 

i n(cid:173)

If 

In  summary,  hierarchical  planning  using  abstraction 

spaces  in  a  " l e n g t h - f i r s t"  search  technique  postpones 
extending  the  search  tree  through  the  levels  concerned 
with  the  detailed  preconditions  of  an  operator  u n t il 
it 
knows  that  doing  so  w i ll  be  highly  e f f e c t u al  in  reaching 
the  goal  (because  the  operator  l i es  along  an  almost  cer(cid:173)
t a i n ly  successful  path).  By  avoiding  work  on  f r u i t l e ss 
branches  of  the  search  tree, 
the  technique  achieves  s i g(cid:173)
n i f i c a nt  e f f i c i e n c i es 
plans. 

in  the  formulation  of  complex 

V  Examples  of  ABSTRIPS'  Performance 

To  c l a r i fy  the  issues  raised  and  the  way  in  which 
the  ABSTRIPS  system  works, 
the  system's  performance  is 
traced  through  some  examples  below.  The  ABSTRIPS  sys(cid:173)
tem  consists  of  some  370  BBN-LISP  functions,  which  run 
as  compiled  code  on  a  PDP-10  computer.  A ll  the  examples 
presented  were  drawn  from  the  environment  of  the  Stan(cid:173)
ford  Research  I n s t i t u te  mobile  robot.  The  domain  con(cid:173)
s i s ts  of  seven  rooms  interconnected  by  doorways.  Oper(cid:173)
ators  have  been  defined 
the  robot's  a b i l i ty 
to 
to  navigate 
push  boxes  w i t h in  a  room  or  through  a  doorway, 
to  navi(cid:173)
to  block  a  doorway  using  a  box, 
gate  through  a  doorway, 
and  to  unblock  a  doorway. 
In  a d d i t i o n,  f i c t i t i o us  oper(cid:173)
ators  have  been  defined  to  model  the  opening  and  closing 
these  actions  are  beyond  the  robot's  c a p a b i l i(cid:173)
of  doors; 
t i e s. 
In  a l l,  167  predicate  calculus  wffs  have  been  de(cid:173)
fined  as  axioms  to  model  the  robot  domain. 

location  w i t h in  a  room, 

to  any  object  or 

that  model 

The  d e f i n i t i on  of 

the  domain  is  e s s e n t i a l ly  iden(cid:173)

t i c al  to  the  one  used  f or  the  examples  in  the  l a t e st 
report  on  the  STRIPS  system.2 

416 

4 17 

in 

the 

The 

t r ue 

to  be 

found 

f i r st  of 

in  which 

T h is  r e s u l t ed 

I ts  p r e c o n d i t i on  w ff 

Two  r e l e v a nt  o p e r a t or 

the  o p e r a t or  was  a p p l i e d. 

f i r s t,  G0THRUDR(Parl2,RUNI),  was  examined. 

the  r o b o t,  BOX1,  and  BOX2  were  n e xt 
t h is  s t a te  and 

t h e s e,  PUSHB 
in 
i n i t i al  s t a t e; 
in  a  new 
to 
the 
INR00M(R0B0T, 

i n s t a n c es  were  computed. 
(B0X2.B0X1),  was  examined. 
t h is  a b s t r a c t i on  space  was 
BO 
s t a te 
each  o t h e r.  T he  d i f f e r e n ce  between 
g o al  s t a te  was  computed  and 
RUNI). 
the 
is  an  u n i n s t a n t i a t ed  p a r a m e t e r .) 
in 
(Parl2,DO0R>  A ( E r y ) C 0 N N E C T S ( P a r l 2 , r y , R U N I ),  was  s a t i s(cid:173)
f i ed  when  P a r l2  was 
GUTHRUDR(DUNIMYS,RUNI)  was  a p p l i e d,  and 
a  s t a te 
d e p i c ts 
space. 
respondence 

ir  which 
the  search 
in 
The  p o s i t i o n i ng  of 
in 

t he  h i g h e st  a b s t r a c t i on 
the  nodes  suggests 
t he  STRIPS  search 

f o u n d,  and 
( P a r l2 
I ts  p r e c o n d i t i on  w ff 

t h is  a b s t r a c t i on  space,  TYPE(RUNI,ROOM)  A  TYPE 

t h is  g e n e r a t ed 
F i g u re  4 ( b) 

the  g o al  w ff  was 

the  c o r(cid:173)
t r e e. 

i n s t a n c es  were 

i n s t a n t i a t ed 

to  DUNIMYS. 

the  nodes 

t r u e. 

t r ee 

So 

to 

A  s k e l e t on  p l an  was  b u i lt  c o n s i s t i ng  of 

at  w h i ch 

the 

two  o p e r a t o rs  were  a p p l i e d. 

the  nodes 
The  p l an  was: 

i ts  p r e c o n d i t i on  w ff  was  s a t i s f i ed  when  Par22  was 

r o b ot  was  n ot 
r e l e v a nt  o p e r a t or  was  G0THRUDR(Par22,RCLK), 

in  a  room  a d j o i n i ng  RMYS). 

to  DCLKRIL. 

e i t h er 
( t he 
The  second 
and 
i n s t a n t i a t ed 
a p p l i e d,  p r o d u c i ng  a  s t a te 
RPDP)  was  a p p l i c a b l e. 
d u c i ng  a  s t a te 
c o n d i t i on  w ff  of  PUSHB(B0X2,B0X1),  was 
o p e r a t or  was 

t h en  a p p l i e d. 

in  which 

So  GOTHRUDR(DCLKRIL,RCLK)  was 

in  which  GOTKRUDR(DPDPCLK, 
That  o p e r a t or  was  a p p l i e d,  p r o(cid:173)
the 

the  p r e(cid:173)

i n i t i al  s u b g o a l, 
t r u e. 

The  PUSHB 

the  p r e c o n(cid:173)

t h is  space  were 

in  which 
in 

the  c u r r e nt  s t a te  and 

The  d i f f e r e n ce  between 

the 
INR00M(ROBOT,RMYS).  G0THRUDR(Par27, 
i ts  p r e(cid:173)
to 

Then  a  new  subgoal  was  s et  u p, 
d i t i o ns  of  GOTHRUDR(DUNIMYS,RUNI) 
t r u e. 
subgoal  s t a te  was 
RMYS)  was  s e l e c t ed  as  a  r e l e v a nt  o p e r a t o r,  and 
c o n d i t i o ns  were  s a t i s f i ed  when  Par27  was  bound 
DMVSPDP.  So  GOTHRUDR(DMYSPDP,RMYS)  was  a p p l i e d,  p r o(cid:173)
d u c i ng  a  s t a te 
the  subgoal  was  s a t i s f i e d.  The 
in  which 
o p e r a t or  a s s o c i a t ed  w i th 
RUNI), was  a p p l i e d,  and  the  g o al  s t a te  was  a g a in  r e a c h e d. 
F i g u re  4 ( c)  shows 

t h is  s u b g o a l,  GOTHRUDR(DUNIMYS, 

t h is  space. 

the  search 

t r e es 

in 

PUSHB(BOX2,BOX1);  GOTHRUDR(DUNIMYS,RUNI) 

The 

f o l l o w i ng  new  s k e l e t on  p l an  was  b u i lt  u p: 

P l a n n i ng 

then  began 

in 

t he  space  of  c r i t i c a l i ty  5. 

The 

f i r st  subgoal  was 

t he  p r e c o n d i t i on  w ff 

in 

t h is 

GOTHRUDR(DCXKRIL,RCLK);  GOTHRUDR(DPDPCLK,RPDP);  PUSHB 
(B0X2.BOX1);  G0THRUDR(DMYSPDP,RMYS);GOTHRUDR(DUNIMYS, 
RUNI). 
a b s t r a c t i on  space  of  c r i t i c a l i ty  2. 

The  p l a n n i ng  p r o c e ss  was 

t h en  r e i n v o k ed 

in  an 

the 

t he 

t r ue  was 

the  w ff  was 
i n s t a n c es  r e l e v a nt 

The  d i f f e r e n ce  between 
in  w h i ch 
O p e r a t or 

f i r st  o p e r a t o r,  PUSHB(B0X1, 
i n i t i al  s t a te  and 
INR0OM(ROBOT, 
to  r e d u c i ng 

a b s t r a c t i on  space  of 
B0X2). 
the  one 
RPDP). 
t h is 
d i f f e r e n ce  were  GOTHRUDR(Parl7,RPDP)  and  PUSHTHRUDR 
(ROBOT,Par20,RPDP). 
was 
were  s t i ll  d i f f e r e n c es 
(ROBOT,RCUC)  b e f o re  GOTHRUDR(Parl7,RPDP)  c o u ld  be  a p(cid:173)
p l i ed 
in  a  room  a d j o i n i ng 
RPDP). 
c a b le  because 

The  PUSHTHRUDR  o p e r a t or  was  c o m p l e t e ly 

it  was  n ot  c o m p l e t e ly  s a t i s f i e d. 

is  n ot  a  pushable  o b j e c t. 

The  p r e c o n d i t i on  w ff  of 

INROOM(ROBOT,HMYS)  or 

t he  r o b ot  was  n ot  y et 

t e s t e d,  b ut 

t he  r o b ot 

INROOM 

( i . e ., 

t he 

f i r st 
There 

i n a p p l i-

Then  ABSTRIPS 
render  G0THRUDR(Parl7,RPDP)  a p p l i c a b l e. 

to  reduce 

t r i ed 

the  d i f f e r e n c es 

Four 

t h at 

would 
r e l e v a nt  o p e r a t o rs  were 
(Par22,RMYS),  and 

f o u n d. 

f i r st  was  GOTKRUDR 
i ts  p r e c o n d i t i on  w ff  was  not  s a t i s f i ed 

The 

The 
in 

s t ep 
n ot  s a t i s f i ed 
STATUS(DCLKRIL,OPEN). 
be  e l i m i n a t ed  by  a p p l y i ng  GOTOD(DCLKRIL)  and 
(DCLKRIL). 
f i r st  s u b g o a l. 

f i r st 
f i r st  s u b g o a l,  t he  p r e c o n d i t i on  w ff  of 
the  s k e l e t on  p l a n,  GOTHRUDR(DCLKRIL,RCLK),  was 
The  d i f f e r e n ce  was 
it  c o u ld 
t h en  OPEN 
the 
So  GOTHRUDR(DCLKRIL,RCLK)  was  a p p l i e d. 

An  a n a l y s is  showed 

t h at  s a t i s f i ed 

i n i t i al  m o d e l. 

T h is  r e s u l t ed 

in  a  s t a te 

t h at 

t he 

the 

in 

the  p r o c e ss 

r e m a i n i ng  subgoals  of 

In 
i m m e d i a t e ly  s a t i s f l a b l e, 
in 
in  a  s t a te 
t he  o r i g i n al  g o al 
The  s k e l e t on  p l an  produced  was  GOTOD 

t he  s k e l e t on  p l an  was  a p p l i ed 

in  w h i ch 

Each  of 

t he 

r e s u l t i ng 

t h is  a b s t r a c t i on  space  were 
and  so  each  s t ep  of 
t u r n, 
was  s a t i s f i e d. 
(DCUCRIL);  OPEN (DCUCRIL), 
t he  p r e v i o us  s k e l e t on  p l a n. 
search 
t h is  space. 

t r e es 

in 

f o l l o w ed  by  a ll 

t he  s t e ps  of 

F i g u re  4 ( d)  shows 

t he 

418 

F i n a l l y,  planning  took  place  in  the  ground  space, 

three  steps  of 

the  space  including  l i t e r a ls  of  c r i t i c a l i ty  1.  The 
f i r st 
the  skeleton  plan  were  applied  in 
t u r n.  But  the  preconditions  of  GOTHRUDR(DPDPCLK.RPDP) 
were  not  s a t i s f i a b le  in  a  state  in  which  the  robot  had 
j u st  come  through  DCIKRIL.  The  difference  was  NEXTTO 
(ROBOT,DPDPCUC).  and  analysis  indicated 
that  it  could 
be  eliminated  by  applying  GOTOD(DPDPCLK),  enabling 
GOTHRUDH(DPDPCIiC,RPDP)  to  be  applied. 

the 

first 

The  next  subgoal, 

the  preconditions  of  PUSHB(BOX2, 
BOXl),  was  not  s a t i s f i ed  at  t h is  point.  The  difference 
was  NEXTTO(ROBOT,BOX2),  which  could  be  eliminated  by  an 
application  of 
GOTOB(BOX2).  After  P0SHB(B0X2,B0X1)  was  applied, 
next  two  subgoals  f a i l ed  because  the  robot  was  not  next 
to  the  appropriate  door.  An  analysis  similar  to  the 
one  that  occurred  with  DPDPC1X  was  performed,  enabling 
ABSTRIPS  to  f i n i sh  the  plan  with  an  operator  to  go  to 
and  an  operator  to  go  through  DMYSPDP  and  DUNIMYS. 

relevant  operator  selected, 

the 

Note  that  the  planning  in  t h is  space  is  Just  as  if 
STRIPS  were  given  seven  small  problems  to  solve  consec(cid:173)
u t i v e l y,  without  the  benefit  of  MACROPS.  The  search 
trees  for  the  ground  space  are  shown  in  Figure  4(e). 
The  entire  planning  process  for  ABSTRIPS  produced  60 
nodes,  54  of  which  were  on  the  successful  path  in  one 
space  or  another.  This  process  required  5:28  of  com(cid:173)
puter  time.  This  is  less  than  o n e - f i f th  of  the  time 
required  by  the  nonhierarchical  STRIPS. 

Other  ExampleB 

The  set  of  tasks  from  the  most  recent  report  on 

STRIPS3  was  run  on  ABSTRIPS.  The  running  times  and  the 
search  trees  are  compared  with  those  from  the  STRIPS 
system  in  Table  1.  Figure  5  plots  the  planning  time  as 
a  function  of  plan  length  f or  STRIPS  and  ABSTRIPS  on  an 
extended  set  of  problems  from  the  robot  domain. 

419 

F u r t h er 

VI 
of  A b s t r a c t i on  Spaces 

I m p l i c a t i o ns  oi 

the  Use 
in  P l a n n i ng 

T h is  paper  has  shown  how 

the 

r e p r e s e n t a t i on  of  a 

improved 

problem  domain  as  a  h i e r a r c hy  of  a b s t r a c t i on  spaces 
d r a m a t i c a l ly 
the  performance  of  a  problem 
s o l v e r. 
of  such  a  h i e r a r c h i c al 
problem  areas 

in  r o b o t i cs  and  problem  s o l v i n g. 

T h is  s e c t i on  b r i e f ly  c o n s i d e rs 

r e p r e s e n t a t i on 

f or  some  o t h er 

the 

i m p l i c a t i o ns 

L e a r n i ng  T a s k - S p e c i f ic  Knowledge 

G e n e r a l - p u r p o se  problem  s o l v e rs  have 

the  h e u r i s t i cs 

tended 

to  be 
they  use 

the  problem  space  must  be 

they  are  n ot  e s p e c i a l ly  p o w e r f ul 
the  o t h er  hand,  s p e(cid:173)
in  a  p a r t i c u l ar 

to  s o l ve  problems 

the  game  p l a y i ng  programs  d i s p l ay 

The  HEURISTIC  DEN-
f ar 
t h e ir  p a r t i c u l ar  domains 

t h r o u gh 

Because 

the  search 

t a sk  domain.  On 

weak  problem  s o l v e r s. 
to  g u i de 
g e n e r a l ly  a p p l i c a b l e, 
in  any  p a r t i c u l ar 
c i al  purpose  programs 
domain  have  been  n o t a b ly  s u c c e s s f u l. 
DRAL  program9  and 
more  p r o b l e m - S o l v i ng  power 
of  competence 
c o u ld  m u s t e r. 
degree 
t h at  has  been 

from 

in 

t h an  a  g e n e r al  purpose  problem  s o l v er 
T h is  competence 
l a r ge 
the  g r e at  amount  of 
i n to 

is  d e r i v ed 
t a s k - s p e c i f ic  knowledge 
t h e ir  search  h e u r i s t i c s. 

i n c o r p o r a t ed 

to  a 

U n f o r t u n a t e l y,  w h i le 

these  s p e c i al  purpose  programs 
l i m i t ed  domain, 

d i s p l ay 
they  are  worth 
g e n e r a l ly 
p r e s e n t ed  w i th 

i n t e l l i g e nt  b e h a v i or  w i t h in 

t h e ir 
in  any  o t h er  domain. 

l i t t le 

i n t e l l i g e nt  system  be  c o n s t r u c t ed 

t a s k - s p e c i f ic  knowledge 

( b a s ic 

Can  a  more 
t h a t,  when 
to  which 

420 

is 
p o r a te 

the  d e s c r i p t i on  of 
t h at  knowledge 

the  problem  domain),  can 
i n to 

i ts  search  h e u r i s t i c s? 

i n c o r(cid:173)

The  process  of  automated  d e f i n i t i on  of  a b s t r a c t i on 
By  a p p l y i ng  a  g e n e r al 

space  o f f e rs  a  p o s s i b le  approach. 
purpose  problem  s o l v er 
most  g e n e r al  manner  d e s c r i b ed 
s p e c i f ic  d e t a il  h i e r a r c hy  can  be  b u i lt  up. 
of  a  system 
from  mere  d e t a i ls 
s p e c i f ic  knowledge. 

to  d i s c r i m i n a te 

i m p o r t a nt  aspect  of 

to  a  p a r t i c u l ar  domain 

in 
in  S e c t i on  1 1 1,  a 

is  an 

t a s k-

i m p o r t a nt  c o n s i d e r a t i o ns 

The  a b i l i ty 

the 
t a s k-

t h at  are  e a s i ly 

f u r t h er  aspect  of 
f or  n e g o t i a t i ng 

A 
f a c i l i ty 
space 
r e p r e s e n t a t i on 
respond 
more  c r i t i c al  a s p e c ts  of  a  problem  have  been  s o l v e d. 

t a s k - s p e c i f ic  knowledge 
those  areas  of 
in 

the  search 
the  h i e r a r c h i c al 
t r a v e r s i b le  areas  c o r(cid:173)

to  subproblems  of  a c h i e v i ng  d e t a i l s,  once 

framework,  e a s i ly 

t r a v e r s i b l e. 

the 

is 

the 

The  AliSTRIPS  system  determines 

t h at  a  Riven 

l i t e r al 

it  has  b u i lt  a  s m a ll  n l an 
is 

to  achieve  a 
That  small  p l an  can  be  saved 
the 

f i r s t - c h o i ce  r e l e v e nt 

t r u e. 

is  a  d e t a il  when 
s t a te 
it 
in  which 
as  a  MACROP, 
to  be  used  as 
o p e r a t or  whenever 
the  d e t a il  needs 
r e l a t i v e ly  s m a ll  number  of  MACROPs 
when  added 
b a s ic  body  of  knowledge  about  how 
a  p a r t i c u l ar 

task  domain. 

to 

The 
t h is  way, 
the  s et  of  basic  o p e r a t o r s,  c o n s t i t u te  a 
in 

to  be  a c h i e v e d. 
lormed 

to  s o l ve  problems 

in 

P l a n n i ng  w i th  M u l t i p le  Outcome  O p e r a t o rs 

The  use  of  a  h i e r a r c h i c al  r e p r e s e n t a t i on  can 

the  process  of  c r e a t i ng  c o n d i t i o n al 

i n f o r m a t i on  g a t h e r i ng  o p e r a t o r s,  and 
T h is 
the  outcomes  of  these 

is  because 

to  a  p a r t i c u l ar 

l e v el  of 
in  a  h i g h er  a b s t r a c t i on  space  a  simple 
the  p r e c o n d i t i o ns 
the  e f(cid:173)
terms  of  u n i n s t a n t i-
t h a t, 

the  o p e r a t o r s,  a l t h o u gh  some  of 
to  be  d e s c r i b ed 

t h is  approach 

to 

is 

Thus, 

g r e a t ly  s i m p l i fy 
p l a n s,  p l a ns  w i th 
p l a ns  w i th 
l o o p s. 
o p e r a t o rs  are  u n c e r t a in  o n ly 
d e t a i l. 
s p e c i f i c a t i on  can  adequately  model 
and  e f f e c ts  of 
f e c ts  may  have 
ated  p a r a m e t e r s. 
as  noted 
spaces  becomes  d i f f i c u lt  when 
are  a b s t r a c t e d, 
N e v e r t h e l e s s, 
s e n t a t i on  of 
t h is  scheme  a t t r a c t i v e. 

A  drawback 

in  S e c t i on 

these 

I I I, 

in 

the  e f f e c ts  of  o p e r a t o rs 
r e p r e(cid:173)

the  s i m p l i c i ty  of 

r a t h er  complex  o p e r a t o rs 

renders 

the  mapping  of  plans  among 

to 

is  n ot 

f u l l,  park 

in  p l a n n i ng 

i n s i de  L ot  B. 

i n s i de  L ot  A. 

As  an  example, 

the  c a r ." 
to  d r i ve 

Such  an  o p e r a t or  might  have 

If  one  p l a ns  at  a  h i gh 
the  a i r p o r t,  he  does  not  c o n s i d er 

the  e f f e ct  of 
E l se 
if  L ot  B 
Else  d r i ve  around,  and 

to 
the  a i r p o rt 
the  c a r"  opera(cid:173)
" If  Lot 
is  not 
then 

to  d r i ve 
to  c a t ch  a  p l a n e,  one  would  use  a  "Park 
t o r. 
A 
f u l l,  p a rk 
park 
t i on 
" P a rk 
he  c o n s i d e rs  an 
space 
the  s i m p le  p r e c o n d i t i on  A t ( C a r , A i r p o r t)  and  might  cause 
the  c l a u se  P a r k e d - i n - l ot 
to  be  added 
to 
F u r t h er  p l a n n i ng  c o u ld  c o n t i n ue  w i t h o ut 
c o n s i d e r i ng  as  s e p a r a te  cases  s t a t es 
l o t ( C a r , L ot  A)  or  P a r k e d - i n - l o t ( C a r , L ot  B)  were 

the  o p e r a t or 
in  which  no  u n c e r t a i n t i es  e x i s t. 

Rather, 
in  an  a b s t r a c t i on 

(Car,Parameter37) 

the  c a r"  o p e r a t or 

l e v el  of  a b s t r a c(cid:173)

f u ll  c o m p l e x i t y. 

in  which  P a r k e d - i n-

It  might  have 

the  model. 

image  of 

t r u e. 

the 

i ts 

in 

An 

I n t e g r a t ed  Robot  System 

A  p r i m a ry  m o t i v a t i on  f or  b u i l d i ng 

tem,  and 

I ts  o f f s p r i ng  ABSTRIPS,  was 

the  STRIPS  s y s(cid:173)
f or 

to  b u i ld  p l a ns 

4 21 

In 

the  S t a n f o rd  Research 

I n s t i t u te 
the  o p e r a t or  d e s c r i p t i o ns  are  models 

r o b o t. 

the 
termed 

" i n t e r m e d i a te 

r o b ot  can  a c t u a l ly 

they  are  e x e c u t e d, 

a  mobile 
r o b ot  system, 
a c t i o ns 
t h at 
modeled  are 
When 
(LLAs),  which  are  concerned  w i th 
i ng  m o t i on  of 
commands 
a  PDP-15  computer,  which  communicates  w i th 
i t s e lf  v ia  a 

Those  r o u t i n es 
i n f o r m a t i on 

the  r o b o t. 
r e c e i ve 

t o,  and 

invoke 

r a d io 

t a k e. 

l i n k. 

they 

l e v el  a c t i o n s" 

( I L A s ). 
l e v el  a c t i o n s" 
i n i t i a t i ng  and  m o n i t o r(cid:173)

"low 

in 

t u rn  pass 
f r o m,  a  program 
the  r o b ot 

in 

f or 
The  a c t i o ns 

The  ground  space  as  viewed  by  ABSTRIPS 

is 

in 

f a ct 

from 

the  p o i nt  of  view 

from  b a s ic  o p e r a t i o ns  at 

lower 

l e v e l s. 

to  handle  success(cid:173)

f i n er 

in  which 
r o b ot  around. 

j u st  another  a b s t r a c t i on  space 
of  p l a ns  b u i lt  up 
The  problem  s o l v er  can  be  extended 
i v e ly 
reached 
the 
of  a 
But 
q u i re 
f e r ed 
lem  s o l v e r s. 

T h is  o f f e rs 

t h at 
from 

f u l ly 

the 

l e v e ls  of  d e t a il  u n t il  a  ground  space 

is 

the  o n ly  r e m a i n i ng  d e t a i ls  are 

to  r o ll 
the  e n t i c i ng  p o s s i b i l i ty 

i n t e g r a t ed  p l a n n i ng  and  e x e c u t i on  system. 
i n t e r a c t i on  of  p l a n n i ng  and  e x e c u t i on  would 
t h at  such  a  system  b u i lt  be  d i f(cid:173)
form  of  p l an  b u i lt  by  p r o b(cid:173)

the  p l a ns 
the 

t r a d i t i o n al 

r e(cid:173)

it 

There  are 

For  a  system 

to  a  s i m u l a t ed  one, 

t h at  d e a ls  w i th  complex  problems 

in 
is  u n(cid:173)
to  solve  an  e n t i re  problem  w i th  an  e p i s t e m o-

u  r e al  w o r l d,  as  opposed 
d e s i r a b le 
l o g i c a l ly  adequate  p l a n. 
l i k e ly  outcomes  f or  each  r e a l - w o r ld  o p e r a t i o n. 
ber  of  h y p o t h e t i e a l ly  p o s s i b le  s t a t es  of 
the  w o r ld  a t(cid:173)
t a i n a b le  by  a  p a r t i c u l ar  p l an  w i ll  grow  e x p o n e n t i a l ly 
w i th 
the  e f f o rt  of 
such  a  system  would  be  Spent  reasoning  about  w o r ld 
s t a t es 
of 

t h at  would  never  be  a c h i e v e d,  and  very 

it  would  be  spent  moving 

the  p l a n.  Most  of 

too  many  reasonably 
The  num(cid:173)

i ts  Roals. 

the  r o b ot 

l e n g th  of 

toward 

l i t t le 

the 

It 

is  d e s i r ed 

t h at 

the  system's  p l a n n i ng  e f l o r ts 
t h at  are 

the  w o r ld 

t r a v e r s ed 

to  be 
the  o v e r a ll  p l a n n i ng  should  be  roughed  out 

the  course  of 

focus  on  r e a s o n i ng  about  s t a t es  of 
l i k e ly 
Thus, 
a b s t r a c t i on  space 
so 

t h at 
rough  p l an 

i g n o r es  enough 
is 

f a i r ly  c e r t a in 

t h at 

the 

in 

in  an 
l e v e ls  of  d e t a il 

to  succeed. 

r o b ot  e x e c u t i o n. 

A  few  steps  of 

the  p l an  can  be  used  as  a  s k e l e t o n, 
in  a  manner  s i m(cid:173)
f a i r ly  c e r t a in 

to  which 

the  b e g i n n i ng  p o r t i on  of 

to  ABSTRIPS. 
the 

Even  more  d e t a i l ed  steps  can  be 

to  which  more  d e t a i l ed  s t e ps  are  added 
i l ar 
These  new  steps  are 
to  succeed  at 
l e v el  of  d e t a il 
s p e c i f i e d. 
f or 
t h is  s u b p l a n,  and 
process  can  c o n t i n ue  u n t il  a  s h o rt  subplun  of 
robot  commands 
quence. 
world  and 
h o p e f u l ly  be  mere  d e t a i ls 
s t r a c t i on  of 
in 
steps  of 
spaces,  are  s t i ll  on 

Any  d e v i a t i o ns  between 
the  hypothesized 

r e s u l ts  of 
the  space 
Thus, 

the  r o b ot  commands. 

is  b u i l t. 

the  p l an 

to 

These  can  be  executed 

the  r e m a i n i ng 
t h is  space,  as  w e ll  as  a ll  h i g h er 
the  s o l u t i on  p a t h. 

they  are 
f i l l ed 
the 
l o w - l e v el 

in 

the  subplan  w i ll 
t h at 

is  an  ab(cid:173)

the  a c t u al  s t a te  of 

in  se(cid:173)

the 

F u r t h er  b u i l d i ng  and  e x t e n d i ng  of 

the  v a r i o us  sub-
i n c l u d i ng  a  new  b o t t o m - l e v el 
T h is  subplan  w i ll  a c c u r a t e ly 

the 

to  move 
the  p r e c i se  r e s u l ts  of  p r e v i o us  e x e c u t i o n,  and 
the  u l t i(cid:173)

f u l ly  a p p r o p r i a te 

f or  a c h i e v i ng 

The  process  of  a l t e r n a t i v e ly  adding  d e t a i l ed 

then 

take  p l a c e, 
r o b o t. 

plans  can 
subplan 
r e f l e ct 
so 
mate  g o a l. 
steps 
s t e ps  can  c o n t i n ue  u n t il 

the  p l an  and 

it  w i ll  be 

to 

then  a c t u a l ly  e x e c u t i ng  some 

the  goal 

is  a c h i e v e d. 

Thesis,  Department  of  Mathematics,  Massachusetts 
Institute  of  Technology,  Cambridge,  Massachusetts 
(1972). 

9,  B.  Buchanan,  G.  Sutherland,  and  E.  Feigenbaum, 
"HEURISTIC  DENDRAL:  A  Program  for  Generating 
Explanatory  Hypotheses  in  Organic  Chemistry,"  in 
Machine  Intelligence  4,  B.  Meltzer  and  D.  Michie, 
eds.,  pp.  209-254  (American  Elsevier  Publishing 
Company,  New York,  New  York,  1969. 

If  a  grievous  failure  occurB  at  some  point  in  exe(cid:173)

cution  and  nondetalls  in  higher  models  no  longer  reflect 
the  actual  state  of  the  world,  subplans  at  affected 
levels  of  detail  can  propagate  the  failure  up  to  an 
abstraction  space  in  which  the  deviation  from  the  pre(cid:173)
dicted  world  model  was  a  d e t a i l.  Replannlng  can  be 
initiated  from  this  level  of  abstraction,  thus  reusing 
the  results  of  as  much  as  possible  of  the  previous 
planning. 

Therefore,  by  using  a  hierarchy  of  abstraction 

spaces  to  mask  uncertainties  in  the  real  world  effects 
of  planned  operations,  an  effectively  integrated  robot 
planning  and  executing  system  can  be  created.  By  deal(cid:173)
ing  with  a  hierarchy  of  short,  simple  plans,  such  a 
system  w i ll  be  able  to  cope  effectively  with  truly  com(cid:173)
plex  problems. 

Acknowledgements 

The  author  is  indebted  to  Richard  Fikes,  Peter 
Hart,  and  Nils  Nilsson  for  their  enthusiastic  encour(cid:173)
agement  and  intellectual  support.  The  research  re(cid:173)
ported  in  this  paper  was  supported  by  the  Advanced 
Research  Projects  Agency  of  the  Department  of  Defense 
under  Contract  DAHC04-72-C-0008  with  the  U.S.  Army  Re(cid:173)
search  Office. 

References 

1.  R.  E.  Fikes  and  N.  J.  Nilsson,  "STRIPS:  A  New 

Approach  to  the  Application  of  Theorem  Proving  to 
Problem  Solving,"  A r t i f i c i al  Intelligence,  Vol.  2, 
Nos.  3/4,  pp.  189-208  (1971). 

2.  R.  E.  Fikes,  P.  E.  Hart,  and  N.  J.  Nilsson,  "Learn(cid:173)
ing  and  Executing  Generalized  Robot  Plans,"  A r t i f i(cid:173)
c i al  Intelligence,  Vol.  3,  pp.  251-288  (1972). 

3.  G.  Ernst  and  A.  Newell,  GPS;  A  Case  Study  in  Gen(cid:173)
e r a l i ty  and  Problem  Solving,  ACM  Monograph  Series 
(Academic  Press,  New  York,  New  York,  1969). 

4.  J.  McCarthy  and  P.  Hayes,  "Some  Philosophical  Prob(cid:173)

lems  from  the  Standpoint  of  A r t i f i c i al  I n t e l l i(cid:173)
gence,"  in  Machine  Intelligence  4,  B.  Meltzer  and 
D.  Michie,  eds.,  pp.  463-502  (American  Elsevier 
Publishing  Company,  New  York,  New  York,  1969. 

5.  G.  Polya,  How  to  Solve  I t,  p.  8  (Princeton  Univer(cid:173)

sity  Press,  Princeton,  New  Jersey,  1945). 

6.  A.  Newell,  J.  C.  Shaw,  and  H.  A.  Simon,  "Report  on 

a  General  Problem  Solving  Program,"  Proceedings  of 
the  International  Conference  on  Information  Process(cid:173)
ing,  UNESCO,  Paris,  pp.  256-264  (1960), 

7.  M.  D.  Kelly,  "Edge  Detection  in  Pictures  by  Com(cid:173)
puter  Using  Planning,"  in  Machine  Intelligence  6, 
B.  Meltzer  and  D.  Michie,  eds.,  pp.  397-409  (Amer(cid:173)
ican  Elsevier  Publishing  Company,  New  York,  New 
York,  1971). 

8.  C,  Hewitt,  "Description  and  Theoretical  Analysis 

(Using  Schemata) of PLANNER:  A  Language  for  Proving 
Theorems  and  Manipulating  Models  in  a  Robot,"  Ph.D. 

422 

