Dynamic Mixture Models for Multiple Time Series

Xing Wei

Computer Science Department
Univeristy of Massachusetts

Amherst, MA 01003
xwei@cs.umass.edu

Jimeng Sun

Xuerui Wang

Computer Science Department
Carnegie Mellon University

Computer Science Department
Univeristy of Massachusetts

Pittsburgh, PA 15213
jimeng@cs.cmu.edu

Amherst, MA 01003
xuerui@cs.umass.edu

Abstract

Traditional probabilistic mixture models such as
Latent Dirichlet Allocation imply that data records
(such as documents) are fully exchangeable. How-
ever, data are naturally collected along time, thus
obey some order in time. In this paper, we present
Dynamic Mixture Models (DMMs) for online pat-
tern discovery in multiple time series. DMMs do
not have the noticeable drawback of the SVD-based
methods for data streams: negative values in hid-
den variables are often produced even with all non-
negative inputs. We apply DMM models to two
real-world datasets, and achieve signiﬁcantly better
results with intuitive interpretation.

Introduction

1
Multiple co-evolving time series or data streams are ubiqui-
tous in many different real-world applications. Considering a
sensor network, multiple sensors continuously collect differ-
ent measurements over time (e.g., chlorine concentration at
different locations in a water distribution system; temperature
or light measurements of different rooms; host status of dif-
ferent machines in a data center; etc.). A central site usually
analyzes those measurements for main trends and anomaly
detection. There has been success in mining multiple streams.
However, the existing methods on analyzing such streams still
have signiﬁcant weaknesses:

First, existing monitoring softwares require considerable
time and expertise to be properly conﬁgured despite the fact
they treat the streams as independent. For each data stream
that an administrator intends to monitor, he/she must make
decisions upon proper thresholds for the data values. That
is, he/she must deﬁne, for each data stream, what constitutes
normal behaviors. The correlations across streams are usually
not captured.

Second, the state-of-the-art algorithms on automatically
summarizing multiple streams often adopt matrix decomposi-
tions, like Singular Value Decomposition (SVD) and its vari-
ants. For example, Papadimitriou et al. uses online SVD
tracking to summarize the multiple streams incrementally
through a small number of hidden variables [Papadimitriou
et al., 2005]. The hidden variables computed there are lin-
ear combinations of all streams projecting onto the maximum

variance directions. This construction often seems not intu-
itive to the end users due to the reiﬁcation of the mathemat-
ical properties of the SVD techniques.
In particular, some
streams may have negative coefﬁcients for hidden variables
even when all the measurements are nonnegative. This draw-
back is intrinsic due to the Gaussian distribution assumption
on the input streams.

Using mixture of hidden variables for data representation
has recently been of considerable interest in text modeling.
One early example is the Latent Semantic Indexing (LSI)
model, which is also based on the SVD technique. More
recently, Hoffman presents the probabilistic Latent Seman-
tic Indexing (pLSI) technique [Hoffman, 1999]. This ap-
proach uses a latent variable model that represents documents
as mixtures of topics in a probabilistic framework. Latent
Dirichlet Allocation (LDA) [Blei et al., 2003], which resem-
bles the generative process of pLSI but overcomes some of
its drawbacks, has quickly become one of the most popular
probabilistic text modeling techniques in machine learning
and has inspired a series of research works in this direction
[Girolami and Kaban, 2005; Teh et al., 2004]. In particular,
LDA has been shown to be effective in some text-related tasks
such as document classiﬁcation [Blei et al., 2003] and infor-
mation retrieval [Wei and Croft, 2006], but its effectiveness
on continuous data and time-series remains mostly unknown.
Most topic models mentioned above assume that data
records (e.g., documents) are fully exchangeable, which are
not true in time-series model from many real-world appli-
cations. Exactly because of that, topic modeling over time
starts to receive more and more attentions. In the recent Dy-
namic Topic Models [Blei and Lafferty, 2006], topic evolu-
tions are modeled through collections sliced into certain peri-
ods of time. However, the time dependency of individual data
records (documents) inside a collection/period are not consid-
ered. In the Topic over Time (TOT) model [Wang and McCal-
lum, 2006], continuous time stamps are put into an LDA-style
topic model as observations. But drawing time stamps from
one distribution as in the TOT model is often not enough for
dealing with bursty data, common in data streams.

In this paper, we present a Dynamic Mixture Model
(DMM), a latent variable model that takes into considera-
tion the time stamps of data records in dynamic streams. The
values in streams are represented as mixtures of hidden vari-
ables, and for each time stamp, the mixture of hidden vari-

IJCAI-07

2909

ables for all streams is dependent on the mixture of the pre-
vious time stamp. In this way we can capture the short-term
dependencies. Compared to the SVD techniques, it does not
have their common drawback: non-intuitive negative values
of hidden variables, and thus has a more interpretable expla-
nation within a probabilistic framework. Compared to the
static LDA-style models, it can take advantage of the time
dependency of multiple streams. Finally, we want to point
out that topic models have been mainly designed for discrete
data. To apply the LDA-style mixture models to continuous
data, the standard way is discretization, which we show in
Section 4 works well in DMM.

α

θ

z

w

β

Nd

D

α

θ

z

w

β

Nd

D

α

θ

z

w

β

Nd

D

K

α

θ1

z

w

N1

···

θt−1

z

w
Nt−1

θt

z

w

···

θt+1

z

w
Nt+1

Nt

θD

z

w

ND

φ

K

β

Figure 1: Graphical model representation of Dynamic Topic
Model (left, 3 slices) and Dynamic Mixture Model (right)

2 Related Work
Data streams, containing much more interesting information
than static data, have been extensively studied in recent years.
Evidence has shown that temporal information plays a cru-
cial role in capturing many meaningful and interesting pat-
terns. The main objective of temporal analysis is to efﬁciently
discover and monitor patterns when data are streaming into
a system. A recent survey [Muthukrishnan 2005] has dis-
cussed many data streams algorithms. Among of these, SVD
and PCA are popular tools for summarizing multiple time
series into a number of hidden variables [Papadimitriou et
al., 2005]. However, it assumes independency across time
stamps; the results are often lack of probabilistic argument
and intuitive interpretation.

Probabilistic mixture models [Hoffman, 1999; Blei et al.,
2003] are widely used to summarize data based on statistical
frameworks. To capture time evolution, the usage of time
within probabilistic mixture models has been around for a
while. For example, time can be taken care of in a post-
hoc way. One could ﬁrst ﬁt a time-unaware mixture model,
and then order the data in time, slice them into discrete sub-
sets, and examine the mixture distributions in each time-slice
[Grifﬁths and Steyvers, 2004]. Alternatively, non-joint mod-
eling can also pre-divide the data into discrete time slices, ﬁt
a separate mixture model in each slice and possibly align the
mixture components across slices [Wang et al., 2006].

More systematic ways to take advantage of the temporal in-
formation in mixture models can be put into two categories.
First, the dynamic behaviors are driven by state transitions.
This kind of models generally make a Markov assumption,
i.e., the state at time t + 1 or t + Δt is independent of all
other history given the state at time t. For instance, Blei and
Lafferty present dynamic topic models (DTMs) in which the
alignment among topics across collections of documents is
modeled by a Kalman ﬁlter [Blei and Lafferty, 2006]. DTMs
target on topic evolution over sets of large amounts of data
records and local dependencies between two records are not
captured. Second, the other type of models does not em-
ploy a Markov assumption over time, but instead treats time
as an observed continuous variable such as the topics over
time (TOT) models [Wang and McCallum, 2006]. This helps
capture long-range dependencies in time, and also avoids a
Markov model’s risk of inappropriately dividing a mixture
component (topic) in two when there is a brief gap in its ap-
pearance. However, with all time stamps drawn from one

SYMBOL DESCRIPTION

number of hidden components / topics
number of snapshots / documents
number of parameters / words
sum of parameter values in the tth snapshot /
number of words in the tth document
snapshot index / time stamp of documents
mixture distribution of hidden components
for a snapshot / document
mixture distribution over parameters / words
for a hidden component /topic
hidden component / topic
one unit value of a parameter / word token
hyperparameter for the multinomial θ1
hyperparameter for φ

K
D
V
Nt

t
θ

φ

z
w
α
β

Table 1: Notation correspondence

distribution, TOT is not appropriate for data streams, which
are usually bursty and multi-modal.

3 Dynamic Mixture Models
Mixture models have been widely used in modeling various
complex data with very competitive results. But the usage of
latent mixture model in streaming data has not been explored,
and largely remains unknown. We now present a dynamic
mixture model (DMM) incorporating temporal information
in data.

The graphical model representation of the DMM is shown
in Figure 1 (right). As other mixture models for discrete
data, the DMM can be regarded as a topic model as well.
For presentation convenience, we explain this model in the
background of both text and the streaming data (Section 4 de-
scribes the streaming data in detail). Table 1 summarizes the
notation correspondences for both text and data streams. In
particular, each snapshot corresponds to a document in topic
models; each stream corresponds to a word occurrence over
time, e.g., the number of occurrences of word wi over time
represents a single stream wi, which could be the chlorine
concentrations over time, or the light intensities over time of
ith sensor.

The generative process of the DMM is similar to Latent
Dirichlet Allocation [Blei et al., 2003], but the mixture dis-
tribution θ for each document does not have a Dirichlet prior

IJCAI-07

2910

(except the very ﬁrst one); instead, θt is dependent on the
mixture distribution of the previous snapshot θt−1.

First, we assume there are strong evolution dependencies.
The continuous stream data are evenly sampled in time as
successive snapshots that reﬂect the intrinsic dependencies
between the values along time series.

Second,

the time dependency is complicated and the
changes hardly follow a continuous time distribution as in the
TOT model [Wang and McCallum, 2006]. Thus neighboring
dependency (Markov assumption) is more appropriate.

Compared to the TOT model, the Dynamic Mixture Model
is constructed on discrete time stamps and assumes depen-
dencies between two consecutive snapshots. Although the
TOT model captures both short-term and long-term changes
by treating time stamps as observed random variables, DMM
is capable to capture more detailed changes and to model the
dependency between any two consecutive time shots, which
is especially appropriate for many streaming data when the
data are equally sampled in time.

Compared to Dynamic Topic Models (DTM, see Figure 1,
left), DMM captures the evolution between snapshots (doc-
uments) instead of between snapshot-groups (collections in
text model).
In both DTM and LDA, documents in a col-
lection and words in a document are fully exchangeable; in
DMM, snapshots of multiple time series, which correspond
to documents in text model, have very strong temporal order
and exchanges of snapshots can lead to very different results.
From this perspective, DMM is a true online model. Note that
SVD also treats time series as vectors, thus the permutation
of snapshots will not make a difference.

We model the dependency by setting the expectation of the
distribution of θt to be θt−1, i.e., θt is generated from a dis-
tribution with θt−1 as the 1st order moment (we will discuss
the concrete distribution in Section 3.1). The process of gen-
erating time series streams in DMM is as follows:

1. Pick a multinomial distribution φz for each topic (hidden
dimension) z from a Dirichlet distribution with parame-
ter β ;

2. For time shot t = 0, sample a multinomial distribution

θt from a Dirichlet distribution with parameter α,

3. For each time shot t > 0, sample a multinomial distri-
4. Sample a hidden variable / topic z ∈ {1,··· , K} from a

bution θt from a distribution with expectation θt−1,

multinomial distribution with parameter θt,

5. Add a unit value to parameter w picked from a multi-
nomial distribution with parameter φzw / Pick a word w
from a multinomial distribution with parameter φzw.

Thus, the likelihood of generating a data set of multiple data
streams is:
P (Snapshot1,··· , SnapshotD|α, β) =

(cid:2)(cid:2) K(cid:3)

p(φz|β)

×p(θ1|α)

D(cid:3)

t=2

p(θt|θt−1)

D(cid:3)

Nt(cid:3)

K(cid:4)

t=1

i=1

zi=1

z=1

(P (zi|θ)P (wi|φzi

)) dθdφ

3.1 Dirichlet Dynamic Mixture Models
As we have described, θt is generated from a distribution with
θt−1 as the expectation. There are no strict requirements for
this distribution, and we just want to build up connections be-
tween two successive snapshots, i.e., the mixture distribution
of the current snapshot is dependent on the one of its previ-
ous snapshot. In this setting, a continuous one-modal distri-
bution is desired. Gaussian distribution is a straightforward
selection when θ is represented by natural parameters, which
was adopted by [Blei and Lafferty, 2006] to model the depen-
dency between two consecutive α (Figure 1, left). However,
Gaussian distribution is not conjugate to the multinomial dis-
tribution that is used to generate hidden components / top-
ics, which makes inference more difﬁcult. Although, to the
best of our knowledge, there is no conjugate prior for Dirich-
let distribution; Dirichlet distribution is conjugate to multino-
mial distribution; and we use a Dirichlet distribution to model
the dependency between consecutive θ. Expectation only is
not enough to make the proposed distribution identiﬁable,
since there are inﬁnitely many Dirichlet distribution having
the same expectation. Thus we introduce another precision
constraint that all the parameters of the Dirichlet distributions
sum to ψ that is also equal to the sum of all parameters α in
the ﬁrst Dirichlet distribution. A Dirichlet distribution can
be completely parameterized by the mean and precision pa-
rameters [Minka, 2003]. For notation convenience, we deﬁne
θ0 = α/ψ. That is, θt|θt−1 ∼ Dir(ψθt−1).
Inference
Inference can not be done exactly in complex graphical mod-
els such as DMMs. The non-conjugacy between Dirichlet
distributions makes standard Gibbs sampling methods [Ge-
man and Geman, 1994] harder in approximate inference of
DMMs. Here, we use a simple, but effective iterated sam-
pling procedure considering that streaming data are very dif-
ferent from traditional data sets such as large text collections:
ﬁrst, massive amounts of data arrive at high rates, which
makes efﬁciency the most concern; second, users, or higher-
level applications, require immediate responses and cannot
afford any post-processing (e.g., in network intrusion detec-
tion) [Papadimitriou et al., 2005]. In summary, the algorithm
is expected to be efﬁcient, incremental, scalable, and possi-
bly scaling linearly with the number of streams. As shown in
[Grifﬁths and Steyvers, 2004], we deﬁne mz,w to be the num-
ber of tokens of word w assigned to topic z, and the posterior
distribution of φz can be approximated by

ˆφz,w =

(cid:5)V
mz,w + βw
w=1(mz,w + βw)

.

To estimate the posterior distribution of θt in streaming data,
we use a technique that is commonly used in mean-ﬁeld vari-
ational approximation: assume each latent variable to be in-
dependent to the others. Then we use an iterative procedure
to update all the θ periodically. We deﬁne nt,z to be the num-
ber of tokens in document t assigned to topic z. Thus, we
have,

ˆθt,z =

nt,z + ψˆθt−1,z
(cid:5)K
z=1(nt,z + ψˆθt−1,z)

.

IJCAI-07

2911

In each sample, we draw in turn zt,i according to a prob-
× ˆφzt,i,wt,i, and update ˆθ after

ability proportional to ˆθt,zt,i
each iteration.

Streams are very special data and require the corresponding
algorithms to be highly efﬁcient in order to react in a timely
manner. It could be certainly possible to derive a variational
approximation from the scratch, however, we have empiri-
cally found that our procedure is very effective and efﬁcient
for streaming data presented in Section 4. With this iter-
ated sampling algirithm, we keep the information from ofﬂine
training, and run sampling only for the coming snapshot with
a couple of iterations. The parameter estimation is updated
after each new snapshot arrives.

4 Experiments
In this section we present case studies on real and realistic
datasets to demonstrate the effectiveness of our approach in
discovering the underlying correlations among streams.
4.1 Chlorine Concentrations
Description: The Chlorine dataset was generated by EPA-
NET2.01 that accurately simulates the hydraulic and chem-
ical phenomena within drinking water distribution systems.
Given a network as the input, EPANET tracks the ﬂow of
water in each pipe, the pressure at each node, the height
of water in each tank, and the concentration of a chemical
species throughout the network, during a simulation period
comprised of multiple time stamps. We monitor the chlo-
rine concentration level at all the 166 junctions in the network
shown in Figure 5 for 4310 time stamps during 15 days (one
time tick every ﬁve minutes). The data was generated by us-
ing the input network with the demand patterns, pressures,
ﬂows speciﬁed at each node.

Data characteristics: The two key features are: 1) A clear
global periodic pattern (daily cycle, dominating residential
demand pattern). Chlorine concentrations reﬂect this, with
few exceptions. 2) A slight time shift across different junc-
tions, which is due to the time it takes for fresh water to ﬂow
down the pipes from the reservoirs.

Thus, most streams exhibit the same sinusoidal-like pat-
tern, except with gradual phase shifts as we go further away
from the reservoir.

Reconstruction: Our method can successfully summarize
the data using just two numbers (hidden variables) per time
tick (see Figure 3), as opposed to the original 166 numbers.
Figure 2 shows the reconstruction for one sensor (out of 166).
The reconstructions of the other sensors achieve similarly re-
sults. Note that only two hidden variables give very good
reconstruction.

Hidden variables: The two hidden variables (see Figure 3)
reﬂect the two key dataset characteristics: 1) The ﬁrst hidden
variable captures the global, periodic pattern; 2) The second
one also follows a very similar periodic pattern, but with a
slight phase shift.

Interpretation of hidden variables: Each hidden variable
follows a multinomial distribution with 166 parameters with

1http://www.epa.gov/ORD/NRMRL/wswrd/epanet.html

Figure 2: Chlorine reconstruction; reconstruction based on 2
hidden variables are very close to the original value.

Figure 3: Hidden variables for chlorine data; the ﬁrst captures
the daily cycles; the second reﬂects the time shift of different
sensors.
the constraint that the probability mass over all parameters
equals one. Unlike the SVD where a hidden variable is a lin-
ear combination of all streams, our method interprets the hid-
den variable as a generating process behind all 166 streams
which is more intuitive (see Figure 4). Notice that there is the
high probability mass on stream 1-7 because those sensors
(highlighted on Figure 5) are close to the reservoir and on the
main pipe of the water distribution network.
4.2 Light Measurements
Description: This dataset consists of light intensity measure-
ments collected using Berkeley Mote sensors, at several dif-
ferent locations in a lab (see Figure 6) over a period of a
month [Deshpande et al., 2004]. We simulate streams with
this dataset by cutting the set into two even parts, and process
the snapshots in the second part one by one in an online man-
ner with the trained model from the ﬁrst part. The results we
present of this dataset are all from stream simulation running.
Data characteristics: The main characteristics are: 1) A
clear global periodic pattern (daily cycle). 2) Occasional big
spikes from some sensors (outliers). Reconstruction: Similar
to the chlorine data, the reconstruction error on light data is
also very small.

Hidden variable: The ﬁrst hidden variable exhibits the
daily periodicity as shown in Figure 8. The probability distri-

IJCAI-07

2912

Figure 4: The distribution of 1st hidden variable; Note that
sensor 1 to 7 have signiﬁcantly higher mass because they are
on the main pipe of water distribution.

Figure 6: Sensor map, the highlighted region receives more
sunshine.

Figure 5: Water distribution network: Sensor 1-7 are high-
lighted since they are close to reservoir (red arrow) and on
the main pipe.

bution (see Figure 9) concentrates on the sensor 37-44 (high-
lighted in Figure 6) since they receive more sunshine and
close to window.

Comparison with static mixture modeling: To show the
effectiveness of modeling mixtures dynamically, and model-
ing the dependency between mixtures of hidden variables,
we compare our streaming modeling based on time series
to the non-time dependency latent variable modeling tech-
niques, e.g., the LDA model. The sums of reconstruction er-
rors over time are compared and signiﬁcant less (p < 1e− 20
under t-test) error rate were achieved with the Dynamic Mix-
ture Model from all of 1 to 3 iterations, as shown in Figure
10.

Figure 7: Light reconstruction; reconstruction based on 4 hid-
den variables are very close to the original value.

mixture models such as Latent Dirichlet Allocation, but in
those models, the order of the data is ignored, thus all data
records are assumed to be fully exchangeable. The DMMs,
on the contrary, take into consideration the temporal informa-
tion (e.g., order) implied in the data . Also, compared to the
state-of-the-art SVD-based methods for data streams, DMMs
naturally give positive values of hidden variables, so the re-
sults from DMMs are much more intuitive and interpretable.
We believe that probabilistic mixture modeling is a promis-
ing direction for streaming data, especially Dynamic Mixture
Models have been shown to be a very effective model for mul-
tiple time series application.

For future work, we plan to apply DMMs to larger datasets
and improve both of its performance and efﬁciency on on-
line streaming data. Modeling the dependencies using other
distributions other than Dirichlet distribution will also be in-
teresting.

5 Conclusion and Future Work
In this paper, we have presented Dynamic Mixture Models
(DMMs) for online pattern discovery in multiple time series,
and shown interesting results on two data sets. The generative
process of DMMs is similar to traditional, static probabilistic

Acknowledgments
This work was supported in part by the Center for Intelligent
Information Retrieval, in part by the National Science Foun-
dation under Grants No.
IIS-0209107, IIS-0205224, INT-
0318547, SENSOR-0329549, IIS-0326322, in part by the

IJCAI-07

2913

Figure 8: 1st hidden variable captures daily periodicity

Figure 9: The distribution of 1st hidden variable, the mass
focus on the sensor 37-44 due to the vicinity to window.

Pennsylvania Infrastructure Technology Alliance (PITA), a
partnership of Carnegie Mellon, Lehigh University and the
Commonwealth of Pennsylvania’s Department of Commu-
nity and Economic Development (DCED), and in part by
the Defense Advanced Research Projects Agency (DARPA)
under contract number HR0011-06-C-0023. Any opinions,
ﬁndings and conclusions or recommendations expressed in
this material are those of the author(s) and do not necessarily
reﬂect those of the sponsors.

References
[Blei and Lafferty, 2006] David Blei and John Lafferty. Dy-
namic topic models. In Proceedings of the 23rd Interna-
tional Conference on Machine Learning, pages 113–120,
2006.

[Blei et al., 2003] David Blei, Andrew Ng, and Micheal Jor-
Journal of Machine

dan. Latent Dirichlet allocation.
Learning Research, 3:993–1022, 2003.

[Deshpande et al., 2004] Amol Deshpande, Carlos Guestrin,
Samuel Madden, Joseph M. Hellerstein, and Wei Hong.
Model-driven data acquisition in sensor networks. In Pro-
ceedings of the 30th International Conference on Very
Large Data Bases, pages 588–599, 2004.

[Geman and Geman, 1994] Stuart Geman and Donald Ge-
man. Stochastic relaxation, Gibbs distributions, and the
Bayesian restoration of images. IEEE Transactions on Pat-
tern Analysis and Machine Intelligence, 6:721–741, 1994.

Figure 10: Comparison of reconstruction error by dynamic
mixture model and static mixture model (LDA).

[Girolami and Kaban, 2005] Mark Girolami and Ata Kaban.
Sequential activity proﬁling: latent Dirichlet allocation of
Markov chains. Data Mining and Knowledge Discovery,
10:175–196, 2005.

[Grifﬁths and Steyvers, 2004] Tom Grifﬁths

and Mark
Steyvers. Finding scientiﬁc topics. Proceedings of the
National Academy of Sciences, 101(suppl. 1):5228–5235,
2004.

[Hoffman, 1999] Thomas Hoffman. Probabilistic latent se-
mantic indexing. In Proceedings of the 22nd Annual ACM
Conference on Research and Development in Information
Retrieval, pages 50–57, 1999.
[Minka, 2003] Thomas P. Minka. Estimating a Dirichlet
distribution, 2003. http://research.microsoft.com/∼minka
/papers/dirichlet.

[Papadimitriou et al., 2005] Spiros Papadimitriou,

Jimeng
Sun, and Christos Faloutsos. Streaming pattern discov-
ery in multiple time-series. In Proceedings of the 31st In-
ternational Conference on Very Large Data Bases, pages
697–708, 2005.

[Teh et al., 2004] Yee Whye Teh, Michael

Jordan,
Matthew J. Beal, and David M. Blei. Hierarchical Dirich-
let processes. Technical Report 653, Department of Statis-
tics, University of California at Berkeley, 2004.

I.

[Wang and McCallum, 2006] Xuerui Wang and Andrew Mc-
Callum. Topics over time: A non-Markov continuous-time
model of topical trends. In Proceedings of the 12th ACM
SIGKDD International Conference on Knowledge Discov-
ery and Data Mining, pages 424–433, 2006.

[Wang et al., 2006] Xuerui Wang, Natasha Mohanty, and
Andrew McCallum. Group and topic discovery from re-
lations and their attributes. In Advances in Neural Infor-
mation Processing Systems 18, pages 1449–1456, 2006.

[Wei and Croft, 2006] Xing Wei and W. Bruce Croft. LDA-
based document models for ad-hoc retrieval. In Proceed-
ings of the 29th Annual ACM Conference on Research
and Development in Information Retrieval, pages 178–
185, 2006.

IJCAI-07

2914

