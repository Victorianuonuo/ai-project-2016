Incremental Tractable Reasoning about Qualitative Temporal Constraints 

DEA - Universita degli studi di Brescia, via Branze 38,1-25123 Brescia, Italy 

Alfonso Gerevini 

gerevini@ing.unibs.it 

Abstract 

In  many  applications  of temporal  reasoning  we  are  in­
terested in reasoning incrementally  In particular, given 
a CSP of temporal constrains and a new constraint,  we 
want to maintain certain properties in the extended CSP 
(e.g.,  a  solution),  rather  than  recomputing  them  from 
scratch. The Point Algebra (PA) and the Interval Algebra 
(IA) are two well-known frameworks for qualitative tem­
poral  reasoning.  Most of the existing algorithms for PA 
and the known tractable fragments of IA, such as ORD-
Horn,  has been designed for "static" reasoning.  In this 
paper we  study  the  incremental  version of some funda­
mental  problems of temporal  reasoning,  proposing new 
algorithms that amortize their complexity when process­
ing a sequence of input constraints.  After analyzing the 
role of path-consistency for incremental satisfiability, we 
propose algorithms for maintaining a solution of a CSP 
over either PA or ORD-Horn, and the minimal labels of a 
CSP over PA. Our algorithms improve the complexity of 
using existing techniques by a factor of 
where n is the number of variables involved in the CSP. 

Introduction 

1 
Constraint-based qualitative  temporal  reasoning  is  a  widely 
studied  area  of AI  in  which  the  most prominent  approaches 
are  Allen's  Interval  Algebra  (IA)  [1983]  and  Vilain  and 
Kautz's Point Algebra (PA)  [1986].  Given  a CSP of tempo­
ral constraints, fundamental reasoning problems are deciding 
satisfiability of the CSP, finding a solution, and computing its 
"minimal  labels".  These  problems  arc  NP-hard  for the  full 
IA,  while  they  are  polynomial  for  PA  and  for  several  frag­
ments  of IA,  such  as  Nebel  &  Burckert  [19951  ORD-Horn 
subalgebra,  which  is  the  unique  maximal  tractable  subclass 
of IA containing all the basic relations. 

In  many  applications  of  temporal  reasoning  we  are  in­
terested  in  "dynamic"  or  on-line  reasoning.  For  instance, 
given an initial (possibly empty) CSP of temporal constraints, 
whenever a new constraint is asserted, we want to in maintain 
a solution of the CSP, rather than recomputing it from scratch 
using a "static" algorithm. 

The  design  of  algorithms  for  dynamic  polynomial  prob­
lems is an important research  field  in operation research and 
theoretical  computer  science  (e.g.,  [Ausiello  et  ai,  1991]). 
A  dynamic  problem  can  be  either  semi-dynamic  or fully-
dynamic.  In the semi-dynamic version we deal with informa­
tion  that is incrementally given (or decrementally retracted). 

In  the  fully-dynamic  version,  we  deal  with  both  assertions 
and retractions.  Typically, the worst-case performance of an 
algorithm for a dynamic problem is  specified  in terms  of its 
amortized complexity  for a  single  operation  (assertion  or re­
traction), that can be defined as the average runtime per oper­
ation over a worst-case sequence of operations [Tarjan, 1985]. 
The large majority of the algorithms that have been devel­
oped for reasoning within tractable classes of qualitative tem­
poral  constraints  are  static.  In  this  paper we  investigate the 
incremental  version of some reasoning problems for PA  and 
ORD-Horn,  discussing  the  behavior  of  existing  techniques 
and proposing new ones.  Given a sequence s  of 
input 
constraints involving n variables, our incremental algorithms 
improve the total runtime required for processing s using ex­
isting techniques by a factor of   

In Section 2 we give the necessary background on PA and 
I A. In Section 3, after analyzing the use of a path-consistency 
algorithm for incremental satisfiability checking, we propose 
new  incremental  algorithms  for  finding  a  solution  of a CSP 
over either PA or ORD-Horn, and for computing the minimal 
labels of a CSP over PA. Finally, in Section 4 we briefly dis­
cuss  the  fully-dynamic  version  of the  problems  considered, 
and we mention further results and future work. 
2  Background on PA and IA 
Vilain  and  Kautz's  Point  Algebra  [1986]  consists  of  three 
basic  relations  between  time  points 
all  possible 
unions of them 
where ? is the universal rela­
tion), and of the empty relations 
Allen's Interval Algebra 
[1983]  consists  of thirteen  basic  relations  between  temporal 
intervals, all possible unions of these relations, and the empty 
relation. PA and IA are closed under the operations union 
intersection 
and composi­
tion (o).  The first four operations are defined in the standard 
way.  The composition for two relations can be derived from 
the transitivity tables of the basic relations in PA and IA. 

difference 

converse 

A  qualitative  temporal  constraint  satisfaction  problem  (or 
briefly  temporal  CSP)  in  our  context  is  a  set  of constraints 
of the kind  xRu,  where x  and y  are  cither point variables or 
interval  variables,  and  R  is  either a  PA-relation  (if x  and  y 
are point variables) or an IA-relation (otherwise). 

Given  a temporal CSP 

over either  PA  or IA,  a  funda­
mental  reasoning problem  is  deciding the satisfiability  of   

is satisfiable if and only if there exists a solution for 

i.e., 
an assignment of temporal values to the variables  of 
(ratio­
nal numbers for point variables, pairs of rational numbers for 
interval variables) such that all the constraints in 0 are satis-

TEMPORAL  REASONING 

1283 

fied.  The problem of deciding the satisfiability  of  will be 
called PSAT,  if 
is over IA. The 
problem of finding a solution for  will be called PSOL,  if 
is over PA, and ISOL otherwise. 

is over PA, and ISAT  if 

and 

if  and  only  if 

for  every  pair  of  variables  (x,y)  such  that 

fines a given temporal CSP A scenario of a CSP 
able refinement of 
of variables are basic relations.  A CSP 

A related reasoning problem is  finding  a scenario that re­
is a satisfi-
where the constraints between all pairs 
is a refinement of 
involve the  same  variables,  and 
and 
Any  scenario of a satisfiable  temporal 
CSP over PA  (IA) identifies a total  order  of the  point  (in­
terval  endpoint)  variables of the  CSP that  is  consistent  with 
the  constraints  of the  scenario,  and  in  which  point (interval 
endpoint) variables that must have the same interpretation are 
mapped to the same position.  Clearly, from a we can derive 
a  solution  for the  CSP by just  assigning  to the points  (end-
points) of a numbers consistent with their relative order.2 

Any  temporal  CSP 

involving  n  variables  can  be  pro­
cessed using a cubic time algorithm that refines 
to an equiv­
alent path consistent CSP [Montanari, 1974].  A CSP is path 
consistent  if  for  every  subset  of  constraints  involving  three 
variables  i,  j,  and  k,  the  relation 
between  i  and A;  is 
stronger or equal  than  (i.e.,  is  a  subset of)  the  composition 
of 

and 

 

A  temporal  CSP  is  minimal  if,  for every pair  of variables 
between i and k is the strongest relations 
i, j, the relation 
between i and k that is entailed by the CSP, i.e., for each basic 
there exists a scenario for the CSP in which 
f  We  call  the  problem of computing the 

Rij  is  refined  to 
minimal CSP PMIN for PA, and IMIN  for IA. 

relation in 

From a computational point of view,  PA  and IA  have dif­
ferent properties.  The reasoning problems introduced above 
are  polynomial  for PA,  while  they  are  NP-hard  for IA  [Vi-
lain and Kautz,  1986]. In particular, PSAT and PSOL can be 
time using van Beek's method [1992], while 
solved in 
PMIN  requires 
time  Ivan  Beek,  1992;  Gerevini  and 
Schubert,  1995].  These techniques use a graph-based repre­
sentation of the CSP that in [Gerevini and Schubert,  1995] is 
called temporally labeled graph (TL-graph).  A TL-graph is  a 
graph with a set of labeled edges, where each edge connects 
a pair of distinct vertices v, w representing the point variables 
of the  temporal  CSP.  The  edges  are  either directed  and  la­
beled 
(=-constraints are 
represented by a pair  of 
-constraints),  van Beek's method 
for finding a scenario for a satisfiable CSP of PA-constrains is 
based on first identifying the strongly connected components 
(SCC) of the TL-graph representing the CSP [Cormen et a/., 
1990]  using  only  its 
-edges.  Each  SCC  is then collapsed 
into a single vertex representing an  equivalent class  of vari­
ables that must be interpreted with the same temporal value. 
If we  omit  the 
-edges from the resultant graph, we obtain 
a directed acyclic graph that we call the induced precedence 

or undirected and labeled 

or 

Without  loss  of generality  we  assume  that,  if no information 
between x and y is provided, R is the universal relation, and that 
for every pair of variables (x, y) such that  

2E.g., we assign an integer i to the points in the first position of o, 
i + 1 to the points in the second position, etc. If we have a solution, 
we can derive a total order (and hence a scenario) in a trivial way. 

graph of the CSP.  From  a  topological  sort of the  vertices of 
this graph we can easily derive a scenario for the CSP.3 

Enforcing  path-consistency  to  a  temporal  CSP  requires 
cubic  time  and  is  sufficient  to  decide  PSAT  fLadkin  and 
Maddux,  1988],  but  it  does  not  solve  PMIN. 
In  order  to 
solve PMIN  for a CSP over PA,  in  addition to enforce path-
consistency  to  it,  we  need  to  identify  particular  4-variable 
constraint  subsets  of  the  path  consistent  CSP  containing  a 
Such  subsets 

-constraint  that  should  be  refined  to 

are  called forbidden  subgraphs  in  Ivan  Beek,  1992]  and 
diamonds in [Gerevini and Schubert,  1995]. 

Regarding IA, several tractable fragments have been iden­
tified.  The Simple  Interval Algebra (SIA)  [van Beek,  1992; 
Ladkin and Maddux,  1988] is formed by the IA-relations that 
can  be  translated  into  a  conjunction  of  PA-constraints  be­
tween interval endpoints.  All reasoning problems for a CSP 
over SIA can be solved by applying the corresponding al­
gorithms  to  the  PA-translation  of 
The  most  interesting 
tractable  fragment of IA  is Nebel  and  Biirckert's ORD-Horn 
class  [1995].  ORD-Horn  subsumes  SIA  and  is  the  unique 
maximal tractable  sub-algebra of IA  containing all  the  basic 
relations.  Each  constraint C  over ORD-Horn  can  be  trans­
lated  into  a set of disjunctions of PA-constraints of the  form 
P  =  q.  P 
q,  where p and q are endpoints of in­
tervals  in  C,  and  at  most  one  literal  is  of type  " ="  or 
Given a temporal CSP 
will denote 
the CSP of PA-constraints  formed by  the  unary disjunctions 
(PA-constraints)  in  the  point  translation  of all  interval  con­
straints in  

over ORD-Horn, 

q or p 

Like PSAT,  ISAT  for ORD-Horn can be decided in cubic 
time by using a path-consistency algorithm.  ISOL for ORD-
Horn can be solved in square time, if the input CSP is known 
to be path consistent[Gerevini and Cristani,  1997],  in cubic 
time otherwise [Ligozat,  1996]. 

In the rest of the paper, the incremental version of the rea­
soning problems for a  temporal CSP  is  indicated  by  adding 
the prefix " I" to the name of the corresponding static problem, 
e.g.,  the  incremental  version  of PSOL  is  I-PSOL.  Without 
loss of generality, we assume that the initial temporal CSP al­
ready involves all variables, possibly constrained only by the 
universal relation. Moreover, our amortized complexity anal­
ysis  is  based  on  input  sequences  of length  quadratic  in  the 
number of the variables.  These assumptions are discussed in 
an extended version of the paper [Gerevini, 2003]. 

Incremental Tractable Reasoning 

3 
3.1  Path-consistency for I-PSAT and I-ISAT 
Although van Beek's method for solving PSAT requires only 
quadratic  time,  when  we  consider  the  incremental  version 
of this  problem  (I-PSAT),  enforcing  path-consistency  turns 
out  to  be  more  efficient  than  a  simple  iterative  application 
of van Beek's (static) algorithm.  In fact, we can use a path-
consistency  algorithm  like  the  one  given  in  Figure  1  (PC), 
which  was proposed  in  [Allen,  1983]  and  slightly reformu­
lated  and  improved  in  [Vilain  and  Kautz,  1986;  Bessiere, 
1996],  to  incrementally  process  a  sequence  of 
PA-

3A topological sort for a DAG is a linear order a of its vertices 
such that if v is a successor of w in the graph, then v precedes win a. 

1284 

TEMPORAL  REASONING 

TEMPORAL  REASONING 

1285 

= 

Figure  4:  Example  of  revision  of  the  topological  sort  T  when 
a  set  E  of  variables  become  equal  by  adding  x 

y  to   

Directed  solid  arcs  represent  edges  in  the  prece-
before  and  after collapsing  the  variables  in  E  to 
dence graph  of 
x.  Dashed  arrows  indicate  the  shift  performed  by  steps  14-15  of 
INCREMENTAL-PA-SOL. 

be  anticipated.  In  particular,  if a  variable  is  not  added  to  L, 
we  can  shift  it  backward  a  number  of positions  equal  to  the 
number of items currently  in  L  (which  is  given  by  the  value of 
shift).  This  is  done  by  steps  3-8  of the  subroutine,  while  steps 
9-10  move  forward  the  variables  in  L  to  the  positions  of  T 
that were occupied by  the  variables  shifted backward.  Notice 
that when U P D A T E - T S O R T ( T , X , ; U) terminates, the relative 
order  of the  variables  that  entered  into  L,  as  well  as  of those 
that  were  shifted  backward,  are  not  changed  in  the  revised 
topological  sort.  Figure  3  shows  a simple example. 

If  xRy  induces  new  equalities  (E  is  not  empty),  then  the 
variables  in  E,  together  with  those  possibly  represented  by 
them,  form  an  equivalence  class.  Step  9  collapses  the  ver­
tices  in  the  precedence graph G  of  
corresponding to  the 
variables  in  E  into  a  single  representative  vertex  ;r,  transfer­
ring  to  x  all  incoming  and  outgoing  edges  of  the  collapsed 
In  order  to  update  T,  we  need  now  to  reorder  the 
vertices. 
variables  from  
that  have  not  been 
collapsed.  These  variables  are  topologically  ordered  using 
G  by  step  11,  and  assigned  to  T  in  positions  from  
to 
Then,  steps  13  and  14 shrinks T by  shifting 
backward  the  variables  appearing  after  x  in  T,  starting  from 
position 
and with  a shift equal  to the num­
ber  of variables  (vertices)  eliminated  from 
Figure 4 gives  an  example  illustrating  steps  9-15. 

7UPDATE-TSORT is similar to a technique used by Marchetti el 
[1993]  in  the  context  of an  algorithm  for detecting  cycles  in  a 

ai 
DAG. 

Theorem  2 
0(n3) 
total 
ables. 

INCREMENTAL-PA-SOL 
time,  where  n 

in 
the  number  of  temporal  vari(cid:173)

I-PSOL 

solves 

is 

1286 

TEMPORAL  REASONING 

Figure  5:  Types 
new constraint x  <  y.  Directed  (undirected)  edges represent 
constraints 

-diamonds that can be generated in 

In the minimal CSP of 

for cases 

by the 

should be <, for cases (3)-(4) 

should be  

times for any input sequence.  

Proof (sketch).  Correctness  of  the  algorithm  follows  from 
Theorem  1  and the discussion in the description of the algo­
total time.  The 
rithm.  By Theorem 1  step 1  requires 
other most costly steps are 9,  11  requiring 
time. They 
are performed at most 
3.3  An Algorithm for I-PMIN 
The simple use of van Beek's (static) algorithm for PMIN  af­
ter each constraint assertion to solve I-PMIN  requires 
total time.  In this section we propose an algorithm for solv­
ing I-PMIN, I N C R E M E N T A L - P A - M I N, requiring  
total 
time. This is the best possible worst-case complexity bound. 
In order to maintain a CSP over PA  minimal when a new 
PA-constraint 
is  given,  in  addition  to  enforce  path-
consistency,  we  need  to  identify  and  remove  all  possibly 

-diamonds  that  are  generated  (see  Figure  5).  Since 

diamonds consist only of constraints of type  and 
a new constraint can generate additional 

clearly 
-diamonds only  if 
is the relation between x 

where 

and y in the minimal CSP of  

Let 

-constraints in 

sistent CSP  of 

be minimal CSP of ∑ i _ i, and  ∑i  of the path con­
(and 
then the new constraint and its propagation can gen­
It is easy to see that any new 

-diamonds in  must involve one of these new 

erate new 
possible 
constraints.  Hence,  in order to make 
minimal,  it suffices 
to identify and eliminate all diamonds involving one of these 
constraints. Figure 5 shows the only four possible types of 
diamonds that can be generated in 

by  the new constraint 
Note that cases (1) and (2) are symmetric and can be 

reduced to the same case (analogously for (3) and (4)). 

If 

(and 
cannot give rise to new 
-constraints, and hence in order to 
make  minimal, it suffices to identify and eliminate all new 
diamonds  involving   

then the propagation of  

Our algorithm for solving I-PMIN  is given  in  Figure 6.  It 
uses  a  modification  of IPC,  called  1PC-2,  which  like  IPC-I 
is  a revision  of IPC to  keep track of certain constraints gen­
erated  by  the  propagation  of xRy. 
IPC-2  adds  all  pairs  of 
variables  whose  relation  has  been  refined  to 
to  a  list 
L.  L  is  a  global  variable  that  is  initialized  by  steps  1-2  of 
INCREMENTAL-PA-MIN  to  the  list  containing  either  (x,y), 
(y, x)  or  no  pair.  A  pair  of  variables  is  added  to  L  by  the 
subroutine REVISE-2  of IPC-2,  a  modification  of REVISE  in 
which after step 4 we perform the following additional steps 
to update L: 

Theorem 3 I N C R E M E N T A L - P A - M IN  solves  I-PMIN  in 
0(n4) 
total  time,  where  n  is  the  number  of temporal  vari(cid:173)
ables. 
Proof (sketch).  Since  the  algorithm  eliminates  all  new 
diamonds, correctness follows from Theorem  1  and fact that 
any path consistent CSP over PA with no 
-diamond is mini­
mal [Gerevini and Schubert,  1995]  Complexity follows from 
Theorem 1  and the fact that the total number of pairs that can 
enter into L is  O(n 2).   

-translation  of 

over ORD-Horn  can  be  solved  in 

An  A l g o r i t hm  for  I-ISOL  over  O R D - H o rn 

3.4 
Gerevini  and  Cristani  [1997]  showed  that  ISOL  for  a  path 
consistent  CSP 
time by using a solution for the 
Figure 7 
gives an  algorithm solving I-ISOL  for  which exploits  this 
property and uses I N C R E M E N T A L - P A - S O L. Our algorithm 
requires 
total time,  while the application from sketch 
of a known static algorithm each time a new constraint is as­
serted requires 
total  time.  This cost can  be reduced 
to  0(n4)  total  time  by  using  IPC  combined with  Gerevini  & 
Cristani's algorithm,  which  is  still  one order worse than the 
complexity of the algorithm presented here. 

Our  algorithm  uses  a  modification  of IPC,  called  IPC-3, 
which again is a revision of IPC to keep track of certain con­
straints  generated by  the  propagation  of the  new  input con­
straint 
the 

Given  the path  consistent  C S P of  

 

TEMPORAL  REASONING 

1287 

 

complexity only for any subsequence of constraint assertions. 
E.g.,  consider  an  instance  of  the  fully-dynamic  version  of 
PMIN  in  which  we  have  k  retractions  during  an  input  se­
quence  of 
assertions.  When  we process a retraction, 
we can recompute from scratch the minimal labels, while as­
sertions  are  processed  using  our  algorithm.  The  total  time 
complexity is then 
which is still  more efficient than 
applying van Beek's static 

a l g o r i t h m t i m e s. 

While  in  this  paper  we  have  not  addressed  I-IMIN  for 
ORD-Horn,  very  recently we  have proved that this problem 
can be solved in 
total time.  Future work includes in­
cremental  algorithms for other tractable classes  [Krokhin  et 
al, to appear] and a deeper study of fully-dynamic problems. 
References 
[Allen,  1983]  J.F.Allen.  Maintaining knowledge about tem­
poral intervals. Comm. of the ACM, 26(l):832-843,1983. 
[Ausiello et ai,  1991]  G. Ausiello, G.  Italiano, A.Marchetti-
Spaccamela,  and  U.  Nanni. 
Incremental  algorithms  for 
minimal length paths. J. of Algorithms, 12:615-638,1991. 
[Bessiere,  1996]  C. Bessiere. A simple way to improve path-
consistency in Interval Algebra networks.  Proc.  of AAAI-
96,375-380,1996. 

[Cormen etal.,  1990]  T.  Cormen,  C.  Leiserson,  and  R. 
Rivest.  Introduction to Algorithms.  The MIT Press,  1990. 
Incremental  Tractable  Rea­
soning about Qualitative Temporal Constraints.  Technical 
Report, DEA, University of Brescia, Italy, 2003. 

[Gerevini, 2003]  A.  Gerevini. 

[Gerevini and Cristani,  1997]  A.  Gerevini  and  M.  Cristani. 
On  finding  solutions  in  temporal  constraint  networks. 
Proc.  of  IJCAl-97,  1460-1465,  1997. 

[Gerevini and Schubert,  1995]  A.  Gerevini and L.  Schubert. 
On computing the minimal labels in time point algebra net­
works.  Computational Intelligence,  11(3):443-448,  1995. 
[Krokhin et a/., to appear]  A.  Krokhin,  P.  Jeavons,  and 
P. Jonsson.  The Tractable Subalgebras of Allen's Interval 
Algebra. J. of ACM, to appear. 

[Ladkin and Maddux,  1988]  P. Ladkin, and R.Maddux.  On 

binary constraint networks.  TR, Kestrel Institute,  1988. 

[Ligozat,  1996]  G.  Ligozat.  A  new  proof of tractability  for 

ORD-Horn relations. Proc. of AAAI-96, 715-720, 1996. 

[Marchetti et a/.,  1993]  A. Marchetti-Spaccamela, U. Nanni, 
and H.  Rohert.  On-line graph algorithms for incremental 
compilation. LNCS 790, 113-151. Springer Verlag, 1993. 
[Montanari,  1974]  U.  Montanari.  Networks  of constraints: 
Fundamental  properties  and  applications  to  picture  pro­
cessing.  Information Science, 7(3):95-132,  1974. 

[Nebel and Burckert,  1995]  B. Nebel and H. Burckert.  Rea­
soning about temporal relations:  A maximal tractable sub­
class of Allen's interval algebra. J. of ACM, 42(1), 1995. 
[Tarjan,  1985]  R.E. Tarjan.  Amortized computational com­
plexity. SIAM J. of Alg. and Dis. Meth., 6:306-318, 1985. 
[van Beek, 1992]  P. van Beek.  Reasoning about qualitative 

temporal  information.  Artif  Intell,  58,  297-321,  1992. 

[Vilain and Kautz,  1986]  M.  Vilain  and  H.A.  Kautz.  Con­
straint  propagation  algorithms  for  temporal  reasoning. 
Proc.  ofAAAI-86,  377-382,1986. 

1288 

TEMPORAL  REASONING 

