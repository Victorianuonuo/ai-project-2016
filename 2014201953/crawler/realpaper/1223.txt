A  TASK-INDEPENDENT  EXPERIENCE-GATHERING  SCHEME  FOR  A  PROBLEM-SOLVER 

J.  R.  Q u i n l an 

Computer  S c i e n ce  Department 
C a r n e g i e - M e l l on  U n i v e r s i ty 

P i t t s b u r g h,  P e n n s y l v a n ia  U.S.A. 

i m p r o ve 

A  scheme 
i ts  p e r f o r m a n ce  w i th  e x p e r i e n ce 

A b s t r a c t. 
to 
l i n e d. 
f or  a  p a r t i c u l ar  p r o b l e m - s o l v i ng  p r o g r am 
Some 
t he  e f f e c t i v e n e ss  of 
scheme  a re 

f or  a l l o w i ng  a  p r o b l e m - s o l v er 
is  o u t(cid:173)
t he  scheme 

r e s u l ts  showing 
r e p o r t e d. 

A  more  c o m p l e te  d e f i n i t i on  of 

is  g i v e n. 
t he 

Key  Words. 
d e p t h - f i r s t,  c l a s s i f i c a t i on  of  o p e r a t o r s,  o r d e r i ng 
of  o p e r a t o r s. 

P r o b l e m - s o l v i n g,  h e u r i s t ic  s e a r c h, 

2. 

G i v en  a  p r o b l em 
p r o c e ed  as 
1. 

f o l l o w s: 

( s t a te  a , g o al  g,operators  R) 

r e p o rt  s u c(cid:173)

t he  d e s c r i p t i on  g, 

t h is  p r o b l e m.  O t h e r w i s e,  s e l e ct 
t he  o p e r a t o rs 

If  8  matches 
cess  on 
a  s u b s et  A  of  R; 
to  be 
If  A 
p r o b l e m.  O t h e r w i s e,  choose  an  o p e r a t or 
x  in  A  and  delete  x  from  A. 

f a i l u re  on 

t h e se  a re 

is  empty, 

r e p o rt 

t r i e d. 

t h is 

I n t r o d u c t i on 

It 

i t. 
is  n e c e s(cid:173)

to 
improvement 

is  n ot  at  a ll  c l e ar  how  a  p r o b l e m - s o l v er 
Improve 
to  s o l v e, 

it  s o l v e s,  or 

t h at  such 

if  p r o b l e m - s o l v e rs  a re  e v er 

i ts  p e r f o r m a n ce  as 
t he  p r o b l e ms  p r e s e n t ed 

It 
s h o u ld 
f a i ls 
is  c l e a r,  h o w e v e r, 
s a ry 
c e s s f u l ly  w i th  human  b e i n g s.  M o r e o v e r, 
provement  cannot  be 
r o te 
of 
human  b e i n g 's  a b i l i ty 
p r o b l e m s. 
been 
A l t h o u gh  d e t a i ls  a re  g i v en 
p r o b l e m - s o l v i ng  s y s t e m, 
a p p l i c a b le 

i m p l e m e n t ed  and 

r e s u l t s;  what 

r e s t r i c t ed 

is  needed 

t e s t ed 

t he  g e n e r al  p h i l o s o p hy 
to  most  d e p t h - f i r st  p r o b l e m - s o l v e r s. 

is  some  e q u i v a l e nt  of  a 
to  d e t e ct  a n a l o g i es  between 
t h at  has 

to  compete  s u c(cid:173)
i m(cid:173)
l e a r n i ng 

T h is  paper  o u t l i n es  one  scheme 

f a i r ly  e x t e n s i v e l y. 

f or  a  p a r t i c u l ar 

t he 

to 

is 

A  p r o b l e m, 

in 
state, 

t h is  c o n t e x t, 
a  goal  and  a 

is  a 

t r i p le  c o n(cid:173)

s et  of  operators, 

to  a  p r o b l em 

Each  o p e r a t or 

t he  g i v en  s t a te 

i n to  a n o t h er  s e t. 

is  some  o b j e c t:  a  w e l l - f o r m ed 

f o r m u l a,  a 
A  g o al  d e s c r i b es  some  h y p o(cid:173)

s i s t i ng  of  a 
A  s t a te 
p a t t e rn  or  somesuch. 
t h e t i c al  s t a te  or  s et  of  s t a t e s. 
maps  some  s et  of  s t a t es 
solution 
t h at  maps 
matches 
an  a l g e b r a ic  e x p r e s s i o n,  a  g o al  a n o t h er  a l g e b r a ic 
e x p r e s s i o n,  and 
e x p r e s s i o ns 
t i on  w o u ld 
t h at 
a l e n t. 
c l e a r ly 

f or  c h a n g i ng 
A  s o l u(cid:173)
t h en  be  a  s c h o o l b o y - t y pe  d e m o n s t r a t i on 

is  a  sequence  of  o p e r a t o rs 
t h at 
For  e x a m p l e,  a  s t a te  c o u ld  be 

T h is  d e f i n i t i on  of  p r o b l e ms  and  s o l u t i o ns 
i n c l u d es  h e u r i s t ic  s e a r ch  p r o b l e m s .1 

t he  s t a te  and  g o al  e x p r e s s i o ns  a re  e q u i v(cid:173)

i n to  e q u i v a l e nt  e x p r e s s i o n s. 

i n to  a n o t h er  s t a te 

t he  o p e r a t o rs 

t he  g o a l. 

r u l es 

A 

F i g u re  1  shows  a  p a r t i al  o u t l i ne  of  a  d e p t h-

f or 

f i n d i ng  s o l u t i o ns 

to  such  p r o b(cid:173)
a  s et  A  of 
is  s e l e c t e d,  one  or  more  of  w h i ch  may 
t he  o p e r(cid:173)
l e ad 

(s,g,R) 

Each  of 
to  a  s o l u t i on  or 

t r i ed  u n t il  one 
is  e x h a u s t e d.  Many  e s s e n t i al  mechanisms 
t h is  s k e l e t o n,  p r i n c i p a l ly 

f r om 

For  any 

( s u b ) p r o b l em 

to  a  s o l u t i o n. 
l e a ds 

f i r st  method 
l e m s. 
o p e r a t o rs 
h o p e f u l ly 
a t o rs 
is 
t he  s et 
have  been  o m i t t ed 
how 
p r o b l em 
what  happens  when  a  s u b p r o b l em 
v a ry 
c r i t i c al 
e x p e r i e n c e - g a t h e r i ng  scheme 
t h e ir 

t he  s et  of  o p e r a t o rs 

f r om  system 

f o r m. 

to 

is 

is 

t r i ed  when  an  o p e r a t or 

is  c h o s e n,  and 
These 

is  s o l v e d. 

t h ey  a re 
t he 
i n d e p e n d e nt  of 

to  s y s t e m,  a n d,  w h i le 

t he  p e r f o r m a n ce  of  any  s y s t e m, 

is  s e l e c t e d,  what  new 

- 1 9 3-

3.  A t t e m pt  a  new  p r o b l em  based  on 

t he  c u r r e nt 

p r o b l em  and  o p e r a t or  x. 
r e p o r t ed  on 
s t ep  2. 

f a i l u re 
t h is  new  p r o b l em  r e t u rn 

If 

is 
to 

F i g u re  1. 

S k e l e t on  of  d e p t h - f i r st  p r o b l e m - s o l v e r. 

Such  a  p r o b l e m - s o l v i ng  schema  c o u ld  make  use 

in  a  number  of  ways. 

The 

two  o b(cid:173)

t r y,  and 

t he  s e l e c t i on  of 

t he  s et 
to  choose  w h i ch  o p e r(cid:173)

to  g u i de 
to 
t ry  n e x t. 
t y p i c a l ly  p e r f o r m ed  by  some  a l g o(cid:173)
f l e x i b le 
to  a l l ow 
The  scheme  g i v en 

The  s e l e c t i on  of 

t he  s et 

of 
' e x p e r i e n c e* 
v i o us  ones  a re 
A  of  o p e r a t o rs 
a t or  x 
In  A 
to 
A,  h o w e v e r, 
is 
r i t hm  w h i ch 
is  n ot  s u f f i c i e n t ly 
m o d i f i c a t i on  by  e x p e r i e n c e . 13 
h e re 
o p e r a t or  x 
mined 
e s t i m a te  of  how 
l e ad 
to  a  s o l u t i on  of 
c h o o s i ng  an  o p e r a t or 
h i g h e st  w e i g ht  w i ll  be 

t h at 
t he  p r o b l em 
f r om  A, 
t r i ed 

is  based  on 

l i k e ly 

is 

it 

f r om  p a st  e x p e r i e n c e,  w h i ch  r e p r e s e n ts  an 

in  A  w i ll  be  a s s i g n ed  a  w e i g h t,  d e t e r(cid:173)

(8yg,R). 
t he  one  w i th 
f i r s t. 

t he  second  a l t e r n a t i v e. 

Each 

t r y i ng  x  w i ll 

When 

t he 

is 

The 

t h is  w e i g ht 

i n t e r e s t i ng 

t a sk  e n v i r o n m e n t, 
if  n ot 

f i r st  q u e s t i on 
from?  We  w o u ld 
in 

i s,  where 
l i ke 
to  have  w e i g h ts  a s s o(cid:173)
t he  c o n t e xt  of  p r o b l e m s. 
t he  o p e r a t or 
l a r g e, 
i n f i n i t e; 
it 
to  a s s o c i a te  a  w e i g ht  w i th 

to  come 
c i a t ed  w i th  o p e r a t o rs 
In  any 
and  p r o b l em  spaces  a re 
is  c l e a r ly 
i m p r a c t i c al 
e v e ry  p o s s i b le  o p e r a t o r - p r o b l em  p a i r. 
a d o p t ed  h e re 
to  c a t e g o r i ze  o p e r a t o r - p r o b l em 
p a i r s,  and  a s s o c i a te  a  w e i g ht  w i th  each  c l a s s. 
The  w e i g ht  a s s i g n ed  above 
t he 
w e i g ht  a s s o c i a t ed  w i th 
t he 
p a ir 
(x, 
f a l l s.  Whenever  a  p r o b l em  is 
s o l v e d, 
c l a s s es  w i ll  be  a d j u s t ed 
any  m i s t a k es 

t a b le  of  w e i g h ts  a s s o c i a t ed  w i th 

t he  o r d er  o p e r a t o rs  were 

t h en  be 
i n to  w h i ch 

t he 
to  c o r r e ct 

in  an  a t t e m pt 

t he  c l a ss 

to  x  w i ll 

(S,g,R)) 

t r i e d. 

t he 

in 

is 

The  way  out 

The  c r i t i c al 

to  e 

t he  p a ir 

a t i on  of 
a p p r o a ch  w o u ld  be 
to  a p p ly  a: 
domain  of 
x  w o u ld  advance  s 
measure  Q(y,z)  of 
g o al  2,  and 
t h at 
p o s s i b le  v a l u e s. 
(x,s,g,R)) 

f a c t or  h e re 
(x, 
(8,g,R)). 
to 

is 

t he  c l a s s i f i c(cid:173)
One  r e a s o n a b le 

l o ok  at  how  easy 

it  would  be 

t he  s t a te 
t he  o p e r a t o r ),  and  how  much 

to  g et 

( i . e ., 

t he 

i n to 
t he  use  of 

t o w a r ds  g. 
t he 
t h is  measure 

' s i m i l a r i t y. 

Suppose  we  had  a 

of  s t a te  y 
t o ok  on  one  of  n 

to 

Then 

by  examining  Q(s, 

t he  approach  would  c l a s s i fy 
'x  should  be  applio-

able')  and  Q(x(s),g)*. 
c a t e g o r i z a t i on  is  used; 
the  same  class 
f a ll 
s i m i l a r i t i es 
the  same 

i n to 

is 

In 

f a c t, 

the  simplest  such 
two  operator-problem  p a i rs 
i ff  each  of 
f or  both  p a i r s. 

the  above 

The  next  section  is  an  a m p l i f i c a t i on  of 

the 

t h is  system  it 

above  f or  the  Fortran  Deductive  System  (FDS).3,4,5 
For 
task-
independent  s i m i l a r i ty  measure,  and  thus  a  task-
independent  c l a s s i f i c a t i on  scheme. 

to  develop  a 

is  possible 

A  More  Detailed  Look 

At 

t h is  point 

to  discuss 
some  d e t a i ls  of  FDS  so  that  a  more  complete  t r e a t(cid:173)
ment  of 
system  can  be  given. 

the  experience-gathering  scheme 

it  becomes  necessary 

f or  t h is 

States  are  represented  as  trees  w i th  a  symbol 
at  each  node,  where  a  symbol  is  a  binary  or  unary 
connective, 
free  v a r i a b le  or  constant.  Each  pos(cid:173)
s i b le  node  p o s i t i on  on  such  a  tree  is  numbered  as 
f o l l o w s: 
the  tree  is  numbered  0,  and 
the  r i g ht  and  l e ft  successors  of  node  n  are  num(cid:173)
bered  2nc+l,  2n+2  r e s p e c t i v e l y.  Figure  2  shows  two 
states  w i th  the  number  of  each  node 
in  parentheses 
beside  the  symbol**. 

the  root  of 

Rewriting  rules 

take 

the 

form 

yi=z,  where  y 

and  z  are  s t a t e s.  A  r e w r i t i ng  r u le  informs  the 
system  that  any  instance  of  y  can  be  mapped  i n to 
the  corresponding  instance  of  z. 
Each  r e w r i t i ng 
r u le  defines  an  i n f i n i te  number  of  operators  of 
the  form 
whose  root 
above  operator  w i ll  be  w r i t t en  0[m>n]  . 

'use  r u le  number  m  to  r e w r i te  the  subtree 
The 

f or  any  non-negative  n. 

is  node  w1 

The  domain  of  an  operator  0[i,j]  can  be  des(cid:173)
f i g u re 

i l l u s t r a t ed 

in 

cribed  by  a  goal  G[isj]  as 
F i r s t,  a  r e w r i t i ng  r u le 
3. 

(number  t,  say) 

is 

that  state  l i es 

then  the  goal  which  is  s a t i s f i ed  by  a  state 
The 

in  the  domain  of 

0[i,2]. 
f i g u re  2  s a t i s f i es  G[i,2]\ 

the 

in 

given, 
i ff 
f i r st  state  8 
state 
0[i,2](s) 

i n to  which  0[i,2]  maps  8  is  shown. 

Let  8  be  a  s t a t e,  g  a  goal.  A  c o n d i t i on  (on 

a  node  rri) 

in  g 

is  satisfied  by  a 
i.  8  s a t i s f i es  a ll  conditions 

if 
in  g  on  nodes 

Figure  2.  Two  s t a t e s. 

ii. 

from  which  node  m  is  descended,  and 
8  has  the  property  required  by  the 
c o n d i t i o n. 

Goals  are  represented  as  s t r i n gs  of  condit(cid:173)

ions,  each  of  which 
the  symbol  q'  or 
be 
node  n  should  be  i d e n t i c al  to  the  subtree  whose 
root  is  node  m'.  Each  of 
the  above  is  c a l l ed  a 
c o n d i t i on  on  node  n. 

is  of 
'the  subtree  whose  root 

the  form 

'node  n  should 

is 

*8  may  not  be  in  the  domain  of  x. 
estimate  of  x(s) 

is  used. 

In  t h is  case  an 

**For 
the  examples  given  in  t h is  s e c t i o n, 
a t i on  of  elementary  algebra  w i ll  be  used. 

the  n o t(cid:173)

f i g u re  2 

The  f i r st  con(cid:173)

For  example,  consider  the  second  s t a te  of 
and  the  goal  G[i,2]  of  f i g u re  3. 
d i t i on  is  s a t i s f i e d,  since 
there  are  no  conditions 
on  antecedents  of  node  2  and  the  symbol  at  node  2 
f- '.  The  second  c o n d i t i on  is  not  s a t i s f i e d, 
is 
f or  although  i  above 
the 
symbol 
the  t h i rd  c o n d i t i on  is  not 
F i n a l l y, 
s a t i s f i e d,  even  though  the  subtree  whose  root  is 
node  13  is  i d e n t i c al 
is 
to  the  substate  whose  root 
node  5.  Requirement  i  above  is  not  met,  since  the 
second  c o n d i t i on  is  not  s a t i s f i ed  and  node  13  is  a 
descendant  of  node  6. 

t r u e,  node  6  is  not 

' + '. 

is 

The  d e f i n i t i on  of  s t a t e s,  goals  and  operators 

in  t h is  section  is  more  r e s t r i c t i ve 
responding  concepts  presented  in  the  i n t r o d u c t i o n; 
w i t h in  t h is  l i m i t ed  framework  we  can  define  a 

the  cor(cid:173)

than 

-194-

to  measure 

the  s i m i l a r(cid:173)

too  strong;  a ll  that  is  needed  f or 

f u n c t i on  Q(e3g) 
is 

reasonable 
i ty  of  state  s  to  goal  g.  A c t u a l l y, 
'measure* 
the  purpose  of  c l a s s i f i c a t i on  is 
Q(ab))  and  Q(o,d)  are  equal, 
states  are  equally  s i m i l ar 
to 
goals.  Such  an  i n d i c a t or  is  much  easier  to  devel(cid:173)
op  than  a  true  measure. 

i . e .,  whether  the  two 
t h e ir  respective 

to  know  whether 

the  word 

We  could  say  that 

are  equal 

if 

i.  goals  b  and  d  have  the  same  number  of  con(cid:173)

d i t i o n s,  and 
the  number  of  conditions  of  b  s a t i s f i ed  by  a 
the  number  of  conditions  of  d 
is  the  same  as 
s a t i s f i ed  by  c. 

i i, 

 

f it 

requirement 

This  does  not 
the  d e s c r i p t i on  of  s i m i l a r i ty 
given  in  the  i n t r o d u c t i o n,  since  there  is  an  i n(cid:173)
f i n i te  number  of  possible  values  of
Due 
to  the  way  FDS  is  set  up,  however,  goals  w i th  more 
than  f i ve  conditions  are  r a r e. 
t h i s, 
is  relaxed 
s i m i l ar  numbers  of  conditions  to  be  lumped  t o(cid:173)
gether,  and 
proportions  of  conditions  s a t i s f i e d. 
number  of  conditions 
s a t i s f i ed  by  s,  and  y  the  r a t io 
Values  1 
through  20  are  assigned  to  Q(s,g)   as  shown  in 
table  1.  Note  that  these  values  are  to  be  used 

to  specify  roughly  equal 
Let  x  be  the 

Taking  account  of 
to  allow  goals  w i th 

in  g,  n  the  number  of 

is  changed 

these 

ii 

i 

to  establish  equal  s i m i l a r i t y; 

only 
greater 
more  s i m i l ar  to  b  than  c  is 

than  Q(o,d) 

it  does  not 

to  d. 

if  Q(a,b) 

is 
f o l l ow  that  a  is 

Suppose  now  that  the  20X20  classes  of 

in 

to 

f a ll 

operator-problem  p a i rs  are  numbered  1  through  400. 
Two  p a i rs  are 
states  are  equally  s i m i l ar  to 
ing  the  operators,  and  the  r e s u l t i ng  states  are 
equally  s i m i l ar  to 
the  problem  goals.  P u t t i ng 
the  operator-problem  p a ir 
t h is  another  way, 
(0[i,j]j 
f a l ls  in  class 

t h e ir 
the  goals  of  apply(cid:173)

the  same  class 

(8,g,B)J 

i ff 

if  e  does  not  s a t i s fy  

where, 
a  synthetic  state  which  looks  l i ke 
using  o [ t , j] 
were  selected  to  solve  the  problem 
to  0[ijj)  would  be 
weight  assigned 
associated  w i th  the  above  c l a s s.  FDS  goes  one 

to  r e w r i te  some  s t a t e. 

(s,g,R), 
the  weight 

the  r e s u lt  of 

If  0[i,J] 

the 

is 

step  f u r t h e r; 
determining  a  f i n al  weight,  but 
t h is  process 

l i es  beyond  the  scope  of 

it  uses 

the  discussion  of 
t h is  paper. 

t h is  weight  as  a  base  f or 

The  experience-gathering, 

the  s o l u t i on  is  examined  to  see  whether  any 
' c o r r e c t'  one 
the  case, 

then,  consists  of 
adjusting  the  table  T  of  weights  associated  w i th 
the  classes.  When  a  problem  is  solved,  each  step 
of 
operators  were  t r i ed  before  the 
one  in  the  s o l u t i o n ). 
weights  associated  w i th 
the  i n c o r(cid:173)
rect  operators  are  decreased,  while  the  weight  as(cid:173)
sociated  with 
the  correct  operator  is 
increased. 

The  adjustment  formulae  appear  in  5. 

If 
the  classes  of 

the  class  of 

t h is 

the 

is 

(the 

This, 

Two  comments  ought  to  be  made  here.  F i r s t, 
the  s i m i l a r i ty 
is  defined 

the  c l a s s i f i c a t i on  r u le  uses  only 
measure  defined  above. 
in  terms  of  properties  shared  by  a ll  states  and 
goals  in  FDS. 
is 
is  de(cid:173)
fined  f or  any  problem  which  can  be  presented  to 
FDS.  Since  FDS  is  a  general-purpose  system, 
feature  was  a  c r i t i c al 
factor  in  the  design  of 
scheme. 

Thus  the  c l a s s i f i c a t i on  mechanism 

task-independent, 

in  the  sense 

in  t u r n, 

that 

it 

t h is 
the 

is 

f or  an  a r b i t(cid:173)

in  t h is  scheme, 

to  lead  to  a  s o l u t i o n. 

it  appropriate?  Saying  that 

The  second  comment  is  r e a l ly  a  query:  given 
the  c l a s s i f i c a t i on  is  defined 

two 
in  the  context  of  a  problem  f a ll  in  the 

that 
rary  problem, 
operators 
they 
same  class  is  asserting  t h a t, 
This  is 
are  equally  l i k e ly 
a  strong  statement. 
If  the  c l a s s i f i c a t i on  has  no 
connection  w i th  r e a l i t y,  adjusting  weights  assoc(cid:173)
iated  w i th  classes 
except  random  behavior.  On  the  other  hand, 
s i g n i f i c a nt 
the  c l a s s i f(cid:173)
i c a t i on  scheme  may  represent  a  useful  way  to  cat(cid:173)
egorize  operators  in  the  context  of  problems. 
question  of 
the  scheme 
best  answered, 
i ts  use. 

The 
is 
then,  by  examining  some  r e s u l ts  of 

the  appropriateness  of 

improvement  r e s u l ts 

to  produce  anything 

is  u n l i k e ly 

then 

if 

Results 

The  performance  of  FDS 

in  four  task  environ(cid:173)
ments  w i ll  be  summarized.  Each  of  these  consists 
of  an  ordered  set  or  block  of  problems 
to  be  s o l(cid:173)
ved  in  sequence. 
problems  are  theorems  to  be  proved.  A  b r i ef  des(cid:173)
c r i p t i on  of 
is  given  below;  a  complete 
d e f i n i t i on  appears 
have  been  presented  to  human  beings,  who  f i nd  them 
n o n - t r i v i a l .3 

in  5,6,  Some  of 

the  cases  the 

In  about  h a lf 

the  problems 

the  blocks 

I n i t i a l ly 

Block  5  contains 

f i f t e en  problems 

in  an  alge(cid:173)
to  flowchart  equivalence  developed 
(The  problems  are  taken  from  t h is 

bra  p e r t a i n i ng 
by  Sanderson.^ 
t h e s i s .) 
b u t,  as  each  theorem  is  proved, 
it  is  retained  as 
a  new  r e w r i t i ng  r u l e.  Figure  4  shows  the  given 
r u l e s, 
f i r st  theorem. 
sented 
than  as  t r e e s. 

in  conventional  bracketed  notation  rather 

the  theorems,  and  a  sample  proof  of  the 

For  convenience,  states  are  repre(cid:173)

twenty-six  r u l e s, 

there  are 

Block  A  consists  of  eighteen  theorems  of 

-195-

in  the  s o l u t i on  to 

the  number  of  states 
generated  while  searching 
solved  w i th  100%  e f f i c i e n c y, 
much  wrong  w i th  the  ordering  of  operators 
t r i a l! 
be 
block. 

the  average  efficiency  on 

For  a  block, 

f or  i t. 

the  performance  measure  w i ll 
that 

the  problems 

then  there  is  not 
f or 

the  number 
If  a  problem  is 

in 

The  f i r st  set  of  experiments 

is  designed 

to 

is 

to  improve 

Each  weight 

the  block  solved 

the  scheme  allows  FDS 

i n i t i a l i z ed  at  0.5  and 

demonstrate  that 
i ts  performance  on  a  given  block  of  problems. 
Successive  passes  are  made  through  the  block,  as 
f o l l o w s. 
in  sequence  w i th 
the  problems  of 
is  c a l(cid:173)
the  adjustment  of  weights  suppressed; 
led  pass  0, 
(The  average  e f f i c i e n cy  on  pass  0  rep(cid:173)
resents  the  performance  of  FDS  w i th  no  re-ordering 
of  selected  operators.)  Any  problems  retained  as 
rules  are  then  f o r g o t t e n,  and  pass  1  is  made  per(cid:173)
m i t t i ng  the  adjustment  of  weights.  Any  rules  kept 
are  again  discarded,  but 
weights  is  r e t a i n e d,  and  pass  2  is  made. 
above 
f i n i s h e d. 
Since  nothing  changes  between  passes  except 
the 
table  of  weights,  any  improvement  must  be  due  to 
the 

the  adjusted  table  of 
The 

is  repeated  u n t il  pass  10  is 

represented  by  t h is  t a b l e. 

'experience' 

t h is 

The  r e s u l ts  of 

t h is  set  of  experiments  are 

summarized  in  table  2.  Notice  t h a t,  even  w i th  no 

the  manipulation 
elementary  algebra  concerned  w i th 
of  binary  a d d i t i on  and  s u b t r a c t i o n. 
There  are  s ix 
rules  given  and,  as  before,  each  theorem  proved  is 
added 

the  l i st  of  r u l e s. 

to 

Block  H  is  composed  of 

t w e n t y - f i ve  problems 

l e x i c al  p a t t e rn  r e c o g n i t i on  in  a  generalized 
twenty 

found  in  Ledley^. 

There  are 

in 
form  of 
r u l es  defined 

that 

throughout. 

(who  only  t e ll 

Block  P  is  a  statement  of  a  well-known  puz(cid:173)
z l e.  A  philosopher  is  walking  in  a  land  peopled 
e x c l u s i v e ly  by  Goodies 
the  t r u t h) 
and  Baddies  (who  always  say  the  exact  opposite  of 
the  t r u t h ).  Coming  up  to  two  of  the  residents  of 
t h is  l a n d,  our  philosopher  asks 
l i b r a r y.  One  mutters  something  u n i n t e l l i g i b l e, 
and  the  other  says,  "He  says  east.  He's  a  Baddie." 
Which  way  should  the  philosopher  go? 
mulation  used 

there  are  eight  r e w r i t i ng  r u l e s. 

the  way  to 

In  the  f o r(cid:173)

the 

For  an  i n d i v i d u al  problem, 

the  performance  of 

FDS  w i ll  be  measured  by  efficiency, 

the  r a t io  of 

the  order 
to 

the  average  e f f i c i e n cy  on  each  block 
FDS  incorporates  a  powerful  a l g o(cid:173)

experience, 
is  q u i te  h i g h. 
r i t hm  f or  s e l e c t i ng  operators  and  screening  out 
in  which 
useless  ones,  and 
operators  gives  some  clue 
the  order  in  which 
they  ought  to  be  t r i e d.  The  o r d e r i n g,  and  hence 
the  e f f i c i e n c y,  s t i ll 
improves  s i g n i f i c a n t ly  on 
the  series  of  passes;  on  pass  10,  sixteen  of  the 
eighteen  problems  of  block  A  are  solved  w i th  100% 
e f f i c i e n c y.  Although  only  four  tasks  have  been 
explored  to  t h is  l e n g t h,  comparable 
improvements 
have  been  noted  in  a ll  the  dozen  or  so  tasks  p r e(cid:173)
sented  to  the  system. 

it  discovers 

But 

the  concept  of  experience 

is  stronger 

Solving  problems  in  some  area  should 

than  t h i s. 
allow  the  system  to  solve  new  problems  b e t t e r. 
other  words,  experience  should  be  t r a n s f e r a b le 
from  one  set  of  problems 
in  the 

to  another  set 

In 

-196-

2.  Ledley,  R.  Programming  and  Utilizing  Digital 

Computers.  McGraw-Hill,  New  York,  1962. 
3.  Quinlan,  J.  R.  and  Hunt,  E.  B.  A  formal 

deductive  problem-solving  system.  J.  ACM  15, 
4  (October  1968),  pp.  625-646. 

4. 

and 

.  The  Fortran  Deductive  System. 

Behavioral  Science, 

January  1969. 

5.  Quinlan,  J.  R.  An  experience-gathering 

problem-solving  system. 
(Ph.D. 
of  Washington,  May  1968. 

t h e s i s ),  Computer  Science  Group,  Univ. 

Technical  report 

6. 

.  Fortran  Deductive  System:  experiments 
w i th  two  implementations. 
Technical  r e p o r t, 
Computer  Science  Group,  Univ.  of  Washington, 
May  1968. 

7.  Sanderson,  J.  Theory  of  programming  languages. 

t h e s i s,  Univ.  of  Adelaide,  A u s t r a l i a, 

Ph.D. 
1966. 

f or 
the 

the  l a st 

t h is  turns  out 

same  task  environment.  Generally, 
to  be  the  case  w i th  t h is  scheme.  Consider, 
example, 
f i ve  problems  of  each  of 
blocks  S,  A  and  H;  c a ll  them  blocks  5 ',  A'  and  H'. 
We  w i ll  compare  the  average  e f f i c i e n cy  w i th  which 
FDS  solves  each  of  these  subblocks  using  two  d i f(cid:173)
ferent 
the  table  of  pass  0, 
and  E', 
these  problems  have  been 
block  a f t er  a ll  but 
solved.  Note  that 
these  tables  of  weights  contain 
no  experience  from  any  of  the  problems  in  the  sub-
blocks.  Table  3  shows  t h a t, 

that  obtained  during  pass  1  through  the 

tables  of  weights:  E, 

for  blocks  A  and  #, 

the  l a st 

In  t h is  case, 

from  the  preceeding  ones 

these 
is  very  s l i g h t. 

f i ve  problems  of  each 
l a st 

the  s o l u t i on  of 
For  block  S  the  improvement 

solving  a ll  but 
s i g n i f i c a n t ly  helps 
f i v e. 
The  l a st  f i ve  problems  of  block  S9  however,  are 
d i f f e r e nt 
two  S ' s ). 
ment  was  not  to  be  expected.  As  a  f u r t h er  t e s t,  a 
r e l a t i v e ly  d i f f i c u lt  algebra  problem  was  presented 
to  FDS.  With  no  experience,  the  system  (on  an  IBM 
7040-7094  DCS)  was  unable  to  solve  it 
in  an  hour. 
On  the  other  hand,  when  the  experience  from  block 
A  was  given  to  FDS, 
and  one  half  minutes. 

(they  a ll  have 
then,  a  notable  improve(cid:173)

it  found  a  s o l u t i on  in  f i ve 

Some  incomplete  experiments  have  been  made  to 

is 

t h is 

t r a n s f e r(cid:173)

form  of  experience 

from  one  set  of  problems 

to  another 
task,  but  from  task  to  task. 

test  whether 
able,  not 
w i t h in  the  same 
has  been  found  that 
that 
in  most  cases 
ant.  One  i n t e r e s t i ng  point  which  has  emerged  from 
these  experiments 
bine  tables  obtained  from  several 
leads 
s u l t i ng  synthetic 
formance  averaged  across  a ll 
the 

is  sometimes  u s e f u l,  but 
i n s i g n i f i c(cid:173)

to  b e t t er  per(cid:173)
the  tasks  than  any  of 

is  possible 
tasks; 

to  com(cid:173)
the  r e(cid:173)

improvement 

from  which 

i n d i v i d u al 

t h is 
the 

formed. 

tables 

it  was 

table 

is 

that 

it 

is 

It 

Conclusion 

it  seems 

On  the  basis  of  the  experiments  performed 
the  scheme, 

w i th 
This  is  encouraging  when  one  considers  the 
works. 
simple-mindedness  of 
the  approach.  While  it  could 
only  b e n e f it  from  a  more  powerful  measure  of  s i m i(cid:173)
l a r i t y, 
in 
the  context  of  problems  seems 

idea  of  c l a s s i f y i ng  operators 

to  be  appropriate. 

the  basic 

to  say 

that 

f a ir 

it 

References 

1.  Ernst,  G.  and  Newell,  A.  Generality  and  GPS. 
Technical  r e p o r t,  Carnegie  I n s t i t u te  of  Tech(cid:173)
nology,  January  1967. 

-197-

