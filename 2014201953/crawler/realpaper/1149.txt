Although  clustering  is  probably  the  most  fre-
quently  used  tool  for  data  mining  gene  expres-
sion data, existing clustering approaches face at 
least  one  of  the  following  problems  in  this  do-
main:  a  huge  number  of  variables  (genes)  as 
compared  to  the  number  of  samples,  high  noise 
levels,  the  inability  to  naturally  deal  with  over-
lapping  clusters,  the  instability  of  the  resulting 
clusters  w.r.t.  the  initialization  of  the  algorithm 
as  well  as  the  difficulty  in  clustering  genes  and 
samples  simultaneously.  In  this  paper  we  show 
that all of these problems can be elegantly dealt 
with  by  using  nonnegative  matrix  factorizations 
to  cluster  genes  and  samples  simultaneously 
while allowing for bicluster overlaps and by em-
ploying Positive Tensor Factorization to perform 
a two-way meta-clustering of the biclusters pro-
duced 
runs 
(thereby  addressing  the  above-mentioned  insta-
bility).  The  application  of  our  approach  to  a 
large lung cancer dataset proved computationally 
tractable and was able to recover the histological 
classification of the various cancer subtypes rep-
resented in the dataset. 

in  several  different  clustering 

The recent advent of high-throughput experimental data, 
especially in molecular biology and genomics, poses new 
challenges  to  existing  data  mining  tools.  Measuring  the 
expression  levels  of  virtually  every  gene  of  a  given  or-
ganism in a given state has become a routine procedure in 
many  research  labs  worldwide  and  has  also  reached  the 
commercial stage in the last decade. Such gene chips, or 
microarrays, could in principle be used to determine the 
variation in gene expression profiles responsible for com-
plex  diseases,  such  as  cancer.  However,  the  large  num-
bers  of  genes  involved  (up  to  a  few  tens  of  thousands) 
compared to the small number of samples (tens to a few 
hundreds), as well as the large experimental noise levels 
pose significant challenges to current data mining tools.

Moreover,  most  currently  used  clustering  algorithms 
produce non-overlapping  clusters,  which  represents  a 
serious limitation in this domain, since a gene is typically 

   

c

 

 

 

 

 

 

 

 

,(

 

 

 

 

 

 

 

 

 

X

sg

 

 

 

 

 

 

=)|

⋅
sc SA
cg

  

cgsX
)|

,(

involved in several biological processes. In this paper we 
make  the  biologically  plausible  simplifying  assumption 
that  the  overlap  of  influences  (biological  processes)  is 
additive
=

   (1) 
where Xsg is the expression level of gene g in data sample 
s, while X(s,g ⎢c) is the expression level of g in s due to 
biological  process  c.  We  also  assume  that  X(s,g ⎢c)  is 
multiplicatively  decomposable  into  the  expression  level 
Asc  of  the  biological  process  (cluster)  c  in  sample  s  and 
the membership degree Scg of gene g in c:
 

   (2) 
cgsX
Fuzzy k-means [Bezdek, 1981] or Nonnegative Matrix 
Factorization (NMF)  [Lee  and  Seung,  2001]  could  be 
used  to  produce  potentially  overlapping  clusters,  but 
these  approaches  are  affected  by  the  instability  of  the 
resulting clusters w.r.t. the initialization of the algorithm. 
This is not surprising if we adopt a unifying view of clus-
tering  as  a  constrained  optimization  problem,  since  the 
fitness landscape of such a complex problem may involve 
many  different  local  minima  into  which  the  algorithm 
may  get  caught  when  started  off  from  different  initial 
states. Although such an instability seems hard to avoid, 
we may be interested in the clusters that keep reappearing 
in  the  majority  of  the  runs  of  the  algorithm.  This  is  re-
lated  to  the  problem  of  combining  multiple  clustering 
systems,  which  is  the  unsupervised  analog  of  the  classi-
fier  combination  problem  but  involves  solving  an  addi-
tional  so-called  cluster  correspondence  problem,  which 
amounts  to  finding  the  best  matches  between  clusters 
generated in different runs. 

The cluster correspondence problem can also be cast as 
an  unsupervised  optimization  problem,  which  can  be 
solved  by  a  meta-clustering  algorithm.  Choosing  an  ap-
propriate meta-clustering algorithm for dealing with this 
problem crucially depends on the precise notion of clus-
ter correspondence.

Since a very strict notion of perfect one-to-one corre-
spondence between the clusters of each pair of clustering 
runs  may  be  too  tough  to  be  realized  in  most  practical 
cases,  we  could  look  for  clusters  that  are  most  similar
(although  not  necessarily  identical)  across  all  runs.  This 
is  closest  to  performing  something  similar  to  single-
linkage hierarchical clustering on the sets of clusters pro-

IJCAI-07

2651

duced  in  the  various  clustering  runs,  with  the  additional 
constraint of allowing in each meta-cluster no more than 
a single cluster from each individual run. Unfortunately, 
this  constraint  will  render  the  meta-clustering  algorithm 
highly  unstable.  Thus,  while  trying  to  address  the  insta-
bility  of  (object-level)  clustering  using  meta-level  clus-
tering,  we  end  up  with  instability  in  the  meta-clustering 
algorithm  itself.  Therefore,  a  “softer”  notion  of  cluster 
correspondence is needed. 

In a previous paper [Badea, 2005], we have shown that 
a generalization of NMF called Positive Tensor Factori-
zation  [Welling  and  Weber,  2001]  is  precisely  the  tool 
needed  for  meta-clustering  “soft”,  potentially  overlap-
ping biclusters  produced  in  different  clustering  runs  by 
fuzzy  k-means  or  NMF.  Here  we  demonstrate  that  this 
approach can be successfully used for biclustering a large 
lung cancer gene expression dataset. 

the  optimization  problem  (5),  (4)  is  non-convex.  In  par-
ticular,  the  NMF  algorithm  produces  different  factoriza-
tions (biclusters) (A(i),S(i)) for different initializations, so 
meta-clustering  the  resulting  “soft”  clusters  might  be 
needed to obtain a more stable set of clusters. However, 
using  a  “hard”  meta-clustering  algorithm  would  once 
again entail an unwanted instability.

In  this  paper  we  use  Positive  Tensor  Factorization 
(PTF)  as  a  “soft”  meta-clustering  approach  able  to  deal 
with biclusters. This not only alleviates the instability of 
a  “hard”  meta-clustering  algorithm,  but  also  produces  a 
“base” set of “bicluster prototypes”, out of which all bi-
clusters of all individual runs can be recomposed, despite 
the fact that they may not correspond to identically reoc-
curring clusters in all individual runs. 

Combining  (1)  and  (2)  leads  to  a  reformulation  of  our 
clustering  problem  as  a  nonnegative  factorization  of  the 
ns×ng  (samples  ×  genes)  gene  expression  matrix  X  as  a 
product of an ns×nc (samples × clusters) matrix A and an 
nc×ng (clusters × genes) matrix S:
 

   (3) 

        

≈

 

 

 

 

 

 

 

 

 

⋅

X

sg

A

sc

c

S

cg

 

 

 

 

 

Asc ≥ 0, Scg ≥ 0.   

with the additional nonnegativity constraints:
 

   (4) 
(Expression  levels  and  membership  degrees  cannot  be 
negative.)  More  formally,  this  can  be  cast  as  a  con-
strained optimization problem: 
1
=
2

SAX

SAX

   (5) 

SAC
,(

⋅−

⋅−

min

1
2

||
2
F

2
sg

=

||

)

 

 

 

 

 

 

 

 

 

 

gs
,

subject to the nonnegativity constraints (4), and could be 
solved using Lee and Seung’s seminal Nonnegative Ma-
trix  Factorization  (NMF) algorithm  [Lee  and  Seung, 
2001] (ε is a small regularization parameter): 
NMF(X, A0, S0) →→→→ (A,S)
A ← A0, S ← S0 (typically A0,S0 are initialized randomly) 
loop until convergence
⋅
XA
)
(
T
cg
⋅
⋅
SAA
)
T
cg
⋅
SX
T
)
(
⋅
⋅
SSA
T
)

ε+

ε+

A
sc

A
sc

←

←

S

S

(

(

cg

cg

sc

sc

As explained above, such a factorization can be viewed 
as a “soft” clustering algorithm allowing for overlapping
clusters, since we may have several significant Scg entries
on a given column g of S (so a gene g may “belong” to 
several clusters c).

Allowing  for  cluster  overlap  alleviates  but  does  not 
completely  eliminate  the  instability  of  clustering,  since 

g

 

 

 

 

⋅

i

r

i
)(

i
)(

S

S

≈

=

2
cg

X

A

   

    

We  use  NMF  for  object-level  clustering  and  PTF  for 
meta-clustering.  This  unified  approach  solves  in  an  ele-
gant  manner  both  the  clustering  and  the  cluster  corre-
spondence problem. More precisely, we first run NMF as 
object-level clustering r times: 
,...,1

   (6)
where X  is  the  gene  expression  matrix  to  be  factorized 
(samples × genes), A(i) (samples × clusters) and S(i) (clus-
ters × genes). 

positive 
.

diagonal  matrix  with 

To  allow  the  comparison  of  membership  degrees  Scg
for  different  clusters  c,  we  scale  the  rows  of  S(i)  to  unit 
norm by taking advantage of the scaling invariance of the 
above factorization (6): A ← A ⋅ D, S ← D−1⋅ S, where D
is 
elements 
d

a 
=
c
Next,  we  perform  meta-clustering  of  the  resulting  bi-
clusters  (A(i),  S(i)).  This  is  in  contrast  with  as  far  as  we 
know all existing meta-clustering approaches, which take 
only one dimension into account (either the object- or the 
sample  dimension).  Although  such  one-way  approaches 
work  well  in  many  cases,  they  will  fail  whenever  two 
clusters  correspond  to  very  similar  sets  of  genes,  while 
differing along the sample dimension.

In the following, we show that a slight generalization 
of  NMF,  namely  Positive  Tensor  Factorization  (PTF)
[Welling  and  Weber,  2001]  can  be  successfully  used  to 
perform two-way  meta-clustering,  taking  both  the  gene 
and the sample dimensions into account.

instead of the gene clusters

Naively, one would be tempted to try clustering the bi-
clusters1
, but this 
is practically infeasible in most real-life datasets because 
it involves factorizing a matrix of size r⋅ nc × ns⋅ ng. On
closer inspection, however, it turns out that it is not nec-
essary  to  construct  this  full-blown  matrix  –  actually  we 

A ⋅
i
)(
c

cS
)(i

i
)(
c

S

1

)(i

cA is the column c of A(i), while 

)(i

cS is the row c of S(i).

IJCAI-07

2652

)

(

(

)

g

 

 

 

 

 

 

 

⋅

⋅

⋅

⋅

ic

ic

sk

≈

≈

i
)(
ck

i
)(
cg

   

cn
=
k
1

cn
=
k
1

γβα
kg

are searching for a Positive Tensor Factorization of this 
matrix 2
⋅
sc S
A
i
)(

   (7) 
The indices in (7) have the following domains: s – sam-
ples, g – genes, c – clusters, k – metaclusters. To simplify 
the  notation,  we  merge  the  indices  i  and  c into  a  single 
index (ic):
⋅
S

 (7’) 
Note that β and γ are the “unified” versions of A(i) and S(i)
respectively. More precisely, the columns β⋅k of β and the 
corresponding rows γk⋅ of γ  make up a base set of biclus-
ter prototypes β⋅k⋅γk⋅ out of which all biclusters of all in-
dividual  runs  can  be  recomposed,  while  α  encodes  the 
(bi)cluster-metacluster correspondence.

γβα
kg

A
ics
(

Ideally (in case of a perfect one-to-one correspondence 
of biclusters across runs), we would expect the rows of α
to contain a single significant entry α(ic),m(i,c), so that each 
bicluster
corresponds  to  a  single  bicluster  proto-
type β⋅m(i,c)⋅γm(i,c)⋅ (where m(i,c) is a function of i and c):

A ⋅
i
)(
c

i
)(
c

  

S

sk

 

 

)

k

 

 

 

),

⋅

⋅

⋅

S

=

i
)(
c

β
⋅

α
(

cimic
),(

A
i
)(
c

γ
cim
),(

   (8) 
Additionally, each metacluster m should contain no more 
than a single bicluster from each run, i.e. there should be 
no significant entries 

mic ),"(α  with c'≠ c".

(α and

cim
),(

mic ),'

   

 

 

 

 

 

⋅

Although  it  could  be  easily  solved  by  a  hard  meta-
clustering  algorithm,  such  an  ideal  cluster  correspon-
dence  is  only  very  seldom  encountered  in  practice, 
mainly  due  to  the  instability  of  most  clustering  algo-
rithms.  Thus,  instead  of  such  a  perfect  correspondence 
(8), we settle for a weaker one (7’) in which the rows of 
αcan  contain  several  significant  entries,  so  that  all  bi-
are recovered as combinations of biclus-
clusters
ter prototypes β⋅k⋅γk⋅.
The  nonnegativity  constraints  of  PTF  meta-clustering 
are essential both for allowing the interpretation of β⋅k⋅γk.
as  bicluster  prototypes,  as  well  as  for  obtaining  sparse 
factorizations. (In practice, the rows of αtend to contain 
typically one or only very few significant entries.)

The  factorization  (7’)  can  be  computed  using  the  fol-

A ⋅
i
)(
c

i
)(
c

S

lowing multiplicative update rules: 

 

 

 

 

 

 

 

 

   (9)

αα
∗←

ββ
∗←

γγ
∗←

⋅

⋅

)]

γ
⋅
β
∗
S
)
)
(
T
γγββα
⋅
⋅
∗
)
(
T
T
γα
⋅
∗
S
T
)]
[
(
⋅
γγααβ
⋅
∗
(
)
T
T
⋅
β
⋅
S
A
T
T
)]
∗
⋅
)]
T
T

A
(
T
⋅
[(
A
⋅
[(
α
∗
[
γββαα
⋅
[(
T

(
)

)]

(

⋅

2 By solving the constrained optimization problem
2

min

C

γβα
),
,(

=

SA
i
)(
sc

i
)(
cg

−

γβα
kg

i
)(
ck

sk

1
2

⎛
⎜⎜
⎝

gsci
,,
,

n

c

=
1

k

 s.t. α,β,γ ≥0.

⎞
⎟⎟
⎠

where  ‘∗’  and  ‘−−’  denote  element-wise  multiplication 
and division of matrices, while ‘⋅’ is ordinary matrix mul-
tiplication.

After  convergence  of  the  PTF  update  rules,  we  make 
the  prototype  gene  clusters  directly  comparable  to  each 
other by normalizing the rows of γto unit norm, as well 
as  the  columns  of  α  such  that 
  (r  being  the 
number of runs) and then run NMF initialized with (β,γ)
to produce the final factorization X ≈ A⋅S.

(α

=

r

ci
,

ic

k

)

Before  addressing  real-world  gene  expression  datasets, 
we  evaluated  our  algorithm  on  synthetic  datasets  that 
match  as  closely  as  possible  real  microarray  data.  Clus-
ters  were  modelled  using  a  hidden-variable  graphical 
model,  in  which  each  hidden  variable  Ac  corresponds  to 
the cluster of genes influenced by Ac (clusters can over-
lap since an observable variable Xg can be influenced by 
several hidden variables Ac).

Since real-world microarray data are log-normally dis-
tributed,  we  sampled  the  hidden  variables  from  a  log2-
normal  distribution  with  parameters  μ=2, σ=0.5,  while 
the influence coefficients Scg between hidden and observ-
able variables were sampled from a uniform distribution 
over  the  interval  [1,2].  Finally,  we  added  log2-normally
distributed  noise  ε  with  parameters  μnoise=0, σnoise=0.5.
Thus we generated our data using the model X = A⋅S +ε.

We used nsamples=50, ngenes=100 and a number of genes 
(respectively  samples)  per  cluster  30  (respectively  15). 
We  compared  4  meta-clustering  algorithms  (fuzzy  k-
means, NMF, PTF and the best run3) over 10 object-level 
NMF  clustering  runs.  (Other  object  level  clustering 
methods perform very poorly and are not shown here).

Figures  1-3  below  present  a  comparison  of  the  meta-
clustering algorithms w.r.t. the number of clusters (rang-
ing from 2 to 16). The Figures depict average values over 
10  separate  runs  of  the  whole  algorithm  (with  different 
randomly  generated  clusters),  as  well  as  the  associated 
SEM  (Standard  Error  of  the  Mean)  bars.  Note  that  al-
though  all  algorithms  produce  quite  low  relative  er-
(under  16%)4,  they  behave  quite 
rors
differently when it comes to recovering the original clus-
ters. In a certain way, the match of the recovered clusters 
with the original ones is more important than the relative 
error  (see  [Badea,  2005]  for  the  definition  of  the  match
between two sets of possibly overlapping clusters).

Figure 2 shows that PTF consistently outperforms the 
other  meta-clustering  algorithms  in  terms  of  recovering 
the original clusters. Note that since clusters were gener-
ated randomly, their overlap increases with their number, 

⋅−
SAX

=ε
rel

||/||

X

||

||

3 i.e. the one with the smallest relative error. 
4 Except for fuzzy k-means which misbehaves for large numbers of 
clusters.

IJCAI-07

2653

so it is increasingly difficult for the meta-clustering algo-
rithm  to  discern  between  them,  leading  to  a  decreasing 
match.

Among  all  object-level  clustering  algorithms  tried  (k-
means,  fuzzy  k-means  and  NMF),  only  NMF  behaves 
consistently well. The conceptual elegance of the combi-
nation  of  NMF  as  object-level  clustering  and  PTF  as 
meta-clustering thus pays off in terms of performance. 

Figure 1. Relative errors versus number of clusters

Figure 2. Mean match versus number of clusters

This can be directly seen in Figure 3, where we depict 
both  the  cluster  overlaps  (in  the  initial  data)  and  the 
matches of the recovered clusters with the original ones. 
The  inverse  correlation  between  bicluster  overlap  and 
matches is obvious (Pearson correlation -0.92). 

We applied our meta-clustering approach to a large lung 
cancer  microarray  dataset  available  from  the  Meyerson 
lab  at  Harvard.  Using  HG-U95Av2  Affymetrix  oligonu-
cleotide  microarrays,  Bhattacharjee  et  al.  [2001]  have 
measured mRNA expression levels of 12600 genes in 186 
lung tumor samples (139 adenocarcinomas, 21 squamous 
cell  lung  carcinomas,  6  small  cell  lung  cancers,  20  pul-
monary  carcinoids)  and  17  normal  lung  samples  (203 
samples  in  total).  Whereas  the  non-adeno  classes  are 
more  or  less  well  defined  histologically,  adenocarcino-
mas  are  very  heterogeneous,  with  poorly  defined  histo-
logical  and  molecular  level  sub-classifications,  despite 
the large variability in survival times and responsiveness 
to medication. Therefore, we applied our algorithm to the 
full dataset and used the histological classification of the 
non-adeno samples (provided in the supplementary mate-
rial  to  the  original  paper)  as  a  gold  standard  for  the 
evaluation of the biclustering results. 

To eliminate the bias towards genes with high expres-
sion  values,  the  gene  expression  matrix  was  normalized 
by separate scalings of the genes to equalize their norms.5
Although  nonnegative  factorizations  have  the  advan-
tage  of  obtaining  sparse  and  easily  interpretable  decom-
positions,  they  cannot  directly  account  for  gene  down-
regulation. To deal with gene down-regulation in the con-
text  of  NMF,  we  extended  the  gene  expression  matrix 
with new “down-regulated genes” g’ = pos(mean(gnormal)
− g)
the  original  genes  g, where
mean(gnormal) is the average of the gene over the normal
samples, while pos(⋅) is the Heaviside step function. 

associated 

to 

To avoid overfitting, we estimated the number of clus-
ters nc  as  the  number  of  dimensions  around  which  the 
change in relative error dε/dnc of the factorization of the 
real  data  “reaches  from  above”  the  change  in  relative 
error obtained for a randomized dataset (similar to [Kim 
and Tidor, 2003]). 

We then used our metaclustering algorithm to factorize 
the  extended  gene  expression  matrix  X  by  running  PTF 
over  20  NMF  runs  with  the  number  of  clusters  deter-
mined above (nc=10). (The matrix X has 203 rows (sam-
ples) and 2×3529=7058 columns (extended genes).) Fig-
ure  4  shows  the  resulting  sample  cluster  matrix A.  Note 
that  the  algorithm  has  recovered  the  non-adeno  sample 
clusters with high accuracy, despite the very large num-
ber of variables (genes), many of these potentially irrele-

Figure 3. Overlaps and matches are inversely correlated

5 Genes with nearly constant and very low expression values (aver-
age expression levels<30 and STD<50) had been discarded, leav-
ing 3529 genes that are expressed in the lung cancer samples. 

IJCAI-07

2654

to 

the  diagonal  of  A  correspond 

vant in this problem. More precisely, the clusters 6, 7, 8 
on 
the  classes 
‘squamous’, ‘small cell’ and ‘normal’ respectively, while 
clusters 9 and 10 are two subtypes of carcinoids (which, 
like  adenos,  are  heterogeneous  and  form  two  partially 
overlapping  clusters).  Note  that  unlike  most  clustering 
methods,  our  approach  allows  for  overlapping  clusters. 
The accuracy of the sample cluster overlaps can be tested 
for  example  in  the  case  of  the  samples  AD341,  AD275, 
AD234  and  AD241,  which  were  classified  by  histo-
pathologists  as  adeno-squamous  and  also  appear  in  the 
overlap  of  our  ‘squamous’  cluster  with  other  ‘adeno’ 
clusters. Similarly, the overlap between the small cell and 
squamous  sample  clusters  corresponds  to  mixed  small 
cell-squamous  cases,  which  are  mentioned  in  the  litera-
ture.

AD259
AD375
AD122
AD269
AD370
AD127
AD123
AD234
AD119
AD177
AD1
AD266
AD311
AD253
AD323
AD334
AD18
AD346
AD305
AD120
AD367
AD115
AD252
AD330
AD3
AD15
AD208
AD276
AD185
AD201
AD239
AD366
AD170
AD178
AD331
AD183
AD362
AD327
AD224
AD332
AD318
AD250
AD213
AD188
AD249
AD207
AD169
AD114
AD236
AD268
AD111
AD277
AD267
AD374
AD287
AD275
AD164
AD383
AD295
AD118
AD283
AD296
AD352
AD315
NL268
AD382
AD360
AD335
AD225
AD31
AD157
AD294
AD313
AD212
AD210
AD158
AD337
AD187
AD336
AD136
AD308
AD255
AD162
AD355
AD261
AD302
AD10
AD130
AD16
AD247
AD361
AD304
AD260
AD172
AD238
AD19
AD258
AD179
AD167
AD240
AD173
AD309
AD228
AD203
AD347
AD350
AD7
AD218
AD5
AD320
AD340
AD43
AD384
AD202
COID4518
COID14
AD338
AD226
AD221
AD285
AD314
AD351
AD379
AD353
AD368
AD241
AD163
AD243
AD232
AD341
SQ1670
SQ5
SQ20
SQ2557
SQ13
SQ2921
SQ4389
SQ4172
SQ7324
SQ3197
SQ3624
SQ14
SQ1174
SQ8
SQ4
SQ3529
SQ2572
SQ6147
AD230
SMCL8
SQ6
SMCL4
SMCL301
SMCL9
SQ10
SMCL5937
AD131
AD186
AD301
SQ5897
AD2
SMCL3
AD159
AD299
NL6943
NL3104
NL3681
NL2562
NL4353
NL6853
NL1179
NL1884
NL1675
AD363
NL4083
NL6084
NL2378
NL1698
NL279
NL504
NL7530
AD356
AD4
AD317
AD262
COID4
COID9
COID3
COID18
COID3580
COID1429
COID11
COID6
COID7
COID16
COID12
COID5
COID4385
COID13
COID2260
COID9794
COID10
COID8

4

5

1

2

7

6

9

8

3

10

63 
123
8
70 
121
10 
9
49 
6
25 
133
67 
87 
60 
94 
99 
131
106
84 
7
119
4
59 
96 
136
129
37 
72 
29 
33 
52 
118
22 
26 
97 
28 
116
95 
43 
98 
92 
58 
40 
32 
57 
36 
21 
3
50 
69 
2
73 
68 
122
76 
71 
19 
126
78 
5
74 
79 
110
90 
146
125
114
100
44 
135
14 
77 
88 
39 
38 
15 
102
31 
101
13 
85 
61 
17 
112
65 
82 
128
11 
130
56 
115
83 
64 
23 
51 
132
62 
27 
20 
53 
24 
86 
46 
35 
107
108
139
41 
138
93 
104
1
127
34 
188
194
103
45 
42 
75 
89 
109
124
111
120
54 
18 
55 
48 
105
164
181
179
165
177
167
172
171
175
168
170
178
163
183
180
169
166
174
47 
161
182
160
157
162
176
158
12 
30 
81 
173
134
159
16 
80 
155
148
149
145
151
154
140
143
141
117
150
153
144
142
147
152
156
113
137
91 
66 
198
203
197
196
186
184
191
200
201
195
192
199
187
193
185
189
190
202

0.35

0.3

0.25

0.2

0.15

0.1

0.05

0

6

5

4

3

2

1

0

Figure 4. The sample clusters (matrix A – normalized columns) 
The gene clusters S recovered genes with well known 
involvement in the lung cancer subtypes under study. For 
example, the squamous cluster contained numerous kera-
tin genes (keratins 6A, 5, 17, 14, 13, 16, 19), typical for 
squamous  differentiation,  the  keratinocyte-specific  pro-
tein  stratifin,  the  p53  tumor  suppressor  analog  TP73L, 
etc. More details on the gene clusters and a larger version 
of Figure 4 can be found in the supplementary material at 
http://www.ai.ici.ro/ijcai07/.  (Note  that  genes  with  large 
Scg  tend  to  be  differentially  expressed  between  the 
classes,  although  the  class  information  was  never  pro-
vided to the algorithm.) 

The Table below shows the relative reconstruction er-
rors ε=  ||X−A⋅S||F /  ||X||F  for  k-means,  fuzzy  k-means,6
NMF and PTF (we display the mean, STD and min errors 
for  20  clustering  runs  of  each  algorithm  and  clustering 
dimensions 5, 10, 14 and 20). PTF meta-clustering exhib-
its  slightly  smaller  relative  errors  than  the  best  runs  of 
k-means, fuzzy k-means and NMF, and the improvement 
also increases slightly with the number of clusters. 
NMF
best
run

k-means
best run

mean(STD)

mean(STD)

mean(STD)

k-means

NMF

PTF

nc

5

fcm

fcm
best
run
0.4459
(0.0007) 0.4451
0.4219
(0.0017) 0.4184
0.4111
(0.0025) 0.4068
0.3978
(0.0039) 0.3895

20

14

10

0.3936

0.4104

0.4196

0.4445

0.4460
(0.0010)
0.4247
(0.0030)
0.4151
(0.0035)
0.4002
(0.0045)

0.4408
(0.0004) 0.44060.4406
0.4062
(0.0005) 0.40560.4052
0.3866
(0.0009) 0.38550.3849
0.3642
(0.0006) 0.3634 0.362
Fuzzy k-means clustering required a very delicate fine-
tuning  of  the  fuzzy  exponent  for  obtaining  non-trivial 
clusters:  we  used  a  fuzzy  exponent  of  1.1,  whereas  a 
slightly higher value of 1.15 produced only trivial, non-
informative clusters. However, such a small fuzzy expo-
nent  leads  to  very  categorical  membership  degrees  even 
for very small differences in distance between gene pro-
files, so the results are similar to those of hard clustering 
(plain  k-means).  This  is  probably  due  to  the  different 
interpretations  of  cluster  overlap  in  fuzzy  k-means  and 
NMF  respectively:  whereas  fuzzy  k-means  views  over-
laps in terms of membership degrees, NMF and PTF in-
terpret overlaps as mixtures (as in the case of the adeno-
squamous  samples  –  see  also  assumptions  (1)  and  (2) 
above).

However, much more important than a small improve-
ment in error is the stability of the resulting clusters. All 
studied methods recovered the non-adeno sample clusters 
satisfactorily (with differences in the adeno clusters that 
cannot be judged based on current histological evidence). 
To study the variability of the gene clusters S in different 
runs of each algorithm, we computed the average relative 
differences  ||Si−Sj||/||Si||  between  pairs  of  gene  cluster 
matrices Si  obtained  in  20  different  runs  (of  each  algo-
rithm)  for  nc=10  clusters,  as  well  as  the  corresponding 
mismatches  between  gene  clusters  matrices.  We  display 
the  cluster  mismatches  for  progressively  larger  cutoff 
thresholds7 to show that the differences between clusters 
obtained in different runs involve not just the small, but 
also the large coefficients of S.

6 For both plain and fuzzy k-means, A is constructed from the clus-
ter membership function, while S is given by the cluster centers. 
7  Cluster  membership  degrees  Scg were  considered  significant  if 
,  2θ0g  and  3θ0g  respec-
they  exceeded  the  thresholds
tively. Note that the rows of S are normalized to unit norm. 

0 =θ

n/1

g

g

IJCAI-07

2655

k-means

mean(STD)

Fcm

mean(STD)

NMF

mean(STD)

best NMF 
mean(STD)

PTF

mean(STD)

0.1755
(0.0238)

0.7121
(0.1658)

0.0165
(0.0080)

0.0269
(0.0130)

0.1730
(0.0204)

0.0748
(0.0225)

0.1457
(0.0296)

0.0747
(0.0433)

0.1591
(0.0939)

0.0354
(0.0167)

0.0803
(0.0265)

0.3117
(0.0599)

0.2720
(0.0579)

0.1354
(0.0987)

0.3345
(0.0973)

relative
differ-
ence
 mis-
match
S>θ0g
 mis-
match
S>2θ0g
 mis-
match
S>3θ0g
As  the  inter-run  variability  of  S  is  quite  large  for  all 
clustering methods tried8, except PTF (e.g. 31% for NMF 
with nc=10),  using  such  clustering  algorithms  for  deter-
mining  gene  clusters  is  highly  unreliable.  On  the  other 
hand,  PTF  is  preferable  to  the  other  methods  due  to  its 
increased stability (only about 3% variability of S).

0.1397
(0.0836)

0.3215
(0.1863)

0.3059
(0.0885)

0.1228
(0.0738)

0.0283
(0.0130)

Moreover, PTF is preferable to fuzzy k-means in clus-
tering gene expression data since it is able to reconstruct 
gene  profiles  of  samples  that  represent  mixtures  of  fre-
quently  occurring  profiles.  For  example,  the  Meyerson 
dataset studied here contains numerous samples with ex-
pression  profiles  similar  to  a  squamous  profile  SQ,  as 
well as other samples with a different, adeno profile AD 
(by a gene expression profile we mean a set of gene ex-
pression values for all genes represented on the microar-
ray chip). These two different sample groups will lead to 
two  distinct  columns  of  A  representing  the  SQ  and  AD 
profiles.  However,  the  Meyerson  dataset  also  contains 
adeno-squamous samples with a mixed AD + SQ profile, 
which  can  be  easily  represented  by  NMF  and  PTF  fac-
torizations, but not by fuzzy or plain k-means. 

A detailed review of the clustering methods applicable to 
gene expression data is out of the scope of this paper, due 
to space constraints. Briefly, our approach is significantly 
different  from  other  biclustering  approaches,  such  as 
Cheng and Church’s [Cheng and Church, 2000], which is 
based  on  a  simpler  additive  model  that  is  not  scale  in-
variant (and thus problematic in the case of gene expres-
sion data). On the other hand, approaches based on singu-
lar value decompositions, or the Iterative Signature Algo-
rithm  [Bergmann  et  al.,  2003],  tend  to  produce  holistic 
decompositions as opposed to the more parts-based ones 
obtained  here  (holistic  decompositions  being  typically 
hard to interpret in this domain). Closest to our approach 
are [Kim and Tidor, 2003] and [Brunet et al., 2004]. Kim 
and  Tidor  [2003]  used  NMF  decompositions  for  analyz-
ing  a  yeast  gene  expression  compendium,  but  their  ap-
proach  still  suffers  from  the  instability  of  NMF.  On  the 
other  hand,  Brunet  et  al.  [2004]  used  NMF  for  non-

8 It also increases with the number of clusters (results not shown). 

overlapping  iterative  clustering  of  samples,  rather  than 
biclustering as we do.

In this paper we show that nonnegative decompositions 
such as NMF and PTF can be combined in a non-trivial 
way to obtain an improved meta-clustering algorithm for 
gene  expression  data.  The  approach  deals  with  overlap-
ping  clusters  and  alleviates  the  annoying  instability  of 
currently used algorithms by using an advanced two-way 
meta-clustering  technique  based  on  tensor  (rather  than 
matrix) factorizations.

It  is  encouraging  that  PTF  recovers  the  main  known 
lung  cancer  subtypes,  including  subtle  classifications  of 
certain samples in overlapping classes (adeno-squamous), 
in a large dataset in which 70% of the samples represent 
the poorly characterized adenocarcinoma.

And  although  the  improvements  in  error  obtained  by 
PTF  are  only  marginal,  it  leads  to  increased  stability  of 
the gene clusters (which are extremely important for de-
termining the genes causing the disease). Moreover, PTF 
proves more adequate in this domain than other methods 
like  fuzzy  k-means,  due  to  its  interpretation  of  cluster 
overlaps  as  mixtures,  fuzzy  k-means  being  extremely 
sensitive to minute changes in the fuzzy exponent. 

[Badea,  2005]  Badea  L.  Clustering  and  metaclustering 
with  Nonnegative  Matrix  Decomposition.  Proc.
ECML-05, LNAI 3720, pp. 10-22. 

[Lee and Seung, 2001] Lee D.D., H.S. Seung. Algorithms 
factorization.  Proc.

for 
non-negative  matrix 
NIPS*2000, MIT Press, 2001. 

[Welling and Weber, 2001] Welling M., Weber M. Posi-
tive  tensor  factorization.  Pattern  Recognition  Letters
22(12): 1255-1261.

[Bezdek,  1981]  Bezdek  J.C.  Pattern  Recognition  with 
Fuzzy  Objective  Function  Algorithms.  Plenum  Press, 
1981.

[Cheng  and  Church,  2000]  Cheng  Y.  Church  G.  Biclus-

tering of expression data. Proc. ISMB-2000, 93-103.

[Bhattacharjee et al., 2001] Bhattacharjee et al. Classifi-
cation  of  human  lung  carcinomas  by  mRNA  expres-
sion  profiling  reveals  distinct  adenocarcinoma  sub-
classes. PNAS 2001 Nov. 20;98(24):13790-5. 

[Kim  and  Tidor,  2003]  Kim  P.M.,  Tidor  B.  Subsystem 
identification  through  dimensionality  reduction  of 
large-scale  gene  expression  data.  Genome  Research
2003 Jul;13(7):1706-18. 

[Brunet  et  al.,  2004]  Brunet  J.P.  et  al.  Metagenes  and 
molecular  pattern  discovery  using  matrix  factoriza-
tion. PNAS 101(12):4164-9, 2004. 

[Bergmann et al., 2003] Bergmann S, et al. Iterative sig-
nature  algorithm  for  the  analysis  of  large-scale  gene 
expression data. Phys. Rev. E.  Mar. 2003; 67. 

IJCAI-07

2656

