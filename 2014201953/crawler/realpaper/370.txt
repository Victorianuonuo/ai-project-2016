218 

Session No.  6 Analysis of Human Behaviour 

I.  THE  TASK  AND  PROTOCOL  ANALYSIS. 

A  doetoral  student  in  psychology  silently  reads 
to  himself  the  following  instructions  on 
Guilford's 

(14)  Block  Visualization  Test  (BVT): 

"In  this  test  you  will  read  a  des(cid:173)
cription  of  a  solid  unpainted  block 
and  the  manner  in  which  it  is  painted 
and  then  cut  into  parts.  You  are  to 
visualize  the  block,  and  solve  the 
problems  by  trying  to  imagine  how  the 
blocks  look  before  and  after  they  are 
cut  up  into  parts.  Do  not  make  any 
drawings  on  the  test  page". 

S  then  turns  on  the  tape  recorder  and  looks  at 
the  f i r st  test  page.  On  it  are  four  problems, 
each  followed  by  three  or  four  test  questions. 
He  reads  and  thinks  out loud  for  the  duration  of 
the  test  and,  in  a l l,  produces  a  l i t t le  over  12 
minutes  of  continuous  verbal  behavior.* 
The 
transcribed  verbal  protocol  constitutes  the  data 
from  which  the  program  was  constructed.  Parts 
of  it  --  Problems  BVT  #1  and  #2  with  their  f i r st 
test  questions  --  are  reproduced  along  the  left 
side  of  FIGURE  3  in  the  APPENDIX. 
further,  the  reader  is  encouraged  to  turn  to 
FIGURE  3  and  to  try  the  two  problems  for  him(cid:173)
self.) 

(Before  going 

Following  data  analysis  techniques  largely  de(cid:173)
veloped  by  Newell  (21,23)  (see  also  Eastman  (9) 
for  an  interesting  application  of  this  methodo(cid:173)
logy)!  this  protocol  has  been  extensively  ana(cid:173)
lyzed  in  Baylor  (1),  which  see.  Only  the  main 
results  w i ll  be  summarized  here. 

First,  the  protocol  lent 
i t s e lf  to  the  definition 
of  two  problem  spaces  --  an  image  (I-Space)  and 
a  symbolic  space  (S-Space)  --  corresponding  to 
what  could  be  inferred  from  the  protocol  about 
the  internal  representations  and  processes  S 
employs  on  the  BVT. 

*  This  is  not  the  place  to  enter  into  a  dis(cid:173)
cussion  of  the  methodology  of  protocol  collection; 
indeed,  de  Groot  (6,7)  has  already  done  that. 
In 
collecting  this  kind  of  data,  suffice  it  to  em(cid:173)
phasize  here  the  importance  of  a  co-operative 
subject  who  is  experienced  at  delivering  verbal 
protocols  of  his  thought  processes. 

PROGRAM AND PROTOCOL ANALYSIS ON 

A MENTTAL  IMAGERY TASK 

George  W.  Baylor 

Institut  de  Psychologie 
Universite  de  Montreal 
Montreal,  Quebec,  Canada 

ABSTRACT 

This  paper  presents  a  LISP  1.5  program  and  parts 
of  a  protocol  analysis  that  model  aspects  of  the 
behavior  on  one  adult  subject  (S)  solving  a  set 
of  Guilford's  block  visualization  problems.  The 
model  derives  from  a  detailed  analysis  of  S's 
thinking  aloud  protocol  on  four  of  these  pro(cid:173)
blems.  Two  problem  spaces  are  postulated  to 
for  S's  internal  representation  of  the 
account 
task.  Nine  operators,  evoked  by  a  production 
system  cum  goal  stack,  are  used  to  describe  his 
encoding  and  problem  solving.  The  program  lags 
the  protocol  analysis: 
It  respects  the  two  pro(cid:173)
blem  spaces  but  incorporates  only  five  of  the 
nine  operators,  and  these  are  evoked  by  hand. 
The  principal  problem-solving  operators  in  the 
image  space,  Process  Block  and  Tally,  both  pro(cid:173)
grammed,  are  described,  and  the  behavior  they 
generate  is  put  in  correspondence  with,  and 
serves  as  a  set  of  psychological  hypotheses  for, 
S's  behavior.  Their  plausibility  rests  primari(cid:173)
ly  on  the  closeness  of  simulation  to  S's  per(cid:173)
formance,  while  their  generality  has  scarcely 
been  tested. 

INTRODUCTION 

This  paper  introduces  a  LISP  1.5  computer  pro(cid:173)
gram  and  a  collateral  protocol  analysis  that  mo(cid:173)
del  aspects  of  the  behavior  of  one  adult  subject 
(S)  solving  some  problems  from  one  of  Guilford's 
(14) 
intelligence  tests,  Spatial  Visualization  II. 
The  goal  of  this  research  is  to  try  to  demonstra(cid:173)
te  the  role  of  visual  mental  imagery  in  the  human 
problem-solving  process.  The  particular  task 
chosen  --  a  Block  Visualization  Test  (BVT)  with 
visualization  instructions  --  apparently  obliges 
Ss  to  construct  visual  mental  images  (from  mem(cid:173)
ory) in  order  to  be  able  to  represent  and  solve 
the  verbally  presented  problems. 

The  program  derives,  indeed  was  constructed  from, 
the  detailed  analysis  of  S's  12-minute  thinking 
aloud  protocol.  Thus,  the  f i r st  part  of  this 
paper  presents  the  task  and  principal  results  of 
the  protocol  analysis.  Then  the  program  i t s e lf 
f i r s t,  its  way  of  representing 
is  introduced: 
mental  images  and  other  non-imagerial,  factual 
information;  second,  its  performance  on  two  test 
questions,  which  is  compared  and  contrasted  with 
some  stretches  of  the  protocol  data  it  is  in(cid:173)
tended  to  simulate.  Finally,  some  general  con(cid:173)
clusions,  psychological  hypotheses,  and  directions 
for  future  work  are  proposed. 

Session No.  6  Analysis of Human Behaviour 

219 

Next,  the  elements  of  these  two  problem  spaces 
were  used  to  construct  272  states  of  knowledge 
through  which  S  is  supposed  to  have  passed  in 
the  course  of  solving  the  problems.  Nine  ope­
rators  and  a  number  of  goal-setting  processes 
were  postulated  to  account  for  the  transforma­
tions  between  these  states.  The  sequentiality 
in  S's  setting  of  goals  and  applying  of  operators 
was  charted  on  a  problem  behavior  graph  (PBG). 
In  general,  the  PBG reveals  how  S  accommodates 
himself  to  the  structure  of  the  task  environment 
(Simon  (31)).  That  is  to  say,  the  test  questions 
on  the  BVT  furnish  the  final  states  to  be  at­
tained;  the  goals  are  to  get  these  states.  Once 
S  has  constructed  an  internal  representation  of 
the  problem  statement,  he  need  only  find,  apply, 
and  check  --  up  to  some  acceptable  degree  of 
subjective  certainty  --  a  sequence  of  actions 
that  achieve  the  goal  states.  S  clearly  relies 
on  the  given,  desired  states  in  making  his  se­
lection  of  an  operator  in  a  current  state,  and 
his  search  strategy  is  another  example  of  means-
ends  analysis  (Duncker  (8);  Ernst  ε  Newell  (11)). 

Finally,  a  set  of  14  productions  or  condition  --> 
action  rules  were  f it  to  the  regularities  on  the 
PBG.  The  condition  sides  of  the  production  rules 
are  described  in  a  meta-language  of  expressions, 
made  up  of  classes  of  knowledge  or  goal  state­
ments  to  get  classes  of  knowledge;  the  action 
sides  are  operators  or  goals  to  get  desired 
states. 

The  production  system  was  then  superimposed  on  the 
PBG.  This  shows  how  the  choice  of  "what  to  do 
next"  --  be  it  the  act  of  setting  a  goal  or  the 
application  of  an  operator  --  depends  both  on 
the  well-defined  local  conditions  of  the  produc­
tion  rules  that  evoke  immediately  an  action  and 
on  a  goal  stack  whereby  control  reverts  to  an 
earlier  goal  state  for  selecting  the  current 
action.  The  production  system  conjoined  with 
the  goal  stack  appears  to  offer  a  more  flexible 
way  of  organizing  means-ends  analysis  than  its 
classic  embodiment  in  GPS  (see  Newell  ε  Simon 
(25);  Waterman  (34)). 

The  normal  flow  of  processing,  abstracted  from 
S's  PBG,  is  presented  in  FIGURE  1;  it  presents 
the  nine  operators,  the  two  top  level  goals,  and 
the  classes  of  objects  the  operators  act  on  and 
produce.  FIGURE  1  summarizes  the  three  phases 
or  categories  of  behavior  that  were  identified 
in  the  protocol  analysis.  Recall  that  the  sub­
ject  does  everything  in  his  head,  without  re­
course  to  paper,  pencil,  or  other  external 
(memory)  aids. 

First,  there  is  an  image  construction  phase  where 
a  representation  of  the  block  with  its  cuts, 
colors,  and  dimensions  is  constructed  from  the 
problem  statement.  This  aspect  of  the  BVT  re­
quires  of  a  subject  that  he: 

1.  (A)  construct  a  mental  representation 

of  a  block, 

(B)  dimensionalized  and  painted,  and 
(C)  sliced  up  into  a  specified  number 

of  l i t t le  pieces,  usually  cubes;  a ll 
this  in  accord  with  the  description 
presented  in  the  problem  statement. 

Second,there  is  a  question  and  retrieval  phase 
where  the  test  question  specifies  the  desired 
object.  This  phase  requires  of  a  subject  that 
he: 

2.  (A)  encode  the  test  question,  and 

(B)  activate  an  object  in  memory  that 

best  f i ts  the  signalment  set  by  the 
test  question. 

Two  operators  were  postulated  in  the  protocol 
analysis  to  account  for  S's  behavior  during 
these  two  phases: 
the  encoding  and  memory  re­
trieval  operators,  Encode  _Input  (EI)  and  Match 
Schema  (MS),  respectively.  Taken  together, 
they  accept  as  input  a  sentence  (sometimes  a 
clause)  and,  when  successful,  they  transform 
it  into  an  I-Space  object  or  schema  that  is  an 
image  representation  of  the  input  sentence. 
S  spends  nearly  half  of  his  total  processing  time 
(336/727  sees.)  "translating"  the  problem  state­
ments  and  test  questions  into  internal  represen­
tations  of  their  meaning. 

The  rest  of  his  time  is  devoted  to  the  problem-
solving  phase,  where  the  1-Space  object  acti­
vated  in  Phase  2  is  transformed  into  the  sought-
after  one  specified  by  the  test  question.  This 
requires  of  a  subject  that  he: 

3.  (A)  track  the  distribution  of  colors 

(and/or  dimensions)  from  the  larger 
object  onto  the  smaller  component 
parts,  a  redistribution  brought 
about  by  the  slice  transformations, 
and 

(B)  count  the  number  of  smaller  parts  to 

arrive  at  the  answer  to  the  test 
question. 

*  Operators  indentified  in  a  protocol  analysis  at 
best  describe  S's  behavior,  often  at  a  rather 
gross  input/output  level.  They  do  not  explain  i t. 
Programming  the  operators,  that  i s,  rendering 
their  inner  working  explicit  and  operational, 
is 
the  beginning  of  explanation.  However,  even  my 
partial  attempts  at  programming  EI  (and  for  that 
matter  MS)  have  added  l i t t l e,  if  anything,  to  an 
explanation  of  their  underlying  processes.  None­
theless  I  shall  continue  to  speak  of  EI  and  MS, 
for  their  descriptive  value,  fully  aware  of  the 
wealth  of  ignorance  this  usage  implies.  See  the 
papers  in  Minsky  (18)  for  some  good  approaches 
to  the  formidable  problems  involved  in  proces­
sing  natural  language. 

220 

Session No.  6 Analysis of Human Behaviour 

(PB),  Tally  (TAL),  and  Contradict  Block 

Of  the  seven  problem-solving  operators  identified 
in  the  protocol  analysis,  three  of  them,  Process 
Block 
(CB)  function  exclusively  in  the  I-Space.  As  can 
be  seen  from  FIGURE  1,  PB  takes  an  I-Space  object 
as  input  and  is  evoked  by  the  goal  to  get  cubes 
or  pieces  that  have  the  sought-after  properties. 
Its  successful  application  consists  in  slicing 
the  pieces  in  question  according  to  the  problem 
specifications  and  rendering  as  output  a  trans(cid:173)
formed  I-Space  object  with  the  desired  proper(cid:173)
ties. 

When  the  output  of  PB  is  the  response  that  no 
cubes  have  the  desired  properties  --  the  nuTT 
object  --  the  operator  CB  tries  to  contradict 
this  finding  by  checking  it  against  known  pro(cid:173)
perties  of  the  block. 
Its  output  is  a  confirma(cid:173)
tion  (or  disconfirmation)  of  the  response,  "None 
of  them." 

TAL  also  takes  an  I-Space  object  as  input,  usual(cid:173)
ly  the  one  delivered  by  its  predecessor  PB,  and 
is  evoked  by  the  goal  to  get  HOW-MANY  cubes  or 
pieces  have  the  sought-after  properties. 
Its 
application  usually  involves  a  further  slicing 
of  the  block  and  a  t a l ly  of  the  exact  number  of 
cubes  (or  pieces)  with  the  desired  properties. 
If  this  number  has  already  been  computed  and 
stored  in  memory,  the  operator  MS  sometimes  re(cid:173)
trieves  the  correct  number  of  parts  with  their 
I-Space  referents.  The  successful  completion  of 
TAL  (or  MS)  supplies  an  answer  to  the  test  ques(cid:173)
tion,  and  S  can  begin  another  question  or  a  new 
problem. 

The  three  operators  ADD,  SUB,  MULT  function  in 
S-Space.  Like  TAL  they  take  as  input  the  current 
I-Space  object  and  are  evoked  by  the  goal  to  get 
HOW-MANY  objects  have  the  desired  properties. 
They  perform  their  arithmetic  operations  and 
yield  an  S-Space  object  as  output.  The  ninth  and 
final  operator  is  Point_  (PT),  a  cross-over 
checking  operator  that  takes  the  S-Space  object 
as  input  and  "points  to"  its  I-Space  referents.* 

Note  finally  in  FIGURE  1  that  a  symbolic  operator 
(SUB,  ADD,  or  MULT)  plus  the  cross-over  operator 
PT  presents  an  alternative  to  TAL  for  getting  the 
number  of  objects  in  I-Space  that  have  the  right 
properties. 
In  the  production  system,  this  was 
an  unresolved  production  conflict,  where  the  con(cid:173)
dition  sides  for  determining  which  "route"  to 
follow  were  indiscrirainable  and  the  system  thus 
unable  to  choose  between  operators. 

*  See  S's  behavior  at  F18-F19  in  FIGURE  3,  which 
was  encoded  as  an  instance  of  MULT  in  the  proto(cid:173)
col  analysis;  and  F20-F22,  encoded  as  an  instance 
of  PT. 

I I.  BASE  REPRESENTATIONS 

IN THE PROGRAM. 

The  protocol  analysis  is  viewed  as  a  preliminary 
step  in  the  construction  of  a  program  organized 
into  the  above  three  phases.  The  definition  of 
the  problem  spaces,  and  especially  of  their  ope(cid:173)
rators  that  effect  the  problem  solving,  puts  a 
kind  of  lower  bound  on  the  range  of  symbols  that 
any  program  must  take  account  of  that  is  put 
forth  as  a  model  of  human  behavior  on  this  task. 

The  program  is  written  in  LISP  1.5  in  the  60  bit 
words  of  the  6400/6600  LISP  1.5  of  the  University 
of  Texas  (19)  and  runs  on  the  CDC-6400  at  the 
Centre  de  Calcul,  Universite  de  Montreal.  The  pro(cid:173)
gram  is  much  more  fully  described  in  (2). 

In 

A.  The  Mental  Representation  of  a  Block. 
order  to  "construct  a  mental  representation  of  a 
block,"  what  knowledge  must  a  subject  possess 
about  the  task  environment  of  cubes  and  blocks 
and  slices  and  their  existence  in  a  three  d i(cid:173)
mensional  world?  That  i s,  what  would  seem  to  be 
the  minimal  information  he  need  have  stored  in 
long-term  memory?  and  how  is  this  knowledge  to 
be  put  together? 

it  has  no  specific  imagerial  referent. 

Al.  S-Space.  First  of  a l l,  there  is  information 
that  holds  true  about  pieces  and  blocks  in  gen(cid:173)
eral.  This  is  called  symbolic  or  S-Space  informa(cid:173)
tion; 
For  example,  a ll  blocks  or  pieces  have  FACES;  the 
names  of  the  FACES  are  (TOP  BOTTOM  BACK  LEFTSDE 
FRONT  RIGHTSDE)*.  They  also  have  SIDES:  (LEFTSDE 
FRONT  RIGHSDE  BACK).  FACES  have  four  EDGES,  and 
EDGES  have  two  VERTICES;  their  names  are  context 
dependent  --  for  example,  the  TOPEDGE  may  refer 
to  the  TOPEDGE  of  the  FRONT,  of  the  LEFTSDE,  of 
the  BACK,  or  of  the  RIGHTSDE.  Specificity  is 
conferred  in  the  I-Space. 

SLICES  can  be  made  in  blocks  in  any  number  of  d i(cid:173)
rections.  The  program  only  recognizes  SLICES 
oriented  in  the  three  dimensions  of  everyday 
experience,  however,  since  these  are  the  only 
ones  presented  in  the  BVT:  SLICES  can  be  HORI(cid:173)
ZONTAL,  VERTICAL  in  depth,  or  laterally  VERTICAL. 
However,  when  a  sequence  of  slices  is  generated 
--  say  a  set  of  laterally  VERTICAL  SLICES  --
they  must  be  generated  in  some  order,  so  the  pro(cid:173)
gram  distinguishes  between  SLICES  generated  from 
left  to  right  (L-R-VERTICAL)  and  from  right  to 

*  The  capitalized  words  like  FACES,  TOP,  BOTTOM, 
SLICES,  HORIZONTAL,  etc.,  are  the  names  of  atoms 
defined  in  the  program;  in  general,  the  conven(cid:173)
tion  of  capitalizing  symbols  that  appear  as  such 
in  the  program  w i ll  be  maintained  throughout  the 
description  that  follows. 

Session No.  6 Analysis of Human Behaviour 

221 

left  (R-L-VERTICAL).  L-R-VERTICAL  SLICES,  then, 
refer  to  lateral  cuts  generated  sequentially  from 
left  to  right  --  like  a  knife  slicing  off  pats 
of  butter  from  the  left  end  on  the  stick  to  the 
right. 
In  the  program  five  planar  directions  are 
associated  with  the  indicator  SLICES:  (HORIZONTAL 
L-R-VERTICAL  R-L-VERTICAL  B-F-VERTICAL  F-B-
VERTICAL).* 

This  is  a ll  part  of  the  general  information  about 
blocks,  pieces,  faces,  edges,  vertices,  slices, 
and  their  directions  that  make  up  the  i n i t i al 
S-Space  representation  of  the  block.  For  the  a-
tom  BLK  i t s e lf  there  is  a  l i st  of  eight  vertices, 
CV1  V2  V3  V4  V5  V6  V7  V8),  stored  under  the  in­
dicator  APVAL;  this  is  a  pointer  to  the  I-Space 
representation  of  the  block. 

A2. 
I-Space.  The  f u ll  image  or  I-Space  repre­
sentation  of  a  piece  or  block  is  a  l i st  of  eight 
vertices,  called  a  piecelist;  this  piecelist  is 
connected  to  six  facelists,  each  of  which  is  con­
nected  to  four  edgelists,  each  of  which  is  con­
nected  to  two  vertices.  From  each  of  the  (eight) 
vertices,  moreover,  there  are  (at  least  three) 
directional  pointers  to  neighboring  vertices  a-
long  the  three  spatial  dimensions:  UP-DOWN; 
RIGHT-LEFT;  TOWARDS-AWAY.  This  structure,  par­
t i a l ly  shown  in  FIGURE  2  is  a  one-way  graph 
structure  with  48  possible  pathways  from  the 
piecelist,  through  the  six  facelists  and  twelve 
edgelists,  to  the  eight  component  vertices.  Be­
tween vertices  there  are  at  least  24  additional 
connections.  The  piecelist,  (VI  V2  V3  V4  V5  V6 
V7  V8),  is  called  the  base  block,  and  the  follow­
ing  right  side  projection  is  one  of  its  possible 
pictorial  representations  (with  the  eight  v e r t i­
ces  labelled  as  they  are  used  consistently 
throughout  the  program): 

*  The  VERTICAL  in  depth  SLICES,  B-F-VERTICAL  and 
F-B-VERTICAL,  can  be  made  from  BACK  to  FRONT  or 
from  FRONT  to  BACK,  respectively.  The  subject's 
behavior  varied.  For  the  HORIZONTAL  SLICES,  how­
ever,  S  always  generated  them  from  the  TOP  to  the 
BOTTOM  (and  never  from  the  BOTTOM  up)  so  HORIZON­
TAL  SLICES  are  understood  to  be  in  the  T-B-HORI-
ZONTAL  direction  (with  the  sixth,  logically  pos­
sible  direction  never  appearing).  Slice  direc­
tions  are  emphasized  here  since  the  order  of  gene­
ration  is  viewed  as  an  aspect  of  S's  behavior  to 
be  simulated  as  well  as  a  psychological  parameter 
to  help  account  for  individual  differences. 

This  way  of  representing  a  block  is  considerably 
more  redundant  than,  for  example,Guzman's  (15), 
which  like  most  scene  analysis  programs  (see 
Rosenfeld  (29))  makes  use  of  a  co-ordinate  system 
for  localizing  and  measuring  distances  between 
vertices.  While  such  a  co-ordinate  system 
greatly  facilitates  computation, 
it  was  explicit­
ly  eschewed  here  as  being  too  "strong"  an  assump­
tion  to  include  in  a  model  of  human  visual  ima­
gery. 

111.  HUMAN AND MACHINE PROTOCOLS. 

The  program's  behavior,  or  pictorial  surrogates 
thereof,  on  BVT  Problems  #1  and  #2,  each  with  its 
f i r st  test  question,  is  presented  along  the  right 
side  of  FIGURE  3  in  the  APPENDIX.  The  pictures 
preserve  the orthographic  projections  of  the  men­
tal  images  the  subject  said  he  was  using  --  a 
top  projection  for  BVT  #1  and  a  front/right  side 
projection  for  BVT  #2.  These  two  examples  will 
be  used  to  illustrate  the  functioning  of  the 
program's  operators,  whose  names,  also  on  the 
right  side  of  the  page,  are  entered  under  the 
heading  EVALQUOTE  CARDS.  The  transcribed  proto­
col  of  S's  behavior  is  presented  on  the  left 
side  of  the  page,  with  his  processing  times  for 
speech  units  and  pauses  (≥0.5  sees.)  in  the 
extreme  left  column. 

During  Phase  1  the  program  encodes  the  problem 
statement  by  means  of  the  routines  DIMENSIONALIZL; 
PAINT,  CUT-INTO  (or  CUT-UP);  these  routines  are 
the  operational  specifications  of  the  operators, 
EI  and  MS,  identified  in  the  protocol  analysis. 
As  can  be  seen  from  the  f i r st  example  (BVT  #1) 
in  FIGURE  3,  these  routines  serve  to  particula­
rize  a  general  block  by  annexing  descriptive 
information  (1)  to  the  property  lists  of  the 
affected  facelists  and  (2)  to  the  piecelist  of 
the  base  block  itself.  PAINT  assigns  the  at­
tribute  HAVE  to  the  base  block  with  the'fact" 
(in  S-Space)  as  value  that  the  block  has  both 
red  and  blue  faces.  To  this  fact,  moreover, 
it  associates  the  indicator  I-SPACE  with  the 
appropriate  facelists  as  value  --  to  ensure  the 
crossover  from  the  fact  to  its  imagerial 
referents. 

This  double  assignment  of  information  has  to  do 
with  the  observable  dual  capacity  of  humans  to 
know  as  a  fact  that  the  block,  once  painted,  has 
red  sides  and  a  blue  top  and  bottom,  without 
having  to  actually  generate  up  the  painted  mental 
image  for  the  six  (successive)  faces  --  but  to  be 
able  to  do  so  if  necessary.  This  sort  of  quick/ 
slow  memory  system  receives  considerable  empirical 
support  from  Paivio's  (26)  and  Ernest 
Paivio's 
(10)  work  on  Ss'  responses  to  word  association 
tests.  See  also  Bergson  (5)  on  1'effort  intel-
lectuel. 

222 

Session No.  6 Analysis of Human Behaviour 

As  to  S's  behavior  during  Phase  1,  it  is  f a i r ly 
clear  that  he  only  arrives  at  his  image  repre(cid:173)
sentation  of  a  "1  inch  by  4  inch  by  4  inch  block" 
by  putting  it  together  from  its  component  faces, 
whose  images  he  evidently  dimensionalizes  at 
A12-A13:  "the  faces  are  two  4  by  4  squares  and 
the  ah  l i t t le  parts  at  1  by 4 rectangles."  After 
that  he  proceeds  to  paint  the  block,  as  specified, 
without  d i f f i c u l t y. 

After  the  block  has  been  constructed,  dimen(cid:173)
sional ized,  and  painted,  it  is  then  cut  into  some 
number  of  pieces.  There  are  two  routines  in  the 
program  that  translate  the  slice  instructions: 
CUT-INTO  when  the  block  is  cut  into  some  spe(cid:173)
cified  number  of  CUBES  (as  in  BVT  #1),  and 
CUT-UP  when  the  block  is  cut  into  PIECES  (as  in 
BVT  *2). 

For  example,  in  BVT  #,  CUT-INTO  (BLK  16  ONE-INCH 
CUBES),  encodes  the  fact  that  the  block  has  six(cid:173)
teen  1  inch  cubes  as  PARTS:  more  importantly, 
it  figures  out  and  stores  how  many  have  to  be 
made  in  the  block,  and  in  what  direction,  in 
order  to  arrive  at  the  designated  number  of  cubes 
In  this  respect,  CUT-INTO  is  a  kind  of  feasi(cid:173)
b i l i ty 

test. 

In  BVT  #2  there  are  three  instances  of  CUT-UP 
(E4-E7).  Like  CUT-INTO  each  application  of 
CUT-UP  assigns  to  the  piecelist  of  the  base  block 
(1)  the  SLICE  directions,  (2)  the  number  of  times 
each  is  to  be  applied,  and  (3)  the  factual  infor(cid:173)
mation  about  the  slice  that  localizes  it  on  the 
block. 
I-Space  representations  of  the  SLICES. 

In  addition,  CUT-UP  constructs  the 

Now  a  slice  is  nothing  but  a  plane  that  is  passed 
through  an  object  in  a  certain  direction;  when 
this  object  is  a  parallelepiped  such  a  plane  has 
the  effect  of  creating  four  new  vertices  (unless, 
of  course,  the  slicing  plane  passes  through 
already  extant  vertices). 
In  the  program,  par 
consequence,  a  slice  is  represented  in  I-Space 
the  same  way  a  face  i s:  as  a  l i st  of  four 
vertices.  On  the  base  block  a  new  I-Space  slice is 
stored  with  its  direction  under  the  indicator 
I-SPACE.  Finally,  in  order  not  to  forget  the 
locations  of  these  new  vertices,  each  is  inserted 
in  a  directional  network  of  vertices  that  is 
maintained  on  the  base  block. 

While  l i t t le  effort  was  made  to  put  the  machine's 
behavior  in  close  correspondence  with  the  sub(cid:173)
ject's  during  this  phase,  the  data  structures the 
two  construct  for  representing  the  problem 
statements  appear  highly  similar. 

During  Phase  2  ENCODE-QUESTION  translates  the 
test  question  into  a  S-Space  schema  associated 
with  OBJ0;  this  is  the  source  of  goals  for  sub(cid:173)
sequent  processing: 
in 

to  get  all  of  OBJ0  completed 

I-Space. 

Next,  MATCH-SCHEMA  retrieves  and  activates  some 
I-Space  object  with  which  to  begin  problem  solv(cid:173)
ing. 
In  BVT  #1  both  the  subject  and  program 
recover  and  activate  the  "red  and  blue  faces" 
whose  I-Space  representations  become  the  ACTIVE-
ELEMENTS  and  whose  properties  become  the  sought-
after  ACTIVE-ATTRIBS: 
(2  ((COLOR  BLUE)  (COLOR 
RED)))  on  the  sliced  up  block.  On  BVT  #2, there 
is  nothing  much  to  retrieve  and  problem  solving 
begins  with  the  base  block  i t s e l f. 

It  is  during  Phase  3,  the  problem-solving  phase 
that  PB  and  TAL  generate  by  far  the  most  interest(cid:173)
ing  behavior  in  the  protocol.  One  example  of  PB 
and  three  of  TAL  w i ll  be  presented. 

During  the  protocol  analysis  S's  behavior  from 
B4  to  B6  (see  FIGURE  3)  was  identified  as  an 
instance  of  PB.  S  expresses  the  input  object 
at  B4:  "Ah,  the  sides  are  red  and  the  top  and 
bottom  are  blue";  the  slice  transformations  at 
B5: 
at  B6: 
border". 

"Well  it  would  be  a ll  of  them  on  the 

"Cut  them  that  way";  and  the  output  object 

three  times 

How  does  the  PB  of  the  program  explain  this 
behavior?  First,  PB  slices  the  base  block,  (VI 
V2  V3  V4  V5  V6  V7  V8),  the  number  of  times  pre(cid:173)
viewed  by  CUT-INTO  at  A17-A18  above: 
in  the  L-R-VERTICAL  direction  and  then  three 
times  in  the  B-F-VERTICAL  direction,  without 
taking  account  of  interactions  between  the  two 
sets of  SLICES.  Second,  while  the  program  is 
constructing  the  eight  new  PIECES,  it  also 
tracks  the  active  attributes:  (2  ((COLOR  BLUE) 
(COLOR  RED))),  activated  by  MATCH-SCHEMA  at 
B3-B4  above.  This  yields  four  ACTIVE  PIECES  with 
the  sought-after  properties.  Third,  PB  chunks 
and  calls  them  BORDER-PIECES,  a  category  defined 
by  IMAGE  (S-BLOCK)  at  Al  above.  FIGURE  3A  is  a 
printout  of  the  actual  machine  representation  of 
the  BORDER-PIECES,  whose  pictures  appear  opposite 
B6  on  the  protocol. 
heuristically  by  making  an  i n i t i al  slice  in  the 
block  that  ignores  the  interaction  effects  be(cid:173)
tween  slices  in  the  hope  of  finding  some  global, 
geometric  partitioning  of  the  cut  up  block  that 
meets  the  requirements  set  by  the  test  question. 

In  short,  PB  proceeds 

it  is 

How  does  the  operator  TAL  explain  the  rest  of  S's 
behavior?  The  goal  statement  that  evokes 
quite  explicit  at  B7-B9: 
"Ah,  so  that's  how 
many  on  the  border?"  S  then  begins  to  count 
cubes  and  says  at  Bll:  "One,  two,  three,  four." 
From  the  way  his  speech  is  segmented,  moreover, 
it  seems  reasonable  to  assume  that  he  generates 
each  border  piece  in  turn,  forming  cubes  from 
each  with  the  slice  set  in  the  other  direction 
(B11-B14).  He  avoids  the  trap  of  double  counting 
the  corners,  which  i s,  presumably,  what  his 
utterance  at  B10  signals:  "On  the  periphery?" 
That  i s,  he  will  count  along  the  top  "periphery" 

Session No.  6 Analysis of Human Behaviour 

223 

where  the  identity  of  corner  cubes  is  more  easi(cid:173)
ly  recognized  than  along  the  sides  "on  the  bor(cid:173)
der"  (B9)  where  there  are,  in  fact,  16  red  faces. 

For  each  BORDER-PIECE  TAL  retrieves 

The  pictorial  representation  of  the  behavior  that 
the  program's  TAL  generates  is  opposite  B11-B14 
in  FIGURE  3. 
the  SLICE  directions  in  the  other  direction  that 
have  yet  to  be  made.  Starting  with  the  left  most 
BORDER-PIECE,  (VI  V3 V5  V7  64  65  66  67),  the 
three  B-F-VERTICAL  SLICES  are  intersected  to 
create  four  new  CUBES.  TAL  creates  two  new 
inside  vertices  for  each  new  CUBE  it  constructs. 

TAL  now  generates  the  next  BORDER-PIECE,  (396  397 
398  399  V1  V2  V5  V6),  then  retrieves  the  L-R-
VERTICAL  SLICES,  and  slices  this  BORDER-PIECE 
three  times  --  and  so  on  around  the  border.  The 
program  must  be  careful  to  avoid  the  trap  of  dou(cid:173)
ble  counting  the  two  copies  of  the  corner  CUBES, 
each  of  which  issues  from  different  generators. 
This  means  testing  for  their  identity.  The 
routine  which  does  this  is  viewed  as  a  psycholog(cid:173)
ical  parameter  of  the  program  since  its  inclusion 
or  exclusion  determines  whether  or  not  the  pro(cid:173)
gram  w i ll  avoid  the  erker  of  double  counting  --
a  "good"  error  that  many  people,  especially 
children,  are  prone  to  commt  on  tksne  proh-enes. 

Together,  PB  and  TAL  create  the  following  tree 
structure  for  BVT  #1,  Question  #1  (where  -  signs 
signal  identities  between'CUBES  and  the  shorthand 
symbols  BP1-4  and  C1-12  are  substituted  for  the 
lengthy  vertex  lists  of  the  BORDER-PIECES  and 
CUBES,  respectively).  Since  the  CUBES  are  parts 
of  the  block  as  well  as  being  parts  of  the 
BORDER-PIECES,  the  l i st  of  CUBES  is  ultimately 
associated  directly  to  the  piecelist  of  the  base 
block: 

is  because  the  program  was  con(cid:173)

The  program's  simulation  of  BVT  #1,  Question  #1, 
is  a  rather  close  f it  to  S's  behavior.  To  some 
extent  this 
structed  from  this  example,  but  unlike  just  any 
old  program  that  can  take  blocks  and  cut  them 
up,  the  emphasis  here  was  on  the  exact  reproduc(cid:173)
tion  of  S's  behavior. 
In  the  absence  of  contra-
dictory  evidence,  both  the  vertex  l i st  represen(cid:173)
tations  of  the  mental  images  and  PB,  TAL,  and 
associated  processes  for  extracting  and  creating 
information  are  regarded  as  functionally 
equivalent  to  S's  mental  images  and  imaging 
activity,  respectively. 

The  second  example  of  TAL  is  more  revealing 
since  its  f i r st  application  f a i l s.  The  f i r st 
question  of  BVT  #2  is  "4.  How  many  pieces  are 
there?"  MATCH-SCHEMA  retrieves  the  base  block 
i t s e lf  and  this  calls  up  the  operator:  TAL  (BLK), 
a  computaticciulrymore  complex  argument  for  TAL 
than  the  above  BORDER-PIECES. 

is  a  recursive  routine;  its  outputs  at  one 

TAL 
level  become  its  input  arguments  at  the  next. 
In  this  example,  TAL  (BLK)  f i r st  retrieves  the 
slice  directions  that  are  to  be  made  in  the 
block:  (HORIZONTAL  R-L-VERTICAL  F-B-VERTICAL) 
as  set  by  CUT-UP  at  E4-E7  above.  This  l i st  of 
three  slice  directions  implies  three  applica(cid:173)
tions  of  TAL  as  well  as  setting  the  terminal 
condition  for  TAL's  recursion.  For  each 
direction  TAL  calls  the  appropriate  slice  rou(cid:173)
tines  to  cut  the  piece  the  requisite  number  of 
times  in  that  direction.  For  this  a  FOCUS 
FACE  is  necessary;  hence,  CSET  (FOCI  FRONT) 
since  the  effects  of  the  HORIZONTAL  SLICE, 
the  f i r st  to  be  made,  are  only  "visible"  on  the 
FRONT  or  RIGHTSDE.  The  f i r st  level  piecetree 

*  From  the  point  of  view  of  unambiguously  inter(cid:173)
preting  the  protocol  at  least  one  other  parallel 
record  of  S's  sequential  behavior  should  accom(cid:173)
pany  his  verbal  report,  be  it  a  sequence  of 
switch  settings  (Laughery  ¢  Gregg  (17)),  eye  move 
movements  (Winikoff  (35);  Newell  (22)),  or  a  lum(cid:173)
inous  finger  in  a  darkened  room  that  the  subject 
uses  to  trace  and  exteriorize  his  sequence  of 
mental  images  (Racine  (27)). 

224 

Session No.  6 Analysis of Human Behaviour 

at  F5  on  the  protocol 

TAL  next  tries  to  compute  the  effects  of  the 
((P'1P'2  P'3  P'4  )).  It 
F-B-VERTICAL  SLICE:  TAL 
fails  because  it  finds  the  TOP  of  the  f i r st 
piece  it  tries,  P1'  to  be  DISEMBODIED.  This 
(unexpected)  failure  of  the  program  corresponds 
exactly  to  S's  failure: 

F6-F8:  "And  a  third  one  inch  from  the  front 

Uhm. 
Oh  gosh  I  find  that  very  hard." 

Why  are  the  TOP's  of  the  pieceset  (P' P'1 P'2 P'3P'4 
DISEMBODIED? 
It  is  because  when  a  new  piece  is 
constructed,  only  three  of  its  FACES  are  fully 
developed,  in  contrast  with  the  six  FACES  in  the 
f u ll  representation  of  the  base  blcck,  as  pre(cid:173)
sented  in  FIGURE  2. 
For  PI,  for  example,  i ts 
three  full-bodied  FACES  are  its  RIGHTSDE  and 
LEFTSDE  --  its  bounding  planes  formed  by  the 
block's  RIGHTSDE  and  the  R-L-VERTICAL  SLICE  --
and  its  FRONT  --  the  FOCUS  FACE  from  which  this 
PIECE  is  viewed.  Since,  however,  the  FOCUS  on 
which  the  effects  of  a  third,  F-B-VERTICAL, 
SLICE  can  be  read  is  assumed  to  be  the  TOP  of  PI 
--  which  is  DISEMBODIED  --  the  program  is  unable 
to  slice  further  PI.  Such  a  partial  representa(cid:173)
tion  of  a  new  piece  in  I-Space  constitutes  a 
heuristic  definition,  and  it  is  proposed  as  a 
functionally  equivalent  structure  to  S's  mental 
images,which helps  to  account  for  his  failure 
at  F6-F8. 

So  the  FOCUS  FACE  is  changed  (opposite  F9  on 
FIGURE  3)  to:  CSET  (FOCI  TOP),  and  TAL  (BLK)  is 
reapplied.  The  sequence  of  images  that  this 
repetition  of  TAL  (BLK)  generates  is  shown  pic-
t o r i a l ly  on  FIGURE  3,  starting  at  F9  and  ending 
with  the  picture  at  F20-F22,  corresponding  to 
the  following  piecetree: 

Note  that  in  reapplying  the  f i r st  HORIZONTAL 
SLICE  that  the  shift  of  FOCUS  FACE  from  the 
FRONT  to  the  TOP  causes  no  problem  since  the 
old,  already  constructed  PIECES'  P1  and  P2,  are 

retrieved;  they  already  have  FRONT  FACES,  so  the 
fourth  full-bodied  FACE,  the  TOP,  need  only  be 
added  to  their  partial  representations. 

From  F18-F22  there  is  obviously  a  discrepancy 
between  the  program's  and  S's  behavior;  namely, 
in  the  protocol  analysis  S  was  postulated  to 
apply  the  symbolic  operator  MULT  at  F17-F19: 
"and  that  just  doubles  i t ,"  followed  by  PT  at 
F20-F22,  where  he  elaborates  just  the  front  four 
to 
of  the  eight  pieces,  (P"1  P"3  P"5  P"7).  This 
stretch  must  be  counted  as  an  error  of  simula(cid:173)
tion. 
It  can  perhaps  be  remedied  once  the 
MULT  and  PT  sequence  have  been  programmed. 

Finally,  since  there  are  no  more  SLICES  TAL 
assigns  the  eight  terminal  PIECES  to  the  piece-
l i st  of  the  base  block  (see  FIGURE  3B)  and  com(cid:173)
pletes  the  object  schema:  OBJ0 

HOW-MANY:  8. 

En  resume,  a  number  of  routines,  which  are  enter(cid:173)
ed  at  the  EVALQUOTE  level  in  the  program,  have 
been  constructed  to  respond  to  the  BVT  task 
demands.  First,  during  Phase  1  the  routines 
DIMENSIONALIZE,  PAINT,  CUT-INTO  or  CUT-UP  serve 
to  encode  the  problem  statement.  Second,  during 
Phase  2  the  operators  ENCODE-QUESTION  and  MATCH-
SCHEMA  are  used  to  encode  the  questions  posed 
on  the  BVT  and  to  retrieve  appropriate  objects 
with  which  to  commence  problem  solving.  Finally, 
during  Phase  3  the  operators  PT,  PB,  and  TAL 
are  employed  to  construct  and  point  to  the  I-
Space  objects  described  by  the  test  questions. 
The  accent  has  been  put  on  the  I-Space  problem-
solving  operators,  PB  and  TAL;  the  third  one 
identified  in  the  protocol  analysis,  CB,  has  not 
yet  been  programmed,  nor  have  the  three  symbolic 
operators,  MULT,  SUB,  ADD.  For  a ll  three  phases 
the  program's  behavior  has  been  put  in  corres(cid:173)
pondence  with  the  human's  on  two  example  problems 
and  test  questions. 

IV.  CONCLUSIONS 

From  the  point  of  view  of  a r t i f i c i al  intelligence 
this  work  can  be  regarded  as  a  strategy  for  pro(cid:173)
gram  construction,  while  from  the  viewpoint  of 
cognitive  psychology,  as  an  operationalization 
of  concepts  and  a  source  of  psychological 
hypotheses  (Frijda  (12);  Hunt  (16);  Reitman  (28)). 
It  would  be  nice  to  construct  more  crossover 
links  that  span  the  two  (Newell  (24)). 

in  the  predicate 

First,  to  workers  in  "pure"  a r t i f i c i al  i n t e l l i(cid:173)
gence  the  task  must  seem  t r i v i a l,  as  indeed  it  is 
compared  to  proving  theorems, 
calculus,  solving  tough  symbolic  integration 
problems  (Slagle  (32);  Moses  (20)),  or  playing 
good  chess  (Baylor  Simon  (4);  Greenblatt, 
Eastlake  ¢  Crocker  (13)).  Moreover,  the  program 
has  not  yet  been  demonstrated  to  be  very  power(cid:173)
f u l,  in  that  i ts  performance  on  only  two  test 
questions  has  been  presented.  Nor  is  there  any 
evidence  of  i ts  generality,  either  on  a  wider, 

Session No.  6 Analysis of Human Behaviour 

225 

expanded  range  of  BVT  problems,  or  on  the  f u ll 
battery  of  intelligence  tests  that  Guilford  (14) 
has  designed  to  measure  what  he  calls  Cognitive 
Figural  Transformations  in  his  structure  of 
intellect  factor  analytic  model. 

if  it  be  of  interest  to  workers  in  AI,  it  is 

No, 
likely  to  be  because  of  its  approach  to  the 
problem  of  representation.  The  vertex  l i st 
notation  and  operators  used  to  represent  and 
process  mental  images  do  seem  to  capture  at 
least  some  of  the  right  properties  of  the  few 
geometric  figures  they  deal  with  (see  also, 
Simon  (30)).  Of  course,  this  is  not  surprising 
since  this  notation  is  but  an  adaptation  of  parts 
of  plane  and  solid  geometry,  a  mathematics  de(cid:173)
vised  for  expressing  just  such  features  of  the 
Euclidean  world.  This  representation  also  has 
a  certain  cumbrousness  about  it  and  does  not 
seem  to  program  readily  in  a  list-processing 
language  like  LISP,  at  least  not  without  creating 
special  routines  for  associating  descriptive 
information  to  the  vertex  l i s t s *;  in  this  re(cid:173)
spect, 
indeed,  it  would  probably  be  better  to 
program  the  mechanics  of  the  image  space  closer 
to  the  hardware  level,  perhaps  along  the  lines 
initiated  by  Sutherland  (33).  Certainly  much 
work  needs  s t i ll  to  be  done  on  the  "perceptual 
languages"  for  encoding  the  visual  world  and  on 
the  languages  of  memory  and  mental  imagery  for 
calling  it  back  up;  how,  for  example,  are  dreams 
to  be  represented  in  a  computer,  probably  the 
most  pervasive  source  of  visual  mental  imagery 
in  humans? 

Second,  to  cognitive  psychologists  this  work 
is  presented  as  a  preliminary  model  of  how  humans 
make  use  of  mental  imagery  in  solving  block  vis(cid:173)
ualization  problems;  said  otherwise,  it  is  a 
f i r st  attempt  at  operationalizing  the  factor 
Guilford  (14)  calls  Cognitive  Figural  Transfor(cid:173)
mations.  The  program  has  furnished  a  number  of 
non-obvious  psychological  hypotheses,  also.  For 
example,  the  way  in  which  the  program  constructs 
and  heuristically  defines  a  partial  representation 
of  a  new  piece  with  a  single,  usually  "visible," 
FOCUS  face  that  stands  for  the  whole  proves 
insufficient  when  TAL  must  "read  off"  the  effects 
of 
interacting  slices  on  a  second  (disembodied) 
face  of  the  same  piece.  This  was  offered  as 
part  of  the  explanation  of  S's  failure. 

*  While  describing  the  program  in  the  preceding 
section,  no  mention  was  made  of  the  machinery  re(cid:173)
quired  to  associate  descriptive  information  to 
(and  retrieve  it  from) 
l i s t s.  Atomic  symbols 
have  unique  addresses  in  LISP,  but  two  "identical" 
l i s t s,  i . e .,  two  lists  containing  identical  order(cid:173)
ed  sets  of  symbols,  point  to  different  addresses. 
Consequently,  the  function  DEFLIST,  which  creates 
property  lists  on  atoms,  could  not  be  used  for 
associating  the  attributive  information  to  the 
piecelists,  facelists,  etc.  A  new,  comparatively 
slow  function  called  GEOLIST,  among  others,  had 

As  a  second  example,  it  was  also  proposed  that 
the  errors  of  double  counting  that  people  some(cid:173)
times  make  on  these  problems  comes  from  just 
their  failure  to  recognize  or  identify  two 
faces  generated  in  different  contexts  as  be(cid:173)
longing  the  the  same  piece.  Such  a  test  for 
identity  was  offered  as  a  psychological  para(cid:173)
meter  of  the  program  in  that  it  can  be  used 
to  predict  differentially  the  commission  or 
omission  of  double  counting  errors.  This 
signals,  moreover,  at  least  one  important 
difference  between  visual  mental  imagery  and 
visual  perception:  unlike  objects  in  the  visual 
field  mental  images  of  the  "same"  object  pro(cid:173)
duced  at  two  different  points  in  time  do  not 
remain  available  to  the  information  processor 
for  inspect  (or  identification)  at  w i l l. 
(The 
psychological  aspects  of  the  program  are 
developed  more  fully  in  Baylor  (3).) 

And  the  view  from  the  bridge  that  spans 
a r t i f i c i al  intelligence  and  cognitive  psychol(cid:173)
ogy?  On  the  one  side  there  is  the  obvious 
need  for  bigger  and  better  programs  that  are 
more  sensitive  to  the  data  of  human  information 
processors,  and  on  the  other  side,  there  is 
a  corresponding  need  for  experimental  support 
that  puts  to  the  test  the  psychological  implica 
tions  of  these  programs  as  models.  Two  way 
t r a f f ic  between  the  two  cannot  help  but  further 
our  understanding  in  both  fields. 

ACKNOWLEDGEMENTS 

This  paper  summarizes  parts  of  a  doctoral 
dissertation  at  Carnegie-Mellon  University. 
I  would  particularly  like  to  express  my 
gratitude  to  Dr.  Herbert  A.  Simon  for  his 
judicious  counsel  and  continued  support  over 
a  number  of  years.  Also,  my  thanks  to  the 
the  Conference  Committee  for  their 
referees  of 
helpful  comments  in  revising  this  paper;  and  to 
Mmes  F.  Lasry  and  Dufresne  in  typing  parts  of 
this  paper.  Finally,  a  word  of  thanks  to  Mile 
Tamara  Lemerise  for  her  help  in  preparing  the 
text.  This  work  has  been  financed  by  the 
Ministere  d'Education  of  Quebec. 

(Cont'd)  to  be  written.  All  told,  the  program 
runs  to  over  1500  LISP  instructions.  Along 
with  the  fact  that  the  program  runs  on  a  LISP 
interpreter  system,  these  factors  help  to 
explain  the  program's  relative  slowness: 
on  the  order  of  300  sees,  on  BVT  #1  with 
Question  #1  and  140  sees,  on  BVT  #2  with 
Question  #4. 

It  took 

226 

Session No.  6 Analysis of Human Behaviour 

REFERENCES 

1.  Baylor,  G.W.  A  treatise  on  the  mind's  eye. 

I.  Methodology  and  protocol  analysis. 
Montreal:  Universite  de  Montreal  (Working 
paper  MCP  #1),  1969. 

2.  Baylor,  G.W.  A  treatise  on  the  mind's  eye. 

I I.  Program  structure  and  performance. 
Montreal:  Universite  de  Montreal  (Working 
paper  MCP  #4),  1971. 

3.  Baylor,  G.W.  A  treatise  on  the  mind's  eye. 

I I I.  Psychological 
Montreal:  Universite  de  Montreal  (Working 
paper  MCP  #6),  1971. 

interpretation. 

4.  Baylor,  G.W.  ε  Simon,  H.A.  A  chess  mating 

combinations  program.  AFIPS  Procs.  28. 
Washington:  Spartan,  1966.  pp.  431-47. 

5.  Bergson,  H.  L'effort  intellectuel.  Revue 

philosophique,  53,  1-27,  1902. 

6.  de  Groot,  A.D.  Thought  and  choice  in  chess. 

The  Hague:  Mouton,  1965. 

7.  de  Groot,  A.D.  Methodology.  The  Hague: 

Mouton,  1969. 

8.  Duncker,  K.  On  problem  solving.  Psychol. 

Monographs,  58,  No.  270,  1945. 

9.  Eastman,  CM.  Cognitive  Processes  and  i l l-

defined  problems:  A  case  study  from  design. 
In  D.E.  Walker  £  L.M.  Norton  (Eds.),  Procs. 
1JCA1.  Bedford,  Mass.:  The  MITRL  Corp., 
1969.  pp.  669-90. 

10.  Ernest,  Carole  H.  ε  Paivio,  A. 

Imagery 

and  verbal  associative  latencies  as  a 
function  of  imagery  a b i l i t y.  Can.  J_.  of 
Psychol.,  25,  1971,  83-90. 

psychology.  Ann.  Rev,  of  Psychol.,  19,  1968, 
135-68. 

17.  Laughery,  K.R.  ε  Gregg,  L.W.  Simulation  of 

human  problem-solving  behavior.  Psychometrika, 
27,, 1962,  265-82. 

18.  Minsky,  M.  (Ed.)  Semantic  information 

processing.  Cambridge,  Mass.:  The  MIT  Press 
1968. 

19.  Morris,  J.B.  ε  Singleton,  D.J.  The 

University  of  Texas  6400/6600  LISP  1.5,  an 
adaptation  of  MIT  LISP  1.5  Austin:  The 
University  of  Texas  (ditto  ed),  1968. 

20.  Moses,  J.  Symbolic  integration.  Unpub. 
Ph.D.  dissertation.  Cambridge,  Mass.: 
Mass. 

Inst,  of  Technology,  1967. 

21.  Newell,  A.  Studies  in  problem  solving: 
Subject  3  on  the  crypt-arithmetic  task 
DONALD  +  GERALD  =  ROBERT.  Pittsburg,  Pa.: 
Carnegie  Inst,  of  Technology,  1967. 

22.  Newell,  A.  Eye  movements  and  problem  solving 
Computer  Science  Research  Review.  Pittsburg 
Pa.:  Carnegie-Mellon  Univ.,  1967,  28-40. 

23.  Newell,  A.  On  the  analysis  of  human  problem 

solving  protocols. 
B.  Jaulin  (Eds.),  Calcul  et  formalisation 
dans  les  sciences  de  l'homme.  Paris:  CNRC, 
1968.  pp.  145-85. 

In  J.C.  Gardin  ε 

24.  Newell,  A.  Remarks  on  the  relationship 

between  a r t i f i c i al  intelligence  and 
cognitive  psychology. 
In  R.  Banerji  ε  D. 
Mesarovic  (Eds.),  Theoretical  approaches 
to  non-numerical  problem  solving,  28, 
Berlin:  Springer-Verlag,  1970.  pp.  363-400 

25.  Newell,  A.  ε  Simon,  H.A.  Human  problem 

solving.  New  York:  Prentice-Hall,  in  press 

11.  Ernst,  G.W.€  Newell,  A.  GPS:  A  case  study 
in  generality  and  problem  solving.  New  York: 
Academic  Press,  1969. 

26.  Paivio,  A.  Mental  imagery  in  associative 
learning  and  memory.  Psychol.  Rev.,  76, 
241-63. 

12.  Frijda,  N.H.  Problems  of  computer  simula­

tion,  Behav.  Sci.,  12,  1967,  59-67. 

13.  Greenblatt,  R.D.,  Eastlake,  D.E. 

I ll  ε 

Crocker,  S.D.  The  Greenblatt  chess  program. 
Procs.  FJCC,  1967,  801-10. 

14.  Guilford,  J.P.  The  nature  of  human  i n t e l l i­

gence.  New  York:  McGraw-Hill,  1967. 

15.  Guzman,  A.  Decomposition  of  a  visual  scene 

into  three-dimensional  bodies.  Procs.  FJCC, 
1968,  291-304. 

16.  Hunt,  E.  Computer  simulation:  A r t i f i c i al 
intelligence  studies  and  their  relevance  to 

27.  Racine,  B.  La  transformation  de  1'image 
mentale.  Unpub.  M.A.  thesis.  Montreal: 
Universite  de  Montreal,  1971. 

28.  Reitman,  W.R.  Cognition  and  thought.  New-

York:  Wiley,  1965. 

29.  Rosenfeld,  A.  Picture  processing  by 

computer.  Computing  Surveys,  1,  1969, 
147-76. 

30.  Simon,  H.A.  An  information-processing 

explanation  of  some  perceptual  phenomena. 
Brit.  J.  of  Psychol.,  58,  1-12. 

Session No.  6 Analysis of Human Behaviour 

227 

31.  Simon,  H.A.  The  sciences  of  the  a r t i f i c i al 

Cambridge,  Mass.:  The  MIT  Press,  1969. 

32.  Slagle,  J.R.  A  heuristic  program  that  solves 
symbolic  integration  problems  in  feshman  cal­
culus. 
In  E.A.  Feigenbaum  ε  J.  Feldman 
(Eds.),  Computers  and  thought.  New  York: 
McGraw-Hill,  1963.  pp.  191-203. 

33.  Sutherland,  I.E.  Sketchpad:  A  man-machine 
graphical  communication  system.  Lexington, 
(Tech.  Rep.  No.  296), 
Mass.:  Lincoln  Lab. 
1963. 

34.  Waterman,  D.A.  Generalization  learning 

techniques  for  automating  the 
heuristics.  A r t i f i c i al  Intelligence,  1, 
121-70. 

learning  of 

35.  Winikoff,  A.  Eye  movements  as  an  aid  to 

protocol  analysis  of  problem  solving 
behavior.  Unpub.  Ph.D,  dissertation. 
Pittsburgh,  Pa.:  Carnegie-Mellon  Univ., 
1967. 

APPENDIX 

FIGURE  3:  Subject's  and  program's  protocols  on 

BVT  #1,  Question  #1  and  BVT  #2, 
Question  #4. 

FIGURE  3A:  Printout  of  the  f i r st  level  structure 

of  BORDER-PIECES  (BVT  #1). 

FIGURE  3B:  Printout  of  the  f i r st  level  structure 

of  the  base  block  and  OBJ  at  the 
completion  of  Question  #4  (BVT  #2). 

228 

Session No.  6 Analysis  of Human Behaviour 

229 

Figure  1  :  "Normal" flow of processing in 

the protocol. 

FIGURE 2: Partial  I-Spaca representation of the base place, (V1 V2 V3 V4 V5 V6 V7 V8). 

230 

Session No.  6 Analysis of Human Behaviour 

Session No.  6 Analysis of Human Behaviour 

231 

232 

Session No.  6 Analysis of Human Behaviour 

Session No.  6 Analysis of Human Behaviour 

233 

FIGUR' 3A Printout of the first level structure of MORDER-PlECES (BVT #1) 

234 

Session No.  6 Analysis of Human Behaviour 

BVT #21 "Three slices are made in a 3 inch cube. One is made horizontally one inch from the top, another 

vertically one inch from  one side,  and a third  one inch  from the front, 
4.  How many piecee are there? 
5.  How many 1 inch cubes are there9 
6.  How many 1 inch by 2 inch by 2 inch pieces are there? 
7.  How many 2  inch  cubes are there? 

Session No.  6 Analysis of Human Behaviour 

235 

236 

Session No.  6 Analysis of Human Behaviour 

APVAL, 

PIECES 
((V2  G0043  G00047  G00138  G00053  G00534  G00535  G00536)  (G00053  G00534  G00535  G00536  V4 
G00045  G00048  G00139)  (G00047  G00138  V1  G00042  G00617  G00618  G00052  G00619)  (G00617  G00618  G00053 
G00619 G00048  G00139  V3  G00044)  (G00043  V6  G00138  G00049  G00701  G00055  G00702  G00703)  (G00701 
G00055  G00702  G00703  G00045  V8  G00139  G00050)  (G00138  G00049  G00042  V5  G00782  G00783  G00784  G00054) 
(G00782  G00783 G00784 G00054 G00139 G00050 G00044 V7)) 

Session No.  6 Analysis of Human Behaviour 

237 

PIECES: 

(V1 V2  V3  V4  V5  V6  V7  V8) 
((V2  600043  G00047  600138  G00053  G00534  G00535  G00536)  (600053  G00534  G00535  G00536  V4 
G00045  G00048  G00139)  (G00047  G00138  v1  G00042  G00317  G00618  G00052  G00619)  (G00617  G00618  G00052 
G00619  G00048  G00139  V3  G00044)  (G00043  V6  G00138  G00049  G00701  G00055  G00702  G00703)  (G00701 
G00055  G00702  G00703  G00045  V8  G00139  G00050)  (G00138  G00049  G00042  V5  G00782  G00783  G00784  G00054) 
(G00782  G00783  G00784  G00054  G00139  G00050  G00044  V7)) 
(G00042  G00043  G00044  G00045  V5  V6  V7  VB) 
(V1  V2  V3  V4  G00042  G00043  G00044  G00045) 
(HORIZONTAL  R-L-VERT1CAL  F-B-VERTICAL> 

SOTPIECE: 
TOPPIECE: 
SLICES: 
DEPTH:  3 
WlDTS:  3 
HEIGHT  :  3 
(3  3  3) 
THREE-D: 
TOP: 
(V5  V6  V7  VB) 
80TTOM: 
LEFTSOE:  (V1  V3  V5  V7) 
(V1  V2  V5  V6) 
FRONT: 
RIGHTSOE: 
BACK: 
(V3 
NAME  :  8LK 
PIECEOI  ((V1  V2  V3  V4  V5  V6  V7  V8)) 

(V2  V4  V6  V8) 
V4  V7  v8) 

(Vl  V2  V3  V4) 

OBJO 

HOW-MANY  :  8 
TYPE'  PIECES 

