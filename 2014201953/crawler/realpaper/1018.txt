Coalitions in Action Logic

Stefano Borgo

Laboratory for Applied Ontology

ISTC-CNR, Trento, Italy

borgo@loa-cnr.it

Abstract

If modal logics for coalitions need to be applied,
one must know how to translate coalition power
into agents’ actions. To these days, the connec-
tion between coalition power and the actions of the
agents has not been studied in the literature. This
paper ﬁlls the gap by presenting a semantic trans-
lation from Pauly’s Coalition Logic to a (fragment
of an) action logic. The interpretation of the empty
coalition in Pauly’s system and the representation
of the notion of ability are discussed.

Keywords: modal logic, coalitions, coordination and coop-

eration, multiagent systems, concurrency

Introduction

1
In the last decade, there has been increasing interest in log-
ics suited for reasoning about groups of agents [1; 9; 4; 11;
10] and some systems emerged as paradigmatic in this area.
Among these, Pauly’s Coalition Logic [8; 9] seems to identify
the core properties of coalitions and it is practically taken as
a parametric system to verifying the adequacy of other logics
in this area.

Generally, these modal logics for coalitions address the re-
lationship between models and relative expressivity of the
systems without tackling the relationship between coalition
power and each agent’s actions. They essentially capture im-
plicit coalition power as in “coalition C can enforce proposi-
tion ϕ”, which here we contrast with logics of explicit coali-
tion power, “coalition C, doing such and such, can enforce
proposition ϕ”. The relationship between these two types of
systems must be studied if we want to be able to use the gen-
eral view provided by coalition logics in frameworks where
actions and their consequences can be evaluated (cf. [10]).
The study of such a relationship is the goal of this work.

The ﬁrst issue is the choice of the target language that can
relate coalition power to agents’ actions. One way to rep-
resent coalition power is to introduce a unary modality with
two indices, say [C, a], where C is a coalition and a is an ac-
tion; informally, given a proposition p, formula [C, a]p stands
for “coalition C can enforce p by performing action a”. If
a coalition C is capable of enforcing p, we need a coalition
action to express this fact in the language. If a model has n

possible worlds, there are 2n distinct subsets of worlds and
(roughly) the same number of coalition actions are needed to
effectively capture C’s power in this model.

A way out is to refer to actions without actually naming
them. This seems to match the general idea of Coalition
Logic since, informally, what it captures is not “action such
and such performed by C enforces p” but “C has a way to
enforce p”, i.e., “there exists a coalition action for C to en-
force p”. This latter approach guarantees a concise language
by introducing quantiﬁers. We can implement it in two ways:
on the one hand using variables for coalition actions and, on
the other hand, using variables for agent actions. At a closer
analysis, the ﬁrst option gives us [C,∃x] which does not differ
in expressive power from Pauly’s coalition modality [C].

The other option is what we study in this paper and requires
a logic with new features. Such a logic has already been stud-
ied with other motivations in [3]. Here we isolate a fragment
of that system and show how to translate coalition logic in it.
Overview: sections 2 and 3 present the coalition logic
(CL ) and the action logic (AL). Section 4 discusses the as-
sumptions of the translation and deﬁnes the coalition action
logic CAL. Sections 5 and 6 give the model correspondence.
Section 7 discusses the approach and the notion of ability.
2 The Coalition Logic CL
The coalition logic CL [9] is a modal system for reasoning
about groups of agents. The logic is developed to formally
prove what a coalition of agents can bring about in a multi-
agent system. The semantics associates an (extensive) game
of perfect information to each state in the system. The central
notion is effectiveness: a coalition of agents is effective for a
set of states in a game if the coalition can guarantee that the
system will necessarily move to one state in the set [7].
The language of CL is a type of propositional multi-modal
logic. It is built out of a countable set of proposition iden-
tiﬁers PropId, with ⊥ ∈ PropId, and contains 2|N| modal
operators for some ﬁxed ﬁnite set N. The modality markers
are the subsets of N: [C] is a modality in CL if and only if
C ⊆ N. Formulas in CL are deﬁned inductively:
a) all elements of PropId are formulas (atomic formulas)
b) ϕ ∨ ψ and ¬ϕ are formulas if ϕ and ψ are formulas
c) [C]ϕ is a formula if C ⊆ N and ϕ is a formula

IJCAI07

1822

The intuition behind the formalism is that the modal oper-
ator [C] expresses the power of the group C of agents. The
formula [C]ϕ states that the agents in C, acting as a coalition,
can enforce ϕ no matter what the remaining agents do.

then (s, C1 ∪ C2, X1 ∩ X2) ∈ R

The semantics is based on game frames [9] that here we
dub standard coalition frames. Note that standard coalition
frames are not Kripke frames because modalities in CL do
not satisfy the normality condition, i.e, they do not distribute
over implication.
Deﬁnition 2.1 (Coalition Frame)
A Coalition Frame for a set N is a pair FN = (cid:7)W, R(cid:8) where
W is a non-empty set (the set of states) and R is a subset of
W × P(N) × P(W ). Furthermore, for all s ∈ W , C ⊆ N,
and X, X(cid:2) ⊆ W , R satisﬁes the following:
I) (s, C,∅) (cid:10)∈ R
II) (s, C, W ) ∈ R
III) If (s,∅, X) (cid:10)∈ R, then (s, N, W \ X) ∈ R
IV) If X ⊆ X(cid:2) and (s, C, X) ∈ R, then (s, C, X(cid:2)) ∈ R
V) If C1 ∩ C2 = ∅, (s, C1, X1) ∈ R, and (s, C2, X2) ∈ R,
Pauly [9] introduces R as a function R : W → (P(N) →
P(P(W ))). The two deﬁnitions are equivalent.
Proposition 2.1 (Coalition monotonicity) For all s ∈ W
and C ⊆ C(cid:2) ⊆ N, (s, C, X) ∈ R → (s, C(cid:2), X) ∈ R.
Deﬁnition 2.2 (Coalition Structure)
A Coalition Structure for a set N is a triple MF =
(cid:7)W, R, (cid:2)·(cid:3)(cid:8) where:
- (cid:7)W, R(cid:8) is a coalition frame FN ;
- (cid:2)·(cid:3) is a valuation function PropId (cid:14)→ P(W ) s.t. (cid:2)⊥(cid:3) = ∅.
Since N is ﬁxed in advance, we drop it in FN . Also, we
write R(C) for the set of pairs (s, V ) such that (s, C, V ) ∈ R
and R(s)(C) for the set of sets V such that (s, C, V ) ∈ R.
Fix a coalition structure MF and a state s. We write
MF , s |= ϕ to mean that the CL -formula ϕ is true (equiva-
lently, satisﬁed) at state s of structure MF .
1) MF , s |= p if s ∈ (cid:2)p(cid:3) (for p atomic)
2) MF , s |= ¬ϕ if MF , s (cid:10)|= ϕ
3) MF , s |= ϕ ∨ ψ if MF , s |= ϕ or MF , s |= ψ
4) MF , s |= [C]ϕ if (s, C,{s(cid:2) ∈ W | MF , s(cid:2) |= ϕ}) ∈ R
We write MF |= ϕ to mean that formula ϕ is valid in
MF , that is, it is true at each state of MF . A coalition model
for a set of formulas Σ in CL is a structure MF such that all
formulas ϕ ∈ Σ are valid in MF . We write F |= ϕ to mean
that ϕ is valid in each model based on frame F.
The interpretation of modal operators in CL follows the ap-
proach called minimal models [5], cf. clause 4). From condi-
tion I) on relation R, a structure for CL is serial with respect
to all the modalities.
Axioms for Coalition Logic:
(1) ¬[C]⊥;
(2) [C](cid:15)
(3) ¬[∅]¬ϕ → [N]ϕ;
(4) [C](ϕ ∧ ψ) → ([C]ϕ ∧ [C]ψ
(5) let C1 ∩ C2 = ∅
([C1]ϕ1 ∧ [C2]ϕ2) → [C1 ∪ C2](ϕ1 ∧ ϕ2)
CL is determined by the class of coalition structures [9].

3 The Action Logic AL
We consider the multi-agent modal logic given in [3]. This
language has the characteristics of merging modalities and
quantiﬁers to model true concurrency, and was shown to be
complete and decidable with respect to Kripke semantics. For
our task, we will apply the fragment of this system selected
below and that we dub AL.
Fix a set PropId of proposition identiﬁers, with ⊥ ∈
PropId, and a disjoint set of variables, Var. We will use pi
for proposition identiﬁers and xi for variables.
Deﬁnition 3.1 (Modality Marker for AL)
A modality marker for AL is a k-column of quantiﬁed vari-
ables

Qi ∈ {∀, ∃}

Q1x1
Q2x2

..

Qkxk

To maintain a direct connection1 with [3], no variable can
occur more than once in a modality marker.
The set of formulas for AL is the smallest set satisfying the

following clauses:
a. all elements of PropId are formulas (atomic formulas)
b. ϕ ∨ ψ and ¬ϕ are formulas if ϕ and ψ are formulas
c. [M]ϕ is a formula if M is a modality marker and ϕ is a
(From this, all AL formulas turn out to be closed.)

formula

There is an obvious bijection between the set of modality
markers and the set of modal operators in the language. We
will use the two notions indifferently.
Deﬁnition 3.2 (k-Action) Given a set Act of actions, a k-

α1
α2
..
αk

for AL is a triple

with αi ∈ Act.2
action is any column of k elements
Deﬁnition 3.3 (Multi-agent Kripke Frame for AL)
A Multi-agent Kripke Frame
K = (cid:7)W, Act, R(cid:8) where:
- W is a non-empty set (the set of states),
- Act is a non-empty set (the set of actions), and
- R is an (accessibility) relation mapping k-actions A, over
Act, to binary relations on W : R(A) ⊆ W × W.
Deﬁnition 3.4 (Multi-agent Kripke Structure for AL)
A Multi-agent Kripke Structure for AL is a 4-tuple
MK = (cid:7)W, Act, R, (cid:2)·(cid:3)(cid:8) where:
- (cid:7)W, Act, R(cid:8) is a multi-agent Kripke frame K;
- (cid:2)·(cid:3) is a valuation function PropId (cid:14)→ P(W ) s.t. (cid:2)⊥(cid:3) = ∅.
In the remaining of the paper, we use the terms Kripke
respectively) to refer to multi-agent

frames (structures,
Kripke frames (structures).
Deﬁnition 3.5 (Instances) Fix a k-action A and a modality
marker M. A(i) (M(i), resp.) is the i-th entry of A (M). For
each j, we say that A(j) instantiates the j-th variable of M.

1This connection is a central motivation for this work (section 7)

and justiﬁes our use of columns as modality markers.

2In [3] these are called “basic k-actions.”

IJCAI07

1823

(1)

(3)

Fix a Kripke structure MK and a state s. Relation |= is de-
ﬁned recursively for MK as follows:
1. MK, s |= p if s ∈ (cid:2)p(cid:3) (for p atomic)
2. MK, s |= ¬ϕ if MK, s (cid:10)|= ϕ
3. MK, s |= ϕ ∨ ψ if MK, s |= ϕ or MK, s |= ψ
4. Let x1, . . . , xr (r ≥ 0) be all the existentially quantiﬁed
variables in M and let xj occur at M(ij),
MK, s |= [M]ϕ if
∃α1, . . . , αr ∈ Act (αm, αn
not necessarily distinct) such that for all k-action A with
A(ij) = αj (i.e., αj instantiates xj in M) for all j ≤ r, if
(s, s(cid:2)) ∈ R(A) then MK, s(cid:2) |= ϕ.
We write MK |= ϕ to mean that formula ϕ is valid in MK,
that is, it is true at each state of MK. A Kripke model for a set
of formulas Σ in AL is a structure MK such that all formulas
ϕ ∈ Σ are valid in MK. We write K |= ϕ to mean that ϕ is
valid in each model based on frame K.

Let k be the number of agents in the multi-agent system
one wants to model. Fix an arbitrary order of the agents and
let A1 be the ﬁrst agent, A2 the second agent, . . . , Ak the k-th
agent. Technically, a formula [M]p with existential entries
i1, i2, . . ., is true in a state s when there exist values for the
existentially quantiﬁed variables such that no matter the val-
ues selected for the universally quantiﬁed variables, the cor-
responding k-action brings (through R) only to states veri-
fying p. From the point of view of a multi-agent system, a
formula [M]p is true if the agents Ai1, Ai2, . . . (those whose
positions correspond to existential entries of M) can perform
a set of actions that force p to be veriﬁed no matter the actions
executed by the remaining agents. (The general perspective
behind AL is presented in [2].)
4 The Coalition Action Logic CAL
In this section, we analyze the relationship between CL and
AL. A byproduct of this comparison is the clariﬁcation of a
common misunderstanding on the notion of coalition in CL .
At the core of Coalition Logic there is the notion of effec-
tiveness which is taken from the theory of social choice [7].
This notion captures the case of a group of agents that can
force the system to evolve to states where some given prop-
erty holds, no matter what the other agents do. The actions of
these agents are thus effective in achieving the goal. Adopting
such an interpretation, one assumes that the realization of the
property is a common goal for the agent in the coalition and
that they are capable of and intend to coordinate their actions.
As a slogan, one can say that Coalition Logic studies the ex-
istence of a joint strategy for a common goal (the strategy
itself is unspeciﬁed and possibly unknown). This approach is
part and parcel of the view proposed by Coalition Logic, i.e.,
that of a system as a whole where the references to agents are
more a way of speaking at the informal level than an effective
(no pun intended) necessity.
Recall the informal reading of [C] in CL : formula [C] p
stands for “the group C of agents has the power to enforce
a state where p holds.” Assume that there are k (k ≥ 1)
agents in the multi-agent system and that an ordering of the
agents has been ﬁxed. Let agents A1, A2, . . . , Ar form group

IJCAI07

1824

C. From the semantics of AL, it is natural to associate [C] p
with the following formula of AL (let p be a formula in both
CL and AL):

⎤
⎥⎥⎥⎦ p

⎡
⎢⎢⎢⎣

∃x1∃x2
..∃xr∀xr+1
..∀xk

(cid:8) ∀x1∀x2

Thus, we can identify this set C with the set of indices
{1, . . . , r}. The modality in (1) is not normal, due to the ex-
istential quantiﬁers occurring in it, although all its instances
are. This fact is at the core of the connection between CL
and AL. However, things do not work quite right. Exploiting
the previous correspondence, we connect modality [∅] (for the
empty coalition) to

(cid:9)

..∀xk

(2)
Note that [∅] can bring about non-trivial consequences.3
Since in AL only agents have this power and since [∅] cor-
responds to a coalition with no member, the correspondence
given by (2) falls short to model the CL modality.4 There are
two possible ways out: to enrich the formalization of CL by
constraining further modality [∅] or to accept (and motivate)
the above peculiarity of CL by capturing it in the translation.
The two choices have different consequences. Here we fol-
low the second option. (For the ﬁrst, proceed according the
method given below using operators (1) and (2).)
The correspondence we formalize is between a CL system
with k agents and an AL system with k + 1 agents as follows

(cid:9)

(cid:8) ∃x0∀x1

..∀xk

;

(cid:9)

(cid:8) ∃x0
[{i1, .., ir}] ∼=
Qj = ∃iff j ∈ {i1, .., ir}

Qkxk

Q1x1

..

[∅] ∼=

In this way, the new agent (associated to x0 in row 0) is al-
ways in the coalition group. If the coalition C is empty, then
the agent at row 0 is the only member of the corresponding
coalition in CAL. What is the role of the new agent? For-
mally, it makes the translation possible since it allows to dis-
criminate applications of the [∅] operator. Informally, it jus-
tiﬁes the fact that an “empty coalition” can bring non-trivial
consequences. The 0-th agent plays the role of the environ-
ment of the system (or nature for a more suggestive read-
ing) whose power corresponds to that of the empty coalition
in CL . In short, we can say that the axiomatization of CL
makes sure that a coalition can force some state provided the
environment plays on its side.

Since the agents in a coalition, say A0, A1, . . . , Ar, act ac-
cording to a joint strategy, the choices at the existential entries
(here entries at columns 0 to r) have to be made allowing
full coordination. This means that the existentially quanti-
ﬁed variables x0, x1, . . . , xr are instantiated at the same time,
3This observation does not apply when modality [∅] is forced to

be universal, i.e., if for all s, (s,∅, X) ∈ R implies X = W .
4An orthogonal issue is the normality of modality (2) which, gen-
erally speaking, might not be a desired property for [∅], although it
is forced by the CL system of section 2.

i.e., sequentially as they were forming an unbroken preﬁx
list bounded by a unique existential quantiﬁer. Furthermore,
the joint strategy of the agents does not depend on the ac-
tions performed by the remaining agents since the agents are
acting simultaneously. That is, the instantiation of variables
x0, x1, . . . , xr does not depend on the values chosen for vari-
ables xr+1, . . . , xk. This argument illustrates that the seman-
tics inherited from CL through the translation given above,
corresponds to the semantics of AL. Needless to say that CL
and AL are equivalent on the (common) propositional frag-
ment of their languages.
Fix k + 1 variables: x0, x1, . . . , xk. We call CAL the lan-
guage AL (for k + 1 agents) restricted to operators [M] such
that M(0) = ∃x0 and M(i) = Qixi with Qi ∈ {∀,∃}.
(Note that the ﬁrst entry in a modality for CAL has index
0. In this way, we preserve the correspondence of the agents
A1, . . . , Ak in CL and in CAL.) The other characteristics of
CAL are easily inherited from section 3.
Assume CL and CAL have the same proposition identiﬁers
PropId (with ⊥ ∈ PropId). According to (3) we deﬁne a
one-to-one function τ from CL to CAL as follows
1τ ) if p ∈ PropId, then τ(p) = p;
2τ ) if ϕ = ψ ∨ χ, then τ(ϕ) = τ(ψ) ∨ τ(χ);
3τ ) if ϕ = ¬ψ, then τ(ϕ) = ¬τ(ψ);
4τ ) if ϕ = [{i1, . . . , ir}]ψ, then τ(ϕ) = [M]τ(ψ) where

M(j) is existential iff j ∈ {0, i1, . . . , ir}.5

We sometimes write [Cτ ] for the τ-image of operator [C] of
CL , i.e., τ([C]) = [Cτ ].
5 From CL -Frames to CAL-Frames
The next step is to show how this translation behaves with
respect to the truth-values of formulas. We take care of this
aspect providing a procedure that, given a frame for CL , de-
termines a frame for CAL with the following properties: (a)
the frames have the same states and (b) for all CL -formulas
ϕ, ϕ is true at a state s in the CL -frame (for some interpreta-
tion for the propositional variables) if and only if τ(ϕ) is true
at the corresponding state s in the CAL-frame (for the same
interpretation.)
Fix a set N = {1, . . . , k} and the language of coalition
logic CL . The language CAL has the same propositional
identiﬁers of CL and variables x0, x1, . . . , xk only.
Fix a CL -frame for N, say, F = (cid:7)W, RF(cid:8). The algorithm
we are going to describe consists of two parts: subalgorithm
A deﬁnes the set Act and subalgorithm B the relation RK.
These are the elements needed to isolate a Kripke frame K =
(cid:7)W, Act, RK(cid:8) for CAL.
[Subalgorithm A] With each state s ∈ W associate a
set6 Ds (Ds ∩ Dt = ∅ for all states s, t). For any state s and
set Ds, proceed as follows.
Basic case:

and use these at positions 0, 1, . . . , k (resp.ly) in all modalities.

5To fully determine τ, ﬁx k + 1 variables, say x0, x1, . . . , xk,
6The size is bounded above by 2k × |W|.

m

i1,...,im

i1,...,im

(A.0) For all (s,∅, V ) ∈ RF , ﬁx a pair < αV , (s,∅, V ) >
if and only if V = V (cid:2).
0 be the set of constants αV selected at this step.

where αV ∈ Ds and αV = αV (cid:2)
Let Ds
General case:
(A.m) For all 1 ≤ i1 < . . . < im ≤ k and
all triple (s,{i1, .., im}, V ) ∈ RF , ﬁx a pair <
∈ Ds \
αV
i1,...,im
iff V = V (cid:2) and
Ds
m−1 and αV
ij = i(cid:2)
(cid:10)
Let Ds
selected at this step.

, (s,{i1, .., im}, V )> where αV

j for j ≤ m.
m be Ds

m−1 plus the set of constants αV

= αV (cid:2)
i(cid:2)
1,...,i(cid:2)

s∈W Ds
frame of CAL.

k = Act. This will be the set of actions in the
Put
We now deﬁne relation RK ⊆ {k + 1-actions} × W × W
via subalgorithm B. Let P be the set of pairs <α, (s, C, V )>
isolated at steps (A.0), . . . , (A.k). As usual, we write s(cid:2) ∈
RK(s)(A) or (s, s(cid:2)) ∈ RK(A) to mean (A, s, s(cid:2)) ∈ RK.
[Subalgorithm B] For α ∈ Act and I = {i1, . . . , im},
let Mα,I be any k + 1-action A such that A(j) = α for j ∈
{0}∪I. Let Mα,I− be any k+1-action A such that A(0) = α
and A(j) (cid:10)= α for some j ∈ I. We start with RK = ∅.
Basic case:
(B.0) given pair < α, (s,∅, V ) > ∈ P , for all Mα,∅

- put (s, s(cid:2)) ∈ RK(Mα,∅) for all s(cid:2) ∈ V ,
- put (t, u) ∈ RK(Mα,∅) for all t, u ∈ W with t (cid:10)= s

i1,...,im

General case:
(B.m) given pair < α, (s, I, V ) > ∈ P , for all Mα,I , Mα,I−
- put (s, s(cid:2)) ∈ RK(Mα,I) for all s(cid:2) ∈ V ,
- put (t, u) ∈ RK(Mα,I) for all t, u ∈ W with t (cid:10)= s,
- put (t, u) ∈ RK(Mα,I−) for all t, u ∈ W

From section 2, for all s in W and C ⊆ {1, . . . , k}, there
exists V ⊆ W , V (cid:10)= ∅, such that (s, C, V ) ∈ RF .
Since all elements of Act have been introduced at some step
(A.0), . . . , (A.k) for some s ∈ W and because of the sec-
ond condition in (B.m), it follows that for any state s and any
k + 1-action A, there exists s(cid:2) such that (s, s(cid:2)) ∈ RK(A). In
modal logic lingo, this property tell us that any multi-agent
Kripke frame resulting from this algorithm is serial.
Having completed the deﬁnition of RK, we can ﬁnally put
the pieces together. The frame for CAL is given by KF =
(cid:7)W, Act, RK(cid:8) which is a Kripke frame for the multi-agent
logic. Our next task is to verify the properties of frames F
and KF . For this task, we will need the following lemma
which follows by induction from the previous algorithm (note
(cid:12)
the special role of action α0).
Lemma 5.1 RK

(cid:10)

(cid:11)

(cid:12)

(cid:11)

RK

=

α0
γ1..
γk

Clearly,

the two frames F = (cid:7)W, RF(cid:8) and KF =
(cid:7)W, Act, RK(cid:8) have same support. Since the languages have

α0
α1..
αk

γ1, . . . , γk with

γi = α0 if αi = α0

IJCAI07

1825

(cid:12)

(cid:11)

the same propositional variables, without loss of generality
we can use the same valuation function (cid:2)·(cid:3) for both systems.
Fix a formula ϕ of CL . If ϕ does not contain modal op-
erators, then ϕ = τ(ϕ) and the two relations RF , RK are
inconsequential for the truth-value of ϕ.
To show that (cid:7)F, (cid:2)·(cid:3)(cid:8), s |= ϕ if and only if (cid:7)KF , (cid:2)·(cid:3)(cid:8), s |=
τ(ϕ) for each sentence ϕ of CL , we proceed by induction.
Assume (cid:7)F, (cid:2)·(cid:3)(cid:8), s |= ϕ iff (cid:7)KF , (cid:2)·(cid:3)(cid:8), s |= τ(ϕ) with ϕ well-
formed formula in CL . We show that for all operators [C]
in CL : (cid:7)F, (cid:2)·(cid:3)(cid:8), s |= [C]ϕ ⇔ (cid:7)KF , (cid:2)·(cid:3)(cid:8), s |= [Cτ ]τ(ϕ),
where the relations |= refer to CL and to CAL, respectively.
Without loss of generality, let [C] = [{1, . . . , r}]. Let us
write Z =
with zi new variables ranging over Act.
Then, (cid:7)KF , (cid:2)·(cid:3)(cid:8), s |= [Cτ ]τ(ϕ) ⇔ ∃z0 . . . zr ∀zr+1 . . . zk
if (s, s(cid:2)) ∈ RK(Z) then (cid:7)KF , (cid:2)·(cid:3)(cid:8), s(cid:2) |= τ(ϕ). By induc-
tive hypothesis, the latter holds ⇔ ∃z0 . . . zr ∀zr+1 . . . , zk if
(s, s(cid:2)) ∈ RK(Z) then (cid:7)F, (cid:2)·(cid:3)(cid:8), s(cid:2) |= ϕ. Now, put V = {t |
(cid:7)F, (cid:2)·(cid:3)(cid:8), t |= ϕ}. To prove our claim, it sufﬁces to show:
V ∈ RF(s)({1, . . . , r}) iff

∃z0 . . . zr ∀zr+1 . . . zk . RK(s)(Z) ⊆ V
Deﬁnition 5.1 Given an operator [M], we write Us(α, r),
where α ∈ Act and r≥ 0, for the set of states reachable from
s through k + 1-actions A for which A(j) = α (0 ≤ j ≤ r)

z0
z1..
zk

(cid:10)

Us(α, r) =def

RK(s)

βr+1,...,βk

⎞
⎠.

⎛
⎝ α..

α
βr+1..
βk

(cid:12)

(cid:11)

α
β1..
βk

Note that, from the deﬁnition of Act and subalgorithm B,
Us(α, r) is non-empty for all α ∈ Act. By Lemma 5.1, it
sufﬁces that: V ∈ RF(s)({1, . . . , r}) ⇔ ∃α . Us(α, r) ⊆ V .
First, consider case V = ∅. From Def 2.1, condition I),
∅ (cid:10)∈ RF(s)(C). On the other hand, we already observed that
Us(α, r) (cid:10)= ∅ for all r ≤ k.

Consider now V (cid:10)= ∅.
From left to right. By recursion on the size of C we prove a
stronger claim, that is, there exists α such that Us(α, r) = V .
Case C = ∅. Let V ∈ RF(s)(∅). By construction, step
(A.0), there exists α ∈ Act such that for all βi ∈ Act, V ⊆
. Fix such an α, then V ⊆ Us(α, r). We need
RK(s)
to show V ⊇ Us(α, r). If t ∈ Us(α, r), then (s, t) has been
included in the deﬁnition of RK
for some β1, . . . , βk.
From steps (A.0) and (B.0), the minimality of RK and the
use of a different action at row 0 at each step (A.m), we have
t ∈ V . Thus, Us(α, r) = V .
Assume the statement holds for |C| < r ≤ k. We show
it holds for |C| = r. Without loss of generality, let C =
{1, . . . , r} and ﬁx V ∈ RF(s)({1, . . . , r}). By construction,
step (A.r), there exists action α such that V ⊆ Us(α, r). Let
t ∈ Us(α, r). Since at each step (A.m), a different action
is used, (s, t) must have been included while considering pair
< α, (s,{1, . . . , r}, V ) >. Thus, t ∈ Us(α, r) implies t ∈ V ,
i.e., Us(α, r) = V .

α
β1..
βk

(cid:11)

(cid:12)

From right to left. Without loss of generality, we con-
sider sets {1, . . . , r} with 0 ≤ r ≤ k. Let α be such that
Us(α, r) ⊆ V , we show V ∈ RF(s)({1, . . . , r}). Here
the recursion proceeds backward on the size of C from C =
{1, . . . , k} to C = ∅. Since we apply a backword recursion,
at step r (0 ≤ r < k) it sufﬁces to consider sets V such that
Us(α, k − r) ⊆ V and Us(α, k − (r + 1)) (cid:10)⊆ V .
Case C = {1, . . . , k}. Consider set V with Us(α, k) ⊆ V
and Us(α, k − 1) (cid:10)⊆ V . From the construction and the
Lemma 5.1, α must have been introduced at step (A.k). Let
V (cid:2) be the set for which α has been introduced. By construc-
tion, (s,{1, . . . , k}, V (cid:2)) ∈ RF so that V (cid:2) ⊆ Us(α, k). Thus,
V (cid:2) ⊆ V and, by property IV ) of RF (see deﬁnition 2.1),
(s,{1, . . . , k}, V ) ∈ RF , i.e., V ∈ RF(s)({1, . . . , k}).
Assume now that the statement holds for C = {1, . . . , r +
1}. We show it holds for C = {1, . . . , r}.
Let Us(α, r) ⊆ V and Us(α, r − 1) (cid:10)⊆ V . This condition
implies α has been introduced at step (A.r) for some set V (cid:2).
V (cid:2) ⊆ Us(α, r) follows by construction, thus V (cid:2) ⊆ V . Fi-
nally, V ∈ RF(s)({1, . . . , r}) is obtained by condition IV )
of RF (see Deﬁnition 2.1) as before.
Theorem 5.1 For any frame F, valuation function (cid:2)·(cid:3), state
s, and CL -formula ϕ

Case C = ∅ is analogous.

(cid:7)F, (cid:2)·(cid:3)(cid:8), s |= ϕ if and only if (cid:7)KF , (cid:2)·(cid:3)(cid:8), s |= τ(ϕ)

For any frame F and CL -formula ϕ

F |= ϕ if and only if KF |= τ(ϕ)
6 From CAL-frames to CL -frames
Let K be a frame for CAL satisfying (1τ )-(5τ ), i.e., the τ-
images of axioms (1)-(5).7 A frame FK for CL is obtained
by deﬁning RF to be minimal such that if V = {s(cid:2) | (s, s(cid:2)) ∈
, then (s, C, V ) ∈ RF where C =
RK(A)} and A =
{i | 1 ≤ i ≤ k and A(i) = α0}. It is easy to verify that
Theorem 6.1 For any frame K satisfying (1τ )-(5τ ), valua-
tion function (cid:2)·(cid:3), state s, and CL -formula ϕ

α0
α1..
αk

(cid:11)

(cid:12)

(cid:7)K, (cid:2)·(cid:3)(cid:8), s |= τ(ϕ) if and only if (cid:7)FK, (cid:2)·(cid:3)(cid:8), s |= ϕ

For any frame K and CL -formula ϕ

K |= τ(ϕ) if and only if FK |= ϕ

7 Discussion and Conclusions
We presented a translation between two logics of agency
that have been developed independently: a logic of coalition
power (CL ), where actions are only implicit, and (a fragment
of) a logic for groups of agents with individual actions (AL).
AL models in detail the concurrent and interactive activity of
the agents while CL coarsens the description by focusing on
groups and by disregarding individual actions. Our work pro-
vided a way to switch from one representation to the other
7Note that (2τ ) and (4τ ) are always satisﬁed in CAL-frames. Ax-
iom (1τ ) gives seriality on all the modalities. The remaining axioms
are speciﬁc to the interaction of coalitions.

IJCAI07

1826

and can also be used to reﬁne proposals like [10]. Techni-
cally, we ﬁrst isolated a fragment of AL, called CAL, which
is isomorphic to the language of CL (sect. 4). Second, we
showed that the Kripke semantics of CAL and the minimal
semantics of CL agree (sect. 5). Finally, we showed that for
each model for CL there is a corresponding CAL-model and
vice versa (sect. 5 and 6). We observe that CAL is a fragment
of a language determined by the class of multi-agent Kripke
frames [3] while CL is determined by its class of minimal
frames. Although CAL itself is not determined by the class
of K frames satisfying (1τ )-(5τ ) (note that the last axiom fails
due to the existential in row 0), it provides the needed connec-
tion between these two determined systems.
An Example
Consider a CL system with one agent and two states, say
t and n. At state t, the actual state, the agent is thirsty.
At state n the agent is not. Assume that the empty coali-
tion [∅] (corresponding to the environment in CAL) has the
power of making impossible to reach n, e.g., blocking tap
water. Thus in CL , (t,∅,{t}) ∈ R and, by II) in Def.
2.1, (t,∅,{t, n}) ∈ R. The other coalition C = [1] (that
is, the agent plus the environment) has the power to reach
n, e.g., making tap water available (by the environment) and
drinking (by the agent). Let us assume this coalition has no
other power. Then, (t,{1},{n}) ∈ R and, by II) again,
(t,{1},{t, n}) ∈ R. By subalgorithm A, we get four actions
at this state, say Actt = {α, β, γ, δ}, for the triples above (in
the given order). From subalgorithm B, (1) {t} = R( α
x )(t)
for any x ∈ Actt; (2) {t, n} = R( β
x )(t) for any x ∈ Actt;
x )(t) if x (cid:10)= γ; (4)
(3) {n} = R( γ
x )(t) for any x∈ Actt. Two observations are in
{t, n} = R( δ
order. First, the elements of Actt obtained from the algorithm
correspond to action-plans: γ at row 0 has different mean-
ing than γ at row 1. That is, these are not action-types, their
meaning depends on the agent performing them. A renaming
is needed to move from action-plans to action-types. Second,
different actions, like β
δ , may bring to the same states.
However, they capture different situations: with the ﬁrst the
environment prevents from reaching n, with the latter they
both act so that the output is not determined. Only in the
second case the result is due to a cooperation.
Ability
One important motivation for logics of groups is to study the
notion of ability. Ability may vary in strength: α-ability (ef-
fectiveness) tell us that some agents can force ϕ no matter
what the other agents do; β-ability that some agents can force
ϕ provided they know what the other agents are going to do;
and contingent ability that some agents can force ϕ provided
the other agents do nothing (see [11] and references therein).
CL focuses on effectiveness only and the interpretation of
CAL we have adopted corresponds to the same notion: α-
ability (also known as ∃∀-capability) is captured by the se-
mantic clause 4. (section 3), which is of form: “there exist
a list of actions (cid:10)α such that for all lists of actions (cid:10)β, . . .”.
Contingent ability is obtained by adding a “null action” (ε) in
CAL and substituting ε for the universal quantiﬁed variables
in the modal operators. Finally, β-ability (∀∃–capability) can-
not be captured in the semantics of CAL (cf. [2]).

γ )(t) and {t, n} = R( γ

γ and δ

The Translation
Translations from minimal to normal logics exist already [6].
We have not applied existing methods since they do not pre-
serve important aspects of the structures.
Indeed, the cor-
respondence between the worlds in the models of CL and
those in the models of CAL as well as the connections be-
tween these worlds are crucial to make explicit the relation-
ship between agents, individual actions, and coalition power.
A drawback is seen in the dimension of the target model
since the size of Act is comparable to that of RF . Of course,
one can make less distinctions. For instance at step (A.m)
one may require that a new action αV
i1,...,im is added only if
(s, I, V ) (cid:10)∈ RF for all I ⊂ {i1, . . . , im}. However, this new
clause does not do justice of the notion of coalition since [C]p
and [C(cid:2)]p, with C ⊂ C(cid:2), are now associated to the same ac-
tion. If the two coalitions enforce p using the same individual
actions, the extra agents of the larger coalition C(cid:2) are fac-
tually irrelevant. Instead, the algorithm of section 5 links the
two coalitions to two different actions. This is important to re-
late CAL (and in turn CL ) to logics that can model strategies
and plans since, generally speaking, bigger coalitions may
have more alternative strategies and plans available.

Acknowledgments
Work partially funded by the PAT (Trento, IT) with projects
“Mostro” and “Logical Instruments for Ontology Analysis”.
The author thanks the reviewers for their helpful comments.

References
[1] R. Alur, T. Henzinger, O. Kupferman, and M. Vardi. Alternat-
ing reﬁnement relations. In Ninth International Conference on
Concurrency Theory, LNCS 1466, pages 163–178, 1999.

Quantiﬁcational modal

[2] S. Borgo. Modal operators with adaptable semantics for multi-
agent systems. In AI*IA’05 LNAI 3673, pages 186–197, 2005.
logic with sequential
kripke semantics. Journal of Applied Non-Classical Logics,
15(2):137–188, 2005.
J. Broersen, A. Herzig, and N. Troquard. From Coalition Logic
to STIT. In W. van der Hoek, A. Lomuscio, E. de Vink, and
M. Wooldridge, editors, LCMAS 05. ENTCS, 2005.

[3] S. Borgo.

[4]

[5] B. F. Chellas. Modal Logic: An Introduction. Cambridge Univ.

Press, 1980.

[6] O. Gasquet and A. Herzig. From classical to normal logics. In
Proof Theory of Modal Logics, ALS 2, pages 293–311, 1996.
[7] M.-J. Osborne and A. Rubinstein. A Course in Game Theory.

MIT Press, 1994.

[8] M. Pauly. A logical framework for coalitional effectivity in dy-
namic procedures. Bulletin of Economic Research, 53(4):305–
24, 2001.

[9] M. Pauly. A modal logic for coalitional power in games. J. of

Logic and Computation, 12(1):149–166, 2002.

[10] L. Sauro, J. Gerbrandy, W. van der Hoek, and M. Wooldridge.
In P. Stone and

Reasoning about action and cooperation.
G. Weiss, editors, AAMAS 06, pages 185–192. 2006.

[11] W. van der Hoek and M. J. Wooldridge. On the logic of cooper-
ation and propositional control. Artiﬁcial Intelligence, 164(1-
2):81–119, 2005.

IJCAI07

1827

