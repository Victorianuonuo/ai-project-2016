Generalizing Temporal Controllability

Michael D. Mofﬁtt and Martha E. Pollack

Department of Electrical Engineering and Computer Science

University of Michigan

Ann Arbor, MI 48109, USA

{mmofﬁtt, pollackm}@eecs.umich.edu

Abstract

In this paper, we focus on extending the expressive
power of constraint-based temporal reasoning for-
malisms. We begin with the well-known Simple
Temporal Problem with Uncertainty, and incorpo-
rate three extensions: prior observability, in which
the values of uncontrollable events become known
prior to their actual occurrence; partial shrinkage,
in which an observation event triggers the reduc-
tion of a contingent temporal interval; and a gener-
alization of partial shrinkage to requirement links,
making it possible to express certain types of uncer-
tainty that may arise even when the time points in a
problem are themselves fully controllable. We de-
scribe levels of controllability in the resulting for-
malism, the Generalized STPU, and relate this for-
malism to related developments in disjunctive tem-
poral reasoning. Throughout, we motivate our ap-
proach with simple, real-world examples that illus-
trate the limitations of existing formalisms and the
ﬂexibility of our proposed extensions.

Introduction

1
Several recent studies have addressed the problem of un-
certainty in constraint-based temporal reasoning [Vidal and
Ghallab, 1996; Vidal and Fargier, 1999; Morris et al.,
2001]. In this line of research, traditional temporal networks
[Dechter et al., 1991] are extended to include two classes
of time points: controllable ones, whose time of occurrence
can be set by the execution agent, and uncontrollable ones
that are instead determined by an external force, often called
“Nature”. As a result, the problem of consistency is trans-
formed into one of controllability. Recent efforts have made
signiﬁcant progress toward increasing both the expressiv-
ity [Venable and Yorke-Smith, 2005] and efﬁciency [Morris
and Muscettola, 2005] of constraint-based temporal reason-
ing with uncertainty.

However, signiﬁcant limitations in expressive power do ex-
ist in the formalisms developed to date. In particular, they
have all assumed that temporal uncertainty is resolved in a
speciﬁc way: the execution agent discovers the duration of
a contingent link only at the exact moment of its conclusion
(or equivalently, it discovers the time of a uncontrollable time

point only at the time of its occurrence). This is not an ac-
curate reﬂection of how such knowledge is obtained in many
practical situations: one often learns the time of an initially
uncertain event before its actual execution, and can use that
knowledge to make informed decisions about the remainder
of the plan. In addition, one may acquire only partial infor-
mation about the time of an upcoming event. Finally, and
perhaps surprisingly, certain varieties of uncertainty may ex-
ist even for problems that should be modeled entirely with
controllable time points, something that again cannot be cap-
tured by previous formalisms.

In this paper, we generalize the problem of controllabil-
ity in constraint-based temporal reasoning. We begin with
the Simple Temporal Problem with Uncertainty, an increas-
ingly popular framework that models uncertain events and
contingent constraints. We then consider three progressive
extensions to this formalism. The ﬁrst introduces the notion
of prior observability, in which the values of uncontrollable
events become known prior to their actual occurrence. The
second captures situations in which an observation event trig-
gers the reduction of a contingent temporal interval, a form
of partial observability that has not yet been captured in pre-
vious work. The third and ﬁnal extension generalizes this
notion to the requirement links, making it possible to express
certain additional types of uncertainty. Finally, we draw rela-
tionships between our extended framework and related de-
velopments in disjunctive temporal reasoning, and suggest
promising avenues of continued research. Throughout the
text, we make use of practical, real-world examples that illus-
trate the limitations of existing formalisms and the ﬂexibility
of our proposed extensions.
2 Background
2.1 Simple Temporal Problems
The Simple Temporal Problem [Dechter et al., 1991] (STP) is
deﬁned by a pair (cid:2)X, E(cid:3), where each Xi in X designates a
time point, and each Eij in E is a constraint of the form

lij ≤ xi − xj ≤ uij

with xi, xj ∈ X and lij, uij ∈ (cid:6). An STP is said to be
consistent if there exists a solution S : X → (cid:6) that satisﬁes
all constraints in E.

Each STP has an associated graph-based encoding, which
contains a node for each time point, and a directed edge for

IJCAI-07

1985

each inequality having weight uij or −lij (depending on its
direction). An STP is consistent if and only if its correspond-
ing graph contains no negative cycles; this can be determined
in polynomial time by computing its All Pairs Shortest Path
matrix and examining the entries along the main diagonal.
2.2 Simple Temporal Problems with Uncertainty
The STP models situations in which the agent in charge of
plan execution is in complete control of all time points. The
Simple Temporal Problem with Uncertainty (STPU) is an ex-
tension of the STP that relaxes this assumption. Speciﬁcally,
the STPU is deﬁned as a tuple (cid:2)XC, XU , E, C(cid:3), where:
• XC and XU are sets of controllable and uncontrollable
time points, respectively. Their union, XC ∪ XU , forms
an entire set X of time points.
• E is a set of requirement links, where each Eij is of the
form lij ≤ xi − xj ≤ uij.
• C is a set of contingent links, where each Cij is of the
form lij ≤ xi − xj ≤ uij and xi ∈ XU .1

The contingent links in the STPU can be regarded as repre-
senting causal processes whose durations are uncertain, and
thus their endpoints (the uncontrollable time points) are de-
termined by some external force. The remaining time points
are in the control of the agent, who is charged with the task
of assigning them in such a way as to satisfy the requirement
links.

It is often convenient to refer to a projection p of the STPU
[Vidal and Ghallab, 1996], which is simply an STP obtained
by replacing the interval of each contingent link [l, u] with a
particular ﬁxed bound [b, b] where l ≤ b ≤ u. A schedule T
is deﬁned as a mapping

T : X → (cid:6)

where T (x) is the time of time point x. A schedule is deemed
consistent if it satisﬁes all links. The prehistory of a time
point x with respect to a schedule T , denoted T{≺ x}, speci-
ﬁes the durations of all contingent links that ﬁnish prior to x;
it can be determined directly from any schedule.

Finally, we deﬁne an execution strategy S as a mapping:

S : P → T

where P is the set of all projections, and T is the set of all
schedules. An execution strategy S is viable if S(p), hence-
forth written Sp, is consistent with p for each projection p.
2.3 Controllability of the STPU
With the addition of uncontrollable events and contingent
links in the STPU, the previously deﬁned notion of consis-
tency for the STP is no longer sufﬁcient.
Instead, we ex-
plore various ﬂavors of controllability, which have all been
deﬁned previously in [Vidal, 2000]. To illustrate these con-
cepts, we put forth the following example (which will later be
extended):

Example 1: ACME Appliances is delivering a new refrig-
erator to your apartment at some (unknown) time TD between
1As in prior work, we assume 0 < lij < uij < ∞ for each

contingent link, and that contingent links do not share endpoints.

 Example 1:

 T
R

 Example 2:

 T
R

[9:45, 11:15]

 T
O

[
1

0
:
3

0

, 

1

2
:
0

0
]

[

:

0
0
4
5

,
 

0
0

:

4
5

]

 T
C

[00:45, 00:60]

 T
D

 T
C

[00:45, 00:60]

 T
D

Contingent Link
Requirement Link

Figure 1: Networks corresponding to Examples 1 and 2.

10:30 and 12:00. At time TC, you begin to clean out the items
in your current fridge; to guarantee that all items can be re-
moved without any spoiling, this must happen no later than 45
minutes, and no earlier than 60 minutes, before they arrive. (cid:2)
The network corresponding to this example is depicted
graphically in Figure 1 (left). The time point TR is a tem-
poral reference point representing midnight, and is used to
express constraints with respect to wall-clock time.
Weak Controllability
An STPU is said to be Weakly Controllable if there is a viable
execution strategy; in other words, for every possible projec-
tion, there exists a consistent solution. Our example is indeed
weakly controllable; if we happen to know what Nature will
assign to TD, we can obtain a consistent solution by setting
TC to TD − x for any x between 45 and 60 minutes.
Strong Controllability
An STPU is said to be Strongly Controllable if there is a vi-
able execution strategy S such that

Sp1(x) = Sp2(x)

for each controllable time point x and all projections p1 and
p2, i.e., there exists a single consistent solution that satisﬁes
every possible projection. Our example is clearly not strongly
controllable; for instance, there is no solution for the case
when TD = 10 : 30 that will also work for the case when
TD = 11:30.
Dynamic Controllability
The most interesting and useful type of controllability is that
of dynamic controllability, a concept that exploits the tempo-
ral nature of plan execution. Speciﬁcally, an STPU is said
to be Dynamically Controllable if there is a viable execution
strategy S such that:

Sp1{≺ x} = Sp2{≺ x} ⇒ Sp1(x) = Sp2(x)

for each controllable time point x and all projections p1 and
p2. In other words, there must exist a strategy that depends
on the outcomes of only those uncontrollable events that have
occurred in the past (and not on those which have yet to oc-
cur). Our current example is not dynamically controllable,

IJCAI-07

1986

since we need to set the time of TC before we learn that TD
has occurred.

Of the three types of controllability, dynamic controlla-
bility has been the most extensively studied. Recently, it
was shown to be computable in polynomial time [Morris and
Muscettola, 2005].

3 Adding Observation Events
The concept of dynamic controllability assumes that the val-
ues of uncontrollable events become known at the same time
as their occurrence; that is, we learn when they happen, only
when they actually happen. However, as we see in the follow-
ing example, the temporal uncertainty of an event is some-
times resolved earlier than its actual execution.

Example 2: Consider Example 1; however, now ACME
Appliances agrees to phone you exactly 45 minutes before
they arrive. (cid:2)

In this new scenario, we discover the time of the uncon-
trollable event before that particular time arrives. While ob-
taining this information earlier has no impact on the weak or
strong controllability of the problem, it serves to enable dy-
namic controllability (e.g., we can begin clean out the fridge
immediately after receiving the phone call).

Fortunately, prior observability of this form can be mod-
eled with the existing STPU framework. We achieve this
by introducing an uncontrollable observation event – for in-
stance, TO – and making it, rather than TD, the endpoint of
a contingent link. A requirement link can then be introduced
between the new observation action and the original uncer-
tain event. Therefore, the act of “splicing” contingent links in
this fashion makes it possible for the agent to reason about the
foreknowledge of events. The STPU for the current example
is shown graphically in network of Figure 1 (right).

Despite the fact that our current notion of prior observabil-
ity is a mere modeling issue, this concept will prove to be
essential in extensions to follow.

4 Partial Shrinkage of Contingent Links
In the STPU, the occurrence of an uncontrollable event can
be thought of as establishing complete shrinkage of a contin-
gent link; that is, a constraint xi − xj ∈ [l, u] is squeezed to a
single point xi− xj ∈ [b, b]. However, many real-world prob-
lems demand a generalization of this mechanism, in which an
intermediate reduction is achieved. We refer to this as partial
shrinkage.

Example 3: Again consider Example 1; however, ACME
Appliances agrees to phone you very early in the morning to
inform you of within which of the three half-hour blocks they
intend to arrive (e.g., they may say “sometime between 11:00
and 11:30”). (cid:2)

Unlike Example 2, here the time of the phone call is
only a portion of the information obtained.
In addition,
there is knowledge conveyed during the observation event
that triggers the reduction of a contingent link:
the origi-
nal interval [l, u] is reduced to a subinterval [l(cid:2), u(cid:2)], where
(cid:11)= u(cid:2). (For example, the interval [10:30,12:00] may be-
l(cid:2)
come [11:00,11:30]). This reduction becomes known simul-
taneously with the execution of TO (the phone call). Unfortu-

nately, the reduction is not sufﬁcient to achieve dynamic con-
trollability. However, if ACME instead provided a 15-minute
time window on their arrival, then the reduction would sup-
ply enough information to guarantee dynamic controllability
(despite the fact that the exact delivery time would still not be
known precisely).

This scenario clearly addresses a different kind of knowl-
edge acquisition than the previous examples. Partial observ-
ability is a very general phenomenon that commonly arises
in a broad range of practical instances that involve complex
sequences of decision making. For instance, consider a Mars
rover domain where the texture of the upcoming terrain is un-
known. As the rover moves forward, it may execute a sens-
ing action to establish whether the ground will be rough or
smooth. While this information might not allow it to calcu-
late the exact travel time, it could enable the estimation of a
more accurate window on the time of arrival. The need to
model constraint “shrinkage” of this type motivates the de-
velopment of an extension to the STPU formalism.
4.1 The STPU+
We deﬁne the STPU+ as a tuple (cid:2)XC, XU , E, C, O(cid:3), where:
• XC and XU are as in the STPU (and X is their union).
• E is a set of requirement links, as in the STPU.
• C is a set of generalized contingent links, where each
Cij is of the form:
xi − xj ∈ {dij1 : [lij1, uij1], ..., dijnij
]}
, uijnij
and xi ∈ XU . Each sub-interval dijk is referred to as a
reduction.2
• O : XO → C is a mapping from observation events
to generalized contingent links, where XO ⊆ X. Each
event in XO speciﬁes (at the time of its occurrence) the
reduction of its corresponding constraint in C .

: [lijnij

Turning to Example 3, let us assume that the phone call will
occur sometime between 7:00 and 7:30. We can then encode
Example 3 as an STPU+ by creating a generalized contingent
link Cdeliv containing three possible reductions:
TD − TR ∈ {[10:30, 11:00], [11:00, 11:30], [11:30, 12:00]}
and establishing that this link will be resolved at the time of
the phone call:

O(TO) = Cdeliv

Regular STPU-style contingent links can be modeled as well
by encoding them as generalized contingent links with sin-
gleton intervals. An example of this is the contingent link on
the time of the phone call:

TO − TR ∈ {[7:00, 7:30]}

In Figure 2 (left) we provide a graphical interpretation of this
example. The generalized contingent link is labeled with each

2As will be discussed in Section 7, these generalized links re-
semble – but should not be confused with – the disjunctive con-
straints of a TCSP, DTP, or DTPU. Note also that the sub-intervals
in a generalized link may overlap, although in our examples we use
non-overlapping intervals without loss of generality.

IJCAI-07

1987

 Example 3:

[07:00, 07:30]

 T
R
[
1

 T
O

 T
R
[
1

 Example 4:

[07:00, 07:30]

 T
O

0
:
3

0
,
1

0
:
3

0
,
1

1
:
0

[
1

1
:
3

0

] v [

0
,
1

1

1
:
0

2
:
0

0
]

0
,
1

1
:
3

0

] v

1
:
0

[
1

1
:
3

0

] v [

0
,
1

1

1
:
0

2
:
0

0
]

0
,
1

1
:
3

0

] v

 T
D

 T
C

[00:45, 00:60]

 T
D

 T
C

[00:45, 00:60]

Contingent Link
Requirement Link
Observation Mapping

Figure 2: Networks corresponding to Examples 3 and 4.

of the possible reductions, and a dotted arrow is added to sig-
nify that the reduction occurs simultaneously with TO.

One might wonder why we enumerate the set of all allowed
partial shrinkages, rather than the leave the potential reduc-
tions completely unspeciﬁed. Although the latter alternative
might seem to be more general, we will see in the next sec-
tion how it precludes the possibility of generalized notions of
controllability.

5 Partial Shrinkage of Requirement Links
The generalization in the STPU+ is limited to the contingent
link, an interval whose endpoint is an uncontrollable event.
As we demonstrate in the following example, this expressive
power can be further extended to express uncertainty over
requirement links that constrain pairs of purely controllable
time points.

Example 4: Consider another variation of Example 3. This
time, ACME tells you to call them sometime between 7:00
and 7:30. When you do, they’ll tell you which half-hour block
works best for them, but then allow you to specify the exact
time in that block for delivery.3 (cid:2)

Note that in this ﬁnal variation (depicted in Figure 2 right),
all events involved – including the phone call (TO) and the
delivery time (TD) – are both controllable. Yet there is still
uncertainty that can only be resolved dynamically, i.e., dur-
ing the execution of the plan. In particular, you do not know
what constraint on delivery time must be satisﬁed prior to
the phone call, even though the exact time is ultimately up
to you. Further, the nature of this uncertainty interacts di-
rectly with the level of controllability that can be achieved.
For instance, our current example is dynamically controllable
even with half-hour intervals, as we can decide TD and thus
TC once the delivery interval becomes known. However, if
instead our phone call had to be placed at 10:20, we would

3If this example seems contrived, imagine a situation in which a
friend says that he wants to get together this weekend, but isn’t sure
yet whether he has to work on Saturday or Sunday. Once he ﬁnds
out, he calls you, and lets you select the time to meet on his day off.

have a problem if ACME selected the interval [10:30, 11:00]:
even though we can choose to schedule the delivery as late as
11:00, we now only have 40 minutes to clean out the fridge
(whereas we need 45).

We can now see the advantage of explicitly specifying the
set of allowed reductions. In the current example, because we
know up front that the possible resolutions of the TR → TD
link are each a half-hour in length, we are able to determine
that the problem is dynamically controllable. If, instead, any
arbitrary reduction were possible, we could never conclude
this: indeed, in the worst case, the “reduction” might not re-
sult in any shrinkage at all.4

6 The Generalized STPU
We
the Generalized
(cid:2)XC, XU , E, C, O(cid:3), where:

deﬁne

a

STPU as

tuple
• XC and XU are as in the STPU (and X is their union).
• E is a set of generalized requirement links, where each
Eij is of the form:
xi − xj ∈ {dij1 : [lij1, uij1], ..., dijnij : [lijnij , uijnij ]}
• C is a set of generalized contingent links, where each
Cij is of the form:
xi − xj ∈ {dij1 : [lij1, uij1], ..., dijnij : [lijnij , uijnij ]}
and xi ∈ XU .
to generalized links, where XO ⊆ X.

• O : XO → E ∪ C is a mapping from observation events

In the Generalized STPU, we augment both requirement
links and contingent links in an identical fashion, expanding
them from single intervals to sets of intervals (the reductions),
and associating the moment at which a single reduction is se-
lected with observation events. The deﬁnitions of projection
and schedule can remain unchanged from the STPU. In ad-
dition to these, we introduce a new notion, an observation
trace v, which is a record of the generalized link reductions
dynamically selected (by Nature):

(cid:2)L1, d1k1(cid:3), ...,(cid:2)Ln, dnkn(cid:3)

where L = E ∪ C is the set of all generalized links. We also
need to extend the notion of a prehistory: T{≺ x} (the pre-
history of x with respect to schedule T ) now speciﬁes both
the durations of all contingent links that ﬁnish prior to x, and
the selected reduction of all generalized links whose associ-
ated observation event occurs before x.

Finally, we deﬁne a generalized execution strategy S to be

S : P × V → T

a mapping:
where P and T are as before, and V is the set of all possible
observation traces. A generalized execution strategy S is vi-
able if S(p, v), henceforth written Sp,v, is consistent with p
and v for each mutually consistent pair of a projection p and
an observation trace v.

4One could consider extensions to our formalism that allow for
more ﬂexible speciﬁcations of possible reductions (for instance, in-
volving reductions that comprise sets of intervals).

IJCAI-07

1988

6.1 Generalizing Controllability
With these new deﬁnitions in hand, we can now specify the
three levels of controllability for the Generalized STPU. A
Generalized STPU can be said to be Weakly Controllable if
there exists a viable generalized execution strategy; this is
equivalent to saying that every pair (cid:2)p, v(cid:3) of a projection p
and an observation trace v is consistent.

A Generalized STPU is Strongly Controllable if there is a

viable generalized execution strategy S such that

Sp1,v1(x) = Sp2,v2(x)

for each executable time point x, all projections p1 and
p2, and all observation traces v1 and v2. As before, this
means that a single schedule is guaranteed to satisfy all con-
straints, regardless of the choices (assignments to uncontrol-
lable events or partial shrinkages of generalized links) that
Nature makes.5

Finally, a Generalized STPU is said to be Dynamically
Controllable if there is a viable execution strategy S such
that:

Sp1,v1{≺ x} = Sp2,v2{≺ x} ⇒ Sp1,v1(x) = Sp2,v2(x)

for each executable time point x, all projections p1 and p2,
and all observation traces v1 and v2. In other words, there ex-
ists a strategy that depends on the outcomes of only those un-
controllable events and partial shrinkages that have occurred
in the past (and not on those which have yet to occur).

7 Disjunctions, Generalized Links, and

Controllability

As mentioned earlier, there is an apparent similarity between
the reductions of a generalized (requirement or contingent)
link, and the disjuncts in a constraint of a Binary Temporal
CSP [Dechter et al., 1991] or Disjunctive Temporal Problem
(DTP) [Stergiou and Koubarakis, 1998]. However, the se-
mantics of the two types of links are in fact quite different
from one another.

Recall that the DTP is a generalization of the STP, in which
each constraint Ci may consist of a disjunction of simple tem-
poral constraints:
li1 ≤ xi1 − yi1 ≤ ui1 ∨ . . . ∨ lini
A solution to a DTP is an assignment to its time points that
satisﬁes every constraint; of course, since the constraints are
disjunctive, what is required is that some disjunct from each
constraint be satisﬁed.

≤ uini

≤ xini

− yini

In contrast, consider a Generalized STPU; for the moment,
to facilitate comparison with the DTP (which has only con-
trollable time points), assume that it is also comprised ex-
clusively of controllables. Because Nature may select any
reduction (or disjunct) for each constraint, it will be control-
lable only if there is a set of solutions, at least one of which
satisﬁes each combination of selected reductions.
In other

5It is worth noting that strong controllability can be easily dis-
proven in cases where there exists a generalized requirement link
containing a non-overlapping pair of reductions.

Agent Picks a Duration Nature Picks a Duration

s
k
c
i
P
t
n
e
g
A

t
c
n
u
j
s
i
D
a

s
k
c
i
P
e
r
u
t
a
N

t
c
n
u
j
s
i
D
a

Disjunctive
Requirement
DTP Link

Generalized
Requirement
STPU Link

Disjunctive
Contingent
DTPU Link

Generalized
Contingent
STPU Link

Table 1: Classiﬁcation of “Disjunctive” Links

words, we need to be able to satisfy each of the disjuncts in
the generalized requirement link.

Further properties of the solution set will deﬁne the level of
controllability: the Generalized STPU will be strongly con-
trollable if the set of solutions is a singleton (so that the same
assignment to controllables “works” regardless of the deci-
sions made by Nature); it will be dynamically controllable if
the solutions for sets of selections that are identical prior to
time point x make an identical assignment to x; and it will
otherwise be weakly controllable.

Interestingly, the difference in what is needed to satisfy
standard disjunctive links (e.g., of the DTP) versus general-
ized links closely parallels the difference in what is needed
to satisfy requirement versus contingent links of either ﬂavor.
Given a problem with only requirement links, what is needed
for consistency is the existence of a solution that “selects” a
particular legal duration for each constraint. However, once
contingent links are added, controllability depends upon there
being solutions that satisfy each possible combination of du-
rations that the contingent links might take.

These distinctions are summarized in Table 1. This analy-
sis reveals that there are additional scenarios that can be mod-
eled using this general approach: for example, by introducing
observation events and partial shrinkage into DTPU’s, we can
model cases in which both Nature and the agent can “pick”
reduced intervals from contingent links.

Note that just as the Generalized STPU with controllable
time points serves as a counterpart to the TCSP or DTP, the
full Generalized STPU (which allows contingent time points)
parallels the recently proposed DTPU [Venable and Yorke-
Smith, 2005].

8 Other Related Work
The addition of observation events is similar to the approach
taken in Conditional Temporal Problems [Tsamardinos et al.,
2003]. However, in that line of research, the observation ac-
tions serve to remove events from the execution plan, rather
than to specify the resolution of constraints. Furthermore,
pure temporal uncertainty is not modeled in the CTP, as all
time points are required to be controllable.

Also, there are some relationships between our General-
ized STPU and the Uncertain CSP [Yorke-Smith and Gervet,
2003], a formalism that augments a standard CSP (cid:2)X, D, C(cid:3)

IJCAI-07

1989

with a set of uncertain coefﬁcients Λ and a set of correspond-
ing uncertainty sets U. Since the presence of disjunctions
in Temporal CSPs often results in a meta-CSP reformulation
(where the constraints become meta-level variables whose
domains are their associated disjuncts), one can view Nature’s
selection of a disjunct as the assignment to a ﬁnite-domain
coefﬁcient from its respective uncertainty set. However, the
UCSP cannot model the underlying semantics of these values,
which in our case are temporal differences, nor can it model
scenarios where values are assigned online in a dynamic en-
vironment.

9 Conclusion and Future Work
In this paper, we have generalized the problem of controlla-
bility in constraint-based temporal reasoning. Beginning with
the Simple Temporal Problem with Uncertainty, we have pro-
gressively extended the formalism to take into account prior
observability and partial shrinkage of both contingent and re-
quirement links. These extensions make it possible to capture
more complex sequences of dynamic knowledge acquisition,
and even to express some types of uncertainty that arise when
the temporal events are themselves fully controllable.

This line of research opens the door to several avenues of
continued progress. First of all, our focus so far has been en-
tirely on expressive power, and signiﬁcant work remains to
be done to develop algorithms for effectively computing con-
trollability (especially dynamic controllability) in the Gener-
alized STPU. Second, our current extension requires a strong
coupling between a generalized link and a single observation
event that selects a speciﬁc reduction from within a general-
ized link; in some cases, it may be useful to allow reductions
to be spread out over multiple observation events. Also, we
believe that the formal relationship between generalized links
in our Generalized STPU and the disjunctive constraints in
the DTPU could potentially be exploited in a hybrid formal-
ism.

Acknowledgements
We thank the anonymous reviewers for their helpful and con-
structive feedback. This material is based upon work sup-
ported by the Defense Advanced Research Projects Agency
(DARPA) under Contract No. NBCHD030010 and the
Air Force Ofﬁce of Scientiﬁc Research under Contract No.
FA9550-04-1-0043. Any opinions, ﬁndings and conclusions
or recommendations expressed in this material are those of
the authors and do not necessarily reﬂect the view of DARPA,
the Department of Interior-National Business Center, or the
United States Air Force.

References
[Dechter et al., 1991] Rina Dechter, Itay Meiri, and Judea
Pearl. Temporal constraint networks. Artiﬁcial Intelli-
gence, 49(1-3):61–95, 1991.

[Morris and Muscettola, 2005] Paul H. Morris and Nicola
Muscettola. Temporal dynamic controllability revisited.
In Proceedings of the 20th National Conference on Artiﬁ-
cial Intelligence (AAAI-2005), pages 1193–1198, 2005.

[Morris et al., 2001] Paul H. Morris, Nicola Muscettola, and
Thierry Vidal. Dynamic control of plans with temporal
uncertainty. In Proceedings of the 17th International Joint
Conference on Artiﬁcial Intelligece (IJCAI-2001), pages
494–502, 2001.

[Stergiou and Koubarakis, 1998] Kostas Stergiou and Mano-
lis Koubarakis. Backtracking algorithms for disjunctions
of temporal constraints.
In Proceedings of the 15th Na-
tional Conference on Artiﬁcial Intelligence (AAAI-98),
pages 248–253, 1998.

[Tsamardinos et al., 2003] Ioannis Tsamardinos, Thierry Vi-
dal, and Martha E. Pollack. CTP: A new constraint-
based formalism for conditional, temporal planning. Con-
straints, 8(4):365–388, 2003.

[Venable and Yorke-Smith, 2005] Kristen Brent Venable and
Neil Yorke-Smith. Disjunctive temporal planning with un-
certainty. In Proceedings of the 19th International Joint
Conference on Artiﬁcial Intelligece (IJCAI-2005), pages
1721–1722, 2005.

[Vidal and Fargier, 1999] Thierry Vidal and Helene Fargier.
Handling contingency in temporal constraint networks:
From consistency to controllabilities. Journal of Exper-
imental and Theoretical Artiﬁcial Intelligence, 11(1):23–
45, 1999.

[Vidal and Ghallab, 1996] Thierry Vidal and Malik Ghallab.
Dealing with uncertain durations in temporal constraint
networks dedicated to planning. In 12th European Confer-
ence on Artiﬁcial Intelligence (ECAI-1996), pages 48–54,
1996.

[Vidal, 2000] Thierry Vidal. Controllability characterization
and checking in contingent temporal constraint networks.
In Proceedings of the 7th International Conference on
Principles of Knowledge Representation and Reasoning
(KR 2000), pages 559–570, 2000.

[Yorke-Smith and Gervet, 2003] Neil Yorke-Smith and Car-
men Gervet. Certainty closure: A framework for reli-
able constraint reasoning with uncertainty. In Proceedings
9th International Conference on Principles and Practice
of Constraint Programming (CP 2003), pages 769–783,
2003.

IJCAI-07

1990

