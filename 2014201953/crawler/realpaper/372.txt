248 

Session No.  6 Analysis of Human Behaviour 

COMPUTER PERCEPTION OF COMPLEX PATTERNS 
Edward  L.  Morofsky  and  Andrew  K.  C.  Wong 

Biotechnology  Program 

Carnegie-Mellon  University 

Pittsburgh,  Pennsylvania  15213 

Abstract 

A  software  Pattern  Perception  System,  PPS, 
motivated  by  human  perceptive  characteristics, 
is 
developed  to  recognize  and  classify  complex  line 
patterns.  This  paper  presents  the  functional 
organization  of  PPS,  as  well  as  relevant  psycho(cid:173)
logical  observations.  The  data  structure  and 
processing  methodology  involved  are  also  i l l u s(cid:173)
trated  with  a  sample  pattern.  Recursive  patterns 
are  treated,  specifically  their  representation 
and  generation. 

Introduction 

A  software  pattern  Perception  System,  PPS, 
has  been  recently  developed  for  recognizing  com(cid:173)
plex  line  patterns  by  incorporating  some  of  the 
perceptive  characteristics  observed  in  perceptual 
psychology.  This  approach  to  structured  pattern 
recognition  is  introduced  as  an  alternative  to 
the  contemporary  syntax-directed  analysis  ap(cid:173)
proaches  (1)(2)(3),  with  the  objective  of  (a)  in(cid:173)
creasing  the  f l e x i b i l i ty  and  efficiency  of  the 
system,  and  (b)  experimenting  with  various  ways 
of  enhancing  the  visual  perceptive  capability  of 
computers.  The  purpose  of  this  paper  is  to  es(cid:173)
tablish  the  psychological  relevance  of  PPS  and  to 
describe  the  functional  organization  of  the  sys(cid:173)
tem.  Examples  of  PPS  activities  related  to  re(cid:173)
cognition  and  class  formation  w i ll  also  be  pre(cid:173)
sented  and  discussed  in  this  paper.  The  detailed 
formal  information  structures  and  processing 
f a c i l i t i e s,  however,  w i ll  be  reported  In  another 
paper  by  these  authors  (4). 

At  present,  PPS  is  implemented  on  the  APL/ 
360  on-line  system  u t i l i z i ng  extensively  the  dis(cid:173)
tributive  programming  environment  available  in 
that  language.  While  the  concept  of  PPS  Is  not 
confined  by  the  programming  language,  we  should 
point  out  that  many  of  the  numerical  codes  that 
were  created  represent  a  special  symbolism  based 
on  linear  l i s ts  and  arrays. 

PPS  and  Perceptual  Psychology 

Seeing  a  pattern  implies  its  isolation  as  a 

in  addition, 

figural  unit  from  the  rest  of  the  visual  f i e l d, 
while  perceiving  it  requires, 
the 
assignment  of  an  organized  representation  to  the 
pattern  (5).  This  organized  representation  is 
referred  to  as  the  perceived  pattern  and  is  a 
product  of  the  constructive  aspect  of  perception. 
In  PPS  the  analogous  representation  of  a  pattern 
consists  of  both  a  structured  description  which 
groups  the  pattern  components  into  an  hierarchy 
and  a  local  description  of  the  components  in 
terms  of  a  limited  set  of  primitive  forms. 

Psychological  experiments  have  shown  that 

lb  the  continuity  strategy, 

different  subjects,  when  asked  to  memorize  mean(cid:173)
ingless  patterns  and  reproduce  them  later  in 
terms  of  perceptual  units,  decomposed  patterns 
into  various  sets  of  components  which  were  de(cid:173)
pendent  on  the  strategies  used  by  the  observers 
(6).  Figure  1  illustrates  three  ways  in  which 
the  pattern  given  in  Fig.  la  can  be  decomposed. 
We  call  the  strategy  associated  with  the  decom(cid:173)
position  in  Fig. 
since  each  component  is  traced  u n t il  it  termin(cid:173)
ates  at  a  free  end  or  at  a  junction  with  itself 
or  another  line.  Figure  lc  exhibits  another 
strategy  which  extracts  the  closed  perimeter  or 
outer  boundary  -  a  line  which  encloses  the  en(cid:173)
t i re  pattern  -  and  f i l ls  in  the  remaining  com(cid:173)
ponents.  A  third  strategy  operates  by  tracing 
around  the  simplest  enclosed  areas  comprising 
the  pattern.  The  components  thus  obtained  are 
shown  in  Fig.  1d,  which  differs  from  Fig.  lb  and 
lc  in  that  it  represents  planar  regions  rather 
than  lines.  Thus,  in  both  PPS  and  the  human 
perceptive  process,  a  segmentation  of  flgural 
units  is  directed  by  some  preconceived  rules,  as 
well  as  by  the  pattern  features. 

It  has  been  recognized  (5)(7)  that  compon(cid:173)

ents  or  objects  segregated  after  the  preatten-
tive  processes  provide  the  potential  framework 
for  subsequent  pattern  synthesis  and  analysis. 
In  general,  the  manner  in  which  a  pattern  is 
segmented  determines  the  reorganization  of  the 
components  into  an  hierarchical  description  and 
further  affects  the  pattern  analysis.  The  way 
in  which  components  are  organized  is  of  funda(cid:173)
mental  concern  in  cognitive  psychology  and  also 
in  the  implementation  of  PPS.  Figure  2a  shows  a 
complex  pattern  with  components  A,  B,  C,  D  and  E. 
Figure  2b  and  2c  show  two  different  hierarchical 
representations  according  to  the  choice  of  ref(cid:173)
erence  component  with  which  the  other  components 
are  grouped.  Here,  the  representation  of  Fig.2b 
is  intuitively  judged  to  be  simpler  since  it  re(cid:173)
quires  only  two  levels.  However,  when  two  hier(cid:173)
archical  representations  of  the  same  pattern 
(Fig.  3)  have  an  equal  number  of  hierarchical 
levels,  a  further  discriminating  criterion  is 
necessary  to  select  the  one  with  greater  organ(cid:173)
izational  simplicity.  At  present,  there  is  no 
objective  measure  of  organizational  simplicity 
(8).  A  method  is  needed  to  express  and  extend 
the  intuitive  judgment  used  heretofore.  The 
measure  incorporated  in  PPS,  which  has  been found 
to  be  consistent  with  intuition  and  within  the 
system, 
is  one  in  which  the  structure  exhibiting 
the  lowest  average  hierarchical  level  is  judged 
to  be  the  simplest.  This  measure  for  a  given 
hierarchy  can  be  represented  by  Lav, 
age  hierarchical  level, 

the  aver(cid:173)

Session No.  6 Analysis  of Human Behaviour 

249 

at  different  times  may  form  various  schemata  of 
the  same  pattern  (6).  The  formation  of  a  schema 
depends  on  the  choice  of  reference,  as  well  as 
the  structure  into  which  component  sets  are 
grouped.  The  susceptibility  to  variation  in  the 
structured  description  (due  to  indecision  as  to 
the  choice  of  reference)  may  be  viewed  as  an  in(cid:173)
dication  of  the  instability  of  the  organization 
of  the  perceived  pattern.  A  pattern  that  can  be 
represented  by  hierarchical  structures  of  equal 
stability  or  simplicity  is  considered  to  be  an 
ambiguous  pattern.  The  perceived  pattern  may 
then  shift  from  one  representation  to  another. 
Figure  5a  is  a  pattern  that  has  been  decomposed 
into  two  sets  of  two  components  each,  shown  in 
Fig.  5b  and  Fig.  5c,  by  the  continuity  and  outer 
boundary  heuristics,  respectively.  The  two  rep(cid:173)
resentations  have  equal  simplicity,  although  the 
decomposition  into  two  triangles  has  more  famil(cid:173)
iar  components  and  is  thus  more  frequently  seen 
as  such.  Therefore,  In  PPS,  unambiguous  patterns 
can  be  uniquely  represented  in  an  hierarchical 
structure  of  maximum  simplicity,  while  ambiguous 
patterns  may  have  more  than  one  hierarchical 
structure  of  equal  simplicity.  Once  a  represen(cid:173)
tation  of  maximum  simplicity  is  achieved  and  the 
obtained  is  much  less  than 
corresponding  L 
those  of  other  representations,  PPS  w i ll  retain 
that  as  a  stable  representation  unless  it  is  re(cid:173)
directed,  by  command,  to  consider  another  com(cid:173)
ponent  as  a  new  reference.  This  process  may  re(cid:173)
semble  the  phenomenon  of  fixation  in  which  one 
representation  completely  eliminates  a  plausible 
alternative  representation,  except  for  deliberate 
efforts  by  the  perceiver  to  reconstruct  the  pat(cid:173)
tern. 

After  the  pattern  is  synthesized  into  an 

organizational  whole,  detailed  processing  of  lo(cid:173)
cal  information  proceeds.  PPS  divides  the  lines 
into  segments  of  various  curvatures  and  records 
junctions  and  angles  at  the  same  time.  This 
processing  is  compatible  with  the  results  of  ex(cid:173)
perimental  studies  of  the  information  content  of 
lines  and  the  manner  in  which  they  are  processed. 
Hochberg  (12)  found  that  the  eye  fixates  at 
points  of  discontinuity  and  at  angles,  while  At-
tneave  (13)  showed  that  the  information  content 
of  a  contour  is  greatest  at  points  where  the  con(cid:173)
tour  deviates  from  a  straight  line.  Thus,  in  PPS 
a ll  line  components  are  expressed  in  the  form  of 
a  code  sequence  of  curve  segments,  angles  and 
junctions.  These  components,  together  with  their 
overall  interconnected  topological  structure, 
constitute  a  complete  description  of  a  pattern. 

Another  important  aspect  of  the  greater 
f l e x i b i l i ty  and  efficiency  achieved  by  PPS  in 
modelling  perception  is  its  information  storage 
and  retrieval  processes.  The  retrieval  and  re(cid:173)
cognition  processes  of  PPS, 
respected  hypotheses  of  visual  memory  (5)(14), 
consist  of  two  stages  -  primary  and  secondary. 
The  former  is  a  crude,  whollstlc  and  parallel 
"primary  process,"  whereas  the  latter  is  an 
elaborate  "secondary  process"  that  includes 

in  line  with  several 

is  the  number  of  components  at  level 
is  the  order  of  the  greatest  level. 

where  n1 
1  and  N 
Figure  3b  has  one  f i r s t - l e v e l,  three  second-lev(cid:173)
el,  two  third-level  and  one  fourth-level  compon(cid:173)
ent,  yielding  an  average  component  hierarchical 
level  of  2.43  versus  that  of  2.57  obtained  from 
the  representation  of  Fig.  3c.  Therefore,  the 
structure  with  component  A  as  reference  is  pre(cid:173)
ferred  over  that  with  component  B,  agreeing  with 
common  intuition.  The  recommended  measure, 
termed  the  simplicity  criterion  in  FPS,  tends  to 
choose  a  structure  which  groups  the  most  compon(cid:173)
ents  at  levels  near  the  reference  component.  For 
structures  with  equal  simplicity,  local  descrip(cid:173)
tions  are  required  in  the  selection  of  the  refer(cid:173)
ence. 

The  simplicity  criterion  may  sometimes  be 
superseded,  particularly  when  the  pattern  con(cid:173)
tains  a  meaningful  subpattera  (6),  i.e.,  one  that 
is  recognized  by  the  observer. 
In  such  cases,  a 
familiar  subpattera  or  a  subpattern  with  distinc(cid:173)
tive  features  may  be  extracted  as  a  unit  and  used 
to  group  the  remainder  of  the  pattern.  Figure  4a 
is  a  pattern  with  components  A,  B,  C  and  D  found 
from  the  continuity  strategy  and  Fig.  4b  shows 
the  hierarchical  structure  with  A  as  the  refer(cid:173)
ence. 
the  character  "4",  then  the  structure  of  Fig.  4c 
is  the  likely  representation,  even  though  it  has 
more  hierarchical  levels.  Of  course,  no  pattern 
is  completely  meaningless,  so  that  a  continual 
tension  is  maintained  between  organizing  a  pat(cid:173)
tern  according  to  the  simplicity  criterion  and 
organizing  around  a  more  or  less  familiar  sub-
pattern. 

If  the  observer  sees  components  C  and  D  as 

The  existence  of  hierarchical  representa(cid:173)

tions  in  human  perception  is  supported  by  retinal 
stabilization  studies  (9)(10),  which  indicate 
that  a  pattern  disappears  and  reappears  in  frag(cid:173)
ments  that  are  closely  grouped  in  a  hierarchy. 
Meaningful  or  recognizable  patterns  tend  to  re(cid:173)
main  intact  more  than  unfamiliar  ones, 
the  influence  of  previous  experience  on  percep(cid:173)
tion. 

indicating 

Eye  movement  studies  (11)  have  indicated 
that  the  preliminary  observation  of  a  painting 
or  pattern  is  an  essentially  non-directed  sur(cid:173)
vey  of  the  whole,  during  which  an  i n i t i al  repre(cid:173)
sentation  is  constructed.  Focal  attention  is 
then  brought  to  bear  for  a  more  detailed  examina(cid:173)
tion  of  interesting  features. 
processing  is  assumed,  an  objective  measure  for 
reorganizing  the  i n i t i al  representation  is  re(cid:173)
quired.  Different  observers  or  the  same observer 

If  non-directed 

250 

Session No.  6 Analysis  of Human Behaviour 

deliberate  manipulation  of  information  by  an  ac(cid:173)
tive  agent.  Thus,  remembering  is  not  only  a  pro(cid:173)
cess  of  arousing  "memory  traces,"  but  also  a  con(cid:173)
structive  process  making  use  of  the  stored  Infor(cid:173)
mation  to  build  something  new  -  a  method  similar 
to  the  combination  of  preattentive  and  "analysls-
by-synthesis"  processes  noted  in  human  perception 
(5). 

In  PPS  the  information  structure  of  the  pat(cid:173)
tern  universe  (PU),  containing  the  memory  storage 
of  pattern  classes,  and  the  organized  description 
of  a  scene  (D),  are  represented  by  a  heterogene(cid:173)
ous  array  with  well-defined  information  fields. 
By  using  hash  code  techniques,  detailed  informa(cid:173)
tion  for  each  component  in  both  arrays  can  be 
suppressed  and  reformed  when  necessary,  whereas 
the  joint  occurrence  of  specific  qualitative 
features  (or  partial  characteristics) 
in  each 
line  component  can  be  represented  by  a  product  of 
prime  numbers  known  as  the  feature  code  and 
stored  explicitly  in  both  arrays.  When  a  basic 
form  has  been  segregated  in  D,  with  its  feature 
characteristics  extracted  from  the  feature  code, 
a  parallel  search  process  on  the  PU  is  performed 
to  reduce  the  search  space  to  a  subset  of  PU  con(cid:173)
taining  those  pattern  classes  which  share  similar 
features  with  D  in  the  basic  form  of  their  refer(cid:173)
ence  components.  This  search  process,  which  op(cid:173)
erates  on  the  feature  code,  is  efficient,  paral(cid:173)
l el  and  exhaustive,  resembling  the  primary  pro(cid:173)
cessing  of  image  recall.  Besides  this  retrieval 
process  of  search  for  similarity, 
the  patterns  or 
subset  of  patterns  stored  can  be  called  by  a 
specific  name  or  a  class  name.  Regardless  of  the 
manner  in  which  a  subset  of  PU  is  called,  the 
topological  structure  of  D  Is  subsequently  com(cid:173)
pared  with  each  pattern  cell  of  the  subset  se(cid:173)
quentially,  level  by  level,  until  a  small  subset 
of  PU  is  retained  for  detailed  analysis  and  com(cid:173)
parison.  Then, 
further  details  of  components 
can  be  recalled  and  reformed  by  the  hash  code 
technique.  A  constructive  process  is  then  under(cid:173)
way.  Furthermore, 
if  a  certain  subpattern  of  a 
scene  is  identified  during  the  search, 
its  rela(cid:173)
tion  to  the  other  recognizable  patterns  or  mean(cid:173)
ingless  subpatterns  can  also  be  deduced.  Thus  in 
PPS,  identifying,  interpreting,  or  classifying  a 
pattern  (or  a  group  of  patterns)  involves 

(a)  a  crude  parallel  search  of  the  memory, 
(b)  a  sequential  search  for  structural 

similarity,  and 

(c)  a  detailed  synthesis  and  analysis  pro(cid:173)

(The  synthesis  or  constructive 

cess  after  some  images  have  been  re(cid:173)
called. 
process  is  more  obvious  when  the  ob(cid:173)
jects  being  identified  belong  to  the 
recursive  pattern  class.) 

Functional  Organization  of  PPS 

The  functional  organization  of  PPS  is  shown 
schematically  in  Fig.  6.  Here  the  major  process(cid:173)
ing  units  of  the  system  are  represented  by  round(cid:173)
ed  blocks,  while  the  external  and  internal  data 

are  represented  by  square  blocks.  Rules  or  c r i(cid:173)
teria,  external  to  the  system,  are  enclosed  in 
square  brackets  and  some  of  the  psychological 
counterparts  are  listed  in  quotations. 

The  Function  TRACE 

PPS  accepts  patterns  that  have  been  trans(cid:173)
formed  into  a  matrix  representation,  (Fig.  7), 
known  as  a  field  matrix,  of  l's  and  0's  repre(cid:173)
senting,  respectively,  the  presence  and  absence 
of  line  segments  inside  a  mesh  element.  Both  the 
triangular+  and  rectangular  meshes  are  employed 
in  PPS  in  the  representation  of  a  digitized  pic(cid:173)
ture.  A  function  called  TRACE  traces  along  line 
segments  according  to  several  available  rules. 
In  PPS,  the  starting  point  of  the  trace  process 
is  arbitrary,*  that  is,  no  global  syntax  is  re(cid:173)
quired  in  the  extraction  of  information  from  the 
field  matrix.  Components  of  the  pattern  are  then 
encoded  into  a  code  string  with  junctions  la(cid:173)
belled  and  recorded.  Thus,  code  strings  are 
f i r st  recorded  in  terms  of  bearing  segments  (us(cid:173)
ing  the  eight  bearings  to  the  eight  immediately 
adjacent  neighboring  elements)  and  junction  la(cid:173)
bels  are  later  reduced  into  sequences  of  curva(cid:173)
ture,  bearing  and  size  triplets.  These  compon(cid:173)
ent  strings, 
together  with  a  tentative  structur(cid:173)
al  description,  give  the  complete  arbitrary  des(cid:173)
cription  of  the  scene. 

-A, 

As  an  illustrative  example,  Fig.  7  is  a 
complex  pattern  representing  an  apple  outline 
interlinked  to  an  enclosed  character  "3"  shown 
with  its  associated  field  matrix.  The  field 
matrix  is  then  processed  and  in  this  case  the 
tip  of  the  stem  is  chosen  as  the  starting  point. 
During  the  trace  process,  the  function  TRACE 
assigns  separate  labels  to  each  junction,  (VIZ. 
-2, 
-5, 
-6  in  Fig.  8)  according  to 
the  order  of  trace. 
In  addition  to  labelling, 
TRACE  also  records  the  junction  type  for  each 
junction.  Here,  junctions  -2, 
-6  are  T-junctions,  whereas  -7  is  an  intersec(cid:173)
tion.  While  tracing  is  in  process,  TRACE  also 
records  the  bearing  of  each  segment  and  encodes 
both  the  junction  and  bearing  information  in  se(cid:173)
quential  codes.  Figure  10  shows  the  code  strings 
for  a ll  components. 
and  segment  bearings,  the  code  string  of  the 
apple  stem  is 

In  terms  of  junction  label 

-5  and 

-3, 

-3, 

-A, 

- 2 1 1 12 

signifying  that  it  has  three  segments  in  direc(cid:173)
tion  1,  one  in  direction  2  and  terminates  at  the 
T-junction  labelled  as  -2.  This  is  then  reduced 
to  curvature,  bearing  and  size  triplets. 

+A  triangular  scheme  is  under  development 

for  PPS  which  provides  more  segment  orientation 
and  makes  the  regeneration  of  the  pattern  from 
D  more  convenient. 

*Except  that  the  orientation  and  position 

should  be  recorded  if  the  orientation  and  posi(cid:173)
tion  of  the  picture  are  desired. 

Session No.  6 Analysis of Human Behaviour 

251 

In  this  example,  one  may  note  that  the  stem 
of  the  apple  is  chosen  as  the  arbitrary  reference 
and  occupies  level  one  of  the  tentative  hierarchy 
The  apple  outline  thus  assumes  the  second  level 
as  it  has  a  junction  (-2)  in  common  with  the 
stem.  There  are,  in  a l l,  two  third-level  compon(cid:173)
ents  and  one  fourth-level  component.  Therefore, 
in  this  arbitrary  representation  the  following 
label  notation  is  assumed 

1 
2 
3 

3 

1  -  reference  component  -  stem 
1  -  second  level  component  -  apple  outline 
1  -  third  level  component  -  T-junction 

with  "3" 

2  -  third  level  component  -  Intersects  with 

"3" 

4 
1  -  fourth  level  component  -  character  "3" 
and  the  arbitrary  topological  descriptive  string 
(ATDS)  is  as  follows: 

T-junctions. 
Intersection  of  two  components. 
Double  T-junctions  of  one  component 
attaching  to  the  other. 
Terminating  component  contained  within 
a  closed  component. 
Terminating  component  not  contained 
within  a  closed  component. 

In  the  ATDS,  each  component  Is  f i r st  listed  and 
followed  by  pairs  of  <  relation,  component >. 
Thus,  the  component  (11)  has  one  pair  and  com(cid:173)
ponent  (2  1)  has  two  relational  pairs  with  com(cid:173)
ponents  (3  1)  and  (3  2),  respectively. 
Hence, 

signifies  that  A  attaches  to  B  at  a  T-junction, 
A  being  continuous  and  B  terminating  with  B  not 
enclosed  in  A.  On  the  other  hand, 

implies  B  is  connected  to  A  in  a  double  T-junc(cid:173)
tion  with  A  continuous  and  B  terminating,  with  B 
enclosed  by  the  closed  component  A.  With  this 
tentative  topological  hierarchy,  the  ATDS  with 
a ll  its  variables  defined  ( i . e .,  (1  1),  (2  1), 
etc.)  contains  a ll  information  required  for  the 
f u ll  description  of  the  pattern. 

The  Function  REORGANIZE 

After  the  complete  description  of  a  pattern 

is  stored  in  the  system,  PPS  attempts  to  simulate 

the  second  level  of  the  perceptive  activities--
the  reorganization  of  the  image  into  a  meaning(cid:173)
ful  pattern  according  to  various  organizational 
criteria.  As  mentioned  in  the  previous  sections, 
one  of  the  criteria  PPS  uses  is  organizational 
simplicity.  With  this  criterion  the  unambiguous 
reference  chosen  is  the  apple  outline,  which  is 
also  the  only  closed  component  and  has  the  great(cid:173)
est  length  and  number  of  junctions.  Once  a  ref(cid:173)
erence  component  is  chosen,  the  function  REOR(cid:173)
GANIZE  is  able  to  transform  the  ATDS  into  a 
specific  topological  descriptive  string,  STDS, 
which  is  a  specific  topological  description  of 
the  pattern. 

In  the  previous  example,  the  choice  of  a 

new  reference  would  lead  to  a  reorganization  of 
the  hierarchy  as  indicated  by  the  following  re(cid:173)
assignment  of  hierarchical 

identifiers: 

It  should  be  noted  that  the  hierarchical  struc(cid:173)
ture  of  the  ATDS .contains  four  levels,  while  the 
STDS  contains  three. 
If  we  apply  the  simplicity 
criterion  the  ATDS  yields  an  average  hierarchical 
level  of  2.6,  while  STDS  has  an  average  hierarch(cid:173)
ical  level  of  2.0.  Thus,  as  it  should,  the  STDS 
displays  a  greater  simplicity  as  measured  by  the 
simplicity  criterion. 

Although  STDS  contains  the  complete  des(cid:173)

In  D,  columns  1  and  2 

In  like  manner,  Columns  3  and  4  to(cid:173)
indicating 

cription  of  the  pattern, 
it  is  transformed  into 
a  compact  array  for  more  efficient  processing. 
This  array,  with  well-defined  information  fields 
for  each  column,  is  called  the  description,  D, 
of  the  pattern.  The  D  resulting  from  STDS  in 
Eq.  [3]  and  component  information  from  Fig.  7, 
is  given  in  Fig.  10. 
comprise  the  referee  label  signifying  the  hier(cid:173)
archical  level  and  Index  of  the  component  re(cid:173)
spectively. 
gether  are  called  the  referent  label, 
to  which  component  the  referee  is  connected. 
Columns  1  through  A  are  termed  the  linkage  field 
as  they  l i st  which  components  are  linked. 
In  D, 
special  features  of  each  component  (such  as 
"open-endedness,"  "self-intersection,"  etc.)  are 
extracted  and  stored  explicitly  in  terms  of  the 
product  of  prime  numbers,  each  of  the  prime  num(cid:173)
bers  represents  a  distinct  component  feature. 
This  crude  component  feature  information,  ab(cid:173)
stracted  from  each  component  string, 
is  repre(cid:173)
sented  in  a  feature  code  (FC).  A  similar  junc(cid:173)
tion  code  (JC)  describes  the  type  of  junction 
and  the  relations  between  the  junction  components 

252 

Session No.  6 Analysis of Human Behaviour 

FC  and  JC  are  stored  in  columns  5  and  6  of  D  re(cid:173)
spectively.  These  codes  w i ll  later  be  used  to 
direct  the  extraction  of  a  sub-universe  of  PU  to 
reduce  the  search  space  in  the  recognition  phase. 
In  D,  the  detailed  information  of  each  component 
is  not  explicitly  stored,  but  i ts  corresponding 
hash  code  is  stored  in  column  7  of  D.  The  de(cid:173)
tailed  information  is  dumped  to  a  "character 
pool"  (a  string  of  characters)  and  is  recoverable 
(reconstructed)  when  detailed  comparison  of  com(cid:173)
ponents  is  required. 

Pattern  Class  Generation 

If  an  object  pattern  is  distinct,  unambigu(cid:173)

ous  and  unique,  such  as  a  "circle,"  "square" 
or  "apple,"  its  representation  in  D  can  be trans(cid:173)
ferred  to  the  permanent  memory  storage  to  form 
the  concept  of  square,  circle  or  apple. 
this  permanent  memory  storage  is  known  as  the 
pattern  universe,  PU.  The  generation  of  a  cell 
in  the  PU  containing  information  which  defines 
a  class  pattern  is  referred  to  as  pattern  class 
generation.  Cells  in  the  PU  are  modifiable.  New 
cells  can  be  added  and  old  cells  can  be  modified 
by  adaptive  learning  or  teaching  by  reinforce(cid:173)
ment  of  local  line  forms  or  of  the  topological 
structure  of  the  class  pattern. 

In  PPS, 

A  class  need  not  necessarily  be  named. 
the  pattern  class  of  a  PU  cell  is  named,  the 
hash  code  of  the  name  w i ll  be  stored  in  the  name 
field  (Fig.  11)  and  the  cell  can  be  recalled  by 
name. 
only  be  extracted  by  specific  features  existing 
in  its  reference  or  other  components,  or  by  simi(cid:173)
l a r i ty  of  topological  structure. 

If  no  name  has  been  assigned,  the  cell  can 

If 

In  general,  the  D  of  a  stable  pattern  of 

fixed  hierarchical  structure  is  organizationally 
similar  to  its  corresponding  PU  c e l l,  except 
that  the  PU  cell  contains  three  additional  col(cid:173)
umn  fields.  They  are:  (a)  class  name  f i e l d, 
(b)  component  status  f i e l d,  and  (c)  weighting 
factor  field. 
In  the  PU  c e l l,  the  component 
status  field  specifies  the  essential  and  non(cid:173)
essential  components  comprising  a  pattern  class 
definition.  At  the  present  stage, 
three  types 
of  status  can  be  assigned  in  the  component  sta(cid:173)
tus  f i e l d.  They  are  defined  as  follows: 

Hence,  in  "cell-apple"  of  the  PU  in  Fig.  11, 
the  apple  outline  is  essential  and  the  stem  is 
non-essential,  but  is  not  considered  to  be  an 

object  external  to  the  pattern.  This  concept  is 
important  in  discerning  an  object  embedded  in  a 
scene.  Any  additional  part,  attached  to  an  iden(cid:173)
t i f i a b le  object  and  not  corresponding  to  a  non(cid:173)
essential  component  at  its  connection  level, 
is 
considered  to  be  external  to  the  pattern.  Hence, 
PPS  is  capable  of  determining  how  an  identifiable 
pattern  is  related  to  another. 

The  weighting  field  in  the  PU  cell  contains 

the  weighting  factor,  Wij.  During  adaptive 
learning  it  updates  the  ratio  of  the  number  of 
component  occurrences  to  the  number  of  similar 
patterns  submitted.  Hence,  in  PPS,  the  process 
of  adaptive  learning  simply  implies  a  continual 
matching  of  a  set  of  given  D's  with  their  cor(cid:173)
responding  PU  cell  and  a  simultaneous  modifica(cid:173)
tion  of  the  component  weighting  factors. 
If  a 
threshold,  6,  is  imposed  on  the  weighting  factor, 
a  teaching  scheme  can  be  executed  to  modify  the 
class  concept  (15).  For  instance,  one  can  assign 
the  following  simple  rule  for  adaptive  learning 
based  on  an  updated  weighting  factor, 

is  inserted  into  the  cell  as  non-essential 

A  component  of  a  D,  assigned  by  name  to  a  PU 
class, 
if  it  fails  to  match  any  essential  or  non-essen(cid:173)
t i al  components  of  the  original  class  definition. 
If  the  new  non-essential  component  occurs  fre(cid:173)
quently  in  subsequent  D's, 
its  corresponding  W. 
in  the  PU  cell 
J 
status  in  the  class  definition  becomes  essential. 
This  happens  when  the  class  concept  of  a  certain 
object  is  changing  with  time. 

increases.  When  Wij  >  0,  its 

In  the  case  of  self-organization, 

the  pat(cid:173)
tern  name  might  not  be  submitted  to  PPS.  The 
generation  of  a  class  concept  would  then  have  to 
proceed  through  the  identification  phase. 
If  a 
D  matches  a ll  essential  parts  of  a  certain  class 
pattern, 
it  is  assigned  to  the  class.  Additional 
information  in  that  D  then  modifies  the  class  by 
inserting  non-essential  components. 
If  a  certain 
component  does  not  match  in  any  PU  c e l l,  another 
class  concept  is  introduced  by  the  insertion  of 
a  new  PU  cell  derived  from  the  D. 

Like  other  syntax-directed  analysis  schemes, 

PPS  can  also  handle  a  recursive  definition  of 
some  simple  pattern  classes. 
In  fact,  PPS  not 
only  enables  class  to  be  defined  in  a  recursive 
generative  manner,  but  also  enables  a  recursive 
class  definition  to  be  generated  from  an  object 
that  is  composed  of  recursive  components.  The 
general  strategy  for  collapsing  similar  or  recur(cid:173)
sive  components  is  as  follows: 

a)  Any  connected  set  of  components  with  a  ter(cid:173)
minator  (a  component  which  is  not  directly 
connected  with  a  component  of  greater  hier-
archal  level  than  its  own)  is  called  a  sub-
universe  of  D. 

Session No.  6 Analysis of Human Behaviour 

253 

b)  Subuniverses  are  specified  by  the  number  of 

distinct  hierarchical  levels  they  contain  and 
the  hierarchical  level  of  the  terminator. 

c)  During  pattern  class  generation,  subuniverses 
are  generated  component  by  component  starting 
from  a  terminator  (which  is  recognized  in  D 
as  a  referee  having  a  lower  level  referent 
than  i t s e l f ). 

d)  By  noting  similarity  in  the  linkage,  feature 

and  junction  fields  of  D,  topological  simi(cid:173)
larity  of  subuniverses  can  be  recognized. 

e)  Topologically  similar  subuniverses  which  con(cid:173)

tain  terminators  of  the  same  hierarchical 
level  can  be  collapsed  into  a  subuniverse  of 
an  identical  structural  class,  allowing  the 
inclusion  of  alternative  terminators 
necessary. 

if 

f)  A  pair  of  topologically  similar  subuniverses 

connected  at  corresponding  components  and 
whose  terminators  have  different  hierarchical 
levels  is  called  a  recursive  realization. 

g)  By  the  use  of  certain  rewriting  rules,  the 
pair  displaying  a  recursive  realization  is 
combined  into  a  recursive  subuniverse  with 
appropriate  labels  indicating  a  recursion 
pointer. 

h)  The  same  process  is  repeated  until  D  cannot 

be  reduced  further. 

i)  The  resulting  D  is  then  transferred  to  a  pat(cid:173)
tern  cell  which  is  called  a  recursion  pattern 
class. 

Figure  12  shows  diagrammatically  how  a  Mar(cid:173)
kov  type  transformation  is  performed  on  a  simple 
recursive  pattern.  The  transformation  continues 
until  an  irreducible  recursive  pattern  class  is 
obtained.  Figure  13a  shows  diagrammatically  a 
recursive  realization  at  a  certain  stage  of 
transformation;  Figure  13b  shows  how  the  D  is 
partitioned  into  such  a  realization  and  how  sub(cid:173)
sequent  transformation  is  performed. 
(1*  1*)  and 
(2  1*)  are  called  a  recursive  pair, 
i.e.,  (2*  1*) 
w i ll  point  to  a  component  which  can  be  recursive(cid:173)
ly  represented  by  the  pattern  identical  to  that 
subsequent  to  (1  1  ). 

Conversely,  the  reverse  productions  can  ex(cid:173)

pand  the  recursive  pattern  class  into  an  arbi(cid:173)
trary  version  of  a  class,as  well  as  recognizing 
objects  that  belong  to  the  class. 

Like  a ll  generative  grammars, 

these  produc(cid:173)
tion  rules  have  limitations  in  defining  a  speci(cid:173)
fic  class.  The  continuous  refinement  of  this 
concept  is  one  of  the  key  objectives  of  PPS. 

The  Function  RECOGNIZE 

When  a  scene  is  transformed  into  a  D  with 

both  the  FC  and  the  JC  derived  for  each  compon(cid:173)
ent,  a  recalling  process  precedes  the  recogni(cid:173)
tion  and  interpretation  phases.  The  differen(cid:173)
t i al  recalling  process  proceeds  in  the  following 
manner: 

a)  Primitive  forms  (e.g.,  closed  lines,  open-
ended  lines)  are  f i r st  recorded  for  subse(cid:173)
quent  processing.  Each  primitive  form  can 
be  a  center  of  focal  attention  and  a  poten(cid:173)
t i al  candidate  for  a  nucleation  component 
about  which  a  recognizable  subpattern  can  be 
generated. 

b)  The  primitive  form  of  the  least  hierarchical 
level  is  processed  f i r st  and  continually  ex(cid:173)
pands  to  neighboring  components  as  the  iden(cid:173)
tification  process  goes  on. 

c)  The  FC  of  the  reference  component  is  used  to 
extract  a  subset  of  PU  by  searching  in  paral(cid:173)
lel  over  the  feature  codes  of  the  reference 
components  of  pattern  cells.  This  yields  a 
subset  of  PU  for  further  matching. 

d)  Essential  components,  starting  with  those  of 

least  level,  are  then  compared  with  the  es(cid:173)
sential  components  of  the  pattern  cells  with 
respect  to  linkage, 
feature  and  junction 
fields  until  a  smaller  subset  of  pattern 
cells  is  determined.  This  process  continues 
until  a ll  essential  components  of  a  single 
PU  cell  or  a  subset  of  PU  cells  match  the 
corresponding  components  in  the  subpattern 
of  the  D.  Thus,  at  this  stage,  pattern 
classes  with  identified  topological  similari(cid:173)
ty  to  some  of  the  embedded  objects  in  the  D 
are  identified.  Further  detailed  search  for 
local  form  match  then  continues. 

e)  The  string  code  of  each  essential  component 
is  reconstructed  using  a  hash  code  function. 
The  string  matching  is  performed  by  a  scheme 
modified  from  the  matching  of  genetic  codes, 
developed  by  one  of  the  authors  (16)(17). 
Hence,  both  perfect  match  and  partial  match 
are  performed.  The  former  indicates  the 
components  are  identical,  while  the  latter 
implies  the  identification  is  fuzzy. 

f)  The  same  process  is  repeated  for  other  primi 
tive  forms  unless  they  have  been  included  in 
the  essential  part  of  the  previously  identi(cid:173)
fied  object.  Components  that  do  not  belong 
to  the  non-essential  part  of  the  PU  cell  are 
considered  as  external  to  the  object. 

In  the  "apple-3"  case,  the  apple  outline 

and  the  character  "3"  are  identified  from  their 
FC  as  primitive  forms.  Since  the  apple  outline 
is  at  the  least  level, 
it  is  processed  f i r st  and 
is  found  to  match  the  essential  component  in  the 
apple  PU  c e l l,  whereas,  the  stem  matches  only 
the  non-essential  component  and  hence,  is  con(cid:173)
sidered  as  part  of  the  apple.  The  "3"  is  then 
identified  in  a  like  manner.  The  inersecting 

254 

Session No.  6 Analysis of Human Behaviour 

(8)  Hochberg,  J.  E. 

Prentice-Hall. 

(1964)  Perception. 

(9)  Pritchard,  R.  M.,  W.  Heron  and  D.  0.  Hebb 
(1960)  Visual  perception  approached  by  the 
method  of  stabilized  images.  Canad.  J. 
Psych.,  XIV,  67-77. 

(10)  Evans,  C.  R. 

(1968)  Fragmentation  of  pat(cid:173)
terns  occurring  with  tachistoscopic  presen(cid:173)
IEEE  Conf.  Publ., 4£,  250-63,  1968. 
tation. 

(11)  Buswell,  G.  T. 

(1935)  How  We  Look  at 

Pictures.  Univ.  Chicago  Press. 

(12)  Hochberg,  J. 

(1962)  The  psychophysics  of 

pictorial  perception.  Audio-Vis.  Comm. 
Rev.,  JL0,  22-54 

(13)  Attneave,  F. 

(1954)  Some  informational 

aspects  of  visual  perception.  Psych.  Rev., 
61.,  183-193. 

(14)  Gibson,  E.  J. 

(1963)  Perceptual  learning. 

Annu.  Rev.  Psych. ,  14,  29-56. 

(15)  Nilsson,  N.  J. 

McGraw-Hill. 

(1965)  Learning  Machines. 

(16)  Reichert,  T.  A.  and  A.  K.  C.  Wong 

(1970) 

An  application  of  information  theory  to 
genetic  mutations  and  the  matching  of  poly(cid:173)
peptide  sequences. 
Theoret.  Biol.). 

(Submitted  to  J. 

(17)  Wong,  A.  K.  C.,  T.  A.  Reichert  and  B.  0. 
(1971)  A  generalized  method  for 

Aygun 
matching  amino  acid  and  unambiguous  genetic 
code  sequences. 
(Submitted  to  J.  Computers 
in  Med.  and  Biol.). 

arc  and  the  connector,  in  this  case,  do  not match 
any  of  the  non-essential  parts  in  the  apple  PU 
cell  or  the  "3"  PU  cell  and  w i ll  be  considered 
as  external  and  connecting.  Thus,  both  the 
identification  of  embedded  objects  as  well  as 
the  interpretation  of  their  connections  are  com(cid:173)
plete. 
Conclusions 

This  paper  has  presented  both  the  conceptual 

framework  and  a  partial  implementation  of  PPS. 
Although  crude  patterns  such  as  the  "apple-3" 
have  been  processed,  some  of  the  processing  meth(cid:173)
ods  and  concepts  await  further  refinement.  The 
manipulation  and  reproduction  phases  (see  Fig.  6) 
are  based  on  the  triangular  mesh  scheme.  The 
former  phase  involves  the  construction  of  a  set 
of  functions  that  can  deform  or  transform  com(cid:173)
ponents  of  an  object  D. 
The  latter  phase  then 
reproduces  the  results  in  another  field  matrix. 

Although  PPS  is  oriented  towards  developing 

computer  visual  perception, 
tioned  that  the  Information  structures  and  pro(cid:173)
cessing  methodology  developed  can  be  applied  to 
other  data  structures  which  are  multi-linked. 

it  should  be  men(cid:173)

Acknowledgement 

This  research  is  based  on  the  doctoral 

dissertation  of  Edward  L.  Morofsky  who  was  sup(cid:173)
ported  by  the  National  Defense  Education  Act  and 
the  National  Science  Foundation  at  Carnegie-
Mellon  University. 

References 

(1)  Feder,  J. 

(1969)  Linguistic  specification 

and  analysis  of  classes  of  line  patterns. 
N.  Y.  U.  Lab.  Electroscience  Research, 
Tech.  Report  403-2. 

(2)  Shaw,  A.  C. 

(1970)  Parsing  of  graph-

representable  pictures.  Journal  of  A.  C.  M., 
July,  17,  No.  3,  453-81. 

(3)  Narasimhan,  R. 

(1966)  Syntax-directed 

interpretation  of  classes  of  pictures. 
Comm.  A.  C.  M.,  9,  166-73. 

(4)  Wong,  A.  K.  C.  and  E.  L. 

forofsky 

(1971) 

Automatic  description,  recognition  and 
classification  of  complex  line  patterns, 
(draft  in  preparation). 

(5)  Neisser,  U. 

(1966)  Cognitive  Psychology. 

Appleton-Century-Crofts,  New  York. 

(6)  Djang,  S. 

(1937)  The  role  of  past  experi(cid:173)

ence  in  the  visual  perception  of  masked 
forms.  J.  Exp.  Psychol.,  20,  29-59. 

(7)  Minsky,  M. 

(1961)  Steps  toward  a r t i f i c i al 
intelligence.  Proc.  Inst.  Radio  Engr.,  49, 
8-30. 

Session No.  6 Analysis of Human Behaviour 

255 

256 

Session No.  6 Analysis of Human Behaviour 

Session No.  6 Analysis of Human Behaviour 

257 

