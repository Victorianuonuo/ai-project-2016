Session No.  14 Theorem Proving 

553 

SOLVING PROBLEMS  BY FORMULA MANIPULATION 

IN  LOGIC  AND  LINEAR  INEQUALITIES 

National  Institutes  of  Health 

Bethesda,  Maryland 

Louis  Hodes 

U.S.A. 

Abstract 

Using  formal  logic,  many  problems  from  the 
general  area  of  linear  inequalities  can  be  ex­
pressed  in  the  elementary  theory  of  addition  on 
the  real  numbers  (EAR).  We  describe  a  method  for 
eliminating  quantifiers  in  EAR  which  has  been 
programmed  and  demonstrate  its  usefulness  in 
solving  some  problems  related  to  linear  pro­
gramming. 

In  the  area  of  mechanical  mathematics  this 
kind  of  approach  has  been  neglected  in  favor  of 
more  generalized  methods  based  on  Herbrand  ex­
pansion.  However,  in  a  restricted  area,  such  as 
linear  inequalities,  the  use  of  these  specialized 
methods  can  increase  efficiency  by  several  orders 
of  magnitude  over  an  axiomatic  Herbrand  approach, 
and  make  practical  problems  accessible. 

1. 

Introduction 

As  is  common  in  a r t i f i c i al  intelligence,  the 

work  reported  here  is  of  an  interdisciplinary 
nature. 
It  involves  mathematical  logic,  linear 
inequalities,  and  symbolic  mathematics  on  a  com­
puter . 

For  the  sake  of  argument,  let  us  distinguish 

two  kinds  of  workers  in  the  area  of  linear  i n­
equalities.  There  is  the  theoretician,  who  is 
developing  new  methods  and  discovering  new  theo­
rems.  Then  there  is  the  user,  who  is  faced  with 
a  practical  problem  which  can  be  expressed  in 
some  way  at  least  piecewise  linearly.  As  a 
simple-minded  distinction  between  the  theoretician 
and  the  user  we  can  say  that  the  latter  is  in­
terested  in  questions  involving  a  fixed  number  of 
variables,  while  the  former  is  concerned  with 
questions  involving  an  arbitrary  number  of 
variables.  Using  terminology  from  logic  to  be 
made  more  precise  below  this  means  that  the 
user  is  generally  working  within  the  elementary 
theory  of  addition  on  the  reals  while  the  theo­
retician  is  generally  working  on  a  higher  level. 

In  this  paper  we  are  concerned  mainly  with 
the  user  at  the  stage  where  he  has  formulated 
his  problem  in  symbolic  terms.  This  may  or  may 
not  be  the  f i r st  stage  in  formulating  the  prob­
lem.  For  example,  he  may  f i r st  have  developed 
a  model  as  a  mathematical  idealization  of  his 
problem. 
may  be  of  a  standard  type,  for  example,  flow 
networks,  for  which  there  are  known  efficient 
solution  methods. 
a  symbolic  formulation. 

Indeed,  if  he  is  very  lucky,  the  model 

In  that  case  he  would  bypass 

Suppose,  now,  In  one  way  or  another  the  user 

has  arrived  at  a  symbolic  formulation  of  the 
problem.  We  assume  that  the  size  of  the  problem 
is  such  that  he  would  want  to  use  a  computer. 
Again,  he  may  have  a  perfectly  standard  problem 
such  as  to  find  a  solution  to  a  set  of  simulta­
neous  inequalities.  Then  he  can  use  the  relaxa­
tion  method  or  another  numerical  approach.  Or, 
if  he  can  formulate  his  problem  as  an  optimiza­
tion  problem,  he  may  conveniently  be  able  to  ex­
press  it  in  linear  programming  format  and  use 
the  famous  simplex  algorithm. 

Problems  can  arise,  however,  which  do  not  f it 
too  easily  into  the  standard  molds.  Furthermore, 
one  may  require  a  solution  in  symbolic  form.  For 
example  in  n-person  game  theory  the  set  of  solu­
tions  can  be  described  as  a  union  of  convex  poly— 
hedra,  each  of  which  is  an  intersection  of  half 
spaces,  represented  by  linear  inequalities. 

Using  formal  logic  one  can  often  represent 
one's  problem  conveniently  in  the  lower  predi­
cate  calculus  under  the  interpretation  of  addi­
In  that  case,  there 
tion  on  the  real  numbers. 
are  simple  methods  for  eliminating  quantifiers 
and  simplifying  expressions,  often  resulting  in 
the  solution  of  various  problems.  Such  methods 
were  f i r st  programmed  by  the  author  at  IBM  in 
1962  (A)  and  further  elaborated  with  a  game 
theory  application  (5).  Since  then  some  modifi­
cations  and  improvements  have  been  made.  The 
complete  methods  are  described  here  since  the 
earlier  papers  were  never  formally  published. 

Although  the  author  has  been  addressing  him­
self  to  workers  in  linear  inequalities,  the  work 
reported  here  may  also  be  categorized  as  mechan­
ical  mathematics  or  equivalently  applied  logic 
In  this  field  such  work  has  been 
on  computers. 
neglected  in  favor  of  more  generalized  methods 
based  on  Herbrand  expansion.  The  effort  on 
these  general  methods  I s,  of  course,  worthwhile 
and  productive,  but  the  neglect  is  unfortunate 
since  restricted  specific  theories  (like  addi­
tion  on  the  real  numbers)  often  allow  the  use  of 
direct,  specialized  methods  which  Increase  e f f i­
ciency  by  several  orders  of  magnitude  over  an 
axiomatic  Herbrand  approach. 

2.  EAR 

We  now  describe  the  elementary  theory  of 

addition  on  the  reals  (EAR),  or,  more  precisely, 
the  elementary  theory  of  ordered  dense  Abelian 
groups  without  endpoints. 
"Elementary"  means 
that  a ll  formulas  in  EAR  belong  to  the  lower 
predicate  calculus,  i . e .,  quantification  occurs 
only  over  variable  symbols,  and  not,  for  example, 
over  sets  of  variables.  The  formulas  in  EAR, 
to  be  defined  more  precisely  below,  are  just 
those  formulas  of  the  lower  predicate  calculus 
with  two  binary  predicates,  <  and  =,  the  opera­
tor  +,  and  at  least  two  constant  symbols, 

Session No.  14 Theorem Proving 

above illustrates desirable ambiguity. 

viation Of "Tf t1 <t2 

For  convenience,  we  use  t1  >  t2  as  an  abbre­
< t . 

This  is a statement  of the linear programming 

problem, and says that x1, . . ., x  yield an op­
timal solution.  We assume, for simplicity, that 
the aii,, b.  and c.  are all integers. 

We allow the use of the minus sign by con­
sidering any occurrence of -t in an atom as a 
convenient notation for +t on the opposite side 
of the atom. 

The linear programming problem is  stated  in 

EAR as follows: 

554 

0 and 1. 

We refer the uninitiated reader to Rogers' 

(7)  expository paper which, without presupposing 
any knowledge of formal logic, develops the 
elementary theory of dense linear order  together 
with a method due to Langford for deciding sen­
tences within that theory.  This method extends 
to EAR, as pointed out to me by A. Robinson, and 
is described below.  EAR has an unlimited set of 
variable symbols. x,y,z,x ,y  ,z  ,  . ..  ,  and real 
numbers as constant symbols, of which we will need 
only 0 and 1. 

A term in EAR is either a constant symbol or 

a variable symbol or of the form t1. + . .. + t  , 
where the t1 ,  1  <  i < n,  are terms.  These are 
the only terms. 

We write x + . .. + x, n times, as nx and 

1 + . .. + 1, n times, as n, so the following are 
examples of terms. 

(1)  2x + 3y + x 
(2)  4 + x9 

Using the commutativity of addition we see 
that there is a canonical form for terms where 
each variable symbol appears once.  Thus, 
example (1) above could be written 3x + 3y. 

An atomic formula, or atom, is any expression 
of  the form t1 = t2 or of  the form  t1  <  t2,  where 
t,  and  t2  are  terms.  There  is a  canonical  form 
for atoms where each variable symbol appears on 
at most one side of any atom.  For example 
3x + 3y < 2x would be written x + 3y < 0. We 
also allow two constant atoms: TRUE and FALSE. 

Atoms are the simplest formulas.  Non-atomic 

formulas are built from atoms by means of the 
propositional connectives;  negation, 
,  "and", 
&,  "or",  V,  "implies", ->, "if  and  only  if",**, 
as well as the universal and existential quanti­
fiers,  "for  all x", 
such that", 

, where x is any variable symbol 

, and "there is an x 

Examples of formulas are: 

Formally, we say that an atom is a formula 

and  if  f1  and  f2  are  formulas  then 

Every formula is so derived.  We delete paren­
theses to improve readability, being careful not 
to introduce undesirable ambiguities.  Example  (1) 

From the point of view of people working in 

linear inequalities  the most novel  feature of 
EAR is  the formal use of  quantifiers.  In fact, 
the elimination of quantifiers,  together with 
their bound variables,  is  the main content of  the 
algorithm described below. 

3.  A Decision Algorithm for EAR 

Suppose F(x ,  . ..  , x )  is a formula in EAR 

in which  x1,  . ..  ,  x  are the only  free  (not 
quantified)  variables.  Then the following 
algorithm yields a quantifier-free formula 
G(x1, . ..  , x )  in which x1, . ..  , x  are the 
only variables, with the following property. 
Let a,,  . ..  , a  be any n real numbers.  Then 
F(a ,  . ..  , a ) and G(a ,  . ..  , a ) are equiv­
alent in the sense that they are both true or 
are both  false.  For  example,  if  F(x)  is  the 

n 

J 

Session No.  14 Theorem Proving 

555 

formula 
would  be  the  formula  x  <  9. 

(y  <  x  +  4  &  2x  <  y  +  5)  then  G(x) 

Since  EAR  is  a  subset  of  elementary  algebra, 
Tarski's  algorithm  (8)  provides  a  method  for  elim­
inating  quantifiers.  When  applied  to  formulas  in 
EAR,  however,  Tarski's  method  is  exceedingly  cum­
bersome.  Furthermore,  no  one  has  reported  a  com­
puter  program  for  any  algorithm  to  eliminate  quan­
t i f i e rs  in  elementary  algebra  except  for  some  be­
ginnings  in  that  direction  by  Collins  (2).  On  the 
other  hand,  EAR  has  a  simple  method  and  seems  to 
be  in  the  unique  position  of  having  such  a  simple 
algorithm  along  with  a  wide  range  of  application. 

The  elimination  of  quantifiers  is  achieved  by 
systematically  replacing  selected  subformulas  by 
equivalent  formulas.  The  equivalence  may  be  pure­
ly  logical  or  may  be  a  property  of  +,  =,  <  in  the 
reals,  as  we  used,  for  example,  in  establishing  a 
canonical  form  for  atoms. 

Step  1. 

If  F(x1  , 

... 

,  x  )  is  quantifier-free, 

Step  6.  Now  f  has  connectives  &,  V  only.  Use 
the  distributive  law 
f1  &(f2
  V  f3  )  =  (  f1
f  into  disjunctive  normal  form 

  &  f2  )  V  (f1  &  f3  )  to  expand 

n 

where  each  f,  is  a  conjunction  of  atoms. 

i 

Step  7.  The  existential  quantifier  distributes 
over  disjunction.  So 

Each 
fI  can  be  written  f'I  &  fI"  where  fj  is  a 
(possibly  empty)  conjunction  of  a ll  the  atoms 
which  contain  y.  Since  f"  doesn't  contain  y, 

i  <  n,  j  >  0  is  the  number  of  atoms  of 

For  1< 
the  type  t1  =  t2  and  k1  is  the  number  of  atoms 
t2.  We  can  assume 
of  the  type  t  1< 
j1  +  k  >  0,  i . e .,  f'i  is  non-empty. 
y  appears  on  the  right  or  on  the  l e f t,  but  not 
both,  since  the  atoms  are  in  canonical  form. 

In  each  atom 

1  s 

constant  atom  TRUE.  Otherwise,  we  solve 
t 
for  y  in  the  remaining  j.  +  k 
be  the  conjunction  of  these  j,  +  k.  -1  atoms, 

for  y  and  substitute  this  expression 
-1  atoms.  Let  gI 

to  eliminate  a ll  occurrences  of  negation  save 
those  appearing  directly  before  atoms. 

Step  5.  The  remaining  negations  are  eliminated 
by  using  the  mathematical  identities: 

restored  to  canonical  form.  We  replace 

by  g1  ,  thereby  eliminating  the  quantifier. 
Now  we  consider  the  case  j,  =  0.  We  have 

Suppose  y  appears  always  on  the  right,  i . e ., 

556 

Session No.  14 Theorem Proving 

In the remaining case, for each m, p such that 

J 

(i) 
m 

y occurs on opposite sides in the atoms 
(i) 
qm  <  r  and  q 
the pair of inequalities by forming the weighted 
sum, 
equality and finally we get 

(i) 
we  eliminate  y  from 
p 

.  Each such m, p pair forms a new in­

(i) 
< 
p 

r 

Note:  Let C1 be the  coefficient of y in  the  i 
inequality,  i -  1,2.  Then the weighted  sum is 
C2 times  the  first  inequality  added  to C1 times 
the second  inequality.  In  the resultant  inequal­
ity y has coefficient C1 C2. on both sides and thus 
vanishes. 

From Step 8 we return to Step 2 to complete 

the algorithm. 

To see that Step 8 always produces an equiv­
alent formula we first maintain that in the case 
jI  >  0,  i.e.  there  is  at  least one equality,  the 
equivalence is obvious.  When j i = 0 then each 
atomic formula q  < r  , 1 <  p < k., by mathe-
matical identity,  corresponds  to a linear  inequal­
ity y  < fp (z1,...,zv)  (or  f  (z1,...,zv)  < y,  de­
pending on which side of the atomic formula y 
appears)  where f  is  a linear form and  z1.,...,z 
v 

p 

1 

We can make two observations before giving 

some examples of the algorithm. 

1. If  the  original  formula were  closed,  i.e., 

all  its variables were quantified,  then  the al­
gorithm produces a quantifier-free formula with 
no variables.  In that  case the only atoms are of 
the form 0<0,  0 = 0 , 0 < n , n < 0 ,0  = n,n = 0. 
These can be replaced by the constant atoms 
FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, 
respectively.  Then  the propositional  identities 
TRUE & FALSE ≡ FALSE, etc., can be repeatedly 
used as  the last step of the algorithm to comp-
plete the reduction of  the formula to a single 
atom, either TRUE or FALSE.  Such an extended 
algorithm provides a decision procedure for EAR, 
i.e.,  a method  for determining the truth or 
falsity of  any sentence  expressible  in EAR. 

2. With  slight modifications  of  the algorithm 

we can consider t1 >  t2  and even t1 ≠ t2 as atoms 
instead  of  as abreviations  of  \ t  <  t  and 

1  2 

t1  =  t2.  In  this  case  the  only  steps  of  the 

algorithm which can increase the length of a 
formula are expansion into disjunctive normal 
form (Step 6) and Step 8 as we will see from 
further  consideration of  the  linear  programming 
example. 

are  all  the variables  occurring  in  formula  f'i 
excluding y.  We separate the atomic formulas into 
two sets,  corresponding to inequalities 
{f  (z1,...,z  )  < y}  and  {y < f (z1,...,zv )} where 
the respective index sets S1 and S2, where m 
ranges over S1, p ranges over S  , form a partition 
of  {1  ki  }.  If  y  appears  on  the same  side  in 
every  atom then either S1 or S2 is  empty and 

can be satisfied for any z  ,...,z  by a 

sufficiently small y  if S1 is  empty  or  a suffi­
ciently  large y  if S2 is  empty.  Therefore  the 
algorithm replaces 

by TRUE. 

In the remaining case, the algorithm, by 
taking weighted sums, produces a conjunction 
corresponding  to  the simultaneous  inequalities 
fm (z1,...,zv ) < f (z.,...,z ) for all m & S1 and 
all p ε S2 ,  To show equivalence we first notice-
that  for  any  z  ,...,z  if  there  is  a  y  satisfying 

A.  Applications 

Let us now see how one may apply the algorithm 

to linear programming.  We rewrite a portion of 
the  formula  (1)  but  instead  of  the cost ∑ ci xi 
we use the variable z. 

The algorithm can be used on formula (2), 
eliminating  all  the variables  yi'  1<i<n.  The 
formula equivalent to  (2), with z as the only 
variable, must express the same mathematical 
statement  expressed  in  (2),  namely  that  z is 
less  than or  equal  to  the minimum  cost,  c,  if  it 
exists.  If no solution exists  there are 2 possi­
bilities: The constraints may be inconsistent, 
or else they may include such values of y  so 

Session No.  14 Theorem Proving 

557 

that  the  sum  ∑  ci  yi  is  unbounded  below.  Tn  the 
former  case,  formula  (2)  w i ll  reduce  to  TRUE  and 
in  the  latter  case  to  FALSE. 

Let  us  perform  some  of  the  algorithm  on 

formula  (2).  Eliminating  -►,  we  get 

Changing  universal  quantifiers  to  existential 
quantifiers  and  eliminating  negations  we  then  get 

Formula  (3)  has  the  form:  negation  followed 

by  a  string  of  n  existential  quantifiers  followed 
by a kernel consisting of a conjunction of m 
equalities  and  n+1  inequalities.  Allowing 
y  >  0 as  an atom according to observation  (2) 
above,  we  see  that  the  kernel  is  trivially  in 
disjunctive normal form as a  pure conjunction. 
is  eliminated 
Also, when one quantifier, 
according  to  the  modified  algorithm,  the  result­
ing  formula  is  s t i ll  a  pure  conjunction.  Thus, 
there  is  never  any  need  to  expand  into  disjunctive 
normal  form,  as  each  quantifier  is  eliminated  in 
turn. 

We give an example, which is given as an exer­

cise  on  the  simplex  algorithm  in Gass  (3). 

To  set  up  this  example  for  the  simplex  algo­

rithm,  according  to  the  reasonably  standard 
version  given  in  Gass,  we  convert  A  to  the 
following  equivalent  problem. 

xi  >  0 

j=l,2,3,4,5,6,7. 

Here  we  require  two  slack  variables,  x4  and 

x7 ,  an  excess  variable,  x  ,  and  an  auxiliary 
variable,  x  .  Also,  the  weight  w  in  the  object-
tive  function,  2x1  -  3x2  +  6x3  +  wx6.,  must  be 
larger  than  any  fixed  number  so  that  x6  w i ll 
vanish  in  the  so-called  phase  1  of  the  simplex 
algorithm.  We  observe  here  that  it  is  unnecess­
ary  to  go  from  statement  A  of  the  example  to 
form  B  when  using  our  algorithm  to  determine  the 
minimum  cost.  Statement  A  can  be  used  directly 
in  formula  (3)  as  follows: 

6 

Note  that  the  order  of  the  three  quantifiers 

is  irrelevant  so  any  of  the  variables  y1,y2,y3 
can  be  eliminated  f i r s t.  We  can  therefore  choose 
a  yi  that  w i ll  lead  to  the  minimum  number  of 
resulting  atoms.  We  do  this  by  counting  the 
number  of  times  each  yi  appears  positively  on 
either  side  of  an  inequality.  We  thus  get 
Table  1. 

LEFT 

RIGHT 

TABLE  1 

We  see  that  the  choice  of  y1  w i ll  yield 

3x2=6  atoms  from  3+2=5  atoms.  Either  y2  or  y3 
w i ll  yield  only  A  atoms  from  5  atoms.  So,  at 
least  at  the  f i r st  elimination,  the  formula  w i ll 
expand  less  if  we  choose  y2  or  y3. 

Let  us  pick  y2.  The  only  inequality  in  which 

y2  appears  positively  on  the  left  is 
y1  +  3y2  -  2y3  <  5.  We  eliminate  y2  between 
this  inequality  and  the  others  containing  y2 
to  obtain  the  new  formula: 

558 

Session No.  14 Theorem Proving 

So,  if  n=8  and m=4 then  we  could  end  up  with 
1,562,500  inequalities.  This  seems  the  largest 
size  that  can  be  handled  with  this  method  in  i ts 
present  form. 

We  tried  the  algorithm  on  a  dairy-feed  diet 

problem  due  to  Waugh  (9)  and  presented  in  Gass  (3). 
Here  there  were  10  variables  and  four  inequalities; 
i . e .,  10  feeds  were  combined  to  meet  A  minimum 
requirements  at  a  minimum  cost.  The  problem  as 
i n i t i a l ly  stated  proved  too  big  for  the  program. 
However,  conversion  to  the  dual  problem,  which 
had  A  variables  and  1A  inequalities,  allowed  de­
termination  of  the  minimum  cost.  Even  so,  it 
took  12  hours  on  the  PDP-10  under  a  LISP  compiled 
version  of  the  algorithm. 

The  use  of  a  linear  programming  example,  thus, 

is  not  to  advocate  use  of  this  algorithm  for 
linear  programming,  but  to  show  that  it  can  be 
used  on  practical  problems. 

The  point  we  would  like  to  emphasize  to  skep­

t i c al  readers  is  that  although  the  EAR  algorithm 
may  not  be  efficient  in  given  areas,  its  general­
ity  allows  application  to  various  problems  with 
no  programs  specific  for  each  problem  area. 

For  example,  we  can  do  non-linear  programming 

whenever  it  is  actually  piecewise  linear.  Let 
us  take  the  case  of  a  piecewise  linear  objective 
function.  These  problems  are  not  direct  appli­
cations  of  the  simplex  algorithm.  The  optimal 
solutions  may  not  even  occur  at  the  extreme  points 
of  the  constraints.  For  example,  suppose  we 
wish  to  minimize  the  maximum  of  x1  and  x2  under 
the  constraints x1 + x2  = 1, x 1 > 0, x2 > 0. 
Here,  the  optimum  value  of  the  objective  function 
is  1/2  as  opposed  to  a  value  of  1  at  the  extreme 
points. 

Piecewise  linear  functions  can  not  only  be  ex­

pressed  in  terms  of  maximum  and  minimum  as  above, 
but  also,  equivalently,  in  terms  of  &  and  V.  The 
above  example  can  be  stated  in  EAR  as  follows. 

General  non-linear  programming  can  also  be 

approximated  by  using  Chang  (1).  He  shows  how  to 
do  piecewise  linear  curve-fitting  in  n-d  linens  ions. 
After  using  Chang's  method  to  determine  piecewise 
linear  approximations,  one  can  express  the  prob­
lem  in  EAR. 

The  same  considerations  as  above  lead  to  the 

choice  of  y 

to  be  eliminated  next: 

We  emphasize  here  that  the  linear  programming 
example  is  used  as  a  familiar  problem  for  i l l u s­
trative  purposes.  There  are  two  drawbacks  in 
using  this  method  on  typical  linear  programming 
problems. 

1.  The  formulation  given  above  is  used  to 

determine  the  minimum  cost  but  not  the  complete 
solution.  Of  course,  the  minimum  cost  can  be 
used  to  verify  an  optimal  solution  or  to  deter­
mine,  exactly  how  far  from  optimal  any  feasible 
solution  i s. 

2.  The  main  drawback  is  the  lack  of  efficiency 

especially  compared  to  the  high  efficiency  of 
the  simplex  algorithm.  The  low  efficiency  of 
our  algorithm  is  due  to  the  expansion  of  the 
formula  upon  eliminating  quantifiers. 

Let  us  consider  formula  (3)  above.  The  kernel 

is  a  conjunction  of  m  equalities  and  n+1  i n­
equalities.  As  seen  in  Step  8  of  the  algorithm, 
when  a  quantifier  is  eliminated  such  that  one 
of  the  conjuncts  is  an  equality  containing  the 
quantified  variable,  there  is  no  increase  in  the 
number  of  conjuncts.  On  the  contrary  there  is  a 
decrease  of  one.  So,  in  general,  m  quantifiers 
can  be  eliminated  using  the  equalities  and  re­
sulting  in  a  formula  with  n-m  quantifiers  and 
n+1  inequalities.  Now  each  successive  elimina­
tion  of  a  quantifier  from  a  formula  with  k  i n-
eaualities  can  lead  to  a  formula  with 

inequalities  in  the  worst  case,  when 

the  occurrences  on  the  left  and  right  are  bal­
anced. 
It  appears  that  the  worst  case  is  also 
the  most  likely  case  and  deviations  of  a  few 
inequalities  do  not  help  much. 

Session  No.  14  Theorem  Proving 

559 

References 

1.  Chang,  C.L.:  Fuzzy  Algebras,  Fuzzy  Functions, 

and  Their  Application  to  Function  Approxima­
tion.  Heuristics  Laboratory  Report,  Division 
of  Computer  Research  and  Technology,  N.I.H., 
July,  1970. 

2.  Collins,  G.E.:  Tarski's  Decision  Method  for 

Elementary  Algebra.  Summer  Institute  for 
Symbolic  Logic.  Cornell  University,  1957. 

3.  Gass,  S . I .:  Linear  Programming.  Third  Edi­

tion,  McGraw-Hill,  1969. 

4.  Hodes,  L.:  Dense  Linear  Order  and  Linear  In­

equalities. 

IBM  Research  Report  RC-908,  1963. 

5.  Hodes,  L.:  Programming  Languages,  Logic  and 
Cooperative  Games.  Presented  at  Symposium 
for  Symbolic  and  Algebraic  Manipulation, 
March,  1966.  Abstract  in  Comm.  of  ACM, 
August,  1966. 

6.  McCarthy,  J.  e t . a l .:  LISP  1.5  Programmer's 

Manual,  M.l.T.,  1963. 

7.  Rogers,  H.:  An  Example  in  Mathematical  Logic. 

Mathematical  Monthly.  November,1963. 

8.  Tarski,  A.:  A  Decision  Method  for  Elementary 

Algebra  and  Geometry.  Second  Edition, 
Berkeley  and  Los  Angeles,  1951. 

9.  Waugh,  F.V.:  The  Minimum-Cost  Dairy  Feed. 
Journal  of  Farm  Economics,  August,  19 51. 

