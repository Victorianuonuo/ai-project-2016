560 

Session No.  14 Theorem Proving 

FUZZY  LOGIC AND THE  RESOLUTION  PRINCIPLE 

Richard  C.  T.  Lee 

National 

Institutes  of  Health 

Bethesda,  Maryland  20014 

Abstract 

In  this 

Problem-solving  systems  using  two-valued 

logic  suffer  from  one  drawback,  they  cannot 
handle  fuzzy,  or  uncertain,  information. 
paper,  the  author  recommends  the  use  of  fuzzy 
logic,  which  is  based  on  the  concept  of  fuzzy 
sets  and  f i r st  order  predicate  calculus. 
It  is 
proved  that,  in  fuzzy  logic,  a  set  of  clauses  is 
unsatisfiable  i ff  it  is  unsatisfiable  in  two-
valued  logic. 
unreliable  clause  of  a  set  of  clauses  has  a 
truth-value  a>0.5,  then  all  the  logical  con­
sequences  obtained  by  repeatedly  applying  the 
resolution  principle  has  truth-value  never 
smaller  than  a. 
Implications  of  these  results 
for  applying  fuzzy  logic  to  problem-solving  are 
discussed. 

It  is  also  shown  that  if  the  most 

Descriptive  terms 

fuzzy  logic,  fuzzy  sets,  f i r st  order 

predicate  calculus,  problem-solving  systems, 
question-answering  systems,  resolution  principle, 
uncertainty,  completeness  theorems. 

1. 

Introduction 

In  recent  years,  we  have  witnessed  great 

progress  in  techniques  of  designing  problem-
solving  and  question-answering  systems  (9,  23, 
25,  19).  The  new  approach  may  be  called  an 
axiomatic  approach,  where  facts  and  information 
are  stored  as  axioms  and  the  original  problem 
to  be  solved,  or  the  original  question  to  be 
answered,  is  stated  as  a  theorem  to  be  proved. 

This  axiomatic  approach  suffers  from  one 
drawback.  That  i s,  since  we  store  information 
as  axioms,  we  are  assuming  that  the  information 
is  absolutely  correct  and  no  uncertainty  is 
involved.  But,  everyone  knows  that  the  real 
world  is  f u ll  of  uncertainty  and  any  machine 
that  is  going  to  work  in  this  real  world,  such 
as  a  robot  designed  for  exploring  the  surface 
of  the  moon,  should  be  able  to  make  intelligent 
decisions  in  a  "fuzzy"  environment. 

Obviously,  it  would  be  nice  if  one  could 

combine  probability  theory  with  symbolic  logic. 
But  we  do  not  seem  to  know  how  to  do  this. 
(This  was  pointed  out  in  (17)). 
we  propose  that  instead  of  two-valued  logic, 
one  may  use  fuzzy  logic  (26,  27)  which  is  a 
special  kind  of  many-valued  logic.  The  proposal 
to  use  many-valued  logic  in  problem-solving 
systems  is  nothing  new,  Green  proposed  this  in 
1969  (9). 
author  by  no  means  claims  that  the  problem  of 

It  should  be  emphasized  that  the 

In  this  paper, 

taken  care  of  if  fuzzy  logic 
uncertainty  is  well 
is  used. 
In  fact,  the  main  contribution  of  this 
paper  is  to  show  many  interesting  properties  of 
fuzzy  logic  which  make  it  suitable  for  incor­
poration  into  problem-solving  systems. 

Despite  the  author's  effort  to  make  this 

paper  self-contained,  it  may  s t i ll  be  too 
d i f f i c u lt  for  many  naive  readers.  The  reader 
at  least  has  to  have  some  background  in 
elementary  symbolic  logic  and  is  encouraged  to 
read  (20),  (23),  and  (19)  for  an  introduction 
to  mechanical  theorem-proving  and  its  applica­
tions  to  problem-solving  systems. 

2.  Fuzzy  Logic 

Fuzzy  logic  is  based  on  the  concepts  of 
fuzzy  sets  (3,  5,  6,  15,  26,  27)  and  symbolic 
logic. 
fuzzy  logic  was  limited  to  propositional 
calculus. 

In  (15)  and  (13),  the  discussion  of 

We  may  view  fuzzy  logic  as  a  special  kind 

of  many-valued  logic  (21,  1,  2). 
the  truth-value  of  a  formula,  instead  of 
assuming  two  values,  (0  and  1),  can  assume  any 
value  in  the  interval 
indicate  the  degree  of  truth  represented  by  the 
formula. 

[0,1]  and  is  used  to 

In  fuzzy  logic, 

For  example,  let  P(x)  represent  "x  is  a 

large  number."  Then  the  truth-value  of  P(106  ) 
and  P(10"  )  are  certainly  1  and  0  respectively. 
As  for  P(125),  the  truth-value  of  it  may  be 
some  value  between  0  and  1,  say  0.25. 

We  shall  assume  that  well  formed  formulas 
(formulas  for  short)  are  defined  to  be  exactly 
the  same  as  those  in  two-valued  logic.  Letting 
T(S)  denote  the  truth-value  of  a  formula  S,  the 
evaluation  procedure  for  a  formula  in  fuzzy 
logic  can  be  described  as  follows: 

(1)  T(S)=T(A)  if  S=A  and  A  is  a  ground  atomic 

formula. 

if  S=-R. 

(2)  T(S)=1-T(R) 
(3)  T(S)=min[T(S1),T(S2)]  if S=S1&S2. 
(4)  T(S)=max[T(S1),T(S2)]  if  S=S1vS2 
(5)  T(S)=inf[T(B(x))|xD] 

(6)  T ( S ) = S UP[ T ( B ( X ) ) | X E D] 

if  S=(x)B  and  D  is  the  domain  of  x. 
if  S=( (Ex)B  and  D  is  the  domain  of 
x. 

Note  that  if  D  is  a  f i n i te  set,  then  (5)  and  (6) 
become 
(5)'  T(S)=T(B(a1)&  . ..  &B(an)) 

if  S=(x)B  and  x  assumes  values 
a1, . .. ,an . 

Session No.  14 Theorem Proving 

561 

The  reader  should  note  that  two-valued 

logic  is  a  special  case  of  fuzzy  logic;  all  the 
rules  stated  above  are  applicable  in  two-valued 
logic. 

Example  1 

Consider  S=(PvQ)&-R. 

If  two-valued  logic  is  used  in  a  problen.-
solving  system,  one  stores  a  statement  if  and 
only  if  the  truth-value  of  it  is  1. 
truth-value  of  a  statement  A  is  0,  one  simply 
stores  -A). 
should  store  a  statement  A,  instead  of  -A,  i ff 
the  truth-value  of  A  is  greater  than  or  equal 
to  that  of  -A.  That  i s,  we  store  A  i ff 

In  fuzzy  logic,  obviously  we 

( If  the 

T(A)>l -T(A). 

In  this  case,  T(A)>0.5. 

We  can  use  this  concept  to  define  "satis­
f i a b i l i t y"  in  fuzzy  logic.  An  interpretation 
I  is  said  to  satisy  a  formula  S  if  T(S)>  0.5 
under  I.  An  interpretation  I  is  said  to 
(According  to 
falsify  S  if  T(5)<0.5  under  I. 
this  definition,  Tf  T(S)=0.5  under  I,  then  I 
both  satisfies  and  falsifies  S.)  A  formula  is 
said  to  be  unsatisfiable  if  it  is  falsified  by 
every  interpretation  of  i t.  Again,  it  should 
be  easy  to  note  that  these  definitions  are  com­
patible  with  those  in  two-valued  logic.  However, 
in  fuzzy  logic,  "not  satisfying"  is  different 
from  "falsifying"  and  "not  falsifying"  is 
different  from  "satisfying." 

In  applying  logic  to  problem-solving 

systems,  we  often  have  to  prove  the  unsatis-
f i a b i l i ty  of  a  formula  (19).  We  shall  devote 
the  next  section  to  this  subject. 

3.  Satisfiability  in  Fuzzy  Logic 

In  (13),  the  following  theorem  was  proved. 

Theorem  l 

A  ground  formula  S  is  unsatisfiable  in 
fuzzy  logic  if  and  only  if  it  is  unsatifiable 
in  two-valued  logic. 

Regretfully,  the  above  theorem  has  only 

been  proved  for  the  ground  case.  In  this  section, 
we  shall  prove  a  theorem  similar  to  the  above 
one  except  that  the  formula  does  not  have  to  be 
a  ground  formula. 

We  shall  assume  that  formulas  contain  no 

existential  quantifiers.  Variables  that  are 
existentially  quantified  are  all  replaced  by 
Skolem  functions  (7).  Due  to  the  existence  of 
distributive  and  De  Morgan's  laws,  we  can  also 
assume  that  the  formula  is  in  the  form  of  a 
conjunction  of  clauses  where  every  variable  is 
universally  quantified. 

Since  an  interpretation  can  be  defined  over 
any  domain,  it  seems  that  we  would  have  to  con­
sider  an  infinite  number  of  domains.  For­
tunately,  so  far  as  unsatisfiability  is  con­
cerned,  we  only  have  to  consider  one  particular 
domain,  namely,  the  Herbrand  universe  (10,  17). 

562 

Session No  14 Theorem Proving 

It  is  assumed  here  that  the  reader  is  familiar 
with  the  definition  of  Herbrand  universe. 

Given  an  interpretation  I  of  a  set  S  of 

clauses  over  an  arbitrary  domain  D,  we  can 
always  construct  an  interpretation  I'  of  S  over 
the  Herbrand  universe  of  S  that  preserves  some 
interesting  properties  of  I.  We  shall  call 
this  interpretation 
S  with  respect  to  I  (over  domain  D). 

the  H-interpretation  of 

I' 

Before  giving  the  definition  of  the  H-

In  case  no  constant  occurs  in  S, 

interpretation,  note  that  the  interpretation 
I  maps  every  constant  occurring  in  S  to  some 
element  in  D. 
then  the  basic  element  a  which  initiates  the 
construction  of  the  Herbrand  universe  is  assumed 
to  be  mapped  to  any  element  in  D.  Thus,  every 
element  in  the  Herbrand  universe  of  S  is  assumed 
to  be  mapped  by  I  to  some  element  in  the  domain 
D. 

Let  I  be  an  interpretation  of  a  set  S  of 

clauses  over  a  domain  D.  Let  H  denote  the 
Herbrand  universe  of  S.  The  H-interpretation 
I'  of  S  (over  the  Herbrand  universe  of  S)  with 
respect  to  I  is  defined  as  follows: 

(1)  I'  maps  all  constants  occurring  in  S  to 

themselves. 

(2)  Let  h1'  h2'...hn  be  elements  of  H.  Let 

In  I1,  f  is  assigned  to  be  a  function 

f  be  an  n-place  function  symbol  (n>0)  occurring 
in  S. 
which  maps  {h1,h2,....,hn  }  (an  element  in 
Hn)  to  f(h1,.h2.....hn  )  (an  element  in  H). 

(3)  Let  h , , . . . ,h  be  elements  of  H.  Let  P 
be  an  n-place  (n>0)  predicate  symbol  occurring 
in  S.  Let  every  element  h.  be  mapped  to  some 
di 
value  t  by  I,  then  P(h,  , . . . ,h  )  is  also  assigned 
the  truth-value 

If  P(d1,...,dn  )  is  assigned  a  truth-

in  D. 

t. 

Example  4 

Consider  the  following  clause: 

P(a,f(x)). 

The  interpretation  I  is  defined  as  follows: 

D  =  {1,2}. 

Assignment  of  constants: 

Assignment  of  functions: 

Assignment  of  predicates: 

T(P(1,1))=0.57 

T(P(l,2))-0.7 

T(P(2,1))=0.47 

T(P(2,2))=0.36 

The  Herbrand  universe  of  S  is  H={a,f(a), 

f2( a ) , . . .} 

The  H-interpretation  I'  of  S  is  constructed 

as  follows: 

Assignment  of  constants: 

a  ->  a 

Assignment  of  functions: 

f(a)  ->  f(a) 

f2(a) -> f2(a) 

Assignment  of  predicates: 

T(P(a,f(a)))=T(P(l,f(l)))=T(P(l,2))=0.7 

T(P(a,f2(a)))=T(P(l,f2(l)))=T(P(l,l))=0.57 

T(P(a,f3(a)))=T(P(l,f3(l)))=T(P(l,2))=0.7 

In  this  example,  it  is  easy  to  see  that  I 

satisfies  S. 
H-interpretation  I' 
of  S)  with  respect  to  I  also  satisfies  S. 
fact,  we  can  prove  the  following  lemma. 

It  is  interesting  to  note  that  the 
(over  the  Herbrand  universe 

In 

Lemma 1 

In  fuzzy  logic,  if  an  interpretation  I  of 

a  set  S  of  clauses  over  a  domain  D  does  not 
falsify  S,  then  the  H-interpretation  I'  oT S 
(over  the  Herbrand  universe  of  S)  does  not 
falsify  S  either. 

Proof:  Assume  I'  does  falsify  S.  Then  there 
must  exist  at  least  one  clause  C  in  S  such  that 
T(C)< 0.5  under  I '.  Let  x,  , . . . ,x  be  the 

in  the  Herbrand  universe  of  S  such  that 

variables  occurring  in  C.  Then  there  exist 
h1,...h 
1 
T(C')<0.5  where  C  is  the  ground  clause  obtained 
from  C  by  replacing  every  x.  with  h..  Let  every 

n 

h.  be  mapped  to  some  di  in  D  by  the  interpre­
tation  I.  According  to  the  definition  of  the 
H-interpretation  of  S,  if  C'' 
clause  obtained  from  C  by  replacing  every  x.  with 
d.  then  T(C'')<0.5  also. This  means  that  I  f a l s i­
fies  S  which  is  impossible. 

is  the  ground 

Q.E.D. 

Session No.  14 Theorem Proving 

563 

Using  the  above  lemma,  we  can  prove  the 

following  important  theorem. 

tree  shown  in  Fig.  1.  Since  the  path  from  the 
root  of  the  tree  T  to  every  node  N  of  the  tree 

Theorem  2 

A  set  of  clauses  is  unsatisfiable  in  fuzzy 

logic  if  and  only  if  it  is  falsified  by  every 
interpretation  I  over  the  Herbrand  universe  of  S. 

Proof; 

(a) 

(→) 

This  part  of  the  proof  is  t r i v i a l.  By 

definition,  S  is  unsatisfiable  if  and  only  if 
S  is  falsified  by  all  interpretations  over  any 
domain,  including  the  Herbrand  universe  of  S. 

(b) 

(←) 

Assume  S  is  not  falsified  by  an  interpre­

tation  I  over  some  domain  D.  According  to 
Lemma  1,  there  exists  an  interpretation  I'  over 
the  Herbrand  universe  of  S  such  that  I'  does  not 
falsify  S  either.  This  contradicts  the  assump­
tion. 

Q.E.D. 

It  can  be  easily  seen  that  so  far  as  sat­

i s f i a b i l i ty  is  concerned,  the  only  relevant 
information  is  whether  a  ground  atom  is  assigned 
a  truth-value  greater  than,  equal  to  or  smaller 
than  0.5.  For  example,  a  ground  clause  is 
satisfied  by  an  interpretation  if  the  truth-
value  of  at  least  one  l i t e r al  of  the  clause  is 
greater  than  or  equal  to  0.5.  Therefore,  in  the 
sequel,  instead  of  giving  the  exact  truth-value 
of  a  ground  atom  in  an  interpretation,  we  shall 
merely  compare  it  with  0.5. 

Furthermore,  since  the  domain  is  fixed  to 
be  the  Herbrand  universe,  we  only  have  to  con­
sider  the  truth-value  of  those  ground  atoms  whose 
arguments  are  elements  of  the  Herbrand  universe. 
Let  A  be  the  set  of  ground  atomic  formulas  of 
the  form  P(h1,...,h  n)  for  all  n-place  predicate 
symbols  occurring  in  S,  where  every  h.  is  an 
element  of  the  Herbrand  universe  of  S.  The  set 
A  is  called  the  atom  set  of  S. 

We  s t i ll  have  not  discussed  how  to  determine 

whether  a  set  S  of  clauses  is  unsatisfiable  or 
not.  Obviously,  we  can  exhaustively  construct 
all  possible  interpretations. 
interpretation  is  found  to  falsify  a  clause,  we 
may  stop  constructing  that  particular  interpre­
tation.  Let  us  enumerate  atomic  formulas  in  the 
atom  set  of  S  by 

If  a  partial 

A  A 

A 

Note  that  each  different  assignment  of  truth-
value  (with  respect  to  0.5)  to  each  A.  corres­
ponds  to  a  distinct  branch  of  the  i n f i n i te  binary 

represents  a  partial  interpretation  I  of  S,  we 
can  terminate  the  tree  at  node  N  if  I  falsifies 
a  clause. 
In  such  a  case,  N  is  called  a  failure 
If  S  is  unsatisfiable,  then  every  branch 
node. 
of  the  semantic  tree  in  Fig.  1  is  terminated  by 
a  failure  node  and  vice  versa.  We  shall  call 
the  semantic  tree  T  in  Fig.  1  a  closed  semantic 
tree  if  every  branch  of  T  is  terminated  by  a 
failure  node. 

Although  corresponding  to  every  ordering  of 

the  elements  in  the  atom  set  of  S,  there  is  a 
closed  semantic  tree  for  S  if  and  only  if  S  is 
unsatisfiable,  we  s t i ll  cannot  use  this  approach 
until  we  know  that  the  closed  semantic  tree  is 
also  a  f i n i te  one.  The  following  theorem 
essentially  shows  us  that  it  is  indeed  the  case. 

Theorem 3 

A  set  S  of  clauses  is  unsatisfiable  in  fuzzy 
if  and  only  if  corresponding  to  every 

logic 
ordering  of  the  elements~of  the  atom  set  of  S, 
the  semantic  tree  of  S  is  a  f i n i te  closed 
semantic  tree. 

Proof: 

(a) 

(→) 

Suppose  S  is  unsatisfiable.  Then  no  inter­

falsify  at 

pretation  over  the  Herbrand  universe  of  S 
satisfies  S.  Therefore  every  possible  assignment 
of  trutn-values  to  A1A2, . . .,  w i ll 
least  one  clause  of  S.  Hence  every  branch  of 
the  semantic  tree  is  terminated  by  a  failure 
node.  Assume  there  are  i n f i n i t e ly  many  nodes 
in  the  tree,  then  the  i n i t i al  node  would  be  a 
node  with  i n f i n i t e ly  many  descendants.  Moreover, 
if  any  node  has  i n f i n i t e ly  many  descendants,  then 
at  least  one  of  its  descendants  has  i n f i n i t e ly 

564 

Session No.  14 Theorem Proving 

many  descendants.  Therefore  there  is  a  non-
terminating  branch  in  the  semantic  tree  which  is 
impossible.  Thus  the  closed  semantic  tree  must 
be  f i n i t e. 

(b) 

(←) 

This  part  of  the  proof  is  t r i v i al  and  will 

be  omitted. 

From  Theorem  3,  we  can  easily  obtain 

Theorem  4  as  follows: 

Theorem  4 

A  set  S  of  clauses  in  fuzzy  logic  is 

unsatisfiable  if  and  only  if  there  is  a  f i n i te 
unsatisfiable  (in  fuzzy  logic)  set  S'  of  ground 
instances  of  S  over  the  Herbrand  universe  of  S. 

Since  two-valued  logic  is  a  special  case  of 

fuzzy  logic,  the  above  theorem  is  true  for  two-
valued  logic.  A  proof  of  the  foregoing  theorem 
in  two-valued  logic  can  be  found  in  (4). 

Using  Theorems  1  and  4,  we  can  now  prove 
the  following  theorem  which  is  the  main  contri­
bution  of  this  section. 

Tneorem 5 

A  set  $  of  clauses  is  unsatisfiable  in 
logic 

it  is  unsatisfiable 

if 

fuzzy 
in  two-valued  logic. 

if  and  only 

Proof: 

(a) 

(→) 

Since  S  is  unsatisfiable  in  fuzzy  logic,  S 
must  be  f a l s i f i ed  by  every  interpretation  of  S. 
In  particular,  S  must  be  falsified  by  all  the 
interpretations  in  which  the  truth-value  is 
either  1  or  0.  Thus  S  must  be  unsatisfiable  in 
two-valued 

logic. 

(b) 

(<-) 

Since  S  is  unsatisfiable  in  two-valued  logic, 

there  must  exist  a  f i n i te  unsatisfiable  (  in  two-
valued  logic)  set  S'  of  ground  instances  in  S 
over  the  Herbrand  universe  of  S.  According  to 
Theorem 
logic.  From  Theorem  4,  we  conclude  that  S  is 
unsatisfiable  in  fuzzy  logic. 

l,  S'  must  be  also  unsatisfiable  in  fuzzy 

4.  The  Concept  of  Logical  Consequence  in 

Fuzzy  Logic 

Given  a  formula  F,  we  shall  define  a  formula 
G  to  be  a  logical  consequence  of  F  if  and  only  if 
F&-G  is  unsatisfiable. 
If  F&-G  is  unsatisfiable, 
then  T(F&-G)^0.5  under  a ll 
we  further  require  that  T(F)>0.5,  then  T(-G)  must 
not  be  larger  than  0.5.  But  T(-G)=1-T(G). 

interpretations. 

If 

in 

interpretations 

Therefore  T(G)>0.5  in  all 
which  T(F)>0.5.  This  means  that  if  the  degree 
of  truth  of  F  exceeds  0.5,  the  degree  of  truth 
of  all 
than  0.5.  Note  that  our  definition  of  logical 
consequence  in  fuzzy  logic  is  compatible  with 
that  in  two-valued  logic. 
T(G)=1  whenever  T(F)=1. 

logical  consequences  of  F  is  never  smaller 

In  two-valued  logic, 

Using  the  above  definition  and  Theorem  5, 

we  can  establish  the  following  lemma. 

Lemma 2 

A  formula  G  is  a  logical  consequence  of  a 
formula  F  in  fuzzy  logic  if  and  only  if  G  is  a 
logical  consequence  of  G  in  two-valued  logic. 

equenc 

The  proof  of  this  lemma  is  omitted. 
In  two-valued  logic,  there  is  a  very  good 
inference  rule,  called  the  resolution  principle 
(20),  which  has  been  proved  complete  for  deducing 
logical  consequences  (12,24,22). 
we  shall  show  that  the  resolution  principle  is 
also  complete  in  fuzzy  logic. 
that  the  reader  is  familiar  with  the  resolution 
principle. 

It  is  assumed  here 

In  the  following, 

Let  S  be  a  set  of  clauses.  The  resolution 

of  S,  denoted  R(S),  is  the  set  consisting  of 
members  of  S  together  with  all  the  resolvents  of 
the  pairs  of  members  of  S.  The  n-th  resolution 
of  S,  denoted  by  Rn(S),  is  defined  for  n^0  as 
follows: 

n 
RU(S)=S  and  Rn  '(S)=R(Rn(S)). 

, 

The  completeness  theorem  in  (12)  can  now  be 

stated  as  follows: 

Theorem 6 

Given  a  set  S  of  clauses,  let  us  define  a 

logical  consequence  C  (C  is  assumed  to  be  a 
clause)  to  be  a  prime  logical  consequence  of  S 
if  there  exists  no  other  logical  consequence  C 
of  S  (C  is  also  a  clause)  such  that  C  is  also 
a  logical  consequence  of  C'.  Theorem  6  can  now 
be  stated  as  Theorem  7. 

Theorem  7 

In  two-valued  logic,  if  a  clause  C  is  a 

prime  logical  consequence  of  a  set  S  of  clauses, 
then  for  some  n>0,  CeRn(ST7 

A  similar  theorem  in  the  context  of  fuzzy 

logic  w i ll  now  be  proved.  This  is  accomplished 
by  f i r st  proving  the  following  lemma. 

Session No.  14 Theorem Proving 

565 

Lemma 3 

Given  a  set  S  of  clauses,  a  clause  C  is  a 

prime  logical  consequence  of  S  in  fuzzy  logic  if 
and  only  if  C  is  a  prime  logical  consequence  of 
S  in  two-valued  logic. 

Proof: 

(a) 

(→) 

Since  C  is  a  logical  consequence  of  S  in 
fuzzy  logic,  by  Lemma  2,  C  is  a  logical  conse­
quence  of  S  in  two-valued  logic.  Assume  C  is 
not  a  "prime"  logical  consequence  of  S.  Then 
there  is  a  logical  consequence  C  of  S  such  that 
C  is  a  logical  consequence  of  C  in  two-valued 
logic.  Applying  Lemma  2  again,  we  w i ll  be  able 
to  conclude  that  the  relationship  governing  C, 
C  and  S  also  holds  in  fuzzy  logic.  Thus  C  is 
not  a  "prime"  logical  consequence  of  S  in  fuzzy 
logic,  which  contradicts  the  assumption.  Hence 
C  must  be  a  prime  logical  consequence  of  S  in 
two-valued 

logic. 

=  nnn[max[T(-P),T(Q)],T(P)] 

=  min[max[0.7,0.2],0.3] 

=  min[0.7,0.3] 

=  0.3. 
Thus  T(Q)^T(C1&C2). 
The  above  example  shows  that  the  truth-value 
of  C1&C2  is  not  necessarily  smaller  than  or  equal 
to  that  of  a  logical  consequence  of  C1  and  C2. 
But,  if  T(C1&C2)>0.5,  we  have  a  different 
situation. 

Lemma 4 

Let  C1  and  C2  be  two  clauses.  Let  R(C1  ,C2) 

denote  any  resolvent  of  C1  and  C2. 
T(C]&C2)>0.5, 

then  T(R(C],C2))>T(C]&C2). 

If 

(b) 

(-) 

Proof: 

This  part  of  the  proof  is  similar  to  the 

proof  of  part  (a)  above. 

Without  losing  generality,  we  can  represent 

C,  and  C2  as  follows: 

where  L1  and  L2  are  two  disjunctions  of  literals 
R(C1,C2)=L1vL2. 

Let  T(C1&C2)=min[T(C1),T(C2)]=a. 
Again,  without  losing  generality,  we  can 

assume  that 

T(C1)=max[T(P),T(L1)]=a 

and  T(C2)=max[T(-P) ,T(L2)>a. 
From  (1),  we  conclude  that  T(L-j) 
equal 

to  or  smaller  than  a. 

(i) 

(2) 

can  be  either 

Using  Theorem  7  and  Lemma  3,  we  can  deduce 

the  completeness  theorem  of  the  resolution 
principle  in  fuzzy  logic. 

Theorem  8 

In  fuzzy  logic,  if  a  clause  C  is  a  prime 

logical  consequence  of  a  set  S  of  clauses,  then 
for  some  n>0t  CcRn(S). 

A  fundamental  property  of  probability  theory 

is  that  " if  G  is  a  consequence  of  F,  then 
P(G)>P(F)."  Beautiful  discussions  on  this 
property  can  be  found  in  (8)  and  (14).  We  have 
a  similar  relationship  in  two-valued  logic.  That 
i s,  in  two-valued  logic,  if  G  is  a  logical  con­
sequence  of  F,  then  T(G)>T(F).  However,  we 
cannot  establish  this  in  fuzzy  logic.  Consider 
the  following  example. 

Example  5 

Consider 

Q  is  a  resolvent  (thereby  a  logical  consequence) 
of  C,  and  C2> 

Let  T(P)=0.3  and  T(Q)=0.2. 

We  have  T(C]&C2)=T((-PvQ)&P) 

566 

Session No.  14 Theorem Proving 

Consequently,  from  (2),  T(L2)> 
T(R(C1C2)) 

=  T(L1vL2) 
= 

max[T(L1),T(L2)]>a. 

Therefore  T(R(C1,C2))>T(C1&C2). 

Q.E.D 

Using  the  definition  of  Rn(S),  we  can 

extend  the  result  of  Lemma  4  to  the  following 
theorem. 

Theorem 9 

Let  S  be  a  set  of  clauses  and  T(S)>0.5. 
n 

Let  C  denote  any  clause  in  the  set  R  (S).  Then 
for  all  n→0,  T(Cn)>T(S). 

n 

Theorem  9  is  an  interesting  theorem. 

It 
shows  that  if  every  clause  in  S  is  something 
more  than  a  "half-truth"  and  the  most  un­
reliable  clause  has  truth-value  a,  then  we  are 
guaranteed  that  all 
obtained  by  repeatedly  applying  the  resolution 
principle  will  have  truth-value  at  least  equal 
to  a.  We  shall  discuss  the  significance  of  this 
theorem  in  the  next  section. 

the  logical  consequences 

5.  Conclusions 

Many  readers  may  find  the  "min-max" 

principle  in  fuzzy  logic  disturbing.  That  i s, 
they  may  find  it  hard  to  accept 

T(A&B)=min[T(A),T(B)] 

and  T(AvB)=max[T(A),T(B)]. 

To  answer  this  criticism,  we  would  like  to 

point  out  that  two-valued  logic  uses  exactly 
the  same  evaluation  procedure.  By  rejecting 
the  evaluation  procedure  of  fuzzy  logic,  one 
would  simultaneously  reject  that  of  two-valued 
logic.  We  do  not  believe  that  fuzzy  logic  is 
adequate  to  describe  the  complex  world  we  are 
living  in  ( it  would  be  simply  too  naive  to  think 
that  the  world  can  be  described  by  a  set  of 
mathematical  rules).  However,  it  would  not  be 
d i f f i c u lt  to  see  that  it  is  an  improvement  of 
two-valued  logic;  at  least  it  gives  us  a  way  to 
handle  fuzzy  information. 

The  estimation  of  the  truth-value  of  a 
statement  might  be  a  serious  problem  to  many 
readers. 
It  was  pointed  out  by  Zadeh  (26,27) 
that  this  has  to  be  subjective. 
In  fact,  many 
find  it  d i f f i c u lt  to  believe  that 
readers  w i ll 
"no  objective  definition  of  probabilities 
in 
terms  of  actual  or  possible  observations,  or 
possible  properties  of  this  world,  is  admissible' 
(a  famous  quote  from  Sir  Harold  Jeffreys  in 
(11)).  Thus  if  the  information  is  supplied  by 

If  the  information  is 

a  human  being,  he  might  as  well  supply  the 
truth-value  of  it  also. 
supplied  by  another  machine,  say  a  pattern 
recognizer,  then  a  measure  of  uncertainty  is 
often  associated  with  i t.  For  example,  a 
pattern  recognizer  may  decide  that  an  incoming 
object  is  a  meteor,  not  an  airplane,  with  pro­
bability  0.9.  Then  this  information  may  be 
assigned  a  truth-value  of  0.9  since  probability 
often  reflects  the  degree  of  truth. 

Perhaps  the  most  useful 

theorem  proved  in 
this  paper  is  Theorem  9.  Suppose  we  have  two 
sets  of  clauses,  S1  and  S2,  representing  two 
sets  of  information.  From  S1,  we  can  deduce  a 
logical  consequence  which  suggests  us  to  use 
Highway  70S.  From  S?,  we  can  deduce  a  logical 
consequence  which  suggests  to  use  Highway  495. 
We  might  not  know  the  exact  degrees  of  correct­
ness  of  these  suggestions.  But  we  s t i ll  can 
make  intelligent  decisions  based  on  Theorem  9. 
For  example,  let  T(S1)=0.6  and  T(S2)=0.9. 
According  to  Theorem  9,  we  know  that  the 
correctness  of  the  second  suggestion  is  at  least 
0.9  while  that  of  the  f i r st  one  is  only  guaran­
teed  to  be  not  less  than  0.6.  This  further 
tells  us  that  the  risk  of  taking  the  f i r st  action 
may  be  as  high  as  0.4  while  the  other  risk  cannot 
be  higher  than  0.1.  To  minimize  the  maximum  pos­
sible  risk,  we  should  take  the  second  suggestion, 
i . e .,  use  Highway  495. 

In  fact,  no  one  in  this  world  uses  two-

valued  logic  to  solve  problems  such  as  baking  a 
cake,  buying  a  used  car  or  hiring  an  employee. 
After  a l l,  every  competent  housewife  knows  what 
it  means  to  "generously  grease  the  pan"  or 
"vigorously  beat  the  mixture." 
want  to  build  a  machine  with  common  sense  (16), 
is  it  not  a  must  that  some  kind  of  many-valued 
logic  be  used? 

If  we  really 

References 

1.  Ackerman.R. 

Introduction  to  Many  Valued 

Logics,  Dover,  N.Y.,  1967. 

2.  Chang,  C.C.  Algebraic  Analysis  of  Many 
Valued  Logics,  Trans,  of  the  Amer.  Math. 
Soc.  88,  1958,  pp.467-490. 

3.  Chang,C.L.  Fuzzy  Topological  Spaces, 

Journal  of  hath.  Anal,  and  Appl.  24,  1, 
1968,  pp.  182-190. 

4.  Chang,C.L.  and  Lee,  R.C.T.  Symbolic  Logic 
and  Mechanical  Theorem  Proving,  unpublished 
manuscript,  1971. 

5.  Chang,S.K.  On  the  Execution  of  Fuzzy 

Programs  Using  Finite  State  Machines  (to 
appear  in  IEEE  Trans,  on  Computers). 

Session No.  14 Theorem Proving 

567 

20.  Robinson,J.A.  A  Machine-oriented  Logic 
Based  on  the  Resolution  Principle,  JACM 
12,  1965,  pp.  23-41. 

21.  Rosser,J.B.  and  Turquette.A.R.  Many-valued 

Logics,  North-Holland,  Amsterdam,  1952. 

22.  Slagle.J.R. 

Interpolation  Theorems  for 
Resolution  in  Lower  Predicate  Calculus, 
JACM,  17,  1970,  pp.  535-542. 

23.  Slagle.J.R.  A r t i f i c i al 

Intelligence,  the 

Heuristic  Programming  Approach,  McGraw-Hill 
N.Y.,  1971. 

24.  Slagle,J.R.,  Chang.CL.  and  Lee,R.C.T. 

Completeness  Theorems  for  Semantic 
Resolution  in  Consequence  Finding,  Proc.  of 
the  First  International  Joint  A r t i f i c i al 
Intelligence  Conf.,  Washington,  D.C,  1969. 

25.  WaTdinger.R.  and  Lee,R.C.T.  PROW:  A  Step 

Toward  Automatic  Program  Writing,  Proc. 
of  the  First  International  Joint  A r t i f i c i al 
Intelligence  Conf.,  Washington,  D.C,  1969. 

26.  Zadeh,L.A.  Fuzzy  Sets,  Information  and 

Control,  8,  1965,  pp.  338-353. 

27.  Zadeh,L.A.  Fuzzy  Algorithms,  Information 

and  Control,  12,  1968,  pp.  94-102 

