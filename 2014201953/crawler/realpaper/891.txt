QuantMiner: A Genetic Algorithm for Mining Quantitative Association Rules

Ansaf Salleb-Aouissi*

Christel Vrain**

Cyril Nortet**

*CCLS, Columbia University 475 Riverside Drive New York NY 10115 USA

ansaf@ccls.columbia.edu

**LIFO, Universit´e d’Orl´eans Rue L´eonard de Vinci BP 6759 45067 Orl´eans cedex 02 France

{Christel.Vrain, Cyril.Nortet}@univ-orleans.fr

Abstract

In this paper, we propose QUANTMINER, a mining
quantitative association rules system. This system
is based on a genetic algorithm that dynamically
discovers “good” intervals in association rules by
optimizing both the support and the conﬁdence.
The experiments on real and artiﬁcial databases
have shown the usefulness of QUANTMINER as an
interactive data mining tool.

Keywords : Association rules, quantitative (nu-
meric) attributes, unsupervised discretization, ge-
netic algorithm

Introduction

1
Mining association rules that aims at ﬁnding strong relations
between attributes has already long been studied (see for in-
stance, [Agrawal et al., 1993]). In that context, an association
rule is an expression C1 ⇒ C2, where C1 and C2 express con-
ditions on the attributes describing the objects.
The strength of such a rule is usually evaluated by means of
statistical measures, as for instance the support and the conﬁ-
dence, deﬁned as follows:
- Support(C), where C expresses conditions on attributes, is
the number of tuples in the database that satisfy C.
- Support(C1 ⇒ C2) = Support(C1 ∧ C2)
- Conﬁdence(C1 ⇒ C2) = Support(C1 ∧ C2)/Support(C1)
Given two thresholds MinSupp and MinConf, a rule is strong,
when its support is greater than MinSupp and its conﬁdence
greater than MinConf. Discovering strong rules is usually a
two-step process. The ﬁrst step consists in mining the set of
all frequent itemsets w.r.t. MinSupp. The second step relies
on this set to discover strong rules w.r.t. MinConf.
Mining association rules on both categorical and numeric at-
tributes, also called quantitative association rules, has been
less studied. Basically, this task involves several problems:

First, numeric attributes are usually deﬁned on a wide
range of different values. It is useless to work on all possi-
ble numeric values, as done for categorical values, because
in most cases, a given numeric value will not appear fre-
quently. A classical way to deal with numeric attributes is to
divide their domains into intervals. This is called discretiza-
tion. But, as already pointed out in [Srikant and Agrawal,

1996], choosing intervals for numeric attributes is quite sen-
sitive to the support and the conﬁdence measures: small in-
tervals lead to low supports, thus for a rule A ⇒ B increas-
ing B leads to a higher conﬁdence whereas increasing A can
either increase or decrease the conﬁdence. A tradeoff has
to be found to discretize “correctly” numeric attributes with
respect to MinSupp and MinConf. For instance Weight ∈
[50, 70] can be frequent, but the rule Weight ∈ [55, 65] →
Height ∈ [1.60, 1.70] may have a higher conﬁdence than the
rule Weight ∈ [50, 70] → Height ∈ [1.60, 1.70]. This shows
that it is difﬁcult to ﬁnd a “good” discretization of numeric
attributes, considering them individually. As a consequence,
the classical two-step process for mining association rules,
namely mining frequent itemsets and then extracting solid
association rules is no longer appropriate, as well as the em-
bedded traditional level-wise algorithm for mining frequent
itemsets.

Therefore, mining quantitative association rules is not a
simple extension of mining categorical association rules.
Since the search space is inﬁnite, our goal is to ﬁnd a ﬁ-
nite set of interesting solutions, close to the optimal solutions.
This explains why we have chosen to solve this search prob-
lem with metaheuristics, mainly genetic algorithms [Holland,
1975].

In this paper, we consider that given a pattern for an as-
sociation rule, ﬁnding “good” intervals for numeric attributes
occurring in that pattern is an optimization problem and we
propose QUANTMINER a system that has been designed in
that framework. In that system, constraints on rules, namely
the attributes appearing in the left-hand side and in the right-
hand side, and possibly values for the categorical attributes,
are speciﬁed by the user and for each possible rule template
fulﬁlling these constraints, a genetic-based algorithm is then
applied for learning “good” intervals optimizing a given qual-
ity criteria. Let us emphasize on the fact that intervals for
numeric attributes are thus dynamically optimized during the
mining process, and depend on all the numeric attributes oc-
curring in the rule.
This paper is organized as follows: § 2 gives the state of the
art for mining quantitative association rules. § 3 is devoted to
QUANTMINER, the algorithm we propose for mining quan-
titative association rules. Experimental tests on real-life and
synthetic datasets are described in § 4. We conclude in § 5
with a summary of our contribution and future directions.

IJCAI-07

1035

2 Related Work
Discretization-based approach A classical method to deal
with numeric attributes is to perform a preprocessing step,
discretizing (also called binning) numeric attributes into in-
tervals before the mining task (see for example [Lent et al.,
1997; Miller and Yang, 1997; Srikant and Agrawal, 1996;
Wang et al., 1998]). This can be achieved by either us-
ing domain knowledge expressed by concept hierarchies, or
automatic discretization methods, such as equi-depth and
equi-width binning. Nevertheless, this discretization is uni-
variate (an attribute is discretized without taking into ac-
count the other attributes). To reduce the inﬂuence of pre-
discretization, most work in this approach use either cluster-
ing or intervals merging. However, this work remain sensitive
to outliers and does not reﬂect the distribution of data.

Distribution-based approach In a statistical approach
[Aumann and Lin-
proposed by Aumann and Lindell
dell, 1999],
the right-hand side of a rule can ex-
press
the values of numeric at-
tributes such as the mean or variance, as for instance:

the distribution of
Sex=female =⇒ Height:

mean = 168

∧ Weight: mean = 68

Two kinds of rules are considered :
- A set of categorical attributes on the left-hand side and sev-
eral distributions on the right-hand side,
- A single discretized numeric attribute on the left-hand side
and a single distribution on the right-hand side.
Webb [Webb, 2001] has extended this framework to other
measures such as standard deviation, minimum, count etc.
Although quite interesting, the kinds of rules in these ap-
proaches have a very speciﬁc form and cannot handle several
numeric attributes in the left-hand side of a rule.

Optimization-based approach In this approach, numeric
attributes are optimized during the mining process. The term
in [Fukuda et
optimization was ﬁrst used by Fukuda et al.
al., 1996b]. In their works, a very interesting optimization
criterion, called the Gain is proposed as a trade-off between
support and conﬁdence. It is deﬁned by :

Gain(A ⇒ B) = Supp(AB) − MinConf ∗ Supp(A)

.
Nevertheless, the main limitation of this work is that rules
contain at most two numeric attributes, since it is based
on a technique inspired from image segmentation to
ﬁnd an image region that produces an optimized asso-
ciation rule. Rastogi and Shim in [Rastogi and Shim,
1999] have proposed a support-optimization method, gen-
eralizing the work proposed in [Fukuda et al., 1996a;
1996b] to handle disjunctions on one numeric attribute.
Their work has then been extended to a Gain-optimization
approach by Brin et al. [Brin et al., 2003]. Although these
works allow disjunctions between intervals, the forms of the
rules remain restricted to one or two numeric attributes.

A quite different algorithm, named GAR has been proposed
by Mata et al. [Mata et al., 2002]. The idea is to use a genetic
algorithm in order to optimize the support of itemsets deﬁned
on uninstantiated intervals of numeric attributes. The ﬁtness

function of each individual (a k-itemset) depends on its abso-
lute support (coverage) and 3 factors: 2 penalization factors
are used to avoid getting the whole domains of the attributes
and to avoid overlapping between itemsets with respect to the
support and one factor to favor speciﬁc itemsets with many
attributes :

Fitness = cov − (ψ ∗ ampl) − (ω ∗ mark) + (μ ∗ nAtr)

The effect of these 3 factors can be adjusted with 3 param-
eters. The authors suggest then to use an apriori-like algo-
rithm to mine association rules using these optimized item-
sets. This approach has several drawbacks:
it is limited
to numeric attributes, only the support is optimized which
does not guarantee to get rules with high conﬁdences, and
ﬁnally, intervals are static in the rules and thus do not care
of the implication direction. This may miss a lot of in-
teresting rules. More recently, an approach based on half-
spaces has been suggested in [R¨uckert et al., 2004]. In this
work, the left-hand and the right-hand side of an associa-
tion rule contain a linear inequation on attributes, such as:
x1 > 20 =⇒ 0.5x3 + 2.3x6 ≥ 100. Although quite original
and useful in many applications, the expressiveness of such
rules is restricted, and this approach cannot handle categori-
cal attributes.

3 QuantMiner
QuantMiner is a genetic-based algorithm for mining quanti-
tative association rules.
In the following, an item is either
an expression A = v, where A is a categorical (also called
qualitative) attribute and v is a value from its domain, or
an expression A ∈ [l, u] where A is a quantitative attribute.
QuantMiner works directly on a set of rule templates. A rule
template is a preset format of a quantitative association rule,
either chosen by the user or computed by the system. It is
used as a starting point for the mining process1. For each
rule template, the algorithm looks for the best intervals for
the numeric attributes occurring in that template, relying on a
Genetic Algorithm.

More precisely, a rule template is deﬁned by the set of at-
tributes occurring in the left hand side and the right hand side
of the rule. For each categorical attribute, the value is either
deﬁned by the user in the template, or computed by Quant-
Miner. In this case, let A1, . . . , An be the non instantiated
categorical attributes occurring in the template. QuantMiner
computes the frequent itemsets built on A1, . . . , An, i.e., the
set of instantiations v1, . . . , vn such that A1 = v1 ∧ . . . An =
vn is frequent and generate a rule template for each such
instantiation. This leads to as many templates as the num-
ber of instantiations. Note that this step is similar to apriori
[Agrawal et al., 1993].
• Individual representation An individual is a set of items
of the form attributei ∈ [li, ui], where attributei is the ith
numeric attribute in the rule template from the left to the right.
• Initial population The initial population of individuals is
in the ﬁrst individuals, the intervals
generated as follows:

1Note that QUANTMINER can consider all possible association

rules with no restrictions.

IJCAI-07

1036

[li, ui] represent the whole domain of the ith numeric at-
tribute, and the following individuals encode intervals with
decreasing amplitudes (length of intervals) until they reach
a minimum support in the dataset. Once the amplitudes are
ﬁxed for an individual, the bounds li and ui are chosen at ran-
dom. This ensures to start with enough diversity in the initial
population that model general and speciﬁc rules.

Figure 1: Crossover and mutation operators.

• Genetic operators Mutation and crossover (Figure 1) are
both used in order to transform a generation of individuals
into another one, improving its quality. The crossover oper-
ator consists in taking two individuals, called parents, at ran-
dom and generating new individuals: for each attribute the
interval is either inherited from one of the parents or formed
by mixing the bounds of the two parents. Mutation works
on a single individual and increases or decreases the lower
or upper bound of its intervals respectively. Moving interval
bounds is done so as to discard/involve no more than 10% of
tuples already covered by the interval.
• Fitness function The ﬁtness function used in QUANT-
MINER is based on the Gain measure proposed in [Fukuda
et al., 1996b]. If the gain is positive (the conﬁdence of the
rule exceeds the minimum conﬁdence threshold), we take into
account the proportions of the intervals (deﬁned as the ratios
between the amplitudes and the domains), so as to favor those
with small amplitudes. Moreover, rules with low supports are
penalized by decreasing drastically their ﬁtness values by the
number of tuples in the database.
• Algorithm

QUANTMINER (Algorithm 2) follows a prototypical ge-
netic algorithm scheme. The inputs are the minimum support
(MinSupp), the minimum conﬁdence (MinConf), the popula-
tion size (PopSize), the number of generations (GenNb), the
fraction of population to be replaced by crossover (CR) and
the mutation rate (MR).
We developed QUANTMINER2 in JAVA as a 5-step GUI wiz-
ard allowing an interactive mining process. After opening a

2In collaboration with the French Geological Survey (BGRM).

Function Fitness(A ⇒ B)
TempFitness = Gain(A ⇒ B)
if TempFitness ≥ 0 then

foreach interval I in A ⇒ B do
//favor small intervals
TempFitness * = (1-Prop(I))2
if Support(A ⇒ B) < M inSupp then

//penalize low support rules
TempFitness - = Nbtuples

return TempFitness

GenNb, CR, MR, MinSupp, MinConf

Algorithm 2: QUANTMINER
Input: A dataset composed of NbTuples, PopSize,
Output: Quantitative association rules R
Select a set of attributes
Let Rt a set of rule templates deﬁned on these attributes
Compute the set of frequent itemsets on categorical
attributes in Rt
R = ∅
foreach r ∈ Rt do

Generate a random population POP of PopSize
instantiated rules following the template r
i=1
while i ≤ GenNb do

Form the next generation of population by
mutation and crossover w.r.t. MR and CR.
Keep PopSize rules in POP with the best Fitness
values

i++R = R ∪ ArgmaxR∈P OP F itness(R)

return R

dataset, the user can choose attributes, choose some rule tem-
plates specifying the position of items in the left-hand and/or
right-hand side of the rule3, choose the optimization tech-
nique and set its parameters, launch the process, and ﬁnally
display the rules with various sorting: support, conﬁdence,
rule-length, The user can save the mining-context, go back
to previous steps, change the method, parameters, templates
and restart the learning.

We have set the default parameters of the genetic algorithm
to 250 individuals, 100 generations, 40% of mutations and
50% of crossovers. They have been chosen experimentally
so as to produce approximately stable intervals from a run
of the system to another one. To give an idea about execu-
tion time, with the default parameters, on a dataset of 2 500
tuples, QUANTMINER can process on average one rule tem-
plate/second. Note that simulated annealing is implemented
in QuantMiner as an alternative optimization method. Our
experiments have shown that simulated annealing is 10 to 20
times faster than the genetic algorithm, but generally the op-
timized intervals are much less precise and also sometimes
3Items are A = v or A ∈ [l, u] where l, u are not ﬁxed, v can be

instantiated or not.

IJCAI-07

1037

Species
Setosa

Versicolor

Virginica

Attr Min Max Mean
PW 1
SW 23
10
PL
SL
43
PW 10
SW 20
30
PL
SL
49
PW 14
SW 22
45
PL
SL
49

2.46
34.28
14.62
50.6
13.26
27.7
42.6
59.39
20.26
29.74
55.52
65.88

6
44
19
58
18
34
51
70
25
38
69
79

StdDev Rule
1.05
3.79
1.74
3.52
1.98
3.14
4.70
5.16
2.75
3.22
5.52
6.36

Species=
Setosa

Species=
Versicolor

Species=
Virginica

j

⇒

PW ∈ [ 1, 6] SW ∈ [31, 39]
PL ∈ [10, 19] SL ∈ [46, 54]

ﬀ

23%
70%

j

⇒
j

⇒

PW ∈ [10, 15] SW ∈ [22, 30]
PL ∈ [35, 47] SL ∈ [55, 66]

PW ∈ [18, 25] SW ∈ [27, 33]
PL ∈ [48, 60] SL ∈ [58, 72]

ﬀ

ﬀ

21%
64%

20%
60%

Table 1: Statistical Distribution and some rules of the Iris dataset

Figure 2: Example of rule as produced and displayed in QUANTMINER. The top part shows the rule A → B followed by
the proportion of each interval appearing in the rule in its corresponding domain. Note that further support and conﬁdence
measures are given to assess the quality of the rule as for example conf idence(¬A → B).

cover the whole attribute domains.

4 Experiments
We begin this section with an experiment on a simple dataset
to illustrate our algorithm, followed by an empirical study
on a real-life and synthetic datasets to assess the usefulness
and the scalability of QUANTMINER. Our experiments have
been performed on a PC AMD Athlon XP2000+ with 256
MB main memory, running Windows XP.
4.1
The IRIS data set [Murphy and Aha, 1995] is composed of
150 samples of ﬂowers from the iris species setosa, versi-
color, and virginica. For each species, there are 50 obser-
vations described by the attributes Sepal Length (SL), Sepal
Width (SW), Petal Length (PL), and Petal Width (PW) in mm.

Iris Dataset

For instance QUANTMINER has extracted, the descriptive as-
sociation rules presented in Table 1. The intervals produced
are coherent with the normal distribution of the Iris dataset.
The rule 1, as displayed in QuantMiner, is presented in Figure
2.

4.2 Real-life Dataset
We have also experimented QUANTMINER on a real-life
medical database donated by the Stulong4 project to discover

4“The study STULONG was realized at the 2nd Department of
Medicine, 1st Faculty of Medicine of Charles University and Charles
University Hospital, U nemocnice 2, Prague 2 (head. Prof. M.
Aschermann, MD, SDr, FESC), under the supervision of Prof. F.
Boudik, MD, ScD, with collaboration of M. Tomeckova, MD, PhD
and Ass. Prof. J. Bultas, MD, PhD. The data were transferred to
the electronic form by the European Center of Medical Informatics,

IJCAI-07

1038

descriptive rules of the atherosclerosis disease. Stulong is a
dataset concerning a 20 years lasting study of the risk factors
of the atherosclerosis in a population of 1 419 middle aged
men. The patients have been classiﬁed into three groups : nor-
mal, risk and pathological. The database we have used has
about 27 categorical attributes and 17 numerical attributes.
Each patient is described by his physical activities, drinking
of alcohol, smoking, physical and biochemical examination,
etc.
In our experiments, we have focused on rule patterns
such that the antecedent of the rule describes a population
of patients, and the consequent gives a description of this
population and vice-versa. Here are 3 examples of discov-
ered rules where ALCO CONS is patient’s alcohol daily con-
sumption expressed in liter, TOBA CONSO gives the number
of packs of cigarettes consumed daily, TOBA DURA is the
smoking duration in years, BMI stands for Body Mass Index,
the weight in kilograms divided by the square of the height in
meters (kg/m2). According to the World Health Organization
the BMI falls into one of these categories: below 18.5 Un-
derweight, 20-25 Normal, 25-30 Overweight, 30 and above
Obese:

8<
: ALCO CONS ∈ [1.0,1.28]
& TOBA CONSO ∈ [0.5,1.25]
TOBA DURA ∈ [15,20]

DEATH?=
YES

⇒

8<
: ALCO CONS ∈ [1.1, 1.2]
& BMI ∈ [23.18, 26.15]
TOBA CONSO ∈ [0.0, 0.5]
8><
>:

ALCO CONS ∈ [1.07, 1.18]
& BMI ∈ [24.73, 29.03]
TOBA CONSO ∈ [0.85, 1.25]
& TOBA DURA ∈ [20, 20]

DEATH?=
NO

9=
; ⇒
9>=
>; ⇒ GROUP=R

1e-12

8e-13

s
s
e
n

t
i

F

6e-13

4e-13

2e-13

0

0

2400

2200

2000

1800

1600

1400

1200

1000

800

600

400

1

)
s
m

(
 
e
m
T

i

MR=0.1CR=0.3
MR=0.1CR=0.4
MR=0.1CR=0.5
MR=0.2CR=0.3
MR=0.2CR=0.4
MR=0.2CR=0.5
MR=0.3CR=0.3
MR=0.3CR=0.4
MR=0.3CR=0.5

50

100

150

200

250

300

350

400

#Generations

Template 1
Template 2
Template 3

2

3

4

5

6

#num attributes

9=
; 18%

68%

9.5%
90%

8%
86%

Figure 3: Maximum ﬁtness w.r.t to the number of generations
for different values of CR and MR (left). Execution time w.r.t
to the number of numeric attributes (right)

Our results have shown that the atherosclerosis disease is
strongly related to the overweight and the obesity commonly
assessed by BMI. The intervals discovered by QUANTMINER
(see for example rule 2 and 3) are quite coherent with those
given by the World Health Organization. As shown in these
3 rules, our experiments pointed out the big inﬂuence of to-
bacco consumption on the death of patients. Typically, the pa-
tients who died have smoked a lot for a long time. Some other
risk factors emerged, such as a high cholesterol rate and blood
pressure and the presence of skin fold above some muscles.
The intervals discovered by QUANTMINER were considered
as relevant and interesting when presented to a physician of
STULONG. Figure 3 shows the convergence of the process for
a given rule template of 15 numeric attributes by considering
the maximum ﬁtness according to the number of generations.
It shows also the execution time w.r.t. the number of numeric
attributes.
Statistics and Epidemiology of Charles University and Academy of
Sciences (head. Prof. RNDr. J. Zvarova, DrSc). The data resource
is on the web pages http://euromise.vse.cz/STULONG. At present
time the data analysis is supported by the grant of the Ministry of
Education CR Nr LN 00B 107.’

4.3 Synthetic Datasets
We have tested the scalability and the sensitivity of QUANT-
MINER to the Minimum conﬁdence threshold. For this pur-
pose we generated several synthetic datasets5 for a person
database in which each person is described by nine attributes:
salary, commission, age, education, car, zipcode, housevalue,
yearsowned and loan. Attributes education and zipcode are
categorical and the rest are numeric. We have projected our
experiments in Figure 4 where the optimization time of a tem-
plate is given according to the number of tuples in the dataset
and to MinConf respectively. Here, k indicates the number
of numeric attributes in the rule template. For a given k, the
execution time reported here is an average time of a num-
ber of rules having k numeric attributes. This number varies
between 10 and 150 rules according to the templates. We
have set the parameters of QUANTMINER to the following :
GenNb=100, PopSize=250, CR=0.5, MR=0.4, MinSupp=0.1
and MinConf=0.6.

5http://www.almaden.ibm.com/software/quest/

Resources/

IJCAI-07

1039

)
s
(
 

i

e
m
T
n
o

 

i
t

u
c
e
x
E

700

600

500

400

300

200

100

0

k=1
k=2
k=3
k=4
k=5
k=6
k=7

50

100

150

200

250
#tuples in thousands

300

350

400

450

500

Figure 4: Execution time according to the number of tuples

5 Conclusion
The problem of mining association rules in large databases
involving both numerical and categorical attributes is not
straightforward. This is due to the very great number of
possibilities for discretizing numeric attributes into intervals
whereas in categorical association rules, all possible rules are
considered. Actually, mining quantitative association rules is
an optimization problem rather than being a simple discretiza-
tion one. In this paper, we have proposed QUANTMINER, a
genetic-based algorithm for mining such rules in databases.
Unlike GAR [Mata et al., 2002], QUANTMINER gets high-
conﬁdence rules and do take care of the position of the in-
tervals w.r.t the implication direction. Our algorithm starts
with a set of rule templates and then looks dynamically for
the “best” intervals for the numeric attributes present in these
templates. An optimization criterion based on both support
and conﬁdence is used to keep only high quality and interest-
ing rules. In QUANTMINER, the user is highly solicited in
order to guide the mining process thus avoiding the discovery
of hundreds of rules, as it is usually the case in association
rule mining. Our experiments have shown the usefulness of
QuantMiner as an interactive data mining system and the per-
tinence of the intervals discovered by QUANTMINER in real
datasets. In future works, we plan to extend QUANTMINER
to handle disjunction between intervals.

Acknowledgments
We thank the French Geology Survey (BRGM) for support-
ing this work and Teddy Turmeaux for his help in the exper-
iments. This work has been partly supported by a research
contract from Consolidated Edison.

References
[Agrawal et al., 1993] R. Agrawal, T. Imielinski, and A. N.
Swami. Mining association rules between sets of items in
large databases.
In Proceedings of the 1993 ACM SIG-
MOD, pages 207–216, 1993.

[Aumann and Lindell, 1999] Y. Aumann and Y. Lindell. A
statistical theory for quantitative association rules.
In
Knowledge Discovery and Data Mining, pages 261–270,
1999.

[Brin et al., 2003] S. Brin, R. Rastogi, and K. Shim. Mining
optimized gain rules for numeric attributes. IEEE Trans.
Knowl. Data Eng., 15(2):324–338, 2003.

[Fukuda et al., 1996a] T. Fukuda, Y. Morimoto, S. Mor-
ishita, and T. Tokuyama.
Data mining using two-
dimensional optimized association rules: Scheme, algo-
rithms and visualization. In Proc. of the Int’l Conf. ACM
SIGMOD, pages 12–23, 1996.

[Fukuda et al., 1996b] T. Fukuda, Y. Morimoto, S. Mor-
ishita, and T. Tokuyama. Mining optimized associa-
tion rules for numeric attributes.
In Proc. of the fteenth
ACM SIGACTSIGMOD -SIGART PODS’96, pages 182–
191. ACM Press, 1996.

[Holland, 1975] J. H. Holland. Adaptation in Natural and

Artiﬁcial Systems. MIT Press, 1975.

[Lent et al., 1997] B. Lent, A. N. Swami, and J. Widom.
Clustering Association Rules. In Proceedings of the 13th
ICDE, pages 220–231, 1997.

[Mata et al., 2002] J. Mata,

and J. C.
Riquelme. An evolutionary algorithm to discover numeric
association rules. In Proceedings of the ACM symposium
on Applied computing SAC’2002, pages 590–594, 2002.

J. L. Alvarez,

[Miller and Yang, 1997] R. J. Miller and Y. Yang. Associa-
tion rules over interval data. SIGMOD Rec., 26(2):452–
461, 1997.

[Murphy and Aha, 1995] P. M. Murphy and D. W. Aha. UCI
Repository of Machine Learning Databases. Technical re-
port, University of California, Irvine, 1995. [Available by
anonymous ftp from ics.uci.edu].

[Rastogi and Shim, 1999] R. Rastogi and K. Shim. Mining
optimized support rules for numeric attributes. In Proc. of
the 15th ICDE, pages 206–215, 1999.

[R¨uckert et al., 2004] U. R¨uckert, L. Richter, and S. Kramer.
Quantitative association rules based on half-spaces: An
optimization approach. In Proceedings of the Fourth IEEE
International Conference on Data Mining (ICDM’04),
pages 507–510, 2004.

[Srikant and Agrawal, 1996] R. Srikant and R. Agrawal.
Mining quantitative association rules in large relational ta-
bles. In Proc. of the ACM SIGMOD, pages 1–12, 1996.

[Wang et al., 1998] K. Wang, S. H. W. Tay, and B. Liu.
Interestingness-based interval merger for numeric associ-
ation rules. In Proc. 4th Int. Conf. Knowledge Discovery
and Data Mining, KDD, pages 121–128. AAAI Press, 27–
31 1998.

[Webb, 2001] G. I. Webb. Discovering associations with
In Proceedings of the seventh ACM

numeric variables.
SIGKDD, pages 383–388. ACM Press, 2001.

IJCAI-07

1040

