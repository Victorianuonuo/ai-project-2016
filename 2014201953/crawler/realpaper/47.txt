A Formal Investigation of Mapping Language for Terminological Knowledge

Luciano Seraﬁni

ITC-IRST, Via Sommarive 18

38050 Povo, Trento, Italy

seraﬁni@itc.it

Heiner Stuckenschmidt, Holger Wache

Vrije Universiteit Amsterdam

Artiﬁcial Intelligence Department

de Boelelaan 1081a, 1081HV Amsterdam, The Netherlands

{heiner|holger}@cs.vu.nl

Abstract

The need to represent mappings between different
ontologies has been recognized as a result of the
fact that different ontologies may partially overlap,
or even represent the same domain from different
points of view. Unlike ontology languages, work on
languages to represent ontology mappings has not
yet reached a state where a common understand-
ing of the basic principles exists. In this paper we
propose a formal comparison of existing mapping
languages by translating them into distributed ﬁrst
order logic. This allows us to analyze underlying
assumptions and differences in the interpretation of
ontology mappings.

1 Motivation
The beneﬁts of using ontologies as explicit models of the
conceptualization underlying information sources has widely
been recognized. Meanwhile, a number of logical languages
for representing and reasoning about ontologies have been
proposed and there are even language standards now that
guarantee stability and homogeneity on the language level.
At the same time, the need to represent mappings between
different ontologies has been recognized as a result of the fact
that different ontologies may partially overlap or even repre-
sent the same domain from different points of view [Bouquet
et al., 2004]. As a result, a number of proposals have been
made for extending ontology languages with notions of map-
pings between different models. Unlike for the case of on-
tology languages, work on languages to represent ontology
mappings has not yet reached a state where a common un-
derstanding of the basic principles exists. As a consequence,
existing proposals show major differences concerning almost
all possible aspects of such languages. This makes it difﬁ-
cult to compare approaches and to make a decision about the
usefulness of a particular approach in a given situation.

The purpose of this work is to provide a better understand-
ing of the commonalities and differences of existing propos-
als for ontology mapping languages. We restrict our attention
to logic-based approaches that have been deﬁned as exten-
sions of existing formalisms for representing Terminological
Knowledge. In particular, we chose approaches that extend
description logics (DL) with notions of mappings between

different T-boxes. The rationale for this choice is the fact
that DLs are a widely agreed standard for describing termi-
nological knowledge. In particular, DLs have gained a lot of
attention as a standardized way of representing ontologies on
the Semantic Web [Horrocks et al., 2003].

Approach and Contributions
We encode the different mapping languages in an extended
version of distributed ﬁrst-order logic (DFOL), a logical
framework for representing distributed knowledge systems
[Ghidini and Seraﬁni, 2000]. DFOL consists of two com-
ponents: a family of ﬁrst order theories and a set of axioms
describing the relations between these theories. As most pro-
posals for mapping languages are based on a subset of ﬁrst-
order logic for describing local models and mappings with
a particular semantics for the connections between models,
these mapping languages can be expressed in distributed ﬁrst
order logic in the following way:

scribing domain models

• restrictions on the use of ﬁrst order sentences for de-
• the form of axioms that can be used for describing rela-
• axioms describing the assumptions that are encoded in

tions between domain models

the speciﬁc semantics of mappings

Encoding the different mapping approaches in ﬁrst-order
logic in this way has several advantages for an analysis and
comparison of existing work. In particular it allows us to do
a formal analysis and comparison of different approaches in
a uniform logical framework. In the course of the investiga-
tions, we make the following contributions to the state of the
art in distributed knowledge representation and reasoning:

• we show how the DFOL formalism can be used to model
relations between heterogeneous domains (Proposition
1)• we encode existing mapping approaches in a common
framework, making them more comparable
• we make hidden assumptions explicit in terms of distrib-
• we provide ﬁrst results on the relative expressiveness of

uted ﬁrst order logic axioms

the approaches and identify shared fragments

The paper is structured as follows. In section 2 we intro-
duce distributed ﬁrst order logic as a general model for de-

scribing distributed knowledge systems. We explain the intu-
ition of the logic and introduce its syntax and semantics. In
section 3 we describe how the different mapping approaches
can be encoded in distributed ﬁrst order language. Here we
will focus on the representation of mappings and the encod-
ing of hidden assumptions. In section 4 we compare the dif-
ferent approaches based on their encoding in DFOL and dis-
cuss issues such as relative expressiveness and compatibility
of the different approaches and conclude with a summary of
our ﬁndings and open questions.

2 Distributed First-Order Logic
This section introduces distributed ﬁrst order logic as a ba-
sis for modeling distributed knowledge bases. More details
about the language including a sound and complete calculus
can be found in [Ghidini and Seraﬁni, 2005].
Let {Li}i∈I (in the following {Li}) be a family of ﬁrst or-
der languages with equality deﬁned over a non-empty set I
of indexes. Each language Li is the language used by the i-th
knowledge base (ontology). The signature of Li is extended
with a new set of symbols used to denote objects which are
related with other objects in different ontologies. For each
variable, and each index j ∈ I with j 6= i we have two
new symbols x→j and xj→, called arrow variables. Terms
and formulas of Li, also called i-terms and i-formulas and
are deﬁned in the usual way. Quantiﬁcation on arrow vari-
ables is not permitted. The notation φ(x) is used to denote
the formula φ and the fact that the free variables of φ are
x = {x1, . . . , xn}.
In order to distinguish occurrences of
terms and formulas in different languages we label them with
their index. The expression i : φ denotes the formula φ of the
i-th knowledge base.

The semantics of DFOL is an extension of Local Models
Semantics deﬁned in [Ghidini and Giunchiglia, 2001]. Local
models are deﬁned in terms of ﬁrst order models. To capture
the fact that certain predicates are completely known by the
i-th sub-system we select a sub-language of Li containing the
equality predicate, denoted as Lc
i , which we call the complete
fragment of Li. Complete terms and complete formulas are
terms and formula of Lc
Deﬁnition 1 (Set of local Models). A set of local models of
Li are a set of ﬁrst order interpretations of Li, on a domain
domi, which agree on the interpretation of Lc
i , the complete
fragment of Li.

i and vice versa.

As noted in [Franconi and Tessaris, 2004] there is a founda-
tional difference between approaches that use epistemic states
and approaches that use a classical model theoretic seman-
tics. The two approaches differ as long as there is more than
one model m. Using the notion of complete sublanguage Lc,
however, we can force that the set of local models is either
a singleton or the empty set by enforcing that Lc = L. Un-
der this assumption the two ways of deﬁning the semantics
of submodels are equivalent. Using this assumption, we are
therefore able to simulate both kinds of semantics in DFOL.
Two or more models can carry information about the same
portion of the world. In this case we say that they seman-
tically overlap. Overlapping is unrelated to the fact that the

same constant appears in two languages, as from the local se-
mantics we have that the interpretation of a constant c in Li is
independent from the interpretation of the very same constant
in Lj, with i 6= j. Overlapping is also unrelated to the inter-
section between the interpretation domains of two or more
contexts. Namely if dom1 ∩ dom2 6= ∅ it does not mean
that L1 and Lj overlap. Instead, DFOL explicitly represents
semantic overlapping via a domain relation.
Deﬁnition 2 (Domain relation). A domain relation from
domi to domj is a binary relation rij ⊆ domi × domj.

A domain relation from i to j represents the capability of
the j-th sub-system to represent in its domain the domain of
the i-th subsystem. A pair hd, d0i being in rij means that,
from the point of view of j, d in domi is the representa-
tion of d0 in domj. We use the functional notation rij(d) to
denote the set {d0 ∈ domj|hd, d0i ∈ rij}. The domain re-
lation rij formalizes j’s subjective point of view on the rela-
tion between domi and domj and not an absolute objective
point of view. Or in other words rij 6= rji because of the
non-symmetrical nature of mappings. Therefore hd, d0i ∈ rij
must not be read as if d and d0 were the same object in a do-
main shared by i and j. This fact would indeed be formalized
by some observer which is external (above, meta) to both i
and j. Using the notion of domain relation we can deﬁne the
notion of a model for a set of local models.
Deﬁnition 3 (DFOL Model). A DFOL model M is a pair
h{Mi},{rij}i where, for each i 6= j ∈ I: Mi is a set of
local models for Li, and rij is a domain relation from domi
to domj.

We extend the classical notion of assignment (e.g., the one
given for ﬁrst order logic) to deal with arrow variables us-
ing domain relations. In particular, an assignment a, provides
for each system i, an interpretation for all the variables, and
for some (but not necessarily all) arrow variables, as the do-
main relations might be such that there is no consistent way
to assign arrow variables. For instance if ai(x) = d and
rij(d) = ∅, then aj cannot assign anything to xi→.
Deﬁnition 4 (Assignment). Let M = h{Mi},{rij}i be a
model for {Li}. An assignment a is a family {ai} of par-
tial functions from the set of variables and arrow variables to
domi, such that:
1. ai(x) ∈ domi;
2. ai(xj→) ∈ rji(aj(x));
3. aj(x) ∈ rij(ai(x→j));
An assignment a is admissible for a formula i : φ if ai as-
signs all the arrow variables occurring in φ. Furthermore, a
is admissible for a set of formulas Γ if it is admissible for any
j : φ ∈ Γ. An assignment a is strictly admissible for a set of
formulas Γ if it is admissible for Γ and assigns only the arrow
variables that occur in Γ.

Using the notion of an admissible assignment given above,
satisﬁability in distributed ﬁrst order logic is deﬁned as fol-
lows:
Deﬁnition 5 (Satisﬁability). Let M = h{Mi},{rij}i be a
model for {Li}, m ∈ Mi, and a an assignment. An i-formula
φ is satisﬁed by m, w.r.t, a, in symbols m |=D φ[a] if

a) M |= i : P (x→j) → j : Q(x)
b) M |= i : P (x) → j : Q(xi→)
c) M |= j : Q(xi→) → i : P (x)
d) M |= j : Q(x) → i : P (x→j)

For all d ∈ ||P||i and for all d0 ∈ rij(d), d0 ∈ ||Q||j
For all d ∈ ||P||i there is a d0 ∈ rij(d), s.t., d0 ∈ ||Q||j

iff
iff
iff For all d ∈ ||Q||j and for all d0 with d ∈ rij(d0), d0 ∈ ||P||i
iff For all d ∈ ||Q||i there is a d0 with d ∈ rij(d0), s.t., d0 ∈ ||P||i

Figure 1: Implicit Quantiﬁcation of Arrow Variables in Interpretation Constraints

1. a is admissible for i: φ and
2. m |= φ[ai], according to the deﬁnition of satisﬁability
M |= Γ[a] if for all i: φ ∈ Γ and m ∈ Mi, m |=D φ[ai]1.

for ﬁrst order logic.

Mappings between different knowledge bases are formal-
ized in DFOL by a new form of constraints that involves more
than one knowledge base. These formulas that will be the
basis for describing different mapping approaches are called
interpretation constraints and are deﬁned as follows:
Deﬁnition 6 (Interpretation constraint). An interpretation
constraint from i1, . . . , in to i with ik 6= i for 1 ≤ k ≤ n
is an expression of the form

i1 : φ1, . . . , in : φn → i: φ

(1)

m∈Mi

The interpretation constraint (1) can be considered as an
axiom that restricts the set of possible DFOL models to those
which satisfy it. Therefore we need to deﬁne when a DFOL
model satisﬁes an interpretation constraint.
Deﬁnition 7 (Satisﬁability of interpretation constraints). A
model M satisﬁes the interpretation constraint (1), in sym-
bols M |= i1 : φ1, . . . , in : φn → i : φ if for any assignment a
strictly admissible for {i1 : φ1, . . . , in : φn}, if M |= ik : φk[a]
for 1 ≤ k ≤ n, then a can be extended to an assignment a0
admissible for i: φ and such that M |= i: φ[a0].

Notice that, depending on whether an arrow variable x→
occurs on the left or on the right side of the constraint, x→
has a universal or an existential reading. Figure 1 summarizes
the different possible readings that will reoccur later. Nota-
m(P ), where

tionally, for any predicate P , ||P||i =T
Fij = (cid:8)i: x→j = y→j → j : x = y(cid:9)
(cid:26) i: x = yj→ → j : xi→ = y

By means of interpretation constraints on equality, we can
formalize possible relations between heterogeneous domains.

m(P ) is the interpretation of P in m.

j : x = yi→ → i: xj→ = y

(cid:26) i: x = c → j : xi→ = c

INVij =
ODij = Fij ∪ Fji ∪ INVij
EDij = ODij ∪ {i: x = x → j : xi→ = xi→}
IDij = EDij ∪ EDji
RDij =
IPij = i:⊥ → j :⊥
1Since it will be clear from the context, in the remainder we will
use the classical satisﬁability symbol |= instead of |=D and we will
write m |= φ[a] to mean that an i-formula φ is satisﬁed by m.
In writing m |= φ[a] we always mean that a is admissible for i :
φ (in addition to the fact that m classically satisﬁes φ under the
assignment a)

(cid:12)(cid:12)(cid:12)(cid:12) c ∈ Li ∩ Lj

j : x = c → i: xj→ = c

(cid:27)

(cid:27)

Proposition 1. Let M be a DFOL model and i 6= j ∈ I.
1. M |= Fij iff rij is a partial function.
2. M |= INVij iff rij is the inverse of rji.
3. M |= ODij if rij(= r−1

ji ) is an isomorphism between a
subset of domi and a subset of domj. I.e., domi and
domj (isomorphically) overlap.

4. M |= EDij iff rij(= r−1

ji ) is an isomorphism between
domi and a subset of domj. I.e., domi is (isomorphi-
cally) embedded in domj
5. M |= IDij iff rij(= r−1
ji ) is an isomorphism between
domi and domj. I.e., domi is isomorphic to domj.
6. M |= RD, if for every constant c of Li and Lj, if c is
interpreted in d for all m ∈ Mi then c is interpreted in
rij(d) for all models of m ∈ Mj, and vice-versa. I.e.,
the constant c is rigidly interpreted by i and j in two
corresponding objects.
7. Finally M |= IPij iff Mi = ∅ implies that Mj = ∅.

I.e., inconsistency propagates from i to j.

3 Modeling Mapping Languages in DFOL
Formalisms for mapping languages are based on four main
parameters: local languages and local semantics used to spec-
ify the local knowledge, and mapping languages and seman-
tics for mappings, used to specify the semantic relations be-
tween the local knowledge. In this section we focus on the
second pairs and as far as local languages and local seman-
tics it is enough to notice that
Local languages In all approaches local knowledge is ex-
pressed by a suitable fragment of ﬁrst order languages.
Local semantics with the notable exception of [Franconi
and Tessaris, 2004], where authors propose an epistemic
approach to information integration, all the other for-
malisms for ontology mapping assume that each local
knowledge is interpreted in a (partial) state of the world
and not into an epistemic state. This formally corre-
sponds to the fact that each local knowledge base is as-
sociated with at most one FOL interpretation.

The ﬁrst assumption is naturally captured in DFOL, by sim-
ply considering Li to be an adequately restricted FOL lan-
guage. Concerning the local semantics, in DFOL models
each Li is associated with a set of interpretations. To simu-
late the single local model assumption, in DFOL it is enough
to declare each Li to be a complete language. This implies
that all the m ∈ Mi have to agree on the interpretation of
Li-symbols.

Notationally, φ, ψ, . . . will be used to denote both DL ex-
pressions and FOL open formulas. If φ is a DL concept, φ(x)
(or φ(x1, . . . , xn)) will denote the corresponding translation
of φ in FOL as described in [Borgida, 1996]. If φ is a role
R then φ(x, y) denotes its translation P (x, y), and if φ is a

constant c, then φ(x) denote its translation x = c. Finally we
use x to denote a set x1, . . . , xn of variables.

3.1 Distributed Description Logics/C-OWL
The approach presented in [Borgida and Seraﬁni, 2003] ex-
tends DL with a local model semantics similar to the one in-
troduced above and so-called bridge rules to deﬁne seman-
tic relations between different T-Boxes. A distributed inter-
pretation for DDL on a family of DL languages {Li}, is a
family {Ii} of interpretations, one for each Li plus a family
{rij}i6=j∈I of domain relations. While the original proposal
only considered subsumption between concept expressions,
the model was extended to a set of ﬁve semantic relations
discussed below. The semantics of the ﬁve semantic relations
deﬁned in C-OWL is the following:
Deﬁnition 8 ([Bouquet et al., 2004]). Let φ and ψ be either
concepts, or individuals, or roles of the descriptive languages
Li and Lj respectively2.
1. I |= i: φ
2. I |= i: φ
3. I |= i: φ
4. I |= i: φ
5. I |= i: φ
An interpretation for a context space is a model for it if all the
bridge rules are satisﬁed.

v−→ j : ψ if rij(φIi) ⊆ ψIj ;
w−→ j : ψ if rij(φIi) ⊇ ψIj ;
≡−→ j : ψ if rij(φIi) = ψIj ;
⊥−→ j : ψ if rij(φIi) ∩ ψIj = ∅;
∗−→ j : ψ if rij(φIi) ∩ ψIj 6= ∅;

From the above satisﬁability condition one can see that the
≡−→ j : ψ is equivalent to the conjunction of the
mapping i: φ
w−→ j : ψ. The mapping
v−→ j : ψ and i : φ
mappings i : φ
⊥−→ j : ψ is equivalent to i : φ
v−→ j : ¬ψ. And ﬁnally
i : φ
∗−→ j : ψ is the negation of the mapping
the mapping i : φ
v−→ j : ψ. For the translation we will therefore con-
i : φ
sider only the primitive mappings. As the underlying notion
of a model is the same as for DFOL, we can directly try to
translate bridge rules into interpretation constraints. In par-
ticular, there are no additional assumptions about the nature
of the domains that have to be modeled. The translation is the
following:

DFOL

v−→ j : ψ i: φ(x→j) → j : ψ(x)
w−→ j : ψ j : ψ(x) → i: φ(x→j)

C-OWL
i: φ
i: φ
i: φ 6 v−→ j : ψ No translation

We see that a bridge rule basically corresponds to the interpre-
tation a) and d) in Figure 1. The different semantic relations
correspond to the usual readings of implications. Finally neg-
ative information about mappings (i.e., i : φ 6 v−→ j : ψ is not
representable by means of DFOL interpretation constraints.

2In this deﬁnition, to be more homogeneous, we consider the
interpretations of individuals to be sets containing a single object
rather than the object itself.

3.2 Ontology Integration Framework (OIS)
Calvanese and colleagues in [Calvanese et al., 2002b] pro-
pose a framework for mappings between ontologies that gen-
eralizes existing work on view-based schema integration [Ull-
man, 1997] and subsumes other approaches on connecting
DL models with rules. In particular, they distinguish global
centric, local centric and the combined approach. These ap-
proaches differ in the types of expressions connected by map-
pings. With respect to the semantics of mappings, they do not
differ and we therefore treat them as one.

OIS assumes the existence of a global model g into which
all local models s are mapped. On the semantic level, the
domains of the local models are assumed to be embedded in
a global domain. Further, in OIS constants are assumed to
rigidly designate the same objects across domain. Finally,
global inconsistency is assumed, in the sense that the incon-
sistency of a local knowledge base makes the whole system
inconsistent. As shown in Proposition 1, we can capture these
assumptions by the set of interpretation constraints EDsg,
RDsg, and IPsg, where s is the index of any source ontology
and g the index of the global ontology.

According to these assumptions mappings are described
in terms of correspondences between a local and the global
model. The interpretation of these correspondences are de-
ﬁned as follows:
Deﬁnition 9 ([Calvanese et al., 2002b]). Correspondences
between source ontologies and global ontology are of the fol-
lowing four forms
1. I satisﬁes hφ, ψ, soundi w.r.t. the local interpretation D,
if all the tuples satisfying ψ in D satisfy φ in I
2. hφ, ψ, completei w.r.t.
the local interpretation D, if no
tuple other than those satisfying ψ in D satisﬁes φ in I,
3. hφ, ψ, exacti w.r.t. the local interpretation D, if the set
of tuples that satisﬁes ψ in D is exactly the set of tuples
satisfying φ in I.
hφ, ψ, exacti
From the
above
to the conjunction of hφ, ψ, soundi and
is equivalent
hφ, ψ, completei. It’s therefore enough to provide the transla-
tion of the ﬁrst two correspondences. The deﬁnitions 1 and 2
above can directly be expressed into interpretation constraints
(compare Figure 1) resulting in the following translation:

conditions,

semantic

GLAV Correspondence DFOL
hφ, ψ, soundi
hφ, ψ, completei

s: ψ(x) → g : φ(xs→)
g : φ(x) → s: ψ(x→g)

The translation shows that there is a fundamental difference
in the way mappings are interpreted in C-OWL and in OIS.
While C-OWL mappings correspond to a universally quanti-
ﬁed reading (Figure 1 a), OIS mappings have an existentially
quantiﬁed readings (Figure 1 b/d). We will come back to this
difference later.

3.3 DL for Information Integration (DLII)
A slightly different approach to the integration of different
DL models is described in [Calvanese et al., 2002a]. This
approach assumes a partial overlap between the domains of
the models Mi and Mj, rather than a complete embedding of

them in a global domain. This is captured by the interpreta-
tion constraint ODij. The other assumptions (rigid designa-
tors and global inconsistency) are the same as for OIS.
An interpretation I associates to each Mi a domain ∆i.
These different models are connected by interschema asser-
tions. Satisﬁability of interschema assertions is deﬁned as
follows 3
Deﬁnition 10 (Satisﬁability of interschema assertions). If I
is an interpretation for Mi and Mj we say that I satisﬁes the
interschema assertion

φ 6vext ψ, if φI 6⊆ ψI
φ 6≡ext ψ, if φI 6= ψI

nij ⊆ ψI ∩ >I
nij = ψI ∩ >I
nij 6⊆ ψI ∩ >I
nij 6= ψI ∩ >I

φ vext ψ, if φI ⊆ ψI
φ ≡ext ψ, if φI = ψI
φ vint ψ, if φI ∩ >I
φ ≡int ψ, if φI ∩ >I
φ 6vint ψ, if φI ∩ >I
φ 6≡int ψ, if φI ∩ >I
As before ≡est and ≡int are deﬁnable as conjunctions
of vest and vint, so we can ignore them for the DFOL
translation. Furthermore, a distinction is made between ex-
tensional and intentional interpretation of interschema asser-
tions, which leads to different translations into DFOL.

nij

nij

nij

nij

interschema assertions DFOL
φ vext ψ
φ 6vext ψ, φ 6≡ext ψ
φ vint ψ
φ 6vint ψ, φ 6≡int ψ

i: φ(x) → j : ψ(xi→)
No translation
i: φ(x→j) → j : ψ(x)
No translation

While the extensional interpretation corresponds to the se-
mantics of mappings in OIS, the intentional interpretation
corresponds to the semantics of mappings in C-OWL. Thus
using the distinction made in this approach we get an explana-
tion of different conceptualizations underlying the semantics
of C-OWL and OIS that use an extensional and an intentional
interpretation, respectively.

3.4 -connections
A different approach for deﬁning relations between DL
knowledge bases has emerged from the investigation of so-
called -connections between abstract description systems
[Kutz et al., 2004]. Originally intended to extend the decid-
ability of DL models by partitioning them into a set of mod-
els that use a weaker logic, the approach has recently been
proposed as a framework for deﬁning mappings between on-
tologies [Grau et al., 2004].

In the -connections framework, for every pair of ontolo-
gies ij there is a set ij of links, which represents binary rela-
tions between the domain of the i-th ontology and the domain
of the j-th ontology. Links from i to j can be used to deﬁne
i-concepts, in a way that is analogous to how roles are used to
deﬁne concepts. In the following table we report the syntax
and the semantics of i-concept deﬁnitions based on links. (E
denotes a link from i to j and C denotes a concept in j. The
only assumption about the relation between domains is global
inconsistency, see above).

3To simplify the deﬁnition we introduce the notation >I
>I
ni ∩ >I

nj for any n ≥ 1. Notice that >I

i ∩ ∆n
j .

nij = ∆n

nij =

In DFOL we have only one single relation from i to
j, while in -connection there are many possible relations.
However, we can use a similar trick as used in [Borgida
and Seraﬁni, 2003] to map relations to interschema relations:
each of the relations in ij acts as a rij. To represent -
connections it is therefore enough to label each arrow vari-
Own−→ j is
able with the proper link name. The arrow variable x
read as the arrow variable x→i where rij is intended to be
the interpretation of Ownij. With this syntactic extension of
DFOL, concept deﬁnitions based on links (denoted as E) can
be codiﬁed in DFOL as follows:

-connections DFOL
φ v ∃E.ψ
φ v ∀E.ψ
φ v≥ nE.ψ

φ v≤ nE.ψ

i: φ(x) → j : ψ(xi E−→)
i:Vn
E−→j) → j : ψ(x)
j :Vn
i: φ(x
k=1 φ(x1) →
i: φ(x) ∧Vn+1
k6=h=1 ψ(xi E−→
(cid:16)
j :Wn+1
k=1 x = x

ψ(xk) ⊃W

k

k=1

) ∧ xk 6= xh
E−→j
k →

h6=k xh = xk

(cid:17)

We see that like OIS, links in the -connections framework
have an extensional interpretation. The fact, that the frame-
work distinguishes between different types of domain rela-
tions, however, makes it different from all other approaches.
Another difference to the previous approaches is that new
links can be deﬁned on the basis of existing links, similar to
complex roles in DL. Syntax and semantics for link construc-

tors is deﬁned in the usual way: (E−)I =(cid:0)EI(cid:1)−1 (Inverse),

(E u F )I = EI ∩ F I (Conjunction), (E t F )I = EI ∪ F I
(Disjunction), and (¬E)I = (∆i × ∆j) \ EI (Comple-
ment). Notice that, by means of inverse links we can de-
ﬁne mappings of the b and d type. E.g., the -connection
statement φ v ∃E−ψ corresponds to the DFOL bridge rule
φ(x) : i → ψxi→j : which is of type b). Similarly the -
connection φ v ∀E−ψ corresponds to a mapping of type d).
As the distinctions between different types of links is only
made on the model theoretic level, it is not possible to model
Boolean combinations of links. Inverse links, however, can
be represented by the following axiom:

E−→j → j : y

i: y = x
j : y

E−−→i = x → i: y = x

E−−→i = x
E−→j

Finally the inclusion axioms between links, i.e., axioms of
the form E v F where E and F are homogeneous links, i.e.,
links of the same ij, can be translated in DFOL as follows:

i: x = y

E−→j → j : xi F−→ = y

We can say that the -connections framework signiﬁcantly
differs from the other approaches in terms of the possibilities
to deﬁne and combine mappings of different types.

4 Discussion and Conclusions
The encoding of different mapping approaches in a common
framework has two immediate advantages. The ﬁrst one is the

ability to reason across the different frameworks. This can be
done on the basis of the DFOL translation of the different ap-
proaches using the sound and complete calculus for DFOL
[Ghidini and Seraﬁni, 2000]. As there are not always com-
plete translations, this approach does not cover all aspects of
the different approaches, but as shown above, we can capture
most aspects. There are only two aspects which cannot be
∗−→ j : ψ
represented in DFOL, namely “non mappings” (i: φ
in C-OWL, φ 6vint ψ etc.
in DLII) and “complex map-
pings” such as complex links in -connection. The second
beneﬁt is the possibility to compare the expressiveness of the
approaches. We have several dimensions along which the
framework can differ:
Arity of mapped items4 C-OWL allows only to align con-
stants,
-
connections allow to align only 1-arity items, i.e., con-
cepts, while DLII and OIS allow to integrate n-arity
items.

concepts and roles

(2-arity relations),

Positive/negative mappings Most approaches state positive
facts about mapping, e.g that two elements are equiva-
lent. The DLII and C-OWL frameworks also allow to
state that two elements do not map (φ 6≡ ψ).

Domain relations The approaches make different assump-
tions about the nature of the domain. While C-OWL and
-connections do not assume any relation between the
domains, DLII assumes overlapping domains and OIS
assumes local domains that are embedded in a global
domain.

Multiple mappings Only the -connection approach sup-
ports the deﬁnition of different types of mappings be-
tween ontologies that partition the inter-domain rela-
tions.

Local inconsistency Some approaches provide a consistent
semantics also in the case in which some of the ontolo-
gies or mappings are inconsistent.

We summarize the comparison in the following table.

Mapping type

Domain
relation

Arity

Local
⊥
×

c)

Int. constr. (cf. ﬁg. 1)
a)
d)
×
×
×
×
×
×

b)
×
×
×

×

Pos. Neg. Mult.
×
×
×
×

×
×
×

×

2
n
n
1

Het.
Incl.
Emb.
Het.

C-OWL
OIS
DLII
-Conn.
We conclude that existing approaches make choices along
a number of dimensions. These choices are obviously inﬂu-
enced by the intended use. Approaches intended for data-
base integration for example will support the mapping of n-
ary items that correspond to tuples in the relational model.
Despite this fact, almost no work has been done on chart-
ing the landscape of choices to be made when designing a
mapping approach, and for adapting the approach to the re-
quirements of an application. The work reported in this paper
provides the basis for this kind of work by identifying the
possible choices on a formal level. An important topic of fu-
ture work is to identify possible combinations of features for
mapping languages on a formal level in order to get a more
complete picture of the design space of mapping languages.

4Due to limited space we did not discuss the encoding of mapped

items in this paper

References
[Borgida and Seraﬁni, 2003] A. Borgida and L. Seraﬁni.
Distributed description logics: Assimilating information
from peer sources. Journal of Data Semantics, 1:153–184,
2003.

[Borgida, 1996] A. Borgida. On the relative expressiveness
of description logics and predicate logics. Artiﬁcial Intel-
ligence, 82:353–367, 1996. Research Note.

[Bouquet et al., 2004] P. Bouquet, F. Giunchiglia, F. van
Harmelen, L. Seraﬁni, and H. Stuckenschmidt. Contextu-
alizing ontologies. Journal on Web Semantics, 1(4):xx–xx,
2004.

[Calvanese et al., 2002a] Diego Calvanese, Giuseppe De Gi-
acomo, and Maurizio Lenzerini. Description logics for in-
formation integration. In A. Kakas and F. Sadri, editors,
Computational Logic: Logic Programming and Beyond,
volume 2408 of Lecture Notes in Computer Science, pages
41–60. Springer, 2002.

[Calvanese et al., 2002b] Diego Calvanese, Giuseppe De Gi-
acomo, and Maurizio Lenzerini. A framework for ontol-
ogy integration.
In Isabel Cruz, Stefan Decker, Jerome
Euzenat, and Deborah McGuinness, editors, The Emerg-
ing Semantic Web, pages 201–214. IOS Press, 2002.

[Franconi and Tessaris, 2004] E. Franconi and S. Tessaris.
Rules and queries with ontologies: a uniﬁed logical frame-
work. In Workshop on Principles and Practice of Semantic
Web Reasoning (PPSWR’04), 2004.

[Ghidini and Giunchiglia, 2001] C.

F. Giunchiglia.
tual reasoning = locality + compatibility.
Intelligence, 127(2):221–259, 2001.

and
Local model semantics, or contex-
Artiﬁcial

Ghidini

[Ghidini and Seraﬁni, 2000] C. Ghidini and L. Seraﬁni. Dis-
tributed ﬁrst order logics.
In D.M. Gabbay and M. De
Rijke, editors, Frontiers of Combining Systems 2, pages
121–139. Research Studies Press Ltd., 2000.

[Ghidini and Seraﬁni, 2005] Chiara Ghidini and Luciano
Seraﬁni. Distributed ﬁrst order logic - revised semantics.
Technical report, ITC-irst, January 2005.

[Grau et al., 2004] Bernardo Cuenca Grau, Bijan Parsia, and
Evren Sirin. Working with multiple ontologies on the se-
mantic web. In Proceedings of the Third Internatonal Se-
mantic Web Conference (ISWC2004), volume 3298 of Lec-
ture Notes in Computer Science, 2004.

[Horrocks et al., 2003] Ian Horrocks,

Peter F. Patel-
Schneider, and Frank van Harmelen. From shiq and rdf to
owl: The making of a web ontology language. Journal of
Web Semantics, 1(1):7–26, 2003.

[Kutz et al., 2004] O. Kutz, C. Lutz, F. Wolter, and M. Za-
kharyaschev. E-connections of abstract description sys-
tems. Artiﬁcial Intelligence, 156(1):1–73, 2004.

[Ullman, 1997] Jeffrey D. Ullman. Information integration
using logical views.
In Proceedings of the 6th Interna-
tional Conference on Database Theory, volume 1186 of
Lecture Notes In Computer Science, pages 19 – 40, 1997.

