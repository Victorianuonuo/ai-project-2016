Resource Temporal Networks: Definition and Complexity 

9, rue de Verdun, 94253 Gentilly Cedex, France 

Philippe Laborie 

ILOG 

plaborie@ilog.fr 

Abstract 

This  paper  introduces  the  concept  of  Resource 
Temporal  Network  (RTN),  a  constraint  network 
that subsumes both classical attributes used in A.I. 
Planning and capacity resources traditionally han(cid:173)
dled in Scheduling.  After giving a formal defini(cid:173)
tion of RTNs,  we analyze their expressive power 
and study complexities of several fragments of the 
RTN framework. We show that solving an RTN is 
in general NP-Complete - which is not surprising 
given the expressivity of the framework - whereas 
computing a Necessary Truth Criterion is polyno(cid:173)
mial. This last result opens the door for promising 
algorithms to solve RTNs. 

1 

Introduction 

Historically, Artificial Intelligence Planning focuses on ab(cid:173)
solute changes (for instance change  of the truth value of a 
predicate), conditions on the state of the world and symbol(cid:173)
ical precedences between operations whereas Scheduling fo(cid:173)
cuses on relative changes of the world (resource consump(cid:173)
tion or production) and numerical time.  Recent advances in 
both fields have enlarged their relative ambition:  time and 
resources are increasingly being studied by the AI Planning 
community whereas conditions and absolute changes are nec(cid:173)
essary to express complex scheduling problems involving for 
example  alternative  recipes  or  complex  conditions  and ef(cid:173)
fects on the  level  of resources.  This paper introduces and 
analyzes the computational complexity of a formalism that 
mixes on the same fluent the ingredients of Al Planning (ab(cid:173)
solute changes, conditions) and the ones of Scheduling (rela(cid:173)
tive changes, numerical time).  There has been some recent 
work  on  the  decidability  of planning  with numerical  state 
variables [Helmert, 2002] but to the best of our knowledge, 
no computational complexity study has been published that 
analyzes a complex but realistic and useful fragment of the 
overall framework of planning with time and numerical state 
variables. This paper is a step in this direction. 

2  Resource Temporal Networks 
2.1  Definition 
Definition 1 (Resource) A  resource is a numerical fluent 
whose value can vary over time. The value of this fluent at 
date t is called the resource level at date t and is denoted 

In this paper, we focus on time and resource levels belong(cid:173)
Al(cid:173)

ing to a dense set (rational numbers): 
though the framework can be extended to handle continuous 
changes, we only consider discrete changes. 
Definition 2 (Resource Statements)  We define the follow(cid:173)
ing statements on a resource where t, and  denote vari(cid:173)
able time-points and q some constant in 

•  An absolute change is a statement denoted A(q, t) stat(cid:173)
ing that because of this change at date t, the level of the 
resource changes from a current level I to q. 
•  A relative change is a statement denoted R 

stat(cid:173)
ing that because of this change at date t, the level of 
the resource changes from current level I to I This 
corresponds to a production of 
consumption of  units if 

units  if 

or 

•  A  lower-than  condition  is 

statement denoted 
L 
stating  that  the  level  of  the  resource 
must remain lower than or equal to q over time interval 

•  A  greater-than  condition  is 

statement denoted 
G(q,t8,te) stating that the level of the resource must 
remain greater than or equal to q over time interval 

respectively  denote  the  sets  of absolute,  rela(cid:173)

tive changes, lower-than and greater-than conditions.  If 

is a resource change, we denote 

the time-point of 

and q(x) the resource quantity involved in 

If 

is  a  condition,  we  denote  the start time-point of 
its end time-point and 

the resource quantity involved in 
Note that the above resource statements also allow for 
expressing equal conditions of the form  E 
stating 
that the level of the resource remains equal to q over the time 
interval 
as the conjunction of a lower-than condition 
L 
. The set 
of equal  conditions is denoted £.  Resource statements are 

and a greater-than condition G 

948 

PLANNING 

the basic ingredients for defining  Resource Temporal Net(cid:173)
works (RTNs).  Informally, an RTN represents a set of pos(cid:173)
sible evolutions of a given numerical variable (the level of the 
resource) over time. 
Definition 3 (Resource Temporal Network) A 
temporal  network 

resource 
tuple  where: 
time-point  variables,  and  respectively 
denote  set of absolute, relative changes, lower-than and 
greater-than conditions referring to time-points in 
is 
a  Temporal  Network  using  the  formalism  defined in 
[Gerevini and Cristani, 1997]1 on the time-points of 

is  set  of 

(R  TN) 

is  a 

In this paper, for simplicity reasons, we focus on decision 
problems and reasoning involving a unique resource.  Our 
framework can naturally be extended toward (1) parametrized 
resources of the form Res  where 
is a variable parameter 
describing which resource a given resource statement applies 
and (2) handling variable quantities q in resource statements. 
Those extensions are out of the scope of the paper. 
Definition 4 (Instantiation of an RTN) An instantiation of 
an RTN is function a : 

It is to be noted that in this paper, we assume that all the re(cid:173)
source statements are known and the only decision variables 
of an RTN are the time-points in  We do not handle, at 
this point, the complete Al Planning problem of generating 
an RTN given a partial RTN and a set of operators described 
as RTNs. 
Definition 5 (Time-consistent instantiation) An  instantia(cid:173)
tion a is said to be time-consistent iff 
is consistent with 
the STN 

Figure 2: Solution of an RTN 

Computing a time-consistent instantiation of an RTN can 
be done in 
[Gerevini and Cristani, 1997]. We now de(cid:173)
fine the notion of resource-consistent instantiation. In the def(cid:173)
inition below, conditions [1] and [2] ensure that in a resource-
consistent instantiation, two absolute changes assigning dif(cid:173)
ferent levels cannot be simultaneous and an absolute change 
cannot be simultaneous with a relative change.  The ratio(cid:173)
nale for this semantics is that, as in [Fox and Long, 2002], 
that are 
we allow simultaneity only for pair of changes 
commutative, that is such that applying 
leads to 
the same level as applying just after 
.  Given  a  date  point 
the last date beforeat which an absolute 
[3] defines 
change  occurred  and 
the resource level assigned by such 
an absolute change.  Note that 
can be defined without 
ambiguity because two absolute changes assigning different 
levels cannot be simultaneous. Equation [4] defines the pro(cid:173)
file of the resource level over time.  Conditions [5] and [6] 
state that this profile must satisfy the lower-than and greater-
than conditions. 
Definition 6 (Resource-consistent instantiation)  An 
stantiation a is said to be resource-consistent iff the following 
conditions are satisfied: 

just after 

in(cid:173)

'This formalism allows for both the representation of metric con(cid:173)

straints 

and unequations 

Definition 7 (Solution of a RTN) A solution to an RTN is an 
instantiation  that is both time- and resource-consistent. 

3  Expressive Power 
In this section, we show that most of the classical attributes 
used in AI Planning as well as most of the resources used in 
Scheduling can be represented in the RTN framework. 

3.1  Planning Attributes 
STRIPS operators 
Let p be a STRIPS predicate.  It can be represented by a 
resource for which level 0 means that p is false and level 1 
means that p is true. Let  be an operator at time-point /. If p 

PLANNING 

949 

is in the precondition of operator o, this can be captured by a 
greater-than condition 
It 
is in the precondition of operator o, this can be cap(cid:173)
If p is in the delete 
tured by a lower-than condition 
list of operator o, this can be captured by an absolute change 
is in the add 
list of operator o, this can be captured by an absolute change 

with the constraint 

stating that after 

will be false. 

stating that after t, p will be true. 

IXTET  attributes 
Let att be an IxTnT attribute [Ghallab and Laruelle,  1994]. 
We can build a mapping p,att that maps the possible values 
of attribute att to Q. Then, a hold predicate 
can be modeled by an equal condition  E(uaU 
An 
event event 
by the conjunction of an equal con(cid:173)
dition 
an absolute  c h a n g e a nd 
a temporal constraint t' 
PDDL 2.1 
Let's consider a durative action of PDDL 2.1 [Fox and Long, 
2002].  This action can be represented by two time points ts 
(start) and 
(end) in our formalism.  A condition at start on 
a non-numerical proposition  can be captured by a greater-
than condition 
with the  p r e c e d e n c e an  ef(cid:173)
fect at start by an absolute change A(l, ta) (similar modeling 
for conditions and effects at end) and an invariant condition 
by a greater-than condition 
Conditions and in(cid:173)
variants of the form 
and = on numeric variables can be 
captured by RTN conditions  L, G and  E.  Numeric effects 
assign correspond to absolute changes,  whereas increase 
and decrease correspond to relative changes. 

3.2  Scheduling Resources 
Discrete resources 
A discrete resource of maximal capacity Q [Laborie, 2003] 
can be captured by an  RTN with a greater-than condition 

a  lower-than  condition 

and an initial production 
units of resource over the time interval 
is represented 
by  a pair of relative changes 
If  the 
discrete resource is given a varying maximal capacity pro(cid:173)
file, this can be modeled as a set of lower-than conditions 

An activity requiring 

and  an  absolute change 

Reservoir 
and initial level L [La(cid:173)
A  reservoir of maximal  capacity 
borie,  2003]  can  be  captured by an  RTN  with  a greater-
a  lower-than  condition 
than  condition 
A 
production activity corresponds to a relative change R(q, t) 
where 
whereas a consumption activity corresponds to 
a relative change R(q, t) where 
State Resources 
In ILOG Scheduler [ILOG, 2002], state resources are defined 
as objects that at each timepoint can take only one possible 

denotes the constraint 

3  We  assume  that  denotes a time-point before any other time-

point  and  denotes a time-point after any other time-point. 

state among a known set of possible states 
tivities requiring different states of the state resource cannot 
overlap. We can build a mapping 
that maps the possible 
states of the state resource to Q.  Then,  the requirement of 
a given state s of a state resource by an activity executing on 
the time interval 
can be modeled as an absolute change 

Ac(cid:173)

and an equal condition 

Additional Expressivity 
The RTN framework allows for modeling complex resources 
and activities in scheduling.  In manufacturing for instance, 
maintenance activities need to be executed as soon as the level 
of some numerical variable (measuring the "need for mainte(cid:173)
nance") has reached a certain level. The level of this variable 
is increased (relative change) by production activities and is 
reset to 0 (absolute change) by maintenance activities.  An(cid:173)
other example is scheduling while ensuring some condition 
on a numerical variable during the execution of an activity 
(e.g.  maintaining the temperature of a furnace within a suit(cid:173)
able  interval).  Such kind  of conditions are  very important 
in process  industry and chemistry.  The conjunction of ab(cid:173)
solute changes, relative changes and conditions holding over 
variable time intervals offers a powerful formalism for rep(cid:173)
resenting complex scheduling problems. Additional features 
such as dependence between variable resource quantities 
and time-points t that do not directly fit into the RTN model 
can be handled by additional constraints in a constraint prop(cid:173)
agation framework. 

4  Complexity 
In  this  section,  we  analyze  the  algorithmic  complexity  of 
solving  and  providing  necessary  truth  criteria  for  general 
RTNs and particular fragments of the RTN  formalism.  By 
NP-Complete we mean NP-Complete in the strong sense. 
4.1  Notations 
Let us consider the following notations about temporal con(cid:173)
straints:  PA denotes the point algebra of [Vilain and Kautz, 
1986] which is a restriction  of 
that  only  consists of 
be(cid:173)
the  set  of qualitative  relations 
tween timepoints. 
.  We 
write 
to express the  fact that the corre(cid:173)
sponding relation is subsumed by the temporal network. We 
use the following notations about resource statements: 
denote  any  set  of relative  changes  x  such that 
(producers). 
ments 
the lower-than condition 
set of pairs 
where 
with 
A fragment of the complete RTN framework 
is denoted  (X|y)  where X  is the  set of changes and con(cid:173)
ditions allowed  in this  fragment and  Y  the type of tempo(cid:173)
ral constraints,  denotes the number of resource statements 
the number of temporal constraints between 
in the RTN, 
the  complexity  of comput(cid:173)
time-points and maxflow 
ing a maximum flow on a graph with n nodes and 
arcs4. 

0 
denote any set of pairs of resource state(cid:173)
denotes 
denotes any 

denotes a general 

where 

and 

4State-of-the-art maximum flow algorithms do it in O 

in worst case [Hochbaum, 1998]. 

950 

PLANNING 

4.2  Finding a solution 
Complexity 1 The problem of finding a solution to an RTN 
is in NR 
Proof:  The  time-consistency  of an  instantiation  a  can  be 
checked in polynomial time and, given its definition, the func(cid:173)
tion 
can be build and the resource-consistency checked in 
polynomial time. A simple algorithm to check that an instan(cid:173)
tiation is a solution runs in 0\ 

The proof of the three poly normality results below is omit(cid:173)

ted because trivial. 

PLANNING 

951 

The following lemma is a generalization of Lemma 2 when 

all changes are allowed including consumers 

of the resource is equal to the weight of the maximum inde(cid:173)
pendent set of G.  Furthermore G is a comparability graph 
as the edges involving at least one relative change can nat(cid:173)
urally be oriented with the direction of a path containing an 
absolute change between them and the remaining of the edges 
(between pairs of absolute changes) forms a clique. Comput(cid:173)
ing the maximum weight independent set of a comparability 
graph is polynomial and can be solved as a min-flow problem 
[Golumbic, 1980]. Thus, the NTC only needs to compare the 
weight of the maximum weight independent set of G with the 
maximal resource level Q. 

Proof:  The  theorem  gives  a  necessary  condition  for 
NTC(U)  to  be  true  because  if the  condition  is  not met,  a 
time-consistent instantiation can be built that is not resource-
consistent.  Reciprocally,  if  NTC(U)  is  false,  it  means 
that  there  exists  a  time-consistent  instantiation  that  is  not 
resource-consistent.  This time-consistent instantiation  vio(cid:173)
lates at least one condition statement 

The following complexity results use Theorem 1 to extend 
Lemmas 1 and 3 to the more general case of any set of condi(cid:173)
tion statements. For each of these results, one can show that 

problem Uy can be transformed into one of the corresponding 
lemma and thus, its time complexity is polynomial. 

5  Conclusion and Future Work 
In this paper, we introduce the notion of RTN to express a 
large panel of possible evolutions of a given numerical state 
variable over time.  RTNs allow modeling on the same flu(cid:173)
ent features of classical Al Planning (absolute changes, con(cid:173)
ditions) and  Scheduling (relative changes).  We show that 
computing a solution to an RTN is in general NP-Complete 
whereas  determining  whether  all  time-consistent  instantia(cid:173)
tions of an RTN are solutions is polynomial.  This last result 
indicates that efficient solving methods based on such poly(cid:173)
nomial Necessary Truth Criteria can be developed.  Indeed, 
when an RTN does not satisfy the NTC, all the algorithms we 
mention can exhibit a subset of changes sufficient to explain 
why some time-consistent instantiations are not a solution. 
Just like in classical planning or scheduling, these potential 
conflicts can be used to branch in a search tree until the NTC 
is true and to perform constraint propagation. 

A  direction  for  future  work  will  consist  in  studying  the 
complexity  of the  only  problem  whose  complexity  is  still 
open:  NTC  for 
,  Based on the fairly 
optimistic  results  described  in  this  paper,  we  also plan  to 
work  on  the  development  of practical  and  efficient  algo(cid:173)
rithms for solving NTC and for finding solutions (branching 
schemes, heuristics, computation of resource envelopes, con(cid:173)
straint propagation).  We think that the numerous and well-
studied combinatorial problems we found tightly related with 
RTNs (one-machine scheduling problems,  subset sum,  bin 
packing, sequencing to minimize maximum cumulative costs, 
maximum weight closure, maximum weight independent set, 
maximum weight convex set) can also help to solve RTNs. 
For instance, state-of-the-art bin packing algorithms could be 
a source of inspiration for 
Extension 
of the  framework  to  integrate  and  mix  continuous  relative 
changes (see continuous reservoirs [1LOG, 2002]) and abso(cid:173)
lute changes (see [Pcnberthy and Weld, 1994; Trinquart and 
Ghallab, 2001]) is also clearly of interest. 
6  Acknowledgements 
I am very grateful to Andre Kezdy for pointing me to some 
relevant articles about the maximum weight convex set prob(cid:173)
lem as well as to many other graph theorists who got inter(cid:173)
ested in this problem.  Special thanks to Emmanuel Guere 
and  Pascal  Massimino for enlightening discussions  on the 
RTN semantics and complexity issues and to Francis Sourd 
for carefully proofreading the paper. 
References 
[Ahujaeft//., 1993]  R.  Ahuja,  T.  Magnanti,  and  J.  Orlin. 
Network Flows:  Theory, Algorithms and Applications. 
Prentice-Hall, 1993. 

[Chapman, 1987]  D.  Chapman.  Planning  for Conjunctive 

Goals. Artificial Intelligence, 32:333-377, 1987. 

[Finta and Liu, 1996]  L. Finta and Z. Liu.  Single Machine 
Scheduling Subject to Precedence Delays.  Discrete Ap(cid:173)
plied Mathematics, 70:247-266, 1996. 

[Fox and Long, 2002]  M. Fox and D. Long.  PDDL2.1 : An 
Extension  to  PDDL  for  Expressing  Temporal  Planning 
Domains, Feb. 2002. 

[Garey and Johnson, 1979]  M.R.  Garey  and  D.S.  Johnson. 
Computers and Intractability: A Guide to the Theory of 
NP-Completeness. W. H. Freeman and Company, 1979. 
[Gerevini and Cristani, 1997]  A.  Gcrevini  and M.  Cristani. 
On finding a solution in temporal constraint satisfaction 
problems. In Proc. IJCAI97, pages 1460-1465, 1997. 

[Ghallab and Laruelle, 1994]  M.  Ghallab  and  H.  Laruelle. 
Representation and Control in IxTeT, a Temporal Planner. 
In Proc. AIPS-94, pages 61-67, 1994. 

[Golumbic, 1980]  M.C. Golumbic.  Algorithmic graph the(cid:173)

ory and perfect graphs. Academic Press, New York, 1980. 
[Groflin, 1985]  H. Groflin.  On Node Constraint Networks. 

Networks, 15:469-475, 1985. 

[Helmert, 2002]  M. Helmert.  Decidability and Undecidabil-
ity Results for Planning with Numerical State Variables. In 
Proc. AIPS-02, pages 44-53, 2002. 

[Hochbaum, 1998]  D.  Hochbaum.  The  pscudoflow  algo(cid:173)
rithm and the pscudoflow-based simplex for the maximum 
flow problem. In Proc. 1PCO-98, pages 325-337, Houston 
Texas, June 1998. 

[1LOG, 2002]  ILOG.  1LOG Scheduler 5.3 Reference Man(cid:173)

ual and Users Manual, 2002.  http://www.ilog.com/. 

[Laborie, 2003]  P. Laborie.  Algorithms for Propagating Re(cid:173)
source Constraints in Al Planning and Scheduling:  Exist(cid:173)
ing Approaches and New Results.  Artificial Intelligence, 
143(2):151-188,2003. 

[Muscettola, 2002]  N. Muscettola. Computing the Envelope 
for Stepwise-Constant Resource Allocations. In Proc. CP-
2002, pages 139-154, 2002. 

[Penberthy and Weld, 1994]  J.S. Penberthy and D.S. Weld. 
In  Proc. 

Temporal  Planning with  Continuous Change. 
AIPS-94, pages 1010-1015, 1994. 

[Rhys, 1970]  J.  Rhys.  A  selection  problem  of  shared 
fixed costs and network  flows.  Management Science, 
17(3):200-207, 1970. 

[Trinquart and Ghallab, 2001]  R. Trinquart and M. Ghallab. 
An Extended Functional Representation in Temporal Plan(cid:173)
ning: Towards Continuous Change. In Proc. ECP-01, Sept 
2001. 

[Vilain and Kautz, 1986]  M. Vilain and H. Kautz. Constraint 
propagation algorithms for temporal reasoning.  In Proc. 
Fifth National Conference on Artificial Intelligence, pages 
377-382, 1986. 

PLANNING 

953 

