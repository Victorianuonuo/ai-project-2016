An Energy-Efficient,  Multi-Agent

 Sensor Network for Detecting Diffuse Events 

Keywords: Sensor Networks, Multi-Agent Systems and Diffuse Events 

1University College Dublin, Ireland, 2Dundalk Institute of Technology, Ireland 

Rónán Mac Ruairí 1,2 and Mark T. Keane 1

ronan.macruairi@dkit.ie, mark.keane@ucd.ie 

Abstract

Monitoring  a  diffuse event with a wireless sensor 
network differs from well studied applications such 
as target tracking and habitat monitoring and there-
fore we suggest that new approaches are needed. In 
this paper we propose a novel low power technique 
based  on  a  multiple  agent  framework.  We  show 
how a set of simple rules can produce complex be-
havior that encompasses event characterization and  
data routing. We demonstrate the approach and ex-
amine  its  accuracy  and  scalability  using  a  simu-
lated gaseous plume monitoring scenario. 

1  Introduction 
Perhaps  one  of  the  major  promises  for  sensor  networks  is 
the vision of a large-scale, environmental monitoring system 
that  is  deployed  by  a  poorly-controlled  dispersal  and  yet 
operates  optimally  for  several  years  [Ramanathan  et  al. 
2006; Werner-Allen et al., 2006; Estrin 2005;  Szewczyk et 
al.,  2004].  However,  many  challenges  stand  in  the  way  of 
the vision, not least the issues surrounding efficient power 
usage to sustain the life of such a large, distributed sensing 
instrument. While, it is clear that hardware advances in mote 
and battery technology will play a key role in overcoming 
some of this power problem, we believe that significant ad-
vances in software will also prove important. Indeed, many 
environmental  sensor  networks  will  require  significant 
software sagacity to achieve their goals in a power-efficient 
fashion.  

Consider,  any  large-scale  monitoring  system  that  must 
amalgamate sensed data to accurately characterize an event, 
like  a  gas-plume  moving  across  countryside.    Such  an  in-
strument will need to route and collate significant amounts 
of data in order to identify and dynamically track a complex 
event  as  it  moves  through  the  environment.  Not  only  will 
this sensor network have to carry out these tasks, but it will 
need  to  do  them  exhibiting  an  energy  optimal  and  energy 
balanced  strategy;  for  example,  the  overall  network  must  
take care not to use the same sensor nodes continuously. If 
they do nodes are lost as their batteries become exhausted. 
Conversely, using too many nodes to create a data route will 

ultimately  use  more  energy  and  shorten  the  overall  useful 
life of the network. Some current systems have considered 
some  of  these  issues,  though  they  have often concentrated 
on target tracking [Horling and Lesser, 2005; Lesser et al., 
2003; Intanagonwiwat et al., 2000].  In this paper, we pro-
pose  a  novel multi-agent technique designed to handle the 
problems presented by large scale diffuse events.  
1.1  Large-scale environmental monitoring 
Energy management is perhaps the most critical constraint 
facing  wireless  sensor  networks  (WSNs)  [Culler  et  al., 
2004].  The  routine  response  to  this  problem  is  to  employ 
routing  algorithms  that  limit  communication  overhead 
[Akyildiz  et  al.,  2002].  Yet  most  of  these  techniques  are 
designed for traditional target tracking applications - essen-
tially scenarios with small numbers of data sources. 

Large-scale environmental sensing of spatially-distributed 
events will routinely cause many nodes to generate readings 
at  the  same  time.  Furthermore,  these  multiple  data  points 
will need to be amalgamated efficiently. For example, con-
sider  a  WSN  tasked  with  reporting  the  limits  (shape  and 
location)  and  average  concentration  of  gas  plumes.  While 
average  concentration  may  be  estimated  accurately  from  a 
subset of data points, circumscribing the shape of a plume 
requires data points along the perimeter of the plume to be 
captured and fused.  

Although achieving such high resolution and high fidelity 
might be viewed as the bad news, there is some good news 
for such applications. They can be reasonably delay tolerant. 
In particular the evaluation interval for environmental moni-
toring    is  likely  to  be  of  the  order  of  months  to  years.  In 
cases where the sensor network is tasked with an emergency 
response  role  the  delay  tolerance  could  be  of  the  order  of 
hours.  Although quite different, both of these time intervals 
are delay tolerant relative to network latencies and routing 
delays. Further discussion of delay tolerant networking may 
be followed from  Ho and Fall [2004]. 

We  have  suggested  that  algorithms  developed  for  target 
tracking may not scale well in terms of efficiency as the size 
of a monitored phenomenon grows. Figure 1 provides some 
evidence for this intuition, as it shows the number of mes-
sages generated (as an indication of energy used) by a ver-

IJCAI-07

1390

sion of directed diffusion [Intanagonwiwat et al., 2000] run-
ning within the J-Sim network simulation package [Sobeih 
et al., 2005]. Although the algorithm ultimately scales in a 
manner  close  to  linear  it  experiences  an  initial  phase  of 
explosive growth in the number  messages generated. This 
behavior occurs as the size of the target exceeds a few per-
cent of the overall monitored area. For us, large-scale phe-
nomena are of interest and our aim is to achieve, at worst, 
linear growth in the number of messages generated as target 
size scales from below 1% to 30% of the monitored area. 

100000

e
d
o
n
 
r
e
p
 
s
g
s
M

10000

1000

100

0%

10%

30%

50%

20%
60%
Event Area % of WSN Area

40%

70%

80%

Figure 1. The average number of messages generated per node by 
directed diffusion for phenomena of varying scale (scale is shown 
as the percentage of the monitored area affected by the event). 

2  The Multi-Agent Approach 
Our application context is set in the near future, where low 
cost  but  powerful  sensors  can  be  deployed  in  very  large 
numbers to monitor, with a focus on phenomena that require 
data  from  a  large  area  to  be  integrated.  The  nodes  are  as-
sumed  to  in  place  long  before  any  event  occurs,  and  con-
serve energy by using long sleep cycles – we are essentially 
suggesting  that  for  long  term  monitoring most nodes must 
be powered down most of the time. Our approach also spe-
cifically trades latency almost entirely for energy conserva-
tion.  

Figure 2. An agent is dispersed across several static nodes (square 
s), and the overall instrument consists of several agents at any one 
time  traveling  through  the  network.  The  large  circle  represents  a 
contour of some notional event. The smaller circles represent the 
one hop (radio range) neighbourhood of leader nodes and the arcs 
depict the leader-member relationship that constitutes an agent. 

We cause a number of agents to be generated spontaneously 
within the network and these agents gather and process the 
data. The approach is novel in that each agent is distributed 
across a number of nodes and the agents move by transfer-
ring part of their state to other WSN nodes. The WSN nodes 
themselves are static and may form part of many different 
agents  during  the  lifetime  of  the  instrument.  We  aim  to 
show that a simple rule set can produce complex behavior 
allowing a small number of agents to satisfy accuracy and 
energy efficiency requirements of the application. 
2.1  Distributed Agent Architecture 
Our agents are composed of a set of roles distributed across 
multiple nodes. Each agent consists of a Leader role operat-
ing on one node, and multiple Member roles each operating 
on nodes adjacent to the Leader node. We do this for two 
reasons.  Firstly  it  provides  the  agent  with  some  spatially-
distributed knowledge of the environment which can then be 
used for navigation. The agent uses this knowledge to navi-
gate through the network to regions of different sensor read-
ings. Secondly, the distribution of responsibilities achieved 
through nodes’ adoption of roles provides some redundancy 
that gives the agent an ability to survive failure of individual 
nodes. This can occur because of energy depletion or dam-
age - however this aspect is not examined in this work. The 
agent  architecture  consists  of  the  agent  state  embodied  in 
various roles along with a terse communication protocol for 
role  deliberation  and  a  rule  set  for  navigation.  Each  node 
can assume only one role at a time (agents may overlap spa-
tially but not in terms of membership).  

The roles are Sleeper Leader, Member and Router. By de-
fault nodes adopt the Sleeper role. This role exists outside 
the  scope  of  any  individual  agent  and  defines  the  default 
responsibilities – a sleep cycle punctuated by listening cy-
cles in which the node is receptive to membership requests 
from nearby Leader nodes.  

The overall WSN operates by seeding itself with a num-
ber of Agents. This is achieved by Sleeper nodes having a 
small  probability  of  converting  to  the  Leader  role  at  each 
wake  cycle  if  its  sensor  reports  a  data  reading.  A  Leader 
recruits  a  number  of  nearby  nodes  that  become  Members. 
Once formed a data agent consisting of a Leader and a set of 
Members  then uses its combined spatial knowledge to navi-
gate according to a rule set. The final role – Router – is a 
specialized  Leader  role  originating  at  the  data  sink  that  is 
used to harvest data from Leader nodes.  
2.2  The Roles 
2.2.1 The Sleeper Role 
By default all nodes assume the Sleeper role, in which they 
operate a sleep cycle to conserve energy. They wake peri-
odically and listen for membership requests from nodes in 
their immediate environment (i.e., one radio hop away).  

Rule
S1

Sleeper Role 

If  a  Leader’s  member  request  message  is  received  adopt  the 
Member role.

IJCAI-07

1391

S2

S3

S4

If a member acknowledgement message (M1) is received from 
any neighbor role broadcast sensor reading to all neighbors.
Check  probability  of  becoming  a  Leader  or  Router  Role 
(Leaders  are  only  formed  if  a  local  data  reading  >  0,  and 
Routers if the data sink is a neighbor).
Calculate  local  hop  count  (based  on  messages  received  and 
local sensor reading) to event and forward to neighbors.

Table 1. The rules used to define the Sleeper role. 

If multiple requests are received the Sleeper role causes its 
node to select one randomly and join that agent thus assum-
ing the membership role. If no requests are received within 
some  period  the  node  powers  down  and  the  sleep  cycle 
recommences. 
2.2.2 The Leader Role
Leader  roles  form  the  basis  of  data  gathering  agents  (data 
agents)  and  are  created  randomly  within  the  network  (via 
rule S3). Their first duty is to grow their membership. In our 
demonstration the Leader seeks to enlist a minimum of three 
neighboring  nodes  with  the  aim  of  providing  good  spatial 
coverage.  The  Leader  then  uses  the  sensor  readings  from 
these nodes, or their hop count to the nearest data reading, to 
calculate  a  gradient  across  its  sensed  area.  The  Leader  se-
lects  one  of  its  members,  either  upstream  or  downstream 
depending  on  the  mapping  algorithm  in  operation  and  de-
clares it the new Leader.  The old Leader forwards current 
mapping information – a series of tuples {reading, location, 
time}  -  to  all  neighbors  and  then  all  members  retire  to 
Sleeper role and the process commences again. Section 2.3 
describes  the  Leader  rule  sets  used  to  implement  contour 
mapping. 

2.2.3 The Member Role
Once a Leader requests a node’s membership the Member 
senses  its  local  data  level  and  transmits  this  to  the  Leader 
along with a membership acknowledgement.  

Rule
M1
M2

M3

Member Role 

Acknowledge membership on receipt of message from Leader.
Adopt  Leadership  if  transferred  (Leader  Nomination)  from 
Leader.
Return to Sleeper role after some period if Leader Nomination 
message or keep awake message is not received from current 
Leader

Table 2. The rules used to define the Member role. 

2.2.4 The Router Role 
This  role  is  randomly  created  by  nodes  neighboring  data 
sinks (base stations). Initially Routers use a navigation rule 
{R1}  similar  to  that  of  Leaders’  {L1,  L2}  until  an  event 
contour is located. On the outward journey the Router navi-
gation  differs  from  Leaders  in  that  a  number  of  random 
moves are used to balance energy usage against burn out of 

Rule
R1

R2

R3

R4

R5

Rule
L1

L2

nodes close to the sink. Once data levels close to the desired 
contour  has  been  located  Routers  wait  to  encounter  other 
agents.  If  they  encounter  an  agent  carrying  a  significant 
amount of data then this is harvested and the router attempts 
to return to the data sink. Each node in a Router’s path re-
cords the identity of the previous node to allow Routers to 
retrace its steps for return journeys.

Router Role 

 Move  Router  leadership  to  member  with  reading closest  to 
desired  contour  level  or  –  periodically  –  select  a  member  at 
random. 
 If reading is within some margin of the desired contour then 
stop  transferring  leadership,  shed  membership  and  increase 
sleep durations. 
 If  a  data  agent  is  encountered  request  its  data,  if  more  than 
some number of data points are available return to base.  
 If returning to base, move  Leadership by retracing outward 
path. 
 If  no  move  is  available  transfer  Leadership  to  a  randomly 
selected neighboring node. 

Table 3. The rules used to define the Router role 
2.3  The contour-mapping algorithm  
Each  agent  moves  through  the  static  WSN  node  field  by 
transferring  the  Leader  role  from  one  node  to  another.  To 
map  the  contours  of  the  event,  the  agents  need  to  move 
through the WSN field until an event is detected (e.g., a gas 
plume). Once the event is encountered the agent should lo-
cate a sensor reading close to the required level and attempt 
to circumnavigate the contour.  This can be achieved using 
the following rules: 

Leader Role 

Transfer Leadership to the member node with a sensor read-
ing closest to the desired contour. 
Do not transfer leadership to member nodes that recently held 
a Leader role. 

Table 4. The rules used to define the Leader role

These rules although simple, are effective in enabling agents 
to follow the event contour. The second rule, L2, has a dual 
purpose – it causes an agent to move away from areas re-
cently explored and it also contributes to overall efficiency 
as it causes other agents to avoid the same areas. Depending 
on the direction of an agent’s initial approach to the contour 
some  agents  move  in  a  clockwise  direction  while  others 
travel in a counter clockwise direction. 

3  Experiments and Results  
To  demonstrate  the  proposed  multi-agent  algorithm,  we 
have  developed  a  sensor  network  simulation  incorporating 
an  abstract  event  -  essentially  a  disk  shaped  phenomenon.  
To  gauge  the  effectiveness  we  have  created  two  experi-

IJCAI-07

1392

ments,  the  first examines the accuracy of our approach by 
recording the positions reached by our agents as they seek to 
map  the  event  contour.  The  second  explores  the  effect  of 
increasingly  diffuse  targets  on  the  efficiency  of  our  algo-
rithm. All experiments in this section simulated 1000 nodes 
in a two dimensional 600x400 grid (see figure 2) and each 
trial ran for 2500 seconds. The target event and sensor nodes 
are stationary.
3.1 Parameter discovery and selection 
A  number  of  parameters  dictate  the  operation  of  our  ap-
proach.  The  following    parameter  choices  (table  5)  have 
been  developed  during  our  experimentation  however  we 
have not explored the parameter space in a systematic man-
ner and we expect that more optimal parameter sets exist. 

3 

6 sec 

Value

3 sec 
3 sec 
3 sec 
0.01 
0.05 
10 
5 

Parameter
Number of members in a Data Agent 
Sleeper sleep duration 
Sleeper wake duration 
No move period 
sensor minimum threshold 
margin for rules R2 , L2 
Number of data points (rule R3) 
Number of moves (rule R4) 
Member stay awake period (M3) 
Table 5. The parameters used in this work 
3.1 Results 
To  test  out  hypothesis  that  the  Leader  navigation  rules 
{L1,L2} will cause agents to circumnavigate the contours of 
an event we have recorded and superimposed the locations 
reached  at  each  time  step  by  agents  over  several  different 
experimental runs (Figure 3).  

likely  to  be  interested  only  in  the  actual  contour  data  re-
turned to the sink node (as opposed to an accumulation of 
locations  reached  as  shown  in  Figure  3).    The  following 
(figure  4)  provides  an  example  of  the  useful  information 
generated and routed to the data sink during a single simu-
lated task.   

1.5

1

0.5

0

Figure 4. An example of the contour data (data target is 1.0 plus or 
minus 15%) returned during one experimental run using 6 Leaders 
and 4 Routers (the x axis is cropped and compressed compared to 
figures 2 and 3). 

The  second  experiment  examines  the  relationship  between 
energy  usage  and  the  physical  size  of  the  target  event.  As 
discussed in this papers introduction this relationship is im-
portant as many extant algorithms have been developed  for 
target  tracking  applications  (figure  1)  where  the  target  is 
likely  to  account  for  less  than  1%  of  the  sensed  area.    In 
figures 4 and 5 the probabilities used for rule S3 (table 1) 
result in an average of 6 data agents and 4 router agents be-
ing used for the duration of each experimental run.  

 

e
d
o
n
 
r
e
p
s
g
s
M
g
v
A

 

1.0E+05

1.0E+04

1.0E+03

1.0E+02

1.0E+01

1.0E+00

0.0% 10.0% 20.0% 30.0% 40.0% 50.0%

% of WSN area affected by target event
Multi-Agent Approach for Diffuse Events
Directed Diffusion (J-Sim)

Figure 5. The number of messages generated per node (each point 
is an average of 20 trials) by our approach for phenomena of vary-
ing scale (shown as the percentage of the monitored area affected 
by the phenomenon) compared to the implementation of Directed 
Diffusion  [Intanagonwiwat  et  al.,  2000]  packaged  with  J-Sim 
[Sobeih et al., 2005]. 

The amount of energy used, as indicated by the number of 
messages generated, is several orders of magnitude smaller 
than that of directed diffusion. The number of messages per 
node shown in figure 5 is on average only 0.15% of those 
for similar event sizes. While these numbers are not directly 
comparable due to the different aims of the algorithms it is 

Figure 3. The superimposition of 100 runs, each showing the node 
location at each second of agent’s Leader roles. Each run consisted 
of one agent navigating for 1000 seconds with a target event simi-
lar to that displayed in figure 2.  

Though simple the rules are very effective in identifying and 
tracking  the  presented  contour.  In  a  real  scenario  we  are 

IJCAI-07

1393

clear  that  our  approach  is  significantly  more  efficient  for 
this  application.  The  results  also  show  (figure  5)  that  our 
approach is almost free of dependence on phenomenon size 
and therefore meets our design aims for use with large dif-
fuse  events.  However  as  you  might  expect  the  number  of 
agents  used,  as  dictated  by  the  probabilities  used  for  Rule 
S3, has an effect on both the system accuracy and the en-
ergy used. In figure 7, we define accuracy  as the total num-
ber of unique contour values returned to the data sink. 

 

e
d
o
n

 
r
e
p
 
s
g
s
m
g
v
A

 

50

40

30

20

10

0

5

10

15

20

Average number of agents

25

30

Figure 6. The effect of varying the number of agents deployed on 
the average energy usage per node for an event covering approxi-
mately 20% of the sensed area. 

 

i

s
t
n
o
p
a
t
a
d

 

 
l

u
f
e
s
U

k
n
s

i

 

 

y
b
d
e
v

i

e
c
e
r

60
50
40
30
20
10
0

5

15

10
25
Average num ber of agents

20

30

Figure 7. The effect of varying the number of agents deployed on 
the overall accuracy for an event covering approximately 20% of 
the sensed area. 

)
c
e
s
(
 
y
c
n
e
t
a
L
 
g
v
A

1100

1050

1000

950

900

850

5

10

15

Average number of agents

20

25

30

Figure 8. Average elapsed time before the event data was delivered 
to the data sink compared to the number of agents deployed. 

The  results  shown  in  figures  6  and  7  show  an  increase  in 
both accuracy and energy used as additional agents are used.
This is to be expected as more agents should generate more 
messages,  as  well  as  the  potential  to  deliver  more  useful 
data.  The  increase  in  energy  expenditure  does  achieve  a 
considerable increase in the amount of data delivered to the 
data  sink.  The  figures  (6  and  7)  show  that  the  trends  are 
linear and suggests that the ratio of accuracy gain to energy 
expenditure is likely to be favorable, offering the potential 

that designers could tune the approach to their own accuracy 
or resolution requirements. However as noted in section 2,  
our approach eschews the elapsed time to return results to 
save energy and this is measured and shown in figure 8. 

4  Related Work  
Multi agent systems (MAS) are increasingly being applied 
to wireless sensor networks. O’Hare et al. [2005] argues that 
strong agency in the form of BDI agents [Rao and Georgeff 
1995], might have significant potential for decision making 
within WSNs.  

In the context of traditional target tracking [Lesser et al., 
2003] discuss the application of various agent techniques to 
WSNs. More recently [Tynan et al., 2005] have shown how 
multi  agent  systems  can  be  used  for  the  rapid  design  and 
verification  of  sensor  network  algorithms  and  topologies. 
This  is  interesting  as  they  have  developed  tools  which 
automate the translation and deployment of agent architec-
tures to nodes, specifically from Agent Factory [O’Hare et 
al., 1998] to Mica2 motes [Crossbow Technologies, 2006].  
In this paper, we have advanced a multi-agent algorithm 
for sensor networks that is capable of both routing and proc-
essing data for diffuse events. The idea of a persistent agent 
composed  of several roles has been informed and inspired 
by the role-based techniques described in [Mac Ruairí and 
Keane 2004] and by Beal’s description of persistent nodes 
[Beal 2005]. In Beal’s work nodes are symmetrical clusters 
of hundreds or thousands of nodes in an amorphous comput-
ing context that can move and preserve state using a simple 
rule set. Although our  motivation in terms of resilience to 
node failure is similar; our agents are closer in context and 
scale  to  those  in  Rumor  Routing  [Braginsky  and  Estrin, 
2002].  However our notion of an agent comprising of roles 
dispersed across different nodes, driven by  a need for spa-
tially-distributed  information,  is  novel.  Our  approach  also 
differs in that we embed features such as contour mapping 
specific to monitoring large diffuse targets.  

5  Conclusions and future work 

We  have  described  and  implemented    a  sensor  network 
algorithm capable of mapping contours during large diffuse 
events  such  as  gas  plumes.  Using  a  multi-agent  paradigm 
where  each  agent  is  composed  of  roles  distributed  across 
multiple nodes, this algorithm achieves efficient routing and 
data processing within the sensor network. Our simulations 
have  shown  that  this  approach  can  accurately  identify  an 
event’s contour and return the information to the data sink. 
A  primary  motivation  of  this  work  was  to  achieve  such 
event  detection  in  an  energy  efficient  manner,  given  the 
finding  that  some  extant  algorithms  degrade  as  the  target 
size increases. Our results suggest that our approach scales 
extremely well in this regard and furthermore generates sig-
nificantly less network traffic than a parallel implementation 
using  directed diffusion.  

In this study, our event model is quite abstract and so in 
the near future we will examine more complex phenomena. 
One interesting set of future issues is to examine the effect 

IJCAI-07

1394

that  different  network  densities  has  on  the  approach.    By 
varying the contour-mapping rule-set we hope to allow the 
algorithm to adapt to network density and to provide addi-
tional application functionality  beyond contour mapping. 

We  have  offered  a  novel  multi-agent  approach  to  data 
processing within Sensor Networks. This is aimed at moni-
toring  large  scale  diffuse  events  –  a  sensor  network  task 
understudied relative to target tracking. We believe this con-
tribution to be important not only in advancing current prac-
tice  but  also  in  highlighting  this  progressively  more  vital 
sensor network application domain.  

Acknowledgments  
This work was funded in part by grants from Dundalk Insti-
tute of Technology in Ireland to the first author and Science 
Foundation Ireland under Grant No.03/IN.3/I361 to the sec-
ond author. 

References
[Akyildiz  et  al.,  2002]  Akyildiz,  W.  Su,  Y.  Sankarasubra-
maniam, And E. Cayirci.. A survey on sensor networks. 
IEEE Communications Magazine, Vol: 40 Issue: 8, 102-
114, 2002. 

[Beal 2005] Beal J., Amorphous Medium Language. Large-
Scale Multi-Agent Systems Workshop at AAMAS 2005. 
[Braginsky and Estrin, 2002] D. Braginsky, and D. Estrin. 
Rumor  routing  algorithm  for  sensor  networks.  In  Pro-
ceedings of First ACM Workshop on Sensor Networks 
and Applications, Atlanta, GA, USA 22–31. 2002 

[Crossbow  Technologies,  2006]  Crossbow  Technologies 
Website,  http://www.xbow.com/,  products  section,  ac-
cessed May 2006. 

[Culler et al., 2004] D. Culler, D. Estrin, M. Srivastava. An 
Overview  of  Sensor  Networks.  In  IEEE  Computer  , 
vol:37 , no:8 , 41-49. 2004. 

[Estrin  2005]  Deborah  Estrin.  Reliability  and  Storage  in 
Sensor Networks. in CENS Technical Report #59, 2005. 
[Ho and Fall, 2004] Melissa Ho and Kevin Fall. Delay Tol-
erant Networking for Sensor Networks. In the First IEEE 
Conference on Sensor and Ad Hoc Communications and 
Networks (SECON 2004). October 2004 

[Horling  and  Lesser,  2005]  B.  Horling  and  V.  Lesser.  A 
Survey  of  Multi-Agent  Organizational  Paradigms.  The
Knowledge Engineering Review, Vol. 19, Num 4, Cam-
bridge University Press, 281-316. 2005. 

[Intanagonwiwat  et  al.,  2000]  Intanagonwiwat,  C.,  Govin-
dan, R. and Estrin, D. 2000. Directed diffusion: A scal-
able  and  robust  communication  paradigm  for  sensor 
networks. In proc. of the Sixth Annual ACM/IEEE Int. 
Conference on Mobile Computing and Networking (Mo-
bicom), Boston, Massachusetts, 56-67, 2000. 

[Kochhal  et  al.,  2003]  Kochhal,  M.,  Schwiebert,  L.  and 
Gupta, S. K. S..Role-based hierarchical self organization 

for  ad  hoc  wireless  sensor  networks.  In  WAF  ,  San 
Diego, USA, 98–107. 2003. 

[Lesser et al., 2003] Lesser V., Ortiz, C.L. Jr., Tambe , M. 
(eds). Distributed Sensor Networks : A Multiagent Per-
spective. Kluwer Academic Publishers, 2003. 

[Mac Ruairí and Keane 2004] Mac Ruairí, R. and Keane, M. 
T.  2004.  Role  Swapping  in  Multi  Agent  based  Sensor 
Webs. In Proceedings European Conference on Artificial 
Intelligence, (ECAI’04),Valencia,  Spain. 

[O’Hare et al., 1998] O’Hare, G.M.P., Collier, R., Conlon, J. 
and  Abbas,  S.,  (1998)  Agent Factory: An Environment 
for  Constructing  and  Visualising  Agent  Communities, 
9th  AICS  Conference,  Irish  Artificial  Intelligence  and 
Cognitive Science Conference, UCD, Dublin, 1998. 

[O’Hare et al., 2005] O'Hare G.M.P., Marsh D., Ruzzelli A. 
and  R.  Tynan,  Agents  for  Wireless  Sensor  Network 
Power Management. Proceedings of International Work-
shop  on  Wireless  and  Sensor  Networks  (WSNET-05),  
Oslo, Norway IEEE Press, 2005. 

[Ramanathan  et  al.  2006]  N.  Ramanathan,  L.  Balzano,  M. 
Burt, D. Estrin, T. Harmon, C. Harvey, J. Jay, E. Kohler, 
S. Rothenberg, and M.Srivastava. Monitoring a Toxin in 
a  Rural  Rice  Field  with  a  Wireless  Sensor  Network  
in CENS Technical Report #62 ,  2006. 

[Rao  and  Georgeff  1995]  A.  S.  Rao  and  M.  P.  Georgeff. 
BDI agents: From theory to practice. In Proceedings of 
International Conference on Multi Agent Systems, pages 
312–319. AAAI Press / MIT Press, 1995. 

[Sobeih et al., 2005] Sobeih, A., Chen, W., Hou, J.C., Kung, 
L.,  Li,  N.,  Lim,  H.,  Tyan,  H.  and  Zhang,  H..  J-Sim:  a 
simulation and emulation environment for wireless sen-
sor  networks.  In  Proceedings  38th  Annual  Simulation 
Symposium, San Diego, CA, USA, 175 – 187, 2005. 

[Szewczyk et al., 2004] R. Szewczyk, E. Osterweil, J. Polas-
tre,  M  Hamilton,  A  Mainwaring,  D.  Estrin.  Habitat 
Monitoring with Sensor Networks,   Communications of 
the ACM,  Vol. 47,  No. 6,  pp. 34-40,  June  2004. 

[Tynan  et  al.,  2005]  Richard  Tynan,  Antonio  G.  Ruzzelli, 
G.M.P. O'Hare A Methodology for the Development of 
Multi-Agent  Systems  on  Wireless  Sensor  Networks. 
SEKE'05, the 17th International Conference on Software 
Engineering  and  Knowledge  Engineering,  Taiwan, 
China, IJSEKE press, 2005. 

[Werner-Allen  et  al.,  2006]  Geoff  Werner-Allen,  Konrad 
Lorincz, Mario Ruiz, Omar Marcillo, Jeff Johnson, Jona-
than Lees, and Matt Welsh. Deploying a Wireless Sensor 
Network on an Active Volcano, In IEEE Internet Com-
puting,  Special  Issue  on  Data-Driven  Applications  in 
Sensor Networks, March/April 2006.  

IJCAI-07

1395

