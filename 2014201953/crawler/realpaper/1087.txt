Symmetry Breaking in Quantiﬁed Boolean Formulae

Gilles Audemard∗ and Sa¨ıd Jabbour and Lakhdar Sa¨ıs

CRIL - CNRS, FRE 2499

Universit´e d’Artois - Lens, France

{audemard,jabbour,sais}@cril.univ-artois.fr

Abstract

Many reasoning task and combinatorial problems
exhibit symmetries. Exploiting such symmetries
has been proved to be very important in reducing
search efforts. Breaking symmetries using addi-
tional constraints is currently one of the most used
approaches. Extending such symmetry breaking
techniques to quantiﬁed boolean formulae (QBF) is
a very challenging task. In this paper, an approach
to break symmetries in quantiﬁed boolean formu-
lae is proposed. It makes an original use of univer-
sally quantiﬁed auxiliary variables to generate new
symmetry breaking predicates and a new ordering
of the QBF preﬁx is then computed leading to a
new equivalent QBF formula with respect to valid-
ity. Experimental evaluation of the state-of-the-art
QBF solver SEMPROP shows signiﬁcant improve-
ments (up to several orders of magnitude) on many
QBFs instances.

1 Introduction

Solving Quantiﬁed Boolean Formulae (QBF) has become an
attractive and important research area over the last years.
Such increasing interest might be related to different fac-
tors, including the fact that many important artiﬁcial intel-
ligence (AI) problems (planning, non monotonic reasoning,
formal veriﬁcation, etc.) can be reduced to QBF which is
considered as the canonical problem of the PSPACE com-
plexity class. Another important reason comes from the re-
cent impressive progress achieved in the practical resolu-
tion of the satisﬁability problem. Many solvers for QBFs
have been proposed recently (e.g. [Giunchiglia et al., 2001b;
Zhang and Malik, 2002; Letz, 2002; Benedetti, 2005]), most
of them are obtained by extending satisﬁability results. This
is not surprising, since QBFs is a natural extension of the sat-
isﬁability problem (deciding whether a boolean formula in
conjunctive normal form is satisﬁable or not), where the vari-
ables are universally or existentially quantiﬁed.

Some classes of QBFs encoding real-world application
and/or AI problems contain many symmetries. Exploiting
such structures might lead to dramatically reducing the search

∗supported by ANR “Planevo” project noJC05 41940.

space. Symmetries are widely investigated and considered as
an important task to deal with the intractability of many com-
binatorial problems such as constraint satisfaction problems
(CSP) and satisﬁability of boolean formula (SAT).

A previous work on symmetry breaking predicates for QBF
was proposed by [Audemard et al., 2004]. The authors
use an hybrid QBF-SAT approach where the set of gener-
ated breaking predicates is separated from the QBF formula.
Consequently, this approach is solver dependent.
Indeed,
to solve the hybrid QBF-SAT formula, DPLL-based QBF
solvers need to be adapted, whereas, other kind of solvers
(e.g. Skizzo) can not be used in this context.

In this paper, we propose a preprocessing approach which
is solver independent. Taking as input a QBF with symme-
tries, we generate a new QBF formula without symmetries
equivalent to the original one wrt. validity. To break such
symmetries we extend the SAT approach proposed by Craw-
ford [Crawford, 1992; Aloul et al., 2002].

The paper is organized as follows. After some prelimi-
nary deﬁnitions on quantiﬁed boolean formulae, symmetry
framework in QBFs is presented. Then a symmetry breaking
approach for QBF is described. An experimental validation
of our approach is given, showing signiﬁcant improvements
over a wide range of QBF instances. Finally, promising paths
for future research are discussed in the conclusion.

2 Technical Background

2.1 Quantiﬁed boolean formulae
Let P be a ﬁnite set of propositional variables. Then, LP is
the language of quantiﬁed Boolean formulae built over P us-
ing ordinary boolean formulae (including propositional con-
stants (cid:2) and ⊥) plus the additional quantiﬁcation (∃ and ∀)
over propositional variables.
In this paper, we consider quantiﬁed boolean formula Φ
in the prenex clausal form Φ = QkXk, . . . , Q1X1Ψ (in
short QXΨ, QX is called a preﬁx and Ψ a matrix) where
Qi ∈ {∃, ∀}, Xk, . . . , X1 are disjoint sets of variables and
Ψ a boolean formula in conjunctive normal form. Consecu-
tive variables with the same quantiﬁer are grouped. We de-
i∈{1,...,k} Xi the set of variables of Φ and
ﬁne V ar(Φ) =
V arU (Φ) = {x|x ∈ V ar(Φ), x is universal}. A literal is
the occurrence of propositional variable in either positive (l)
or negative form (¬l). Lit(Φ) =
i∈{1,...,k} Lit(Xi) the set

(cid:2)

(cid:2)

IJCAI-07

2262

of complete literals of Φ, where Lit(Xi) = {xi, ¬xi|xi ∈
Xi}. The set of literals are encoded using integer numbers
i.e. the positive (resp. negative) literal l (resp. ¬l) is associ-
ated to a positive number α (resp. −α). Then, we deﬁne |l|
as the absolute value of l.

For a given variable x ∈ V ar(Φ) st. x ∈ Xk, we deﬁne
rank(x) = k. Variables appearing in the same quantiﬁer
group are equally ranked.

2.2 Symmetries in Quantiﬁed Boolean Formulae
Let Φ = Q1X1, . . . , QmXmΨ be a QBF and σ a permu-
tation over the literals of Φ i.e. σ : Lit(Φ) (cid:7)→ Lit(Φ).
The permutation σ on Φ is then deﬁned as follows: σ(Φ) =
Q1σ(X1), . . . , Qmσ(Xm)σ(Ψ). For example, if Ψ is in
clausal form then σ(Ψ) = {σ(c)|c ∈ Ψ} and σ(c) =
{σ(l)|l ∈ c}.
Deﬁnition 1 Let Φ = Q1X1, . . . , QmXmΨ be a quantiﬁed
boolean formula and σ a permutation over the literals of Φ.
σ is a symmetry of Φ iff

1. ∀x ∈ Lit(Φ), σ(¬x) = ¬σ(x)
2. σ(Φ) = Φ i.e σ(Ψ) = Ψ and ∀i ∈ {1, . . . , m} σ(Xi) =

Xi.

Let us note that each symmetry σ of a QBF Φ is also a sym-
metry of the boolean formula Ψ. The converse is not true. So
the set of symmetries of Φ is a subset of the set of symmetries
of Ψ.

. . . lini

A symmetry σ can be seen as a list of cycles (c1 . . . cn)
) st. ∀1 ≤
) = li1 . We deﬁne |σ| =

where each cycle ci is a list of literals (li1
k < ni, σi(lik
(cid:3)

) = lik+1 and σi(lini

ci∈σ |ci| where |ci| is the number of literals in ci.
It is well known that breaking all symmetries might lead in
the general case to an exponential number of clauses [Craw-
ford et al., 1996]. In this paper, for efﬁciency and clarity rea-
sons, we only consider symmetries with binary cycles. Our
approach can be extended to symmetries with cycles of arbi-
trary size.

Detecting symmetries of a boolean formula is equiva-
lent to the graph isomorphism problem [Crawford, 1992;
Crawford et al., 1996] (i.e. problem of ﬁnding a one to one
mapping between two graphs G and H). This problem is not
yet proved to be NP-Complete, and no polynomial algorithm
is known. In our context, we deal with graph automorphism
problem (i.e. ﬁnding a one to one mapping between G and G)
which is a particular case of graph isomorphism. Many pro-
grams have been proposed to compute graph automorphism.
Let us mention NAUTY [McKay, 1990], one of the most efﬁ-
cient in practice.

Recently, Aloul et al.

[Aloul et al., 2002] proposed an
interesting technique that transforms CNF formula Ψ into
a graph GΨ where vertices are labeled with colors. Such
colored vertices are considered when searching for automor-
phism on the graph (i.e. vertices with different colors can not
be mapped with each others).

In [Audemard et al., 2004], a simple extension to QBFs
formulae is given. Such extension is simply obtained by in-
troducing a different color for each set of vertices whose lit-
erals belong to the same quantiﬁer group. In this way, literals

from different quantiﬁer groups can not be mapped with each
others (see the second condition of the deﬁnition 1). Then,
to detect such symmetries, NAUTY is applied on the graph
representation of the QBF.

3 Breaking symmetries in QBFs
Symmetry breaking has been extensively investigated in the
context of constraint satisfaction and satisﬁability problems.
The different approaches proposed to break symmetries can
be conveniently classiﬁed as dynamic and static schemes.
Dynamic breaking generally search and break symmetries us-
ing breaking predicates or not [Benhamou and Sais, 1994;
Gent and Smith, 2000]. Static breaking schemes refer to tech-
niques that detect and break symmetries in a preprocessing
step. For SAT, symmetries are generally broken by generat-
ing additional constraints, called symmetry breaking predi-
cates (SBP) [Crawford, 1992; Aloul et al., 2002]. Such SBP
eliminates all models from each equivalence class of sym-
metric models, except one. However, in the general case, the
set of symmetry predicates might be of exponential size. In
[Aloul et al., 2002], Aloul et al extend the approach of Craw-
ford [Crawford, 1992] by using group theory and the concept
of non-redundant generators, leading to a considerable reduc-
tion in the SBP size.

We brieﬂy recall the symmetry breaking technique intro-
duced by Crawford in [Crawford et al., 1996]. Let Ψ be a
CNF formula and σ = {(x1, y1) . . . (xn, yn)} a symmetry of
Ψ. The SBP associated to σ is deﬁned as follows:
x1 ≤ y1
(x1 = y1) → x2 ≤ y2
. . .
(x1 = y1) . . . (xn−1 = yn−1) → xn ≤ yn

The SBP deﬁned above expresses that, when for all i ∈
{1 . . . k − 1} xi and yi are equivalent (get the same truth
value) and xk is true, then yk must be assigned to true. This
reasoning can be extended to QBF provided that the symme-
try follows the preﬁx ordering.

3.1 Motivation
In the following example, we show the main difﬁculty behind
the extension of SAT symmetry breaking predicates (SBP) to
QBFs.
Example 1 Let Φ = ∀x1y1∃x2y2 Ψ1 be a QBF where Ψ =
(x1 ∨ ¬x2) ∧ (y1 ∨ ¬y2) ∧ (¬x1 ∨ ¬y1 ∨ x2 ∨ y2). The permu-
tation σ1 = {(x1, y1)(x2, y2)} is a symmetry of Φ. Breaking
the symmetry σ1 using the traditional approach, induces the
following SBP : (¬x1 ∨ y1) ∧ (¬x1 ∨ ¬x2 ∨ y2) ∧ (y1 ∨
¬x2 ∨ y2). As the clause (¬x1 ∨ y1) is universally quantiﬁed,
the new obtained QBF by adding the SBP to the original
QBF leads to an invalid QBF formula.

To overcome this main drawback, in addition to the classi-
cal SBP , new breaking predicates (called QSBP ) are gen-
erated for symmetries containing at least one universal cycle
(see deﬁnition 3). In such a case, some variables become ex-
istentially quantiﬁed. These variables will be associated to
new additional universally quantiﬁed variables. There rela-
tionships are expressed in the generated QSBP . To safely

IJCAI-07

2263

add such QSBP to the original QBF formula, a new preﬁx
ordering is computed.

After a formal presentation of our approach for a single
symmetry, a generalization to arbitrary set of symmetries is
then described.

Deﬁnition 4 Let σ = {c1 . . . ck . . . cn} st. ck = (xk, yk),
1 ≤ k ≤ n be a universal symmetry. We deﬁne QSBP (σ) =
∪{qsbp(σ(yk)), 1 ≤ k ≤ n st. yk is universal} as the
QSBP associated to σ. QSBP (σ) is built using the two
following steps:

3.2 Breaking a single symmetry
Now, we formally introduce our approach for breaking sym-
metries in QBF.
Deﬁnition 2 Let Φ = Q1X1 . . . QiXi . . . QmXm Ψ be a
QBF and σ a symmetry of Φ. We deﬁne σ ↑ Xi as the sub-
sequence of the symmetry σ restricted to the cycles involving
variables from Xi. Then, the symmetry σ can be rewriten
following the preﬁx ordering as {σ1 . . . σi . . . σm} such that
σi = σ ↑ Xi. When σ respect the preﬁx ordering, it is called
p-ordered.

In the sequel, symmetries are considered to be p-ordered.
Example 2 Let Φ = ∃x2y2∀x1y1∃x3y3 (¬x1 ∨ y1 ∨ x3) ∧
(x1 ∨ ¬x2 ∨ y3)(x1 ∨ x2 ∨ x3) ∧ (¬x3 ∨ ¬y3) ∧ (x1 ∨ x2)(x1 ∨
y2) ∧ (¬x1 ∨ ¬y1 ∨ ¬x2 ∨ ¬y2) Φ has a symmetry σ =
{(x1, y1)(x2, y2)(x3, y3)}. Reordering σ with respect to the
preﬁx leads to σ = {σ1, σ2, σ3} st. σ1 = σ ↑ X1 = (x2, y2),
σ2 = σ ↑ X2 = (x1, y1), σ3 = σ ↑ X3 = (x3, y3).
Deﬁnition 3 Let Φ be a QBF, σ a symmetry of Φ and c =
(x, y) is a cycle of σ. We deﬁne x (resp. y) as an in-literal
(resp. out-literal). A cycle c is called universal if x and y are
universally quantiﬁed. A symmetry σ is called universal if it
contains at least one universal cycle, otherwise it is called
existential.

For existential symmetries of a QBF, classical SBP [Craw-
ford et al., 1996] can be translated linearly to a CNF for-
mula thanks to new additional variables. The obtained set
of clauses can be added to the QBF matrix while preserving
its validity. The main problem arises when breaking universal
symmetries (see example 1). Indeed, to safely break universal
symmetries while keeping the classical SBP, we ﬁrst reorder
the symmetry variables belonging to the same universal quan-
tiﬁer group. This new ordering allows us to determine literals
to be likely implied from the SBP. Secondly, as implied uni-
versal literals lead to the invalidity of the QBF, an original
approach is then proposed to deal with such literals. In the
following, the problem behind universal implied literals is il-
lustrated and our approach is then motivated.
Let σ = {(x1, y1), . . . , (xk, yk), . . . } be a universal symme-
try of a given QBF Φ where (xk, yk) is a universal cycle. As
mentioned above, σ is ordered according to the preﬁx of Φ.
Suppose xi and yi for 1 ≤ i ≤ k − 1 are assigned the same
truth value, if xk is assigned to true then the universal literal
yk is implied from the SBP. To avoid such a case, the univer-
sal quantiﬁer of yk is substituted with an existential quanti-
ﬁer. However, when xi and yi are assigned to different truth
values or xk is assigned to false, yk must remain universally
quantiﬁed. To manage these two cases, a new universal vari-
able y(cid:3)
k is then introduced. This variable plays the same role
as yk in the second case whereas in the ﬁrst case it becomes
useless. The relation between the two variables is expressed
using new predicates (called qsbp(σ(yk))).

1. Adding auxiliary variables : For each universal cycle
ck = (xk, yk) ∈ σ, we associate a new universal vari-
able y(cid:3)
k to the out-literal yk and the universal quantiﬁer
of yk is substituted with an existential quantiﬁer.

2. Generating new predicates :

• if (x1, y1) is a universal cycle st. |x1| (cid:14)= |y1| then

qsb(σ(y1)) = {¬x1 → (y1 ↔ y(cid:3)

1)}

• ∀k > 1,

if (xk, yk) is a universal cycle then

qsbp(σ(yk)) is made of the following constraints
– ¬xk → (yk ↔ y(cid:3)
– ((¬xj ∧ yj) → (yk ↔ y(cid:3)

k) when |xk| (cid:14)= |yk|

k)), ∀j st. 1 ≤ j < k

Example 3 Let us consider the QBF Φ given in example 1.
The symmetry σ of Φ contains one universal cycle (x1, y1).
Using deﬁnition 4, a new variable y(cid:3)
1 is associated to the
variable y1 which becomes existentially quantiﬁed. Then
QSBP(σ)= qsbp(σ(y1))= (¬x1 → (y1 ↔ y(cid:3)

1))

As described above, to generate the QSBP new variables
are introduced. In the sequel, we describe how such variables
are integrated in the QBF preﬁx.
Deﬁnition 5 Let Φ = Q1X1 . . . QmXm Ψ be a QBF, and
σ = {σ1 . . . σj . . . σm} be a universal symmetry. Let j st.
Qj = ∀ and σj = σ ↑ Xj = {(x1, y1) . . . (xn, yn)}
and Y (cid:3) = {y(cid:3)
n} the set of new variables associated
to {y1 . . . yn} respectively. We deﬁne the new ordering of
V ar(σj ) ∪ Y (cid:3)
k) <
rank(yk) st. 1 ≤ k ≤ n.

as follows : rank(xk) < rank(y(cid:3)

1 . . . y(cid:3)

We deﬁne Gσj
ated to σj with V =
(cid:2)
k), (y(cid:3)
{

(V, A) as the precedence graph associ-
k} and A =

1≤k≤n{xk, yk, y(cid:3)

(cid:2)

k, yk)}}.

1≤k≤n{(xk, y(cid:3)
To rewrite the quantiﬁer group QjXj of the QBF formula
(see deﬁnition 6), a new ordering is derived by applying topo-
logical sort algorithm on the precedence graph. Let us note
that such a graph is acyclic. In ﬁgure 1, the graph represen-
tation of σj = σ ↑ Xj is illustrated. The ordering x1 . . . xn
1 . . . y(cid:3)
y(cid:3)

ny1 . . . yn is then considered.












y (cid:3)
2

y (cid:3)
1

-

-

y2

y1

...

6

6




y (cid:3)

n

6




y

n

-




x1




x2




x

n

Figure 1: Graph representation of σj

Deﬁnition 6 Let Φ = Q1X1 . . . QmXm Ψ be a QBF, σ =
{σ1 . . . σm} a universal symmetry and for j ∈ {1 . . . m}
σj = σ ↑ Xj = {(x1, y1), . . . (xn, yn)}. Every quantiﬁer
group QjXj of Φ is rewritten :

• if Qj = ∀ and σ ↑ Xj (cid:14)= ∅ then

Qp

j X p

j = ∀(Xj\V ar(σj ))x1 . . . xn∃α∀y(cid:3)

1 . . . y(cid:3)

n∃y1 . . . yn

IJCAI-07

2264

(see ﬁgure 1) st. X p
variable.

j = Xj ∪ {y(cid:3)

1 . . . y(cid:3)

n} and α is a new

• otherwise Qp

j X p
Φ is then rewritten as
ΦS = Qp
1 . . . Qp

1X p

j = QjXj

i X p

i . . . Qp

mX p

m Ψ ∧ SBP ∧ QSBP

Remark 1 In deﬁnition 6, a new variable α is introduced to
constrain the set of variables {x1, . . . xn} to be assigned be-
fore {y(cid:3)
Property 1 Let Φ be a QBF and σ a symmetry of Φ, then Φ
is valid iff ΦS

1, . . . , y(cid:3)

is valid.

n}.

To sketch the proof of property 1, we consider the QBF given
in the example 1. Applying our approach on Φ, we obtain the
QBF :

Φs = ∀x1∃α∀y(cid:3)

1∃y1x2y2 Ψ1 ∧ (¬x1 ∨ y1) ∧ (¬x1 ∨ ¬x2 ∨
y2) ∧ (y1 ∨ ¬x2¬y2) ∧ (x1 ∨ y1 ∨ ¬y(cid:3)
1) ∧ (x1 ∨ ¬y1 ∨ y(cid:3)
1)
When x1 is assigned to the value true, from the clause
(¬x1 ∨ y1) we deduce that y1 is true. If x1 is assigned the
value f alse, the original universal variable y1 is deduced by
substitution (y(cid:3)
1 and y1 are equivalent) thanks to the added
constraint ¬x1 → (y1 ↔ y(cid:3)
1) < rank(y1), we
only need to substitute all occurrences of y1 by y(cid:3)
1.

1). As rank(y(cid:3)

3.3 Breaking all symmetries
Generating QSBP
When considering several symmetries, we can not eliminate
them independently by processing each single symmetry us-
ing the single symmetry breaking approach described in sec-
tion 3.2. One needs to consider the interactions between the
different symmetries. Indeed, considering an universal out-
literal yk and its associated new variable y(cid:3)
k, the qsbp(σ(yk))
express the conditions under which such literals yk and y(cid:3)
k
are equivalent. As only one variable y(cid:3)
k is introduced for
each universal out-literal yk, when yk appears in several sym-
metries, the different conditions leading to such equivalence
need to be combined.
Deﬁnition 7 Let Φ be
=
{(x1, y1) . . . (xi, y) . . . }. σ(cid:3) = {(z1, w1) . . . (zj, y) . . . } two
symmetries of Φ with y an universal out-literal. The qsbp’s
associated to y with respect to σ and σ(cid:3)
can be written in the
following form (see deﬁnition 4) :

a QBF,

and

σ

• qsbp(σ(y)) = {α1 → (y ↔ y(cid:3))) . . . αN → (y ↔ y(cid:3))}
• qsbp(σ(cid:3)(y)) = {β1 → (y ↔ y(cid:3)) . . . βM → (y ↔ y(cid:3))}.
We deﬁne a binary correlation operator η between σ and σ(cid:3)
as follows :
η(σ(y), σ(cid:3)(y)) = {(α1 ∧ β1) → (y ↔ y(cid:3)) . . . (α1 ∧ βM ) →
(y ↔ y(cid:3)) . . . (αN ∧ β1) → (y ↔ y(cid:3)) . . . (αN ∧ βM ) → (y ↔
y(cid:3))}.
Deﬁnition 8 Let S = {σ1 . . . σn} be a set of symmetries of
a given QBF and y is universal literal. We deﬁne,

• S[y] = {σj|∃(x, y) ∈ σj } = {σ(cid:3)1 . . . σ(cid:3)|S[y]|}.
• qsbp(S[y]) = η(η . . . η(σ(cid:3)1, σ(cid:3)2) . . . , σ(cid:3)|S[y]|) . . . ).

Deﬁnition 9 Let S = {σ1 . . . σn} be the set of symmetries of
a given QBF Φ = QX Ψ. The new QBF matrix ΨS
is deﬁned
as follows:

(cid:4)

Ψ ∧ (

SBP (σi)) ∧ (

(cid:4)

qsbp(S[x]))

1≤i≤n

x∈V arU(Φ)

kX p

Preﬁx ordering
Let us now show how a new QBF preﬁx is built when con-
sidering a set of symmetries (for a single symmetry see deﬁ-
nition 6). For a set of symmetries {σ1, . . . , σn}, we consider
for each universal quantiﬁer group QkXk, all the projections
σi ↑ Xk for each symmetry σi
. The new quantiﬁer group
Qp
k is obtained from the precedence graph representation
of all these projections. Let us recall that each symmetry σi
is considered p-ordered. Additionally, to avoid cycles from
the graph representation of {σi ↑ Xk|1 ≤ i ≤ n}, each pro-
jection σi ↑ Xk is considered lexicographically ordered.
Deﬁnition 10 Let σ = {(x1, y1), . . . , (xn, yn)} be a set of
cycles. σ is called lexicographically ordered (lex-ordered in
short), iff xi > 0, xi ≤ |yi| 1 ≤ i ≤ n and xi < xi+1
1 ≤ i < n

=

two symmetries of Φ st.

Q1X1 . . . QmXm Ψ be
σ

Example 4 Let Φ
a
QBF, σ and σ(cid:3)
↑
X1 = {(x2, x1)(¬x3, ¬x4)(x5, x6)}, σ(cid:3)
↑ X1 =
{(x3, x1)(x2, ¬x6)} and Q1 = ∀. With respect to lexi-
cographical order, σ ↑ X1 = {(x1, x2)(x3, x4)(x5, x6)}
and σ(cid:3)
↑ X1 = {(x1, x3)(x2, ¬x6)} Figure 2
the precedence graph representation of both
shows
σ ↑ X1 and σ(cid:3)
Applying topological sort
is then rewritten as
algorithm,
6∃x4x6
QP

1 X P
1
3∃x2x3∀x(cid:3)

the quantiﬁer QP

1 = ∀x1x5∃α∀x(cid:3)

↑ X1.

1 X P

2x(cid:3)

4x(cid:3)




x5




>

ZZ~


Z

Z

x1

x(cid:3)
2






x(cid:3)
3

-

x2






x3

?

x(cid:3)
6






x(cid:3)
4

x6






x4

-

-

-

-

Figure 2: Precedence graph of σ ↑ X1 and σ(cid:3) ↑ X1

Dealing with universal cycles of the form (y, x) and
(z, ¬x)

To preserve the equivalence (wrt. validity) between the orig-
inal QBF and the new generated one, let us now address the
last problem arising from the interactions between the differ-
ent symmetries. As illustrated in the following example, the
problem arises for symmetries where a universally quantiﬁed
out-literal x appears both positively (x) and negatively (¬x).
Example 5 Let Φ = Q1X1 . . . QiXi . . . QmXmΨ be a QBF,
σ and σ(cid:3)
two symmetries of Φ st. σ ↑ Xi = {(x1, y2)} and
σ(cid:3) ↑ Xi = {(x2, ¬y2)}, Qi = ∀.

Using our approach the quantiﬁer group QiXi is rewritten
as ∀(Xi\V ar(σ, σ(cid:3)))∀x1x2∃α∀y(cid:3)
2∃y2. The generated SBP
for σ contains the clause c = (¬x1 ∨ x4). For σ(cid:3)
its corre-
sponding SBP contains the clause c(cid:3) = (¬x2 ∨ ¬y2). As
the universal variable x4 is substituted with an existential
one, applying the Q-resolution rule [Kleine-B¨uning et al.,

IJCAI-07

2265

2∃x2∀y(cid:3)

2∃y2.

i = ∀x1∃α∀x(cid:3)

, we also consider σ(cid:3)(cid:3)

1995] on c and c(cid:3)
leads to a universally quantiﬁed resolvent
r = (¬x1 ∨ ¬x2). Consequently, the new obtained QBF is
invalid. Finding a new ordering which avoid this problem is
a very challenging task. In example 5, such a problem can
be avoided by considering the new ordering x1 < y2 < x2
instead of the used lex-ordering. Another possible solution,
actually under investigation is to apply composition between
symmetries. More precisely, if we consider σ ◦ σ(cid:3) ◦ σ we
obtain a new symmetry σ(cid:3)(cid:3) = (x1, ¬x2). If in addition to σ
and σ(cid:3)
, then the previous resolvent gen-
erated using Q-resolution is now not universally quantiﬁed.
Indeed, as x2 is an out-literal, its universal quantiﬁer is sub-
stituted with an existential one. Then the resolvent r contains
a literal ¬x2 whose associated variable is existentially quan-
tiﬁed. Finally, the quantiﬁer group QiXi can be rewritten as
Qp

i X p
The above discussion gives us an idea on how to solve in
the general case, the problem arising from symmetries with
universal cycles of the form (y, x) and (z, ¬x). In this paper,
such a problem is simply avoided using the following restric-
tion :
Deﬁnition 11 Let Φ = Q1X1 . . . QmXmΨ be a QBF,
y ∈ V arU (Φ) and S the set of symmetries of Φ. We
deﬁne S[y]
For
σ = {(x1, y1), . . . , (xk, yk) . . . , (xn, yn)}, we deﬁne σ↓
yk = {(x1, y1), . . . , (xk−1, yk−1)}. The restriction of S
y is deﬁned as rt(S, y) = {σ|σ ∈ S, σ[y] =
wrt.
∅, σ[¬y] = ∅} ∪ S[y] ∪ S[¬y]↓{¬y}. For the set of
variables V arU (Φ) = {v1, . . . , v|V arU(Φ)|}, we deﬁne
rt(S, V arU (Φ)) = rt(. . . rt(S, v1), v2) . . . v|V arU(Φ)|) . . . )
Note that if S[y] = ∅ or S[¬y] = ∅, then rt(S, y) = S. Nat-
urally, for a given set of symmetries S, the new QBF formula
is generated using rt(S, V arU (Φ)). In this way the obtained
formula is equivalent wrt. validity to the original one.

y|σ ∈ S[y]}.

↓

y = {σ ↓

(cid:2)

1≤i≤n qsbp(σi(yi)).

Complexity
Let σ be a symmetry of a QBF and CN F (QSBP (σ)) the
CNF representation of QSBP (σ). The worst case spacial
complexity of CN F (QSBP (σ)) is in O(|σ|2). Considering
σ = {σ1, . . . , σn} with σi = (xi, yi), 1 ≤ i ≤ n, the worst
case is reached when all cycles of σ are universal. In this
|QSBP (σ)| =
case, QSBP (σ) =
(cid:3)
1≤i≤n |qsbp(σ(yi))|. |qsbp(σ(yi))| is equal to 2(i − 1) +
2 = 2i (see deﬁnition 4). Then, |QSBP (σ)| =
1≤i≤n 2i
which is equal to n(n + 1). More interestingly, using the
same new variables introduced for CN F (SBP ), the size of
QSBP (σ) becomes linear. Unfortunately, because of the
correlations between different symmetries, the QSBP asso-
ciated to a set of symmetries is exponential in the worst case.
In practice, on all the considered QBF instances, the num-
ber of applied correlations (deﬁnition 7) does not exceed 3.
Consequently, the QSBP is most often of reasonable size.

(cid:3)

4 Experiments

The experimental results reported in this section are ob-
tained on a Xeon 3.2 GHz (2 GB RAM) and performed
on a large panel of symmetric instances (619) available

from [Giunchiglia et al., 2001a]. This set of QBF in-
stances contains different families like toilet, k *, FPGA,
qshifter. As a comparison, we run the state-of-the-art
DPLL-like solver SEMPROP [Letz, 2002] on QBF instances
with and without breaking symmetries. The time limit is ﬁxed
to 900 seconds. Results are reported in seconds. The symme-
try computation time (including detection and QSBP genera-
tion) is not reported (less than one second in most cases).

 1000

 100

 10

 1

 0.1

 0.01

 0.01

 0.1

 1

 10

 100

 1000

Figure 3: SEMPROP comparison

The scatter plot (in log scale) given in ﬁgure 3 illustrate the
comprative results of SEMPROP [Letz, 2002] on each QBF
instance Φ and ΦS
respectively. The x-axis (resp. y-axis)
corresponds to the cpu time tx (resp. ty) obtained by SEM-
PROP on Φ (resp. ΦS
). Each dot with (tx, ty) coordinates,
corresponds to a QBF instance. Dots above (resp. below) the
diagonal indicate instances where the original formula Φ is
solved faster i.e. tx < ty (resp. slower i.e. tx > ty) than the
QBF formula ΦS

.

Figure 3 clearly shows the computational gain obtained us-
ing symmetry breaking predicates (about 167 instances are
solved more efﬁciently). In some cases the gain is up to 2 or-
ders of magnitude. Of course, there exists some instances
where breaking symmetries decreases the performances of
SEMPROP(about 50 instances). On the remaining instances,
the performance of the solver remains the same with or with-
out breaking symmetries.

Table 1 provides more detailed results on the different QBF
families. The second column (N B) represents the number of
instances in each family. The third column (U ) indicates if
the instances contain universal symmetries (Y ) or not (N ).
For each family, S and T T represents the total number of
solved instances and the total run-time needed for solving all
the instances (900 seconds are added for each unsolved one)
respectively.

As we can see, table 1 gives us more comprehensive re-
sults with respect to each family. First, breaking symmetries
signiﬁcantly improves SEMPROP performances on many QBF
families leading to more solved instances (18 instances). Sec-
ondly, the existence of universal symmetries seems to be an
important factor for reducing the search time. Not surpris-
ingly, we have also noticed that symmetries between literals
occurring in the innermost quantiﬁer group are useless. In-
deed, such symmetries does not lead to a great reduction in

IJCAI-07

2266

Workshop on Tractable Reasonning, AAAI, pages 17–22,
1992.

[Gent and Smith, 2000] I. Gent and B. Smith. Symmetry
In Proceedings of

breaking in constraint programming.
ECAI, pages 599–603, 2000.

[Giunchiglia et al., 2001a] E. Giunchiglia, M. Narizzano,
and A. Tacchella. Quantiﬁed Boolean Formulas satisﬁa-
bility library (QBFLIB), 2001.

[Giunchiglia et al., 2001b] E. Giunchiglia, M. Narizzano,
and A. Tacchella. QuBE : A system for deciding Quan-
tiﬁed Boolean Formulas Satisﬁability. In Proceedings of
IJCAR, 2001.

[Kleine-B¨uning et al., 1995] H. Kleine-B¨uning, M. Karpin-
ski, and A. Fl¨ogel. Resolution for quantiﬁed boolean for-
mulas. Information and computation, 117(1):12–18, 1995.

[Letz, 2002] R. Letz. Lemma and model caching in decision
procedures for quantiﬁed boolean formulas. In Proceed-
ings of Tableaux, pages 160–175, 2002.

[McKay, 1990] B. McKay. nauty user’s guide (version 1.5).

Technical report, 1990.

[Zhang and Malik, 2002] L. Zhang and S. Malik. Towards a
symmetric treatment of satisfaction and conﬂicts in quan-
tiﬁed boolean formula evaluation. In Proceedings of the
CP, pages 200–215, 2002.

Φ

S

Φ

family
fpga
blackbox
scholl
toilet c
k path
qshifter
tipdiam
asp
TOILET
term1
strategic
k branch
k lin
k grz
k poly
toilet a

TOTAL

NB
8
23
32
53
40
6
76
104
7
6
100
42
21
37
42
22

619

U
Y
Y
Y
Y
Y
Y
Y
Y
Y
Y
N
N
N
N
N
N

S
6
1
17
51
28
6
30
104
6
6
86
21
5
23
42
22

454

TT
1834
19801
13687
2656
12915
67
41455
789
988
174
13482
20096
14553
15242
2031
12

159789

S
7
8
18
53
34
6
30
104
6
6
86
21
5
24
42
22

472

TT
921
13668
13595
49
7999
61
41459
1909
926
177
13477
20069
14551
14997
2068
20

145940

Table 1: Results on different QBF families

the search tree, since their corresponding variables are as-
signed last i.e.
the formula is considerably reduced by the
previous assignments. Finally, for QBF families containing
only existential symmetries, breaking them do not improves
the search time. On k branch, k lin, toilet a families con-
taining only existential symmetries, no improvement is ob-
served. Most of these instances correspond to the dots near
the diagonal (see ﬁgure 3).

5 Conclusion

In this paper, a new approach to break symmetries in QBF
formulae is proposed. Using universally quantiﬁed auxiliary
variables, new symmetry breaking predicates are generated
and safely added to the QBF formula. Experimental results
show that breaking symmetries leads to signiﬁcant improve-
ments of the state-of-the-art QBF solver SEMPROP on many
classes of QBF instances. These experimental results suggest
that for QBF instances containing universal symmetries, sig-
niﬁcant improvements are obtained. As future works, we plan
to investigate the problem arising from the presence of both
positive and negative out-literal in the set of symmetries.

References
[Aloul et al., 2002] F. Aloul, A. Ramani, I. Markov, and
K. Sakallah. Solving difﬁcult instances of boolean sat-
isﬁability in the presence of symmetry. Technical report,
University of Michigan, 2002.

[Audemard et al., 2004] G. Audemard, B. Mazure, and
L. Sais. Dealing with symmetries in quantiﬁed boolean
formulas. In proceedings of SAT, 2004.

[Benedetti, 2005] M. Benedetti. sKizzo: a Suite to Evaluate

and Certify QBFs. In Proc. of CADE, 2005.

[Benhamou and Sais, 1994] B. Benhamou and L. Sais.
Tractability through symmetries in propositional calculus.
Journal of Automated Reasoning, 12(1):89–102, 1994.

[Crawford et al., 1996] J. Crawford, M. Ginsberg, E. Luck,
and A. Roy. Symmetry-breaking predicates for search
problems. In proceedings of KR, pages 148–159. 1996.

[Crawford, 1992] J. Crawford. A theorical analysis of rea-
soning by symmetry in ﬁrst order logic. In Proceedings of

IJCAI-07

2267

