Embedding Non-Ground Logic Programs into Autoepistemic Logic

∗
for Knowledge-Base Combination

Jos de Bruijn1, Thomas Eiter2, Axel Polleres3, and Hans Tompits2

1Digital Enterprise Research Institute (DERI), Leopold-Franzens Universit¨at Innsbruck, Austria

2Institut f¨ur Informationssysteme 184/3, Technische Universit¨at Wien, Austria

jos.debruijn@deri.org, {eiter,tompits}@kr.tuwien.ac.at, axel.polleres@urjc.es

3Universidad Rey Juan Carlos, Madrid, Spain

Abstract

In the context of the Semantic Web, several ap-
proaches to the combination of ontologies, given
in terms of theories of classical ﬁrst-order logic,
and rule bases have been proposed. They either
cast rules into classical logic or limit the interac-
tion between rules and ontologies. Autoepistemic
logic (AEL) is an attractive formalism which allows
to overcome these limitations, by serving as a uni-
form host language to embed ontologies and non-
monotonic logic programs into it. For the latter, so
far only the propositional setting has been consid-
ered. In this paper, we present several embeddings
of normal and disjunctive non-ground logic pro-
grams under the stable-model semantics into ﬁrst-
order AEL, and compare them in combination with
classical theories, with respect to stable expansions
and autoepistemic consequences. Our results reveal
differences and correspondences of the embeddings
and provide a useful guidance in the choice of a par-
ticular embedding for knowledge combination.

1 Introduction
In the context of the ongoing discussion around combina-
tions of rules and ontologies for the Semantic Web, there
have been several proposals for integrating classical knowl-
edge bases (ontologies) and rule bases (logic programs). Gen-
erally speaking, all these approaches try to deﬁne a reason-
able semantics for a combined knowledge base consisting of
a classical component and a rules component.

Two trends are currently observable. On the one hand,
approaches such as SWRL [Horrocks and Patel-Schneider,
2004] extend the ontology with Horn formulas in a classical
framework. This approach is straightforward, but prohibits
nonmonotonic rules. On the other hand, existing approaches
which do allow nonmonotonic rules either (a) distinguish be-
tween “classical” and “rules” predicates and limit the domain
of interpretation (e.g., [Rosati, 2006]) or (b) restrict the inter-
action to ground entailment (e.g., [Eiter et al., 2004]). The

∗This work was funded by the European Commission projects
KnowledgeWeb (IST 507482), DIP (IST 507483), and REWERSE
(IST 506779), by the Austrian Science Fund (FWF) project P17212-
N04, and by the CICyT of Spain project TIC-2003-9001.

main distinction between these approaches is the type of in-
teraction between the classical knowledge base on the one
hand and the rule base on the other (cf. de Bruijn et al. [2006]
for an examination of this issue).

As for combination, a classical theory and a logic program
should be viewed as complementary descriptions of the same
domain. Therefore, a syntactic separation between predicates
deﬁned in these two components should not be enforced. Fur-
thermore, it is desirable to neither restrict the interaction be-
tween the classical and the rules components nor impose any
syntactic or semantic restrictions on the individual compo-
nents. That is, the classical component may be an arbitrary
theory Φ of some ﬁrst-order language with equality, and the
rules component may be an arbitrary non-ground normal or
disjunctive logic program P , interpreted using, e.g., the com-
mon stable-model semantics [Gelfond and Lifschitz, 1988].
The goal is a combined theory, ι(Φ, P ), in a uniform log-
ical formalism. Naturally, this theory should amount to Φ
if P is empty, and to P if Φ is empty. Therefore, such
a combination must provide faithful embeddings σ(Φ) and
τ (P ) of Φ and P , respectively, in this formalism, given by
σ(Φ) = ι(Φ, ∅) and τ (P ) = ι(∅, P ), respectively. In turn,
knowledge combination may be carried out on top of such
embeddings σ(·) and τ (·), where in the simplest case one may
choose ι(Φ, P ) = σ(Φ) ∪ τ (P ).

This raises the questions (a) which uniform formalism is
suitable and (b) which embeddings are suitable and, further-
more, how do embeddings relate to each other and how do
they behave under knowledge combination?

Autoepistemic logic (AEL) [Moore, 1985], which extends
classical logic with a modal belief operator, is an attractive
candidate for a uniform formalism.
In fact, embedding a
classical theory in AEL is trivial, and several embeddings
of logic programs in AEL have been described [Gelfond
and Lifschitz, 1988; Marek and Truszczy´nski, 1993; Lifs-
chitz and Schwarz, 1993; Chen, 1993; Przymusinski, 1991].
However, all these embeddings have been developed for the
propositional case only, whereas we need to deal with non-
ground theories and programs. This requires us to consider
ﬁrst-order autoepistemic logic (FO-AEL) [Konolige, 1991;
Kaminski and Rey, 2002; Levesque and Lakemeyer, 2000],
and non-ground versions of these embeddings. Our main con-
tributions are as follows.

We deﬁne several embeddings of non-ground logic pro-

IJCAI-07

304

grams into FO-AEL, taking into account subtle issues of
quantiﬁcation in FO-AEL. We show that these embeddings
are faithful in the sense that the stable models of the program
and the sets of objective ground atoms in the stable expan-
sions of the embeddings are in a one-to-one correspondence.
However, the embeddings behave differently on formulas be-
yond ground atoms, and when combined with classical theo-
ries, even when considering propositional formulas.

Motivated by these differences, we compare the embed-

dings along two dimensions:

1. We determine correspondences between the stable ex-
pansions of different possible embeddings, with respect
to various classes of formulas. This is done for the
embeddings themselves, as well as for combinations
with theories from different fragments of classical logic
which are important in ontology representation.

2. We present inclusion relations between the sets of au-

toepistemic consequences of the embeddings.

Compared to other well-known nonmonotonic formalisms
like Reiter’s default logic, FO-AEL offers a uniform language
in which (nonmonotonic) rules themselves can be expressed
at the object level. This conforms with the idea of treating an
ontology and a logic program together as a uniﬁed theory.

Arguably, none of the embeddings can a priori be consid-
ered to be superior to the others. Our results give useful in-
sight into the properties of the different embeddings, both on
its own right and for knowledge combination. They provide
a helpful guidance for the selection of an embedding for a
particular scenario.

Proofs of all results are available in an extended version of

this paper.

2 Preliminaries
First-Order Logic A ﬁrst-order (FO) language L consists
of all formulas over a signature Σ = (F, P), where F and P
are countable sets of function and predicate symbols, respec-
tively. Function symbols with arity 0 are called constants.
V is a countably inﬁnite set of variable symbols. Terms
and atomic formulas (atoms) are constructed as usual for
ﬁrst-order logic with equality. Ground terms are also called
names; NΣ is the set of names of a given signature Σ. Com-
plex formulas are constructed as usual using the symbols ¬,
∧, ∨, ⊃, ∃, ∀,(, and ). A sentence is a formula with no free
variables. The universal closure of a formula φ is denoted by
∀φ. L
ga is the
g to atomic formulas. An FO theory Φ ⊆ L is
restriction of L
a set of sentences.

g is the restriction of L to ground formulas; L

An interpretation of a language L is a tuple w = (cid:11)U, ·I (cid:12),
where U is a nonempty set, called the domain, and ·I is a
mapping which assigns a function f I : U n → U to every n-
ary function symbol f ∈ F and a relation pI ⊆ U n to every
n-ary predicate symbol p ∈ P. A variable assignment B for
w is a mapping which assigns an element xB ∈ U to every
variable x ∈ V. The interpretation of a term t, denoted tw,B,
is deﬁned as usual; if t is ground, we write tw instead of tw,B.
An individual k with at least one name t ∈ N such that
tw = k is called a named individual, and unnamed otherwise.

In case names are interpreted distinctly, the unique-names as-
sumption applies. If, additionally, every individual is named,
the standard-names assumption applies.

A variable substitution β is a set {x1/t1, ..., xk/tk

}, where
x1, ..., xk are distinct variables and t1, ..., tk are names. β is
total if it contains some x/n for every variable x ∈ V. Given
variable assignment B and substitution β, if β = {x/t | x ∈
V, tw = xB, for some name t}, then β is associated with B.
The application of a variable substitution β to some term,
formula, or theory, denoted by appending β to it, is deﬁned
as syntactical replacement, as usual. Clearly, if the unique-
names assumption applies, each variable assignment has a
unique associated substitution; if the standard-names assump-
tion applies, each associated substitution is total.
Example 1. Consider a language L with constants F = {a,
b, c}, and an interpretation w = (cid:11)U, ·I(cid:12) with U = {k, l, m}
such that aw = k, bw = l, and cw = l, and the variable
assignment B: xB = k, yB = l, and zB = m. B has
two associated variable substitutions, β1 = {x/a, y/b} and
β2 = {x/a, y/c}, which are not total.

Logic Programs A disjunctive logic program P consists of
rules of the form
h1 | . . . | hl

← b1, . . . , bm, not c1, . . . , not cn,

(1)

where h1, . . . , hl, b1, . . . , bm, c1, . . . , cn are (equality-free)
} is the set of head atoms of r,
atoms. H(r) = {h1, . . . , hl
B+(r) = {b1, . . . , bm
} is the set of positive body atoms of r,
and B−(r) = {c1, . . . , cn
} is the set of negative body atoms
of r. If l = 1, then r is normal. If B−(r) = ∅, then r is posi-
tive. If every variable in r occurs in B+(r), then r is safe. If
every rule r ∈ P is normal (resp., positive, safe), then P is
normal (resp., positive, safe).
By a ﬁrst-order signature, Σ

P , we understand a superset of
P
P . We assume that
P contains at least one 0-ary function symbol or only 0-ary
P is the set
P . Subsets of BH are called

the function and predicate symbols which occur in P . Let L
denote the ﬁrst-order language based on Σ
Σ
predicate symbols. The Herbrand base, BH , of L
of ground atomic formulas of L
Herbrand interpretations.

The grounding of a logic program P , denoted gr(P ), is the
union of all possible ground instantiations of P , obtained by
replacing each variable in a rule r with a name in NΣP , for
each rule r ∈ P .

Let P be a positive program. A Herbrand interpretation M
of P is a model of P if, for every rule r ∈ gr(P ), B+(r) ⊆
M implies H(r) ∩ M (cid:17)= ∅. A Herbrand model M is minimal
iff for every model M (cid:2) such that M (cid:2) ⊆ M , M (cid:2) = M .

Following Gelfond and Lifschitz [1991], the reduct of a
logic program P with respect to an interpretation M , denoted
P M , is obtained from gr(P ) by deleting (i) each rule r with
B−(r) ∩ M (cid:17)= ∅, and (ii) not c from the body of every re-
maining rule r with c ∈ B−(r). If M is a minimal Herbrand
model of P M , then M is a stable model of P .

3 First-order Autoepistemic Logic

We adopt the deﬁnition of ﬁrst-order autoepistemic logic
(FO-AEL) under the any- and all-name semantics following

IJCAI-07

305

Konolige [1991], using a novel characterization with associ-
ated variable substitutions. The beneﬁt of these semantics
is that they allow quantiﬁcation over arbitrary domains and
generalize classical ﬁrst-order logic with equality, thereby
allowing a trivial embedding of ﬁrst-order theories. Other
approaches [Kaminski and Rey, 2002; Levesque and Lake-
meyer, 2000] restrict the domains of interpretations to unique
or standard names and therefore do not allow such direct em-
beddings.

An FO-AEL language LL is deﬁned relative to a ﬁrst-order
language L: (i) any atomic formula in L is a formula in LL;
(ii) if φ is a formula in LL, then Lφ, called a modal atom,1 is
a formula in LL; and (iii) complex formulas are constructed
as in ﬁrst-order logic. A formula without modal atoms is an
objective formula. Standard autoepistemic logic is FO-AEL
without variables.

An autoepistemic interpretation is a pair (cid:11)w, Γ(cid:12), where
w = (cid:11)U, ·I (cid:12) is a ﬁrst-order interpretation and Γ ⊆ LL is a
set of sentences, called the belief set. Satisfaction of objec-
tive atomic formulas in w is as in ﬁrst-order logic.

Satisfaction of a formula Lφ in an interpretation (cid:11)w, Γ(cid:12)
with respect to a variable assignment B under the any-name
semantics (resp., all-name semantics) is deﬁned as follows:

w, B |=Γ Lφ iff, for some (resp., all) variable substitu-
tion(s) β, associated with B, φβ is closed and φβ ∈ Γ.

This extends to complex formulas in the usual way. Notice
that in case the unique-names assumption applies, the any-
and all-name semantics coincide.

(cid:11)w, Γ(cid:12) is a model of φ, denoted w |=Γ φ, if w, B |=Γ φ
for every variable assignment B of w. This extends to sets of
formulas in the usual way. A set A ⊆ LL of formulas entails
a sentence φ with respect to a belief set Γ, denoted A |=Γ φ,
if for every interpretation w such that w |=Γ A, w |=Γ φ.
Example 2. Consider a language with constant symbols a, b
and unary predicate symbol p, and an interpretation (cid:11)w, Γ(cid:12)
with w = (cid:11){k}, ·I(cid:12) and Γ = {p(a)}. Under the any-name
semantics, w |=Γ ∃x.Lp(x); under the all-name semantics,
w (cid:17)|=Γ ∃x.Lp(x), because bw = aw = k, but p(b) /∈ Γ.
We deem this behavior of the all-name semantics counterin-
tuitive; so, following Konolige [1991], we use the any-name
semantics in what follows, unless stated otherwise.
Example 3. Consider the formula φ = ∀x(p(x) ⊃ Lp(x))
and some interpretation (cid:11)w, Γ(cid:12). Then: w |=Γ φ iff for every
variable assignment B, w, B |=Γ p(x) ⊃ Lp(x) iff w, B (cid:17)|=Γ
p(x) or w, B |=Γ Lp(x). Now, w, B |=Γ Lp(x), with xB =
k, iff for some t ∈ NΣ, tw = k, and p(t) ∈ Γ. Thus, φ is false
in any interpretation where pI contains unnamed individuals.
A belief set T ⊆ LL is a stable expansion of a base set
T φ}. We use the following
= T ∩ L, Tog
g, and

A ⊆ LL iff T = {φ | A |=
notation in the remainder: To
Toga

= T ∩ L

= T ∩ L

ga.

A formula φ is an autoepistemic consequence of A if φ is
included in every stable expansion of A. Cons(A) denotes
(A)
the set of all autoepistemic consequences of A. Conso
denotes the restriction of Cons(A) to objective formulas.

1Lφ is usually read as “φ is known” or “φ is believed.”

Every stable expansion T fulﬁlls the following properties:
(a) T is closed under ﬁrst-order entailment, (b) if φ ∈ T then
Lφ ∈ T , and (c) if φ /∈ T then ¬Lφ ∈ T . If T is consistent,
the converses of (b) and (c) also hold.

= {φ ∈ L | A |=

Konolige [1991] shows that a stable expansion T of a base
set A is determined by its objective subset To, called the ker-
nel of T . If A does not have nested modal operators, then,
To φ} iff To is the kernel of
additionally, To
a stable expansion T of A. We extend this result as follows:
Proposition 1. Given a base set A ⊆ LL with only objec-
tive atomic formulas in the context of modal atoms, and a set
of objective formulas Γ
ga, then
= T ∩ L for some stable
Γ
expansion T of A.

= {φ ∈ L | A |=Γga φ} iff Γ

⊆ L, with Γ

= Γ

∩ L

ga

o

o

o

o

4 Embedding Non-Ground Logic Programs
We deﬁne an embedding as a function which takes a logic
program P as its argument and returns a set of sentences in
the FO-AEL language obtained from Σ

P .

Since the unique-names assumption does not hold in FO-
AEL in general, it is necessary to axiomatize default unique-
ness of names (as introduced by Konolige [1991]). By UNAΣ
we denote the set of axioms
¬L(t1 = t2) ⊃ t1 (cid:17)= t2,

for all distinct t1, t2 ∈ NΣ.

4.1 Embedding Normal Logic Programs
The ﬁrst embedding we consider is an extension of the one
which originally led Gelfond and Lifschitz to the discovery
of the stable model semantics [Gelfond and Lifschitz, 1988].
The second and third embedding are extensions of the embed-
dings due to Marek and Truszczy´nski [1993]. The third was
independently developed by Lifschitz and Schwarz [1993],
and Chen [1993]. The original motivation for the second and
third embedding was the possibility to directly embed pro-
grams with strong negation and disjunctive programs.
Deﬁnition 1. Let r be a rule of form (1) with l = 1. Then:

(cid:2)

⊃ h;
⊃ h ∧ Lh.

(cid:2)
(cid:2)
(cid:2)

τHP (r) = ∀
τEB (r) = ∀
τEH (r) = ∀

j

∧
ibi
∧ Lbi
(bi
∧ Lbi
(bi

¬Lcj
) ∧
) ∧

i

¬Lcj
¬Lcj
For a normal logic program P , we deﬁne:
τx

j

i

⊃ h;
(cid:2)
(cid:2)
j

(P ) = {τx
(r) | r ∈ P } ∪ UNAΣP , x ∈ {HP, EB , EH }.
In the above embeddings, “HP ” stands for “Horn for pos-
itive rules” (positive rules are translated to objective Horn
clauses); “EB ” stands for “epistemic rule bodies” (the body
of a rule can only become true if it is known to be true); and
“EH ” stands for “epistemic rule heads” (if the body of a rule
is true, the head is known to be true). For all three embed-
dings, we assume Σ
P (here and henceforth we
use “x” as a meta-variable to range over HP , EB , and EH ).
Furthermore, by τ −
x we denote the embedding τx without the
UNA axioms. In the examples of embeddings in the remain-
der of the paper, we do not write the UNA axioms explicitly.
A notable distinction between the embedding τHP on the
one hand and the embeddings τEB , τEH on the other is that
the contrapositive of the rules in P is included in stable ex-
pansions of τHP , but not in stable expansions of τEB , τEH :

τx(P ) = Σ

IJCAI-07

306

Example 4. Consider P = {p ← q}. The stable expansion
of τHP (P ) = {p ⊃ q} includes ¬q ⊃ ¬p; the expansion of
τEB (P ) = {p ∧ Lp ⊃ q} includes ¬q ⊃ ¬Lp ∨ ¬p, but not
¬q ⊃ ¬p, and neither does τEH (P ).

For the case of standard autoepistemic logic and ground

logic programs, the following correspondence result holds:
Proposition 2 ([Gelfond and Lifschitz, 1988; Marek and
Truszczy ´nski, 1993]). A Herbrand interpretation M is a sta-
ble model of a ground normal logic program P iff there is a
(P ) in standard autoepis-
consistent stable expansion T of τ −
x
temic logic such that M = T ∩ L
ga.

Now consider the case of non-ground programs. The fol-

lowing example illustrates the embeddings:
Example 5. Consider P = {q(a); p(x); r(x) ← not s(x),
p(x)}, having a single stable model M = {q(a), p(a), r(a)}.
Likewise, each of the embeddings τHP (P ), τEB (P ), and
τEH (P ) has a single consistent stable expansion:
T HP = {q(a), p(a), Lp(a), ¬Ls(a), r(a),

∀x(¬p(x) ⊃ ¬q(x)), ¬L∀x(Lp(x)), ...},

T EB = {q(a), p(a), Lp(a), ¬Ls(a), r(a), ¬L∀x(Lp(x)), ...},
T EH = {q(a), p(a), Lp(a), ¬Ls(a), r(a), ∀x(Lp(x))...}.

HP

(P ) = {a ∨ b}, has
straightforward extension of τHP , τ ∨
one stable expansion T = {a ∨ b, L(a ∨ b), ¬La, ¬Lb, ...}.
In contrast, τEH can be straightforwardly extended because
of the modal atoms in the consequent of the implication:
(P ) = {(a ∧ La) ∨ (b ∧ Lb)} has two stable expansions
τ ∨
EH
T1 = {a ∨ b, a, La, ¬Lb, ...} and T2 = {a ∨ b, b, Lb, ¬La, ...}.
The so-called positive introspection axioms (PIAs) [Przy-
EB . Let

musinski, 1991] remedy this situation for τ ∨
PIAΣ be the set of axioms

HP and τ ∨

α ⊃ Lα,

for every objective ground atom α of Σ.

The PIA α ⊃ Lα ensures that every consistent stable expan-
sion contains either α or ¬α.

It would have been possible to deﬁne the PIAs in a differ-
ent way: ∀ φ ⊃ Lφ for any objective atomic formula φ. This
would, however, effectively close the domain of the predi-
cates in Σ (see Example 3). We deem this aspect undesirable
in combinations with FO theories.
Deﬁnition 2. Let r be a rule of form (1). Then:

(cid:2)
(cid:2)
(cid:2)
i

(cid:2)

j

∧
ibi
∧ Lbi
(bi
∧ Lbi
(bi

¬Lcj
) ∧
) ∧

i

⊃
(cid:2)
(cid:2)

j

j

(cid:3)

;
khk
¬Lcj
⊃
⊃
¬Lcj

τ ∨
HP
τ ∨
EB
τ ∨
EH

(r) = ∀
(r) = ∀
(r) = ∀

(cid:3)
(cid:3)

;
khk
(hk

k

∧ Lhk

).

The stable expansions in Example 5 agree on objective
ground atoms, but not on arbitrary formulas. We now extend
Proposition 2 to the non-ground case.
Lemma 1. Given a set A ⊆ L
there exists a stable expansion T of τx
all-name semantics with Toga
expansion T (cid:2) of τx
same result holds for τ −
Theorem 1. A Herbrand interpretation M of a normal logic
program P is a stable model of P iff there is a consistent
(P ) under the any- or all-name se-
stable expansion T of τx
mantics such that M = T ∩ L
ga. Moreover, the same result
holds for τ −

ga of objective ground atoms,
(P ) under the any- or
= A iff there exists a stable
= A. Moreover, the

HP under the all-name semantics.

HP under the all-name semantics.

(gr(P )) with T (cid:2)

oga

HP

Note that this result does not hold for τ −

HP under the
any-name semantics. Consider P = {p(n1); r(n2); q ←
not p(x)} such that Σ
P has only two names, n1 and n2. P
has one stable model, M = {p(n1), r(n2), q}. τ −
(P ) =
{p(n1); r(n2); ∀x(¬Lp(x) ⊃ q)} has one stable expansion,
T = {p(n1), r(n2), Lp(n1), Lr(n2), ¬Lp(n2), ...}. T does
not include q. To see this, consider an interpretation w with
only one individual k. Lp(x) is trivially true under the any-
name semantics, because there is some name for k such that
p(t) ∈ T (viz. t = n1). In the all-name semantics, this situ-
ation does not occur, because for Lp(x) to be true, p(t) must
be included in T for every name (t = n1 and t = n2) for k.
One can similarly verify that the result does not apply to the
embeddings τ −
EH under the all-name semantics, by
the positive modal atoms in the antecedents.

EB and τ −

4.2 Embedding Disjunctive Logic Programs
The embeddings τHP and τEB cannot be straightforwardly
extended to disjunctive logic programs, even in the proposi-
tional case. Consider the program P = {a | b ←}. P has
two stable models: M1 = {a} and M2 = {b}. However, a

For a disjunctive logic program P , we deﬁne:
(r) | r ∈ P } ∪ PIAΣP
(r) | r ∈ P } ∪ PIAΣP
(r) | r ∈ P } ∪ UNAΣP .

(P ) = {τ ∨
(P ) = {τ ∨
(P ) = {τ ∨

τ ∨
HP
τ ∨
EB
τ ∨
EH

EH

EB

HP

∪ UNAΣP
∪ UNAΣP

;
;

As before, by τ ∨−
x without the
UNA part. We do not write the UNA and PIA parts explicitly
in the examples below.

x we denote the embedding τ ∨

For the case of standard autoepistemic logic and ground
disjunctive logic programs, the correspondence between the
(P )
stable expansions of the embeddings τ ∨
and the stable models of P is known:
Proposition 3 ([Przymusinski, 1991; Marek and Trus-
zczy ´nski, 1993]). A Herbrand interpretation M of a ground
disjunctive logic program P is a stable model of P iff there is
(P ))
a consistent stable expansion T of τ ∨−
in standard autoepistemic logic such that M = T ∩ L

(P ) (resp., τ ∨−
ga.

(P ) and τ ∨

EH

HP

EH

HP

We generalize this result to the case of FO-AEL and non-

EB:

ground programs, and additionally for τ ∨
Theorem 2. A Herbrand interpretation M of a disjunctive
logic program P is a stable model of P iff there is a consis-
(P ) under the any- or all-name
tent stable expansion T of τ ∨
x
semantics such that M = T ∩ L
ga. Moreover, the same result
holds for τ −

HP under the all-name semantics.

HP and
EH on the other is the presence

A notable distinction between the embeddings τ ∨
τ ∨
EB on the one hand and τ ∨
and absence of the PIAs, respectively:
Example 6. Consider P = {p | q ←}, τ ∨
PIAΣP , and τ ∨
EH
expansions of τ ∨
2 = {q, ¬p, Lp, ¬Lp, ...}; the expansions of τ ∨
T HP
1 = {p, Lp, ¬Lq, ...} and T EH
T EH
expansions T EH

(P ) = {p ∨ q} ∪
(P ) = {(p ∧ Lp) ∨ (q ∧ Lq)}. The stable
1 = {p, ¬q, Lp, ¬Lq, ...} and
(P ) are T HP
(P ) are
2 = {q, Lp, ¬Lp, ...}. The

include neither ¬q nor ¬p.

and T EH

EH

HP

HP

1

2

IJCAI-07

307

Safe

ιEB ≡ ιEH ι∨

HP

Grnd
≡ ι∨

EB

ιHP ≡ga ιEB

Φ\P
T hr
Uni

gHorn
Horn
Prop

{∅}

Prg

ιEH ≡ ι∨
ιEB ≡g ιEH

EH

ιHP ≡ga ιEB
ι∨
HP

≡g ι∨

EB

ιHP ≡ga ιEB ≡ga
ιEH ≡ga ι∨
≡ga

HP

ι∨
EB

≡ga ι∨

EH

Table 1: Correspondence between expansions of combina-
(∨)
tions; ι
x

(∨)
x (Φ, P ).

is short for ι

5 Relations between the Embeddings
In this section, we explore correspondences between the em-
beddings presented in the previous section in combinations
with FO theories. In our simple setting, we deﬁne the combi-
nation of a program P and an FO theory Φ as

(∨)
ι
x

(Φ, P ) = Φ ∪ τ

(∨)
x

(P ) ⊆ LL, 2

where ΣLL is the union of the signatures ΣΦ and Σ
P . Recall
that we consider the any-name semantics, because of its more
intuitive behavior (cf. 3).

In the following, we compare (i) the stable expansions of
such combinations and (ii) the sets of autoepistemic conse-
quences of the individual embeddings. To this end, we intro-
duce the following notation:

Let A1 and A2 be FO-AEL theories. We write A1 ≡ A2 iff
A1 and A2 have the same stable expansions. Moreover, for
α ∈ {g, ga}, we write A1 ≡

α A2 iff

{T ∩ L

α

| T is a stable expansion of A1} =

{T (cid:2) ∩ L

α

| T (cid:2) is a stable expansion of A2}.

Note that, by deﬁnition, A1 ≡ A2 implies A1 ≡
A1 ≡

g A2 implies A1 ≡

ga A2.

g A2, and

In our analysis, we furthermore use the following classes

of programs and theories:

• the classes Prg, Safe, and Grnd of arbitrary, safe, and

ground logic programs, respectively; and

• the classes T hr , Uni , gHorn, Horn, Prop, and {∅} of
arbitrary, universal, generalized Horn,3 Horn, proposi-
tional, and empty FO theories.

Observe the following inclusions:

Grnd ⊂ Safe ⊂ Prg;

{∅} ⊂

Prop ⊂ Uni
Horn ⊂ Uni
Horn ⊂ gHorn

⊂ T hr .

Theorem 3. Let P be a normal (disjunctive, resp.)
logic
program and Φ be a ﬁrst-order theory. Then, the relations
depicted in Table 1 (with the respective provisos) hold, pro-
viding P and Φ belong to the classes listed there.

2One could imagine other, non-trivial, embeddings of the classi-

cal theory. Such embeddings are a topic for future investigations.

3Generalized Horn formulas are Horn formulas which addition-
ally allow existentially quantiﬁed variables in the consequent of the
material implication.

C ∨

EB

bF

F

F

F

/ C ∨

HP

F

F

F

F

F

bF

F

F

F

F

F

F

F

F

C ∨

EH

CEH

CEB

/ CHP

(∨)
Figure 1: Relationships between sets of consequences; C
x
(∨)
x (P )), → stands for ⊆, and (cid:2) stands
stands for Conso
for ⊆ in case P is safe.

(τ

Consider the logic program P from Example 5. P is nei-
ther safe nor ground: to determine correspondence between
embeddings, we need to use the ﬁrst column of Table 1. Since
P is normal, all equations in this column are applicable. We
have that τEB (P ) ≡
(P ). Let
Φ be a Horn theory, then ιHP (Φ, P ) ≡
ga
ιEB (Φ, P ) and ιEH (Φ, P ) ≡ ι∨
(Φ, P ).

(P ) ≡
ga ιEH (Φ, P ) ≡

g τEH (P ) and τ ∨

g τ ∨
EB

HP

EH

Additionally, since autoepistemic consequence is deﬁned
through the intersection of all stable expansions, we can
conclude that τEB (P ) and τEH (P ), and also τ ∨
(P ) and
HP
(P ), agree on objective ground autoepistemic conse-
τ ∨
EB
quence and that ιHP (Φ, P ), ιEH (Φ, P ), and ιEB (Φ, P ) agree
on objective ground atomic autoepistemic consequence.

We now consider the relative behavior of the embeddings

with respect to autoepistemic consequences.

Theorem 4. Let P be a (safe) normal (disjunctive, resp.)
(∨)
logic program, and let τ
be embedding func-
x
tions,
relations
(P )) hold as depicted in
Conso
Figure 1 (with the respective provisos).

(∨)
and τ
y
for x, y ∈ {HP, EB , EH }.
(∨)
x (P )) ⊆ Conso
(τ

(∨)
(τ
y

Then,

HP

Most of the relations given in Figure 1 do not hold for
combinations with FO theories. Consider, e.g., P = {r ←
not p, not q} and Φ = {p ∨ q}. Then, τHP (P ) = {¬Lp ∧
(P ) = {¬Lp ∧ ¬Lq ⊃ r} ∪ P IAΣP
¬Lq ⊃ r} and τ ∨
both have one stable expansion, each containing ¬Lp, ¬Lq,
and r. The combination τHP (P ) ∪ Φ has one stable expan-
(P ) ∪ Φ has two
sion which includes ¬Lp, ¬Lq, and r; τ ∨
stable expansions {p, Lp, ¬Lq, ...} and {q, Lq, ¬Lp, ...}, nei-
ther of which includes r. Thus, r is an autoepistemic con-
sequence of ιHP (Φ, P ), but not of ι∨
(Φ, P ). Therefore,
Conso

(ιHP (Φ, P )) (cid:17)⊆ Conso

(Φ, P )).

(ι∨

HP

HP

HP

Using the results in this section, we can make a number of

observations about the embeddings:
(1) Few correspondences between embeddings with PIAs and
those without hold. However, we can note that the former are
stronger in terms of the number of objective autoepistemic
consequences (cf. Figure 1 and Example 6).
(2) The embeddings τHP and τ ∨
HP are generally the strongest
in terms of consequences (see Figure 1). They allow to derive
the contrapositive of rules (cf. Example 4) and the bodies of
rules are applicable to unnamed individuals, whereas the an-
tecedents of the axioms in the other embeddings are only ap-
plicable to named individuals, because of the positive modal
atoms in the bodies.
(3) For unsafe programs, the embeddings τEH and τ ∨
EH are
generally not comparable with the others; embeddings of un-

IJCAI-07

308

/
+
+
<
<
<
|
<
|
<
|
<
|
<
|
k
k
+
+
1
q
/
o
-
m
k
k
b
/
b
safe rules result in axioms of form ∀xLp(x) (cf. Example 5),
which require all individuals to be named.
(4) In case the programs are safe, or one assumes that all in-
dividuals are named, τEB and τEH coincide.

We conclude this section with an example which demon-
strates possibly unexpected effects of the UNA axioms in
their interaction with an FO theory.
Example 7. Consider P = {p(a); p(b)} and Φ = {a (cid:17)= b ⊃
r}. Then, r is included in any stable expansion of Φ ∪ τx
(P ),
for any τx, in view of the UNA axioms.

6 Related and Future Work

In this paper, we have studied the combination of logic pro-
grams and ontologies (FO theories) using embeddings in a
unifying formalism (FO-AEL). One could imagine, in con-
trast, extensions of semantics for logic programs or ontolo-
gies to incorporate (parts of) the other formalism. One
such extension of logic programming semantics is that of
open domains [Gelfond and Przymusinska, 1993; Van Bel-
leghem et al., 1997; Heymans et al., 2005]. Such extended
semantics can be used to accommodate incomplete knowl-
edge, an important aspect of ontology languages. Nonmono-
tonic extensions of description logics (an FO-based formal-
ism suitable for ontologies) have been presented in the lit-
erature [Baader and Hollunder, 1995; Donini et al., 2002;
Bonatti et al., 2006]. Such approaches might be extended
to accommodate logic programs.

We have investigated basic correspondences between dif-
ferent embeddings of non-ground programs in FO-AEL, and
simple combinations with FO theories. Choosing differ-
ent embeddings for logic programs, but also possibly dif-
ferent embeddings for ﬁrst-order theories, will give rise to
different properties of such combinations [de Bruijn et al.,
2006]. In future work, we will investigate these properties, as
well as the relationship with existing approaches to combine
logic programs and classical theories [Horrocks and Patel-
Schneider, 2004; Eiter et al., 2004; Rosati, 2006].

So far, we have only considered equality-free logic pro-
grams. We conjecture that equality in rule bodies poses no
problems, since still only the trivial equalities are derivable.
Allowing equality in rule heads is a topic for further research.
We expect that the proposed combinations of rules and on-
tologies based on FO-AEL will give rise to the deﬁnition of
novel decidable fragments and for sound (but possibly incom-
plete) algorithms for speciﬁc reasoning tasks for such combi-
nations. Additionally, we will consider other nonmonotonic
logics (e.g., default logic and circumscription) as formalisms
for combining logic programs and classical knowledge bases.

References

[Baader and Hollunder, 1995] F. Baader and B. Hollunder.
Embedding defaults into terminological knowledge repre-
sentation formalisms. J. Autom. Reas., 14:149–180, 1995.

[Bonatti et al., 2006] P. Bonatti, C. Lutz, and F. Wolter. Ex-
pressive non-monotonic description logics based on cir-
cumscription. In Proc. KR 2006.

[de Bruijn et al., 2006] J. de Bruijn, T. Eiter, A. Polleres,
H. Tompits. On representational issues about combina-
tions of classical theories with nonmonotonic rules.
In
Proc. KSEM 2006.

[Chen, 1993] J. Chen. Minimal knowledge + negation as
failure = only knowing (sometimes). In Proc. LPNMR’93.

[Donini et al., 2002] F. M. Donini, D. Nardi, and R. Rosati.
Description logics of minimal knowledge and negation as
failure. ACM ToCL, 3(2):177–225, 2002.

[Eiter et al., 2004] T. Eiter, T. Lukasiewicz, R. Schindlauer,
and H. Tompits. Combining answer set programming with
description logics for the semantic web. In Proc. KR 2004.

[Gelfond and Lifschitz, 1988] M. Gelfond and V. Lifschitz.
In

The stable model semantics for logic programming.
Proc. ICLP’88.

[Gelfond and Lifschitz, 1991] M. Gelfond and V. Lifschitz.
Classical negation in logic programs and disjunctive data-
bases. New Gen. Computing, 9(3/4):365–386, 1991.

[Gelfond and Przymusinska, 1993] M. Gelfond and H. Przy-
In Proc. LP-

musinska. Reasoning on open domains.
NMR’93.

[Heymans et al., 2005] S. Heymans, D. Van Nieuwenborgh,
and D. Vermeir. Guarded Open Answer Set Programming.
In Proc. LPNMR 2005.

[Horrocks and Patel-Schneider, 2004] I. Horrocks and P. F.
Patel-Schneider. A proposal for an OWL rules language.
In Proc. WWW 2004.

[Kaminski and Rey, 2002] M. Kaminski and G. Rey. Revis-
iting quantiﬁcation in autoepistemic logic. ACM ToCL,
3(4):542–561, 2002.

[Konolige, 1991] K. Konolige. Quantiﬁcation in autoepis-
temic logic. Fund. Informaticae, 15(3–4):275–300, 1991.

[Levesque and Lakemeyer, 2000] H. Levesque and G. Lake-
meyer. The Logic of Knowledge Bases. MIT Press, 2000.

[Lifschitz and Schwarz, 1993] V. Lifschitz and G. Schwarz.
In

Extended logic programs as autoepistemic theories.
Proc. LPNMR’93.

[Marek and Truszczy´nski, 1993] V. Marek and M. Trusz-
czy´nski. Reﬂexive autoepistemic logic and logic program-
ming. In Proc. LPNMR’93.

[Moore, 1985] R. C. Moore. Semantical considerations on

nonmonotonic logic. Art. Intell., 25(1):75–94, 1985.

[Przymusinski, 1991] T. Przymusinski. Stable semantics for
disjunctive programs. New Gen. Comp., 9(3–4):401–424.
[Rosati, 2006] R. Rosati. DL+log: Tight integration of de-
scription logics and disjunctive datalog. In Proc. KR 2006.

[Van Belleghem et al., 1997] K. van Belleghem, M. Deneck-
er, and D. De Schreye. A strong correspondence between
description logics and open logic programming. In Proc.
ICLP’97.

IJCAI-07

309

