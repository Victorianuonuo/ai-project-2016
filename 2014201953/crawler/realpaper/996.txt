Graph Connectivity Measures for Unsupervised Word Sense Disambiguation

Roberto Navigli

Dipartimento di Informatica

Universit`a di Roma “La Sapienza”
navigli@di.uniroma1.it

Mirella Lapata

School of Informatics

University of Edinburgh
mlap@inf.ed.ac.uk

Abstract

Word sense disambiguation (WSD) has been a
long-standing research objective for natural lan-
guage processing. In this paper we are concerned
with developing graph-based unsupervised algo-
rithms for alleviating the data requirements for
large scale WSD. Under this framework, ﬁnding
the right sense for a given word amounts to iden-
tifying the most “important” node among the set of
graph nodes representing its senses. We propose a
variety of measures that analyze the connectivity of
graph structures, thereby identifying the most rele-
vant word senses. We assess their performance on
standard datasets, and show that the best measures
perform comparably to state-of-the-art.

1 Introduction

Word sense disambiguation (WSD), the ability to identify the
intended meanings of words (word senses) in context, is a
central research topic in Natural Language Processing. Sense
disambiguation is often characterized as an intermediate task,
which is not an end in itself, but essential for many applica-
tions requiring broad-coverage language understanding. Ex-
amples include machine translation [Vickrey et al., 2005], in-
formation retrieval [Stokoe, 2005], question answering [Ra-
makrishnan et al., 2003], and summarisation [Barzilay and
Elhadad, 1997].

Recent advances in WSD have beneﬁted greatly from the
availability of corpora annotated with word senses. Most
accurate WSD systems to date exploit supervised meth-
ods which automatically learn cues useful for disambigua-
tion from hand-labeled data. Although supervised approaches
outperform their unsupervised alternatives (see Snyder and
Palmer [2004] for an overview), they often require large
amounts of training data to yield reliable results [Yarowsky
and Florian, 2002], and their coverage is typically limited to
the words for which sense labeled data exist. Unfortunately,
creating sense tagged corpora manually is an expensive and
labor-intensive endeavor [Ng, 1997] which must be repeated
for new domains, languages, and sense inventories. Given
the data requirements for supervised WSD and the current
paucity of suitable data for many languages and text genres,
unsupervised approaches would seem to offer near-term hope
for large scale sense disambiguation.

Most unsupervised methods can be broadly divided in two
categories, namely graph-based ones and similarity-based
ones. Graph-based algorithms often consist of two stages
[Barzilay and Elhadad, 1997; Navigli and Velardi, 2005;

Mihalcea, 2005]. First, a graph is built representing all pos-
sible interpretations of the word sequence being disam-
biguated. Graph nodes correspond to word senses, whereas
edges represent dependencies between senses (e.g., syno-
mymy, antonymy). Next, the graph structure is assessed to
determine the importance of each node. Here, sense dis-
ambiguation amounts to ﬁnding the most “important” node
for each word. Similarity-based algorithms assign a sense to
an ambiguous word by comparing each of its senses with
those of the words in the surrounding context [Lesk, 1986;
McCarthy et al., 2004; Mohammad and Hirst, 2006]. The
sense whose deﬁnition has the highest similarity is assumed
to be the correct one. The algorithms differ in the type of
similarity measure they employ and the adopted deﬁnition
of context which can vary from a few words to the en-
tire corpus. In graph-based methods word senses are deter-
mined collectively by exploiting dependencies across senses,
whereas in similarity-based approaches each sense is deter-
mined for each word individually without considering the
senses assigned to neighboring words. Experimental com-
parisons between the two algorithm types [Mihalcea, 2005;
Brody et al., 2006] indicate that graph-based algorithms out-
perform similarity-based ones, often by a signiﬁcant margin.
In this paper we focus on graph-based methods for un-
supervised WSD and investigate in depth the role of graph
structure in determining WSD performance. Speciﬁcally, we
compare and contrast various measures of graph connectiv-
ity that assess the relative importance of a node within the
graph. Graph theory is abundant with such measures and
evaluations have been undertaken in the context of studying
the structure of a hyperlinked environment [Botafogo et al.,
1992] and within social network analysis [Hage and Harary,
1995]. Our experiments attempt to establish whether some of
these measures are particularly appropriate for graph-based
WSD. Such a comparative study is novel to our knowledge;
previous work restricts itself to a single measure which is
either devised speciﬁcally for WSD [Barzilay and Elhadad,
1997] or adopted from network analysis [Mihalcea, 2005;
Navigli and Velardi, 2005]. Our contributions are three-fold: a
general framework for graph-based WSD; an empirical com-
parison of a broad range of graph connectivity measures us-
ing standard evaluation datasets; and an investigation of the
inﬂuence of the sense inventory on the resulting graph struc-
ture and consequently on WSD.

In the following section, we brieﬂy introduce the graph-
based WSD algorithm considered in this paper. Then we
present and motivate several measures of graph connectivity
and explain how they are adapted to WSD. Next, we describe
our evaluation methodology and present our experimental re-
sults. We conclude the paper by discussing future work.

IJCAI-07

1683

2 Graph-based WSD

In order to isolate the impact of graph connectivity measures
on WSD, we devised a fairly general disambiguation algo-
rithm that has very few parameters and relies almost exclu-
sively on graph structure for inferring word senses. In com-
mon with much current work in WSD, we are assuming
that meaning distinctions are provided by a reference lexi-
con, which encodes for each word a discrete set of senses.
Although our experiments will use the WordNet sense inven-
tory [Fellbaum, 1998], neither our graph-based algorithm nor
the proposed connectivity measures are limited to this par-
ticular lexicon. Resources with alternative sense distinctions
and structure could also serve as input to our method.

We can view WordNet as a graph whose nodes are concepts
(represented by synsets (i.e., synonym sets)) and whose edges
are semantic relations between concepts (e.g., hypernymy,
meronymy). For each sentence we build a graph G = (V, E),
which is induced from the graph of the reference lexicon.
More formally, given a sentence σ = w1, w2, . . . , wn, where
wi is a word, we perform the following steps to construct G:

n(cid:2)

i=1

1. Initially, Vσ :=

Senses(wi), where Senses(wi) is

the set of senses of wi in WordNet; in other words, Vσ
represents all possible interpretations of sentence σ. We
set V := Vσ and E := ∅;

2. For each node v ∈ Vσ, we perform a depth-ﬁrst search
of the WordNet graph: every time we encounter a node
(cid:2) (cid:4)= v) along a path v → v1 → · · · → vk →
(cid:2) ∈ Vσ (v
v
(cid:2)
, we add all intermediate nodes and edges on the path
v
(cid:2)
: V := V ∪ {v1, . . . , vk} and E := E ∪
from v to v
(cid:2))}. For efﬁciency reasons, we allow
{(v, v1), . . . , (vk, v
paths of limited length (≤ 6 edges).

We thus obtain a subgraph of the entire lexicon which in-
cludes vertices reasonably useful for disambiguation: each
vertex is at distance ≤ 3 edges from some vertex in the orig-
inal set Vσ of word senses. Given a sentence σ, our aim is
to select for each word wi ∈ σ the most appropriate sense
∈ Senses(wi). The latter is determined by ranking each
Swi
vertex in the graph G according to its importance. In Section 3
we discuss several measures that operationalize importance
in graph-theoretic terms. Here, we will brieﬂy note that these
measures can be either local or global. Local measures cap-
ture the degree of connectivity conveyed by a single vertex in
the graph towards all other vertices, whereas global measures
estimate the overall degree of connectivity of the entire graph.
The choice of connectivity measure inﬂuences the selec-
tion process for the highest-ranked sense. Given a local mea-
sure l, and the set of vertices Vσ, we induce a ranking of the
(cid:2)) iff l(v) ≥
vertices rankl such that rankl(v) ≤ rankl(v
(cid:2)). Then, for each word wi ∈ σ, we select the best-ranking
l(v
sense in Senses(wi) according to rankl. A global measure g
characterizes the overall graph structure G and is thus not
particularly helpful in selecting a unique sense for ambigu-
ous words – G collectively represents all interpretations of σ.
We get around this problem, by applying g iteratively to each
interpretation of σ and selecting the highest scoring one. An
interpretation is a subgraph G
includes
one and only one sense of each word in sentence σ and all
their corresponding intermediate nodes (see step (2) above).
So if our sentence has ﬁve interpretations, we will measure
the connectivity of the resulting subgraphs ﬁve times.

(cid:2)
(cid:2) ⊆ G such that G

d

f

g

c

e

a

b

i

h

Figure 1: An example of a graph.

3 Connectivity Measures
In this section we describe the measures of graph connectiv-
ity we consider for unsupervised WSD. Although our mea-
sures can be applied to both directed and undirected graphs,
for WSD purposes we are assuming that we are dealing with
undirected graphs (we view an undirected edge as a pair of
directed edges). This is motivated by the fact that semantic
relations often have an inverse counterpart (e.g., hypernymy
is the inverse relation of hyponymy).

We next introduce the distance function d(u, v), which is

used by some of the measures discussed below:
length of shortest path if u ; v
K

d(u, v) =

otherwise

(cid:3)

where u ; v indicates the existence of a path from u to v,
and K is a conversion constant [Botafogo et al., 1992], which
replaces the ∞ distance with an integer when v is not reach-
able from u (we choose K = |V |, as the length of any simple
path is < |V |). As an example consider the graph in Figure 1
where d(a, i) = 5, d(c, g) = 4, and so on.

3.1 Local Measures
Local measures of graph connectivity determine the degree of
relevance of a single vertex v in a graph G. They can thus be
viewed as measures of the inﬂuence of a node over the spread
of information through the network. Formally, we deﬁne a
local measure l as:

l : V → [0, 1]

A value close to 1 indicates that a vertex is relatively impor-
tant, whereas a value close to 0 indicates that the vertex is
peripheral.

Several local measures of graph connectivity have been
proposed in the literature (see Wasserman and Faust [1994]
for a comprehensive overview). A large number rely on the
notion of centrality: a node is central if it is maximally con-
nected to all other nodes. In the following, we consider three
best-known measures of centrality, namely degree, closeness,
and betweeness [Freeman, 1979], and variations thereof. We
also show how graph connectivity can be computed by solv-
ing a max-ﬂow problem.

The simplest way to measure ver-
In-degree Centrality
tex importance is by its degree, i.e., the number of edges ter-
minating in a given vertex:

indeg(v) = |{(u, v) ∈ E : u ∈ V }|

A vertex is central, if it has a high degree. In-degree centrality
is the degree of a vertex normalized by the maximum degree:

CD(v) = indeg(v)
|V |−1

So, according to the graph in Figure 1, CD(a) = 1
CD(e) = CD(h) = 3

8 , and CD(c) = 2
8 .

8 , CD(d) =

IJCAI-07

1684

A more sophisticated version of
Eigenvector Centrality
degree centrality is eigenvector centrality. Whereas the for-
mer gives a simple count of the number of connections a
vertex has, the latter acknowledges that not all connections
are equal. It assigns relative scores to all nodes in the graph
based on the principle that connections to nodes having a
high score contribute more to the score of the node in ques-
tion [Bonacich, 1972]. PageRank [Brin and Page, 1998] and
HITS [Kleinberg, 1998] are popular variants of the eigenvec-
tor centrality measure and have been almost exclusively used
in graph-based WSD [Mihalcea, 2005; Navigli and Velardi,
2005].

d

f

1/1

0/1

1/1

c

0 / 1

0/1

e

1/1

b

0/1

a

g

1
/
1

h

0/1

i

Figure 2: The maximum ﬂow between nodes e and g (edges
are labeled with the pair ﬂow/capacity).

PageRank determines the relevance of a node v recursively
based on a Markov chain model. All nodes that link to v
contribute towards determining its relevance. Each contribu-
tion is given by the page rank value of the respective node
(P R(u)) divided by the number of its neighbors:
P R(u)

(cid:4)

P R(v) = (1−α)

|V | + α

outdegree(u)

(u,v)∈E

The overall contribution is weighted with a damping factor
α, which implements the so-called random surfer model: with
probability 1−α, the random surfer is expected to discontinue
the chain and select a random node (i.e., page), each with
relevance

1
|V | .

In contrast, HITS (Hypertext Induced Topic Selection) de-
termines two values for each node v, the authority (a(v)) and
the hub value (h(v)). These are deﬁned in terms of one an-
other in a mutual recursion:
a(u)

h(v) =

a(v) =

(cid:4)

(cid:4)

h(u)

;

u:(u,v)∈E

u:(v,u)∈E

Intuitively, a good hub is a node that points to many good
authorities, whereas a good authority is a node that is pointed
to by many good hubs. A major difference between HITS and
PageRank is that the former is computed dynamically on a
subgraph of relevant pages, whereas the latter takes the entire
graph structure into account.

If we apply HITS to the graph in Figure 1, we get the fol-
lowing authority values: a(d) = 0.484, a(e) = 0.435, a(b) =
0.404, . . . , a(a) = 0.163, a(i) = 0.132. The PageRank val-
ues are P R(d) = P R(e) = P R(b) = P R(d) = 0.15,
P R(f ) = P R(g) = P R(c) = 0.1, and P R(i) = P R(a) =
0.05. While HITS yields a ﬁne-grained ranking, PageRank
delivers only three different ranks, ranging from central to
peripheral. Notice that, since our graphs are undirected, the
authority and hub values coincide.
KPP is similar to the better
Key Player Problem (KPP)
known closeness centrality measure1 [Freeman, 1979]. Here,
a vertex is considered important if it is relatively close to all
other vertices [Borgatti, 2003]:

(cid:4)

1

d(u, v)

KP P (v) =

u∈V :u(cid:4)=v

|V |−1

where the numerator is the sum of the inverse shortest dis-
tances between v and all other nodes and the denomina-
tor is the number of nodes in the graph (excluding v).

1Closeness centrality is deﬁned as the total geodesic distance
from a given node to all other nodes. We consider only KPP since it
outperformed closeness centrality in our experiments.

For example, the KPP for nodes a and f in Figure 1 is
KP P (a) = 1+ 1
= 0.40 and KP P (f ) =

+ 1

+ 1

+ 1

2

2

3

5

5

4

4

+ 1

+ 1

+ 1
8
= 0.53, respectively.

1+1+ 1

2

+ 1

2

+ 1

3

+ 1

3

+ 1

4

+ 1
8

3

The betweenness of vertex v is
Betweenness Centrality
calculated as the fraction of shortest paths between node pairs
that pass through v [Freeman, 1979]. Formally, betweenness
is deﬁned as:

betweenness(v) =

(cid:4)

σst(v)
σst

s,t∈V :s(cid:4)=v(cid:4)=t

where σst is the number of shortest paths from s to t, and
σst(v) the number of shortest paths from s to t that pass
through vertex v. We normalize by dividing betweenness(v)
by the maximum number of node pairs excluding v:

CB(v) = betweenness(v)
(|V |−1)(|V |−2)

The intuition behind betweenness is that a node is important
if it is involved in a large number of paths compared to the
total set of paths. With reference to Figure 1, the pairs of ver-
tices (x, g) and (g, x), with x ∈ {a, b, c, d, e}, are connected
by two possible shortest paths, including either f or h as an
intermediate vertex. Thus, σxg = σgx = 2 and σxg(f ) =
σgx(f ) = 1. We can now calculate betweenness(f ) =
10 · 1

2 = 5 and CB(f ) = 5

8·7 = 5
56 .

Let G = (V, E) be a connected graph,
Maximum Flow
and let c : E → R be a capacity function such that every edge
(u, v) ∈ E is associated with capacity c(u, v). We further
distinguish two vertices, the source s and the sink t. Finally,
let f : V × V → R be a function called ﬂow.

Given an s-t-cut (S, T ), i.e., a partition of V into two dis-
joint sets S and T , such that s ∈ S and t ∈ T , the s-t-ﬂow of
the cut represents the amount of information that can be con-
veyed from s to t through the cut while obeying all capacity
constraints. It is deﬁned as:
f (S, T ) =

f (u, v)

(cid:4)

u∈S,v∈T

The maximum s-t-ﬂow of a graph G has the highest value
among all s-t-cuts. For example, if we ﬁx e as the source
and g as the sink (or viceversa) in the graph in Figure 2, the
maximum ﬂow that can be conveyed equals to the sum of the
maximum ﬂows f (f, g) + f (e, h) = 1 + 1 = 2. This ﬂow
is determined by taking into account the paths e → f → g
and e → h → g. In fact, Menger’s theorem states that the
maximum s-t-ﬂow in undirected graphs corresponds to the
number of independent paths between a pair of vertices.

In the context of WSD, maximum s-t-ﬂows provide a
relevance ranking on the set of vertices: the more ﬂow is

IJCAI-07

1685

conveyed from s to t, the more relevant the sink is. Ini-
tially, the capacity of each edge (u, v) ∈ E is set to 1 and
its ﬂow f (u, v) to 0. To compute an overall score for each
vertex, we execute the following steps:

score(t) := score(t) + max s-t-ﬂow

∀v ∈ V score(v) := 0
∀s, t ∈ V , s (cid:4)= t, do

∀v ∈ V , do

score(v) :=

score(v)

score(u)

max
u∈V

The resulting score for each vertex v ∈ V is the sum of the
maximum ﬂows having v as a sink normalized by the max-
imum score. If G is disconnected, we do not need to apply
the algorithm separately to each connected component, since
the maximum ﬂow between s and t is 0 if t is not reach-
able from s. We calculate the maximum ﬂow with the Ford-
Fulkerson [1962] algorithm based on the notion of augment-
ing paths. We adopted Edmonds and Karp’s [1972] efﬁcient
implementation.

3.2 Global Measures
Global connectivity measures are concerned with the struc-
ture of the graph as a whole rather than with individual nodes.
Here we discuss three well-known measures, namely com-
pactness, graph entropy, and edge density.

This measure represents the extent of
Compactness
cross referencing in a graph [Botafogo et al., 1992]: when
compactness is high, each vertex can be easily reached from
other vertices. The measure is deﬁned as:

(cid:4)

(cid:4)

M ax−

d(u, v)

CO(G) =

v∈V

u∈V
M ax−M in

where M ax = K ·|V |(|V |−1) is the maximum compactness
(i.e., for a disconnected graph) and M in = |V |(|V | − 1) is
the minimum compactness (i.e., for a fully connected graph).
The compactness of the graph in Figure 1 is: CO(G) =
(9·9·8)−176
(9·9·8)−(9·8) = 472
576 = 0.819 (in this example, K = |V | = 9).

Entropy measures the amount of infor-
Graph Entropy
mation (or alternatively uncertainty) in a random variable. In
graph-theoretic terms, high entropy indicates that many ver-
tices are equally important, whereas low entropy indicates
that only a few vertices are relevant. We deﬁne a simple mea-
sure of graph entropy as:

(cid:4)

H(G) = −
(cid:5)

v∈V

(cid:6)

p(v)log(p(v))

2|E|

indeg(v)

where the vertex probability p(v) is determined by the de-
. To obtain a measure with a
gree distribution
[0, 1] range, we divide H(G) by the maximum entropy given
by log|V |. For example, the distribution associated with the
2
graph in Figure 1 is: ( 1
1
2
20 ) lead-
20 ,
20 ,
20 ,
ing to an overall graph entropy H(G) = 3.07
log 9 = 0.969.

3
20 ,

3
20 ,

3
20 ,

3
20 ,

2
20 ,

v∈V

Finally, we propose the use of edge den-
Edge Density
sity as a simple global connectivity measure. Edge density
is calculated as the ratio of edges in a graph over the num-
ber of edges of a complete graph with |V | vertices (given by
2 ·

(cid:7)

(cid:8)

). Formally:

|V |
2

ED(G) = |E(G)|
2·(|V |
2 )

For example,
ED(G) = 10
2·(9
2)

the graph in Figure 1 has edge density
= 10

72 = 0.138.

4 Experimental Setup

The graph connectivity measures just
Sense inventory
described were incorporated in the disambiguation algorithm
introduced in Section 2. As explained earlier, disambigua-
tion proceeds on a sentence-by-sentence basis. Each sentence
is represented by a graph corresponding to meaning distinc-
tions provided by a reference lexicon. In our experiments
we employed two such lexicons. The ﬁrst is WordNet 2.0
[Fellbaum, 1998], a resource commonly used in WSD re-
search (see Snyder and Palmer [2004]). We also used an ex-
tended version of WordNet created by Navigli [2005]. The
latter contains additional semantic relatedness edges (approx-
imately 60,000) that relate associated concepts across parts
of speech (e.g., dog and bark, drink and glass). These were
automatically extracted from collocation resources (e.g., Ox-
ford Collocations, Longman Language Activator) and semi-
automatically disambiguated.

We selected two standard data sets for evaluat-
Data
ing our connectivity measures, namely the SemCor corpus
[Miller et al., 1993] and the Senseval-3 English all-words
test set [Snyder and Palmer, 2004]. SemCor is a subset of
the Brown corpus, and includes more than 200,000 content
words manually tagged with WordNet senses. Senseval-3 is a
subset of the Penn Treebank corpus and contains 2,081 con-
tent words, again labeled with WordNet senses. We exhaus-
tively tested our measures on the SemCor dataset. The best
performing one was also evaluated on Senseval-3 and com-
pared with state-of-the-art.

In order to speed up the graph con-
Graph construction
struction process, all paths connecting pairs of senses in
both versions of WordNet were exhaustively enumerated and
stored in a database which was consulted at run-time during
disambiguation. Unfortunately, the use of global connectivity
measures makes our WSD algorithm susceptible to combina-
torial explosion, since all possible interpretations of a given
sentence must be ranked (see Section 2). We used simulated
annealing to heuristically explore the entire space of interpre-
tations for a given sentence [Cowie et al., 1992].

Our graph-based algorithm
Baseline and Upper Bound
was compared against a naive baseline that selects a sense
for each word at random. As an upper bound, we used the
ﬁrst-sense heuristic which assigns all instances of an am-
biguous word its most frequent sense according to the man-
ually annotated SemCor. It is important to note that current
unsupervised WSD approaches—and also many supervised
ones—rarely outperform this simple heuristic [McCarthy et
al., 2004].

5 Results

Our results on SemCor are summarized in Table 1. We report
performance solely on polysemous words, i.e., words with
more than one WordNet sense.

Let us ﬁrst concentrate on the results we obtained with
the standard WordNet inventory. As can be seen, almost all
measures perform better than the random sense baseline. The

IJCAI-07

1686

WordNet

EnWordNet

F1

Prec Rec

Prec Rec
F1
Measure
23.7 23.7 23.7 23.7 23.7 23.7
Baseline
35.3 24.0 28.6 44.2 37.0 40.3
InDegree
38.4 15.5 22.1 45.0 31.1 36.8
Betweenness
31.8 31.8 31.8 40.5 40.5 40.5
KPP
31.7 17.2 22.3 39.4 31.1 34.8
HITS
35.3 24.0 28.6 44.0 36.8 40.0
PageRank
33.0 24.3 28.0 41.8 35.2 38.2
Maxﬂow
Compactness
29.8 27.9 28.8 36.3 35.5 35.9
GraphEntropy 30.3 28.4 29.4 30.9 30.2 30.5
EdgeDense
29.9 27.9 28.9 35.6 34.6 35.1
68.8 68.8 68.8 68.8 68.8 68.8
UpperBnd

l
a
c
o
L

l
a
b
o
l
G

100

90

80

70

60

50

40

30

20

)

%
(
e
r
u
s
a
e
m
1
F

1

1

-

0

1

2

-

1

1

2

3

-

3

4

4

5

-

-

3

3

2
2
1
NumberofedgesinenrichedWordNet

4

4

5

6

7

9

-

5

-

3

-

6

1

-

7

1

4
1

1

-

5

7
4

4
1

0

0 2

0

0

2

-

8

5

6

6

7

2

9

Table 1: Performance of connectivity measures on SemCor.

Figure 3: Performance of KPP by number of edges.

2

2

differences are signiﬁcant both in terms of precision and re-
test). HITS and Betweenness yield signiﬁ-
call (using a χ
cantly better precision but worse recall. The best performing
local measure is KPP (F1 31.8%), whereas the best perform-
ing global measure is graph entropy (F1 29.4%). KPP is sig-
niﬁcantly better than graph entropy both in terms of preci-
sion and recall (again using a χ
test). We conjecture that
the inferior performance of the global measures is due to
the use of a heuristic algorithm for searching the interpre-
tation space. Interestingly, PageRank yields signiﬁcantly bet-
ter recall and precision than HITS. We attribute the differ-
ence in performance to the fact that PageRank implements
the random surfer model. Finally, note that a relatively sim-
ple measure like InDegree performs as well as PageRank (F1
is 28.6% for both measures). This is not entirely surprising.
The PageRank value of a node is proportional to its degree in
undirected graphs. Furthermore, research on directed graphs
has experimentally shown that the two measures are broadly
equivalent [Upstill et al., 2003].

We now turn to the performance of the different measures
when the enriched WordNet (EnWordNet) is used. Here we
also observe that all measures are signiﬁcantly better than the
baseline (in terms of precision and recall). The best perform-
ing global measure is Compactness (F1 35.9%). The best lo-
cal measures are InDegree, KPP and PageRank (F1 is around
40%). KPP performs consistently well with WordNet and its
enriched version. All three local measures achieve signiﬁ-
cantly better precision and recall than Compactness. It seems
that local measures beneﬁt from a denser reference lexicon,
with a large number of semantic relations, whereas global
measures are disadvantaged due to the combinatorial explo-
sion problem discussed above. To further substantiate this, we
analyzed how KPP’s performance varies when an increasing
number of edges is considered for disambiguation. Figure 3
shows that F1 increases when a sense has a large number
of edges. In fact, when more than 200 edges are taken into
account, KPP obtains an F1 of 85%. Notice that we are ex-
cluding unambiguous words and that there are at least 1,500
occurrences of word senses in the SemCor corpus for each
interval in the graph.

We next assess how KPP performs on the Senseval-3 En-
glish all-words test set when using the enriched WordNet. We
also compare our results with the best unsupervised system
that took part in the Senseval-3 competition2. The latter is

2See http://www.senseval.org/senseval3 for de-

tails on the competition and participating systems.

Measure

KPP

IRST-DDD

Part of speech Prec Rec
Nouns
Adjectives
Verbs
Nouns
Adjectives
Verbs

F1
61.9 61.9 61.9
62.8 62.8 62.8
36.1 36.1 36.1
63.3 61.2 62.2
68.2 65.6 66.9
51.6 49.2 50.4

Table 2: Results on the Senseval-3 all words task by part of
speech.

a similarity-based algorithm. It was developed by Strappar-
ava et al. [2004] and performs domain driven disambigua-
tion (IRST-DDD). The approach compares the domain of the
context surrounding the target word with the domains of its
senses and uses a version of WordNet augmented with do-
main labels (e.g., economy, geography). Table 2 shows how
performance varies across parts of speech.3 KPP performs
comparably to IRST-DDD for nouns and adjectives (the dif-
ferences in recall and precision are not statistically signiﬁ-
cant). IRST-DDD yields signiﬁcantly better results for verbs.
This can be explained by the fact that the enriched WordNet
contains a signiﬁcantly smaller number of relatedness edges
for verbs than for nouns or adjectives and this impacts the
performance of KPP. Also note that our experiments focused
primarily on graph connectivity measures. Consequently, we
employed a relatively generic WSD algorithm (see Section 2)
without additional tuning. For instance we could obtain im-
proved results by considering word sequences larger than sen-
tences or by weighting edges according to semantic impor-
tance (e.g., hypernymy is more important than meronymy).

6 Conclusions

In this paper we presented a study of graph connectivity mea-
sures for unsupervised WSD. We evaluated a wide range of
local and global measures with the aim of isolating those that
are particularly suited for this task. Our results indicate that
local measures yield better performance than global ones. The
best local measures are KPP, InDegree, and PageRank. KPP
has a slight advantage over the other two measures, since it
performs consistently well across experimental conditions.
Our results are in agreement with Borgatti [2003] who shows

3F1 scores here are higher than those reported in Table 1. This is
expected since the Senseval-3 data set contains monosemous words
as well.

IJCAI-07

1687

in the context of social network analysis that KPP is better
than other measures (e.g., betweeness or in-degree central-
ity) at identifying which node in the graph is maximally con-
nected to all other nodes. In linguistic terms this means that
KPP selects maximally cohesive nodes which typically cor-
respond to topical senses, thus indirectly enforcing the one-
sense per discourse constraint. We also ﬁnd that the employed
reference dictionary critically inﬂuences WSD performance.
We obtain a large F1 improvement (8.7% for KPP, 11.4% for
InDegree) when adopting a version of WordNet enriched with
thousands of relatedness edges. Interestingly, we observe that
Indegree and PageRank yield performances comparable to
KPP when the enriched WordNet is used. This is due to the
increased number of relatedness edges which result in more
densly connected graphs with more outgoing edges for ev-
ery node. Centrality-based measures are particularly suited at
identifying such nodes.

Beyond the speciﬁc WSD algorithm presented in this pa-
per, our results are relevant for other graph-based approaches
to WSD [Mihalcea, 2005; Navigli and Velardi, 2005]. Our
experiments indicate that performance could potentially in-
crease when the right connectivity measure is chosen. The
proposed measures are independent of the adopted reference
lexicon and the graph construction algorithm. They induce a
sense ranking solely by considering graph connectivity and
can thus be easily ported across algorithms, languages, and
sense inventories.

An important future direction lies in combining the dif-
ferent measures in a uniﬁed framework. Notice in Table 1
that certain measures yield high precision (e.g., Betweeness)
whereas others yield high recall (e.g., KPP). We will also
evaluate the impact of KPP in other applications such as
graph-based summarization and the recognition of entailment
relations.

References
[Barzilay and Elhadad, 1997] Regina Barzilay and Michael El-
hadad. Using lexical chains for text summarization. In Proceed-
ings of the ACL Workshop on Intelligent Scalable Text Summa-
rization, pages 10–17, Madrid, Spain, 1997.

[Bonacich, 1972] B. P. Bonacich.

Factoring and weighing ap-
proaches to status scores and clique identiﬁcation. Journal of
Mathematical Sociology, 2:113–120, 1972.

[Borgatti, 2003] Stephen P. Borgatti. Identifying sets of key players
in a network. In Proceedings of the Conference on Integration
of Knowledge Intensive Multi-Agent Systems, pages 127–131,
Boston, USA, 2003.

[Botafogo et al., 1992] Rodrigo A. Botafogo, Ehud Rivlin, and Ben
Shneiderman. Structural analysis of hypertexts: Identifying hier-
archies and useful metrics. ACM Transactions on Information
Systems, 10(2):142–180, 1992.

[Brin and Page, 1998] Sergey Brin and Michael Page. Anatomy of
a large-scale hypertextual web search engine. In Proceedings of
the 7th Conference on World Wide Web, pages 107–117, Bris-
bane, Australia, 1998.

[Brody et al., 2006] Samuel Brody, Roberto Navigli, and Mirella
Lapata. Ensemble methods for unsupervised WSD. In Proceed-
ings of the ACL/COLING, Sydney, Australia, 2006.

[Cowie et al., 1992] Jim Cowie, Joe Guthrie, and Louise Guthrie.
Robust textual inference via graph matching. In Proceedings of
the 14th COLING, pages 359–365, Nantes, France, 1992.

[Edmonds and Karp, 1972] J. Edmonds and R. M. Karp. Theo-
retical improvements in algorithmic efﬁciency for network ﬂow
problems. Journal of the ACM, 19(2):248–264, 1972.

[Fellbaum, 1998] Christiane Fellbaum, editor. WordNet: an Elec-

tronic Lexical Database. MIT Press, 1998.

[Ford and Fulkerson, 1962] Lestor R. Ford and D. R. Fulkerson.

Flows in Networks. Princeton University Press, 1962.

[Freeman, 1979] L C. Freeman. Centrality in networks: I. concep-

tual clariﬁcation. Social Networks, 1:215–239, 1979.

[Hage and Harary, 1995] P. Hage and F. Harary. Eccentricity and

centrality in networks. Social Networks, 13:57–63, 1995.

[Kleinberg, 1998] Jon M. Kleinberg. Authoritative sources in a hy-
perlinked environment.
In Proceedings of the 9th ACM-SIAM
Symposium on Discrete Algorithms, pages 668–677, San Fran-
cisco, California, 1998.

[Lesk, 1986] Michael Lesk. Automatic sense disambiguation using
machine readable dictionaries: How to tell a pine cone from an
ice cream cone. In Proceedings of the 5th SIGDOC, pages 24–26,
New York, NY, 1986.

[McCarthy et al., 2004] Diana McCarthy, Rob Koeling,

Julie
Weeds, and John Carroll. Finding predominant senses in un-
tagged text.
In Proceedings of the 42nd ACL, pages 280–287,
Barcelona, Spain, 2004.

[Mihalcea, 2005] Rada Mihalcea. Unsupervised large-vocabulary
word sense disambiguation with graph-based algorithms for se-
quence data labeling. In Proceedings of the HLT/EMNLP, pages
411–418, Vancouver, BC, 2005.

[Miller et al., 1993] George Miller, Claudia Leacock, Tengi
Randee, and Ross Bunker. A semantic concordance.
In Pro-
ceedings of the 3rd DARPA Workshop on HLT, pages 303–308,
Plainsboro, New Jersey, 1993.

[Mohammad and Hirst, 2006] Saif Mohammad and Graeme Hirst.
Determining word sense dominance using a thesaurus. In Pro-
ceedings of the 11th EACL, pages 121–128, Trento, Italy, 2006.
[Navigli and Velardi, 2005] Roberto Navigli and Paola Velardi.
Structural semantic interconnections: a knowledge-based ap-
proach to word sense disambiguation. IEEE Transactions on Pat-
tern Analysis and Machine Intelligence, 27(7):1075–1088, 2005.
Semi-automatic extension of
large-scale linguistic knowledge bases.
In Proceedings of the
18th FLAIRS, pages 548–553, Clearwater Beach, Florida, 2005.
[Ng, 1997] Tou Hwee Ng. Getting serious about word sense disam-
biguation. In Proceedings of the ACL SIGLEX Workshop on Tag-
ging Text with Lexical Semantics: Why, What, and How?, pages
1–7, Washington, DC, 1997.

[Navigli, 2005] Roberto Navigli.

[Ramakrishnan et al., 2003] Ganesh Ramakrishnan, Apurva Jad-
hav, Ashutosh Joshi, Soumen Chakrabarti, and Pushpak Bhat-
tacharyya. Question answering via bayesian inference on lexical
relations. In Proceedings of the ACL Workshop on Multilingual
Summarization and Question Answering, pages 1–10, Sapporo,
Japan, 2003.

[Snyder and Palmer, 2004] Benjamin Snyder and Martha Palmer.
the ACL

The English all-words task.
SENSEVAL-3 Workshop, pages 41–43, Barcelona, Spain, 2004.

In Proceedings of

[Stokoe, 2005] Christopher Stokoe. Differentiating homonymy
In Proceedings of the

and polysemy in information retrieval.
HLT/EMNLP, pages 403–410, Vancouver, BC, 2005.

[Strapparava et al., 2004] Carlo Strapparava, Alﬁo Gliozzo, and
Claudio Giuliano. Pattern abstraction and term similarity for
word sense disambiguation: Irst at senseval-3.
In Proceedings
of the ACL SENSEVAL-3 Workshop, pages 229–234, Barcelona,
Spain, 2004.

[Upstill et al., 2003] Trystan Upstill, Nick Craswell, and David
Hawking. Predicting fame and fortune: Pagerank or indegree?
In Proceedings of the Australasian Document Computing Sym-
posium, Canberra, Australia, 2003.

[Vickrey et al., 2005] David Vickrey, Luke Biewald, Marc Teyssier,
and Daphne Koller. Word-sense disambiguation for machine
translation. In Proceedings of the HLT/EMNLP, pages 771–778,
Vancouver, BC, 2005.

[Wasserman and Faust, 1994] Stanley Wasserman and Kathernie
Social Network Analysis: Methods and Applications.

Faust.
Cambridge University Press, Cambridge, UK, 1994.

[Yarowsky and Florian, 2002] David Yarowsky and Radu Flo-
rian. Evaluating sense disambiguation across diverse parameter
spaces. Natural Language Engineering, 9(4):293–310, 2002.

IJCAI-07

1688

