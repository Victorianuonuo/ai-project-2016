Propositional Argumentation and Causal Reasoning

Alexander Bochman

Computer Science Department,

Holon Academic Institute of Technology, Israel

e-mail: bochmana@hait.ac.il

Abstract

The paper introduces a number of propositional
argumentation systems obtained by gradually ex-
tending the underlying language and associated
monotonic logics. An assumption-based argumen-
tation framework [Bondarenko et al., 1997] will
constitute a special case of this construction.
In
addition, a stronger argumentation system in a full
classical language will be shown to be equivalent
to a system of causal reasoning [Giunchiglia et al.,
2004]. The implications of this correspondence for
the respective nonmonotonic theories of argumen-
tation and causal reasoning are discussed.

Introduction

1
In this study we will demonstrate, among other things, that
two relatively recent approaches to nonmonotonic reasoning,
namely argumentation theory [Dung, 1995b; Bondarenko
et al., 1997] and a theory of causal nonmonotonic reason-
ing [McCain and Turner, 1997; Giunchiglia et al., 2004;
Bochman, 2003b; 2004a] are actually ‘two faces of the same
coin’. The common basis of these formalisms is a notion of
explanation, which takes the form of an attack relation in the
argumentation theory, and a causal relation in the theory of
causal reasoning. It will be shown that, at some level of gen-
eralization, these two relations will be directly interdeﬁnable.
Both the argumentation theory and theory of causal non-
monotonic reasoning have proved to be powerful frameworks
for representing different kinds of nonmonotonic reasoning,
including traditional nonmonotonic logics, logic program-
ming, abduction and reasoning about actions and change. The
present study should hopefully provide a basis for clarifying
the representation capabilities of these formalisms, and a step
toward a uniﬁed theory of nonmonotonic reasoning.

Another objective of this study consists in a systematic de-
velopment of a propositional approach to argumentation, in
which arguments are represented as (special kinds of) propo-
sitions. This approach will naturally lead us to developing
[Ches˜nevar et
the underlying logics of argumentation (cf.
al., 2000; Prakken and Vreeswijk, 2001]) and their associ-
ated semantics. As will be shown, the resulting argumen-
tation systems will directly represent a number of important
nonmonotonic formalisms.

The plan of the paper is as follows. We introduce ﬁrst an
abstract argumentation theory, and describe its four-valued
semantics based on acceptance and rejection of arguments.
Adding a ‘global’ negation to this language will give us a
formalism that generalizes the assumption-based argumenta-
tion framework from [Bondarenko et al., 1997]. Then we
describe an alternative extension of the argumentation theory
to the full classical propositional language. A special case
of the latter formalism will be shown to be equivalent to a
system of causal reasoning. Finally, we will consider the cor-
respondence between argumentation and causal reasoning on
the level of their associated nonmonotonic semantics.

2 Collective argumentation
As a general formal basis of argumentation theory, we will
adopt the formalism of collective argumentation suggested in
[Bochman, 2003a] as a ‘disjunctive’ generalization of Dung’s
argumentation theory. In this formalism, a primitive attack
relation holds between sets of arguments: in the notation in-
troduced below, a ֒→ b says that a set a of arguments attacks
a set of arguments b. This fact implies, of course, that these
two sets arguments are incompatible. a ֒→ b says, however,
more than that, namely that the set of arguments a, being ac-
cepted, provides a reason, or explanation, for rejection of the
set of arguments b. Accordingly, the attack relation will not
in general be symmetric, since acceptance of b need not give
reasons for rejection of a. In addition, the attack relation is
not reducible to attacks between individual arguments. For
instance, we can disprove some conclusion jointly supported
by a disputed set of arguments, though no particular argument
in the set, taken alone, could be held responsible for this.

In what follows, a, b, c, . . . will denote ﬁnite sets of ar-
guments, while u, v, w, . . . arbitrary such sets. We will use
the same agreements for the attack relation as for usual con-
sequence relations. Thus, a, a1 ֒→ b, B will have the same
meaning as a ∪ a1 ֒→ b ∪ {B}, etc.
Deﬁnition 2.1. Let A be a set of arguments. A (collective)
attack relation is a relation ֒→ on ﬁnite sets of arguments sat-
isfying the following postulate:
Monotonicity

If a ֒→ b, then a, a1 ֒→ b, b1.

Though deﬁned primarily on ﬁnite sets of arguments, the
attack relation will be extended to arbitrary such sets by im-
posing the compactness requirement: for any u, v ⊆ A,

(Compactness) u ֒→ v if and only if a ֒→ b, for some ﬁnite
a ⊆ u, b ⊆ v.

The original Dung’s argumentation theory [Dung, 1995b]
can be seen as a special case of collective argumentation that
satisﬁes additional properties (cf. [Kakas and Toni, 1999]):
Deﬁnition 2.2. An attack relation is normal if no set of argu-
ments attacks ∅, and the following condition is satisﬁed:
(Locality) If a ֒→ b, b1, then either a ֒→ b, or a ֒→ b1.

For a normal attack, a ֒→ b holds iff a ֒→ A, for some A∈b.
As was shown in [Bochman, 2003a], the resulting argumen-
tation theory coincides with that given in [Dung, 1995a].

By an argument theory we will mean an arbitrary set of at-
tacks a ֒→ b between sets of arguments. Any argument theory
∆ generates a unique least attack relation that we will denote
by ֒→∆. The latter can be described directly as follows:

u ֒→∆ v iff a ֒→ b ∈ ∆, for some a ⊆ u, b ⊆ v.

It can be easily veriﬁed that an attack relation is normal if
and only if it is generated in this sense by an argument theory
consisting only of attack rules of the form a ֒→ A.

2.1 Four-valued semantics
Collective argumentation can be given a four-valued seman-
tics that will be instructive in describing the meaning of the
attack relation. This semantics stems from the following un-
derstanding of an attack a ֒→ b:

If all arguments in a are accepted, then at least one
of the arguments in b should be rejected.

The argumentation theory does not impose, however, the
classical constraints on acceptance and rejection of argu-
ments, so an argument can be both accepted and rejected, or
neither accepted, nor rejected. Such an understanding can be
captured formally by assigning any argument a subset of the
set {t, f }, where t denotes acceptance (truth), while f de-
notes rejection (falsity). This is nothing other than the well-
known Belnap’s interpretation of four-valued logic (see [Bel-
nap, 1977]). As a result, collective argumentation acquires a
natural four-valued semantics described below.
Deﬁnition 2.3. An attack a ֒→ b will be said to hold in a four-
valued interpretation ν of arguments, if either t /∈ ν(A), for
some A ∈ a, or f ∈ ν(B), for some B ∈ b.

An interpretation ν will be called a model of an argument

theory ∆ if every attack from ∆ holds in ν.

Since an attack relation can be seen as a special kind of
an argument theory, the above deﬁnition determines also the
notion of a model for an attack relation.

For a set I of four-valued interpretations, we will denote
by ֒→I the set of all attacks that hold in each interpretation
from I. Then the following result is actually a representation
theorem showing that the four-valued semantics is adequate
for collective argumentation (see [Bochman, 2003a]).
Theorem 2.1.
֒→I, for some set of four-valued interpretations I.

֒→ is an attack relation iff it coincides with

2.2 Assumption-based argumentation
The notion of an argument is often taken as primitive in ar-
gumentation theory, which allows for a possibility of consid-
ering arguments that are not propositional in character (e.g.,
arguments as inference rules, or derivations). As has been
shown in [Bondarenko et al., 1997], however, a powerful ver-
sion of argumentation theory can be obtained by identifying
arguments with propositions of a special kind called assump-
tions1. This representation can be reﬁned further to a full-
ﬂedged theory of propositional argumentation in a certain
well-deﬁned propositional language.

Let us extend the language of arguments with a negation

connective ∼ having the following semantic interpretation:

∼A is accepted iff A is rejected
∼A is rejected iff A is accepted.

The connective ∼ will be called a global negation, since
it switches the evaluation contexts between acceptance and
rejection. An axiomatization of this connective in argumen-
tation theory can be obtained by imposing the following rules
on the attack relation (see [Bochman, 2003a]):

A ֒→ ∼A

∼A ֒→ A

If a ֒→ A, b and a, ∼A ֒→ b, then a ֒→ b
If a, A ֒→ b and a ֒→ b, ∼A, then a ֒→ b

(AN)

Attack relations satisfying the above postulates will be
called N-attack relations. It turns out that the latter are in-
terdeﬁnable with certain consequence relations.

A Belnap consequence relation in a propositional language
with a global negation ∼ is a Scott (multiple-conclusion) con-
sequence relation (cid:13) satisfying the postulates
(Reﬂexivity)
(Monotonicity) If a (cid:13) b and a ⊆ a′, b ⊆ b′, then a′ (cid:13) b′;
(Cut) If a (cid:13) b, A and a, A (cid:13) b, then a (cid:13) b,
as well as the following Double Negation rules for ∼:

A (cid:13) A;

A (cid:13) ∼∼A

∼∼A (cid:13) A.

For any set u of propositions, we will denote by ∼u the set
{∼A | A ∈ u}. Now, for a given N-attack relation, we can
deﬁne the following consequence relation:

a (cid:13) b ≡ a ֒→ ∼b

(CA)

Similarly, for any Belnap consequence relation we can de-

ﬁne the corresponding attack relation as follows:

a ֒→ b ≡ a (cid:13) ∼b

(AC)
As has been shown in [Bochman, 2003a], the above def-
initions establish an exact equivalence between N-attack re-
lations and Belnap consequence relations. This correspon-
dence allows us to represent an assumption-based argumen-
tation framework from [Bondarenko et al., 1997] entirely in
the framework of attack relations.

Slightly changing the deﬁnitions from [Bondarenko et al.,
1997], an assumption-based argumentation framework can

1See also [Kowalski and Toni, 1996].

deﬁned as a triple consisting of an underlying deductive sys-
tem (including the current set of beliefs), a distinguished sub-
set of propositions Ab called assumptions, and a mapping
from Ab to the set of all propositions of the language that
determines the contrary A of any assumption A.

Now, the underlying deductive system can be expressed
directly in the framework of N-attack relations by identify-
ing deductive rules a ⊢ A with attacks of the form a ֒→ ∼A.
Furthermore, the global negation ∼ can serve as a faithful
logical formalization of the operation of taking the contrary.
More precisely, given an arbitrary language L that does not
contain ∼, we can deﬁne assumptions as propositions of the
form ∼A, where A ∈ L. Then, since ∼ satisﬁes double nega-
tion, a negation of an assumption will be a proposition from
L. Moreover, such a ‘negative’ representation of assumptions
will agree with the applications of the argumentation theory
to other nonmonotonic formalisms, described in [Bondarenko
et al., 1997]. Accordingly, N-attack relations can be seen as
a proper generalization of the assumption-based framework.

3 Classical propositional argumentation
Taking seriously the idea of propositional argumentation, it is
only natural to make a further step and extend the underlying
language of arguments to a full classical propositional lan-
guage. The latter step should be coordinated, however, with
the inherently four-valued nature of an attack relation. And
the way to do this amounts to requiring that the relevant clas-
sical connectives should behave in a usual classical way with
respect to both acceptance and rejection of arguments.

As a ﬁrst connective of this kind, we introduce the con-
junction connective ∧ on arguments that is determined by the
following familiar semantic conditions:

A ∧ B is accepted iff A is accepted and B is accepted

A ∧ B is rejected iff A is rejected or B is rejected

As can be seen, ∧ behaves as an ordinary classical conjunc-
tion with respect to acceptance and rejection of arguments.
On the other hand, it is a four-valued connective, since the
above conditions determine a four-valued truth-table for con-
junction in the Belnap’s interpretation of four-valued logic
(see [Belnap, 1977]). The following postulates provide a syn-
tactic characterization of this connective for attack relations:

a, A ∧ B ֒→ b iff a, A, B ֒→ b
a ֒→ A ∧ B, b iff a ֒→ A, B, b

(A∧)

Collective attack relations satisfying these postulates will
be called conjunctive. The next result shows that they give a
complete description of the four-valued conjunction.
Corollary 3.1. An attack relation is conjunctive if and only
if it coincides with ֒→I, for some set of four-valued interpre-
tations I in a language with a four-valued conjunction ∧.

An immediate beneﬁt of introducing conjunction into the
language of argumentation is that any ﬁnite set of arguments
a becomes reducible to a single argument V a:

a ֒→ b

iff ^ a ֒→ ^ b.

As a result, the collective attack relation in this language is
reducible to an attack relation between individual arguments,
as suggested already in [Dung, 1995b].

Having a conjunction at our disposal, we only have to add
a classical negation ¬ in order to obtain a classical language.
Moreover, since sets of arguments are reducible to their con-
junctions, we can represent the resulting argumentation the-
ory using just a binary attack relation on classical formulas.

As a basic condition on argumentation in the classical
propositional language, we will require only that the attack
relation should respect the classical entailment (cid:15) in the pre-
cise sense of being monotonic with respect to (cid:15) on both sides.
Deﬁnition 3.1. A propositional attack relation is a relation
֒→ on the set of classical propositions satisfying the following
postulates:
(Left Strengthening)
If A (cid:15) B and B ֒→ C, then A ֒→ C;
(Right Strengthening) If A ֒→ B and C (cid:15) B, then A ֒→ C;
(Truth)
(Falsity)

t ֒→ f;
f ֒→ t.

Left Strengthening says that logically stronger arguments
should attack any argument that is attacked already by a log-
ically weaker argument, and similarly for Right Strengthen-
ing. Truth and Falsity postulates characterize the limit cases
of argumentation by stipulating that any tautological argu-
ment attacks any contradictory one, and vice versa.

There exists a simple deﬁnitional way of extending the
above attack relation to a collective attack relation between
arbitrary sets of propositions. Namely, for any sets u, v of
propositions, we can deﬁne u ֒→ v as follows:

u ֒→ v ≡ ^ a ֒→ ^ b, for some ﬁnite a ⊆ u and b ⊆ v
The resulting attack relation will satisfy the properties of
collective argumentation, as well as the postulates (A∧) for
conjunction.

Finally, in order to acquire full expressive capabilities of
an argumentation theory, we can add the global negation ∼
to the language. Actually, a rather simple characterization of
the resulting collective argumentation theory can be obtained
by accepting the postulates AN for ∼, plus the following rule
that permits the use of classical entailment in attacks:
Classicality If a (cid:15) A, then a ֒→ ∼A and ∼A ֒→ a.

It can be veriﬁed that the resulting system satisﬁes all the
postulates for propositional argumentation. The system will
be used later for a direct representation of default logic.

3.1 Semantics
A semantic interpretation of propositional attack relations
can be obtained by generalizing four-valued interpretations to
pairs (u, v) of deductively closed theories, where u is the set
of accepted propositions, while v the set of propositions that
are not rejected. Such pairs will be called bimodels, while a
set of bimodels will be called a binary semantics.
Deﬁnition 3.2. An attack A ֒→ B will be said to be valid in a
binary semantics B if there is no bimodel (u, v) from B such
that A ∈ u and B ∈ v.

We will denote by ֒→B the set of attacks that are valid in
a semantics B. This set forms a propositional attack relation.
Moreover, the following result shows that propositional at-
tack relations are actually complete for the binary semantics.
Theorem 3.2.
֒→ is a propositional attack relation if and
only if it coincides with ֒→B, for some binary semantics B.

3.2 Probative and causal argumentation
We will introduce now some stronger propositional attack re-
lations that will be shown to correspond to systems of causal
inference. These stronger attack relations are obtained by
adding the following quite reasonable postulates:
(Left Or)
(Right Or)
(Self-Defeat)
Deﬁnition 3.3. A propositional attack relation will be called
probative if it satisﬁes Left Or, basic, if it also satisﬁes Right
Or, and causal, if it is basic and satisﬁes Self-Defeat.

If A ֒→ C and B ֒→ C, then A ∨ B ֒→ C;

If A ֒→ B and A ֒→ C, then A ֒→ B ∨ C;

If A ֒→ A, then t ֒→ A.

Probative argumentation allows for reasoning by cases. Its
semantic interpretation can be obtained by restricting bimod-
els to pairs (α, v), where α is a world (maximal classically
consistent set). The corresponding binary semantics will also
be called probative. Similarly, the semantics for basic argu-
mentation is obtained by restricting bimodels to world pairs
(α, β); such a binary semantics will be called basic. Finally,
the causal binary semantics is obtained from the basic seman-
tics by requiring further that (α, β) is a bimodel only if (β, β)
is also a bimodel.
Corollary 3.3. A propositional attack relation is probative
[basic, causal] iff it is determined by a probative [resp. basic,
causal] binary semantics.

Basic propositional argumentation can already be given a
purely four-valued semantic interpretation, in which the clas-
sical negation ¬ has the following semantic description2:

¬A is accepted iff A is not accepted
¬A is rejected iff A is not rejected

A syntactic characterization of this connective in collective

argumentation can be obtained by imposing the rules

A, ¬A ֒→

֒→ A, ¬A

If a, A ֒→ b and a, ¬A ֒→ b then a ֒→ b
If a ֒→ b, A and a ֒→ b, ¬A then a ֒→ b

(A¬)

Then a basic propositional attack relation can be alterna-
tively described as a collective attack relation satisfying the
rules (A∧) and (A¬). Moreover, the global negation ∼ can be
added to this system just by adding the corresponding postu-
lates (AN). It turns out, however, that the global negation is
eliminable in this setting via to the following reductions:

a, ∼A ֒→ b ≡ a ֒→ b, ¬A
a, ¬∼A ֒→ b ≡ a ֒→ b, A

a ֒→ ∼A, b ≡ a, ¬A ֒→ b
a ֒→ ¬∼A, b ≡ a, A ֒→ b

(R∼)

2This connective coincides with the local four-valued negation

from [Bochman, 1998].

As a result, the basic attack relation can be safely restricted

to an attack relation in a classical language.

Finally, the rule Self-Defeat of causal argumentation gives
a formal representation for an often expressed desideratum
that self-conﬂicting arguments should not participate in de-
feating other arguments (see, e.g., [Bondarenko et al., 1997]).
This aim is achieved in our setting by requiring that such ar-
guments are attacked even by tautologies, and hence by any
argument whatsoever.
3.3 Argumentation vs. causal inference
Probative attack relations will now be shown to be equivalent
to general production inference relations from [Bochman,
2003b; 2004a], a variant of input-output logics from [Makin-
son and van der Torre, 2000].

A production inference relation is a relation ⇒ on the set

of classical propositions satisfying the following rules:
(Strengthening)
If A (cid:15) B and B ⇒ C, then A ⇒ C;
(Weakening)
(And)
(Truth)
(Falsity)

If A ⇒ B and A ⇒ C, then A ⇒ B ∧ C;

If A ⇒ B and B (cid:15) C, then A ⇒ C;

t ⇒ t;
f ⇒ f.

A production rule A ⇒ B can be informally interpreted as
saying that A produces, or explains B. A characteristic prop-
erty of production inference is that reﬂexivity A ⇒ A does not
hold for it. Production rules are extended to rules with sets of
propositions in premises by requiring that u ⇒ A holds for a
set u of propositions iff V a ⇒ A, for some ﬁnite a ⊆ u. C(u)
will denote the set of propositions produced by u:

C(u) = {A | u ⇒ A}

The production operator C plays much the same role as the

usual derivability operator for consequence relations.

A production inference relation is called basic, if it satisﬁes

(Or)
If A ⇒ C and B ⇒ C, then A ∨ B ⇒ C.
and causal, if it is basic and satisﬁes, in addition
(Coherence)

If A ⇒ ¬A, then A ⇒ f.

It has been shown in [Bochman, 2003b] that causal infer-
ence relations provide a complete description of the underly-
ing logic of causal theories from [McCain and Turner, 1997]
(see also [Giunchiglia et al., 2004]).

It turns out that the binary semantics, introduced earlier, is

appropriate also for interpreting production inference:
Deﬁnition 3.4. A rule A ⇒ B is valid in a binary semantics
B if, for any bimodel (u, v) ∈ B, A ∈ u only if B ∈ v.

As has been shown in [Bochman, 2004a], the above seman-
tics is adequate for production inference relations. Moreover,
the semantics for basic production inference can be obtained
by restricting bimodels to world pairs (α, β), while the se-
mantics for causal inference is obtained by requiring, in addi-
tion, that (α, β) is a bimodel only if (α, α) is also a bimodel.
Now, the correspondence between probative argumentation
and production inference can be established directly on the
syntactic level using the following deﬁnitions:

A ⇒ B ≡ ¬B ֒→ A;
A ֒→ B ≡ B ⇒ ¬A.

(PA)
(AP)

Under these correspondences, the rules of a probative at-
tack relation correspond precisely to the postulates for pro-
duction relations. Moreover, the correspondence extends also
to a correspondence between basic and causal argumentation,
on the one hand, and basic and causal production inference,
on the other. Hence the following result is straightforward.
Lemma 3.4. If ֒→ is a probative [basic, causal] attack rela-
tion, then (PA) determines a [basic, causal] production infer-
ence relation, and vice versa, if ⇒ is a [basic, causal] pro-
duction inference relation, then (AP) determines a probative
[basic, causal] attack relation.
Remark. A seemingly more natural correspondence between
propositional argumentation and production inference can be
obtained using the following deﬁnitions:

A ⇒ B ≡ A ֒→ ¬B

A ֒→ B ≡ A ⇒ ¬B.

By these deﬁnitions, A explains B if it attacks ¬B, and
vice versa, A attacks B if it explains ¬B. Unfortunately, this
correspondence, though plausible by itself, does not take into
account the intended understanding of arguments as (nega-
tive) assumptions. As a result, it cannot be extended directly
to the correspondence between the associated nonmonotonic
semantics, described below.

4 Nonmonotonic semantics
The correspondence between argumentation and causal rea-
soning has been established above on the level of underlying
logical (monotonic) formalisms. In this section we will de-
scribe how this correspondence can be extended to the asso-
ciated nonmonotonic semantics.

In [Bondarenko et al., 1997], the assumption-based argu-
mentation framework has been instantiated to capture exist-
ing nonmonotonic formalisms. In other words, it has been
shown how particular nonmonotonic systems can be viewed
as assumption-based frameworks just by deﬁning assump-
tions and their contraries. We will show, however, that the
propositional argumentation theory allows us to give a direct
representation of Reiter’s default logic [Reiter, 1980].

Given a system of propositional argumentation in the clas-
sical language augmented with the global negation ∼, we will
interpret Reiter’s default rule a:b/A as an attack

The above result is similar to the corresponding representa-
tion result in [Bondarenko et al., 1997] (Theorem 3.10), but it
is much simpler, and is formulated entirely in the framework
of propositional attack relations. The simpler representation
was made possible due to the fact that propositional attack
relations already embody the deductive capabilities treated as
an additional ingredient in assumption-based frameworks.

As our next result, we will establish a correspondence be-
tween the nonmonotonic semantics of causal inference rela-
tions and that of causal argumentation.

The nonmonotonic semantics of a causal inference relation
is a set of its exact worlds, namely worlds α such that α =
C(α) (see [Bochman, 2004a]). Such a world satisﬁes the rules
of the causal relation, and any proposition that holds in it is
explained by the causal rules.

A causal theory is an arbitrary set of production rules. By
a nonmonotonic semantics of a causal theory ∆ we will mean
the exact worlds of the least causal relation containing ∆.

The correspondence between exact worlds and stable sets

of assumptions is established in the next theorem.
Theorem 4.2. If ∆ is a causal theory, and ∆a its correspond-
ing argument theory given by (AP), then a world α is an exact
world of ∆ iff ˜α is a stable set of assumptions in ∆a.

The above result shows, in effect, that propositional ar-
gumentation subsumes causal reasoning as a special case.
Moreover, it can be shown that causal attack relations con-
stitute a strongest argumentation system suitable for this kind
of nonmonotonic semantics.

As an application of the above correspondence, we will de-
scribe now an alternative argumentation-based representation
of logic programming.

A general logic program Π is a set of rules of the form

not d, c ← a, not b

(*)

where a, b, c, d are sets of propositional atoms. These are
program rules of a most general kind that contain disjunc-
tions and negations as failure not in their heads. As has been
shown in [Bochman, 2004b], general logic programs are rep-
resentable as causal theories obtained by translating program
rules (*) as causal rules

d, ¬b ⇒ ^ a → _ c,

a, ∼¬b ֒→ ∼A,

or, equivalently, as a rule a, ∼¬b (cid:13) A of the associated Bel-
nap consequence relation. Similarly, an axiom A of a default
theory will be interpreted as an attack t ֒→ ∼A. For a default
theory ∆, we will denote by tr(∆) the corresponding argu-
ment theory obtained by this translation.

By our general agreement, by assumptions we will mean
propositions of the form ∼A, where A is a classical proposi-
tion. For a set u of classical propositions, we will denote by
˜u the set of assumptions {∼A | A /∈ u}. Finally, a set w of
assumptions will be called stable in an argument theory ∆ if,
for any assumption A, A ∈ w iff w 6֒→∆ A. Then we have
Theorem 4.1. A set u of classical propositions is an exten-
sion of a default theory ∆ if and only if ˜u is a stable set of
assumptions in tr(∆).

and adding a formalization of the Closed World Assumption:
(Default Negation) ¬p ⇒ ¬p, for any propositional atom p.
Now, due to the correspondence between causal reasoning
and argumentation, this causal theory can be transformed (us-
ing (PA)) into an argument theory that consists of attacks

a, ¬c ֒→ ¬b, d

(AL)

plus the ‘argumentative’ Closed World Assumption:
(Default Assumption)
p ֒→ ¬p, for any atom p.

Let tr(Π) denote the argument theory obtained by this

translation from a logic program Π. Then we obtain
Theorem 4.3. A set u of propositional atoms is a stable
model of a logic program Π iff ˜u is a stable set of assump-
tions in tr(Π).

It is interesting to note that, due to the reduction rules
(R∼) for the global negation ∼, described earlier,
the
above representation (AL) of program rules is equivalent to
a, ∼b ֒→ ∼c, d, and therefore to the inference rules

a, ∼b (cid:13) c, ∼d

of the associated Belnap consequence relation. For normal
logic programs, this latter representation coincides with that
given in [Bondarenko et al., 1997].

5 Conclusions
Two main objectives have been pursued in this study. The
ﬁrst consisted in showing that propositional argumentation
suggests a viable and useful extension of an abstract argu-
mentation theory that allows us to endow argumentation with
full-ﬂedged logical capabilities. It has been shown, in partic-
ular, that propositional argumentation subsumes assumption-
based frameworks, and provides a direct representation of de-
fault logic, causal reasoning and logic programming. It could
be expected that further development of this propositional ap-
proach to argumentation may bring us additional theoretical
and practical beneﬁts.

The second aim was to demonstrate that causal reason-
ing can be seen as an important kind of argumentation.
It
has been shown in this respect that causal inference rela-
tions and their semantics exactly correspond to a special,
quite strong, kind of propositional attack relations and their
associated stable semantics. This correspondence estab-
lished a basic link between argumentation and causal rea-
soning, and it can be extended in both directions. To be-
gin with, the argumentation theory has suggested a num-
ber of weaker semantic models, such as admissible sets
and complete extensions (see [Bondarenko et al., 1997;
Dung, 1995a]), and it seems worth to inquire whether such
models correspond to reasonable semantics for causal rea-
soning. On the other hand, a number of alternative models
for causal reasoning has been suggested in [Geffner, 1992;
1997] (see also [Darwiche and Pearl, 1994]), and here it
seems plausible to suppose that the correspondence between
causal reasoning and argumentation could be helpful in ana-
lyzing and evaluating such models. These are, however, the
topics for further study.

References
[Belnap, 1977] N. D. Belnap, Jr. A useful four-valued logic.
In M. Dunn and G. Epstein, editors, Modern Uses of
Multiple-Valued Logic, pages 8–41. D. Reidel, 1977.

[Bochman, 1998] A. Bochman. Biconsequence relations:
A four-valued formalism of reasoning with inconsistency
and incompleteness. Notre Dame Journal of Formal Logic,
39(1):47–73, 1998.

[Bochman, 2003a] A. Bochman. Collective argumentation
and disjunctive logic programming. Journal of Logic and
Computation, 9:55–56, 2003.

[Bochman, 2003b] A. Bochman. A logic for causal reason-
In Proceedings IJCAI’03, Acapulco, 2003. Morgan

ing.
Kaufmann.

[Bochman, 2004a] A. Bochman. A causal approach to non-
monotonic reasoning. Artiﬁcial Intelligence, 160:105–
143, 2004.

[Bochman, 2004b] A. Bochman. A causal logic of logic pro-
gramming. In D. Dubois, C. Welty, and M.-A. Williams,
editors, Proc. Ninth Conference on Principles of Knowl-
edge Representation and Reasoning, KR’04, pages 427–
437, Whistler, 2004.

[Bondarenko et al., 1997] A. Bondarenko, P. M. Dung, R. A.
Kowalski, and F. Toni. An abstract, argumentation-
theoretic framework for default reasoning. Artiﬁcial In-
telligence, 93:63–101, 1997.

[Ches˜nevar et al., 2000] C. I. Ches˜nevar, A. G. Marguitman,
and R. P. Loui. Logical models of argument. ACM Com-
puting Surveys, 32:337–383, 2000.

[Darwiche and Pearl, 1994] A. Darwiche and J. Pearl. Sym-
In Proceedings AAAI’94, pages

bolic causal networks.
238–244, 1994.

[Dung, 1995a] P. M. Dung. An argumentation-theoretic
foundation for logic programming. J. of Logic Program-
ming, 22:151–177, 1995.

[Dung, 1995b] P. M. Dung. On the acceptability of argu-
ments and its fundamental role in non-monotonic reason-
ing, logic programming and n-persons games. Artiﬁcial
Intelligence, 76:321–358, 1995.

[Geffner, 1992] H. Geffner. Default Reasoning. Causal and

Conditional Theories. MIT Press, 1992.

[Geffner, 1997] H. Geffner. Causality, constraints and the
indirect effects of actions. In Proceedings Int. Joint Conf.
on Artiﬁcial Intelligence, IJCAI’97, pages 555–561, 1997.
[Giunchiglia et al., 2004] E. Giunchiglia, J. Lee, V. Lif-
schitz, N. McCain, and H. Turner. Nonmonotonic causal
theories. Artiﬁcial Intelligence, 153:49–104, 2004.

[Kakas and Toni, 1999] A. C. Kakas and F. Toni. Comput-
ing argumentation in logic programming. Journal of Logic
and Computation, 9:515–562, 1999.

[Kowalski and Toni, 1996] R. A. Kowalski and F. Toni. Ab-
Artiﬁcial Intelligence and Law,

stract argumentation.
4:275–296, 1996.

[Makinson and van der Torre, 2000] D. Makinson

and
Journal of

L. van der Torre.
Philosophical Logic, 29:383–408, 2000.

Input/Output

logics.

[McCain and Turner, 1997] N. McCain and H. Turner.
In Proceedings

Causal theories of action and change.
AAAI-97, pages 460–465, 1997.
[Prakken and Vreeswijk, 2001] H.

and
G. Vreeswijk.
Logics for defeasible argumentation.
In D. M. Gabbay and F. Guenthner, editors, Handbook of
Philosophical Logic, volume 4, pages 219–318. Kluwer,
2nd edition, 2001.

Prakken

[Reiter, 1980] R. Reiter. A logic for default reasoning. Arti-

ﬁcial Intelligence, 13:81–132, 1980.

