A Simple Model to Generate Hard Satis(cid:2)able Instances

Ke Xu1

Fr·ed·eric Boussemart2

Fred Hemery2

Christophe Lecoutre2

1NLSDE Lab, School of Computers

Beihang University

Beijing 100083, China
kexu@nldse.buaa.edu.cn

2CRIL-CNRS FRE 2499,

Universit·e d’Artois

Lens, France

hlastnamei@cril.univ-artois.fr

Abstract

In this paper, we try to further demonstrate that the
models of random CSP instances proposed by [Xu
and Li, 2000; 2003] are of theoretical and practical
interest. Indeed, these models, called RB and RD,
present several nice features. First, it is quite easy
to generate random instances of any arity since no
particular structure has to be integrated, or property
enforced, in such instances. Then, the existence of
an asymptotic phase transition can be guaranteed
while applying a limited restriction on domain size
and on constraint tightness. In that case, a thresh-
old point can be precisely located and all instances
have the guarantee to be hard at the threshold, i.e.,
to have an exponential tree-resolution complexity.
Next, a formal analysis shows that it is possible
to generate forced satis(cid:2)able instances whose hard-
ness is similar to unforced satis(cid:2)able ones. This
analysis is supported by some representative results
taken from an intensive experimentation that we
have carried out, using complete and incomplete
search methods.

Introduction

1
Over the past ten years, the study of phase transition phenom-
ena has been one of the most exciting areas in Computer Sci-
ence and Arti(cid:2)cial Intelligence. Numerous studies have es-
tablished that for many NP-complete problems (e.g., SAT and
CSP), the hardest random instances occur, while a control pa-
rameter is varied accordingly, between an under-constrained
region where all instances are almost surely satis(cid:2)able and an
over-constrained region where all instances are almost surely
unsatis(cid:2)able.
In the transition region, there is a threshold
where half the instances are satis(cid:2)able. Generating hard in-
stances is important both for understanding the complexity
of the problems and for providing challenging benchmarks
[Cook and Mitchell, 1997].

Another remarkable progress in Arti(cid:2)cial Intelligence has
been the development of incomplete algorithms for various
kinds of problems. And, since this progress, one important
issue has been to produce hard satis(cid:2)able instances in or-
der to evaluate the ef(cid:2)ciency of such algorithms, as the ap-
proach that involves exploiting a complete algorithm in order

to keep random satis(cid:2)able instances generated at the thresh-
old can only be used for instances of limited size. Also, it has
been shown that generating hard (forced) satis(cid:2)able instances
is related to some open problems in cryptography such as
computing a one-way function [Impagliazzo et al., 1989;
Cook and Mitchell, 1997].

In this paper, we mainly focus on random CSP (Constraint
Satisfaction Problem) instances.
Initially, four (cid:147)standard(cid:148)
models, denoted A, B, C and D [Smith and Dyer, 1996;
Gent et al., 2001], have been introduced to generate random
binary CSP instances. However, [Achlioptas et al., 1997]
have identi(cid:2)ed a shortcoming of all these models.
Indeed,
they prove that random instances generated using these mod-
els suffer from (trivial) unsatis(cid:2)ability as the number of vari-
ables increases. To overcome the de(cid:2)ciency of these standard
models, several alternatives have been proposed.

On the one hand, [Achlioptas et al., 1997] have proposed a
model E and [Molloy, 2003] a generalized model. However,
model E does not permit to tune the density of the instances
and the generalized model requires an awkward exploitation
of probability distributions. Also, other alternatives corre-
spond to incorporating some (cid:147)structure(cid:148) in the generated ran-
dom instances. Roughly speaking, it involves ensuring that
the generated instances be arc consistent [Gent et al., 2001]
or path consistent [Gao and Culberson, 2004]. The main
drawback of all these approaches is that generating random
instances is no more quite a natural and easy task.

On the other hand, [Xu and Li, 2000; 2003], [Frieze
and Molloy, 2003] and [Smith, 2001] have revisited stan-
dard models by controlling the way parameters change as
the problem size increases. The alternative model D scheme
of [Smith, 2001] guarantees the occurrence of a phase tran-
sition when some parameters are controlled and when the
constraint tightness is within a certain range. The two re-
vised models, called RB and RD, of [Xu and Li, 2000;
2003] provide the same guarantee by varying one of two con-
trol parameters around a critical value that, in addition, can be
computed. Also, [Frieze and Molloy, 2003] identify a range
of suitable parameter settings in order to exhibit a non-trivial
threshold of satis(cid:2)ability. Their theoretical results apply to bi-
nary instances taken from model A and to (cid:147)symmetric(cid:148) binary
instances from a so-called model B which, not corresponding
to the standard one, associates the same relation with every
constraint.

The models RB and RD present several nice features:
(cid:15) it is quite easy to generate random instances of any arity
as no particular structure has to be integrated, or prop-
erty enforced, in such instances.

(cid:15) the existence of an asymptotic phase transition can be
guaranteed while applying a limited restriction on do-
main size and on constraint tightness. For instances in-
volving constraints of arity k, the domain size is required
to be greater than the kth root of the number of variables
and the (threshold value of the) constraint tightness is
required to be at most k(cid:0)1
k .

(cid:15) when the asymptotic phase transition exists, a threshold
point can be precisely located, and all instances gener-
ated following models RB and RD have the guarantee
to be hard at the threshold, i.e., to have an exponential
tree-resolution complexity.

(cid:15) it is possible to generate forced satis(cid:2)able instances

whose hardness is similar to unforced satis(cid:2)able ones.

This paper is organized as follows. After introducing mod-
els RB and RD, as well as some theoretical results (Section
2), we provide a formal analysis about generating both forced
and unforced hard satis(cid:2)able instances (Section 3). Then, we
present the results of a large series of experiments that we
have conducted (Section 4), and, before concluding, we dis-
cuss some related work (Section 5).

2 Theoretical background
A constraint network consists of a (cid:2)nite set of variables such
that each variable X has an associated domain denoting the
set of values allowed for X, and a a (cid:2)nite set of constraints
such that each constraint C has an associated relation denot-
ing the set of tuples allowed for the variables involved in C.
A solution is an assignment of values to all the variables
such that all the constraints are satis(cid:2)ed. A constraint network
is said to be satis(cid:2)able (sat, for short) if it admits at least a
solution. The Constraint Satisfaction Problem (CSP), whose
task is to determine if a given constraint network, also called
CSP instance, is satis(cid:2)able, is NP-complete.

In this section, we introduce some theoretical results taken
from [Xu and Li, 2000; 2003]. First, we introduce a model,
denoted RB, that represents an alternative to model B. Note
that, unlike model B, model RB allows selecting constraints
with repetition. But the main difference of model RB with
respect to model B is that the domain size of each variable
grows polynomially with the number of variables.
De(cid:2)nition 1 (Model RB) A class of random CSP instances
of model RB is denoted RB(k,n,(cid:11),r,p) where:

(cid:15) k (cid:21) 2 denotes the arity of each constraint,
(cid:15) n denotes the number of variables,
(cid:15) (cid:11) > 0 determines the domain size d = n(cid:11) of each vari-

able,

(cid:15) r > 0 determines the number m = r:n: ln n of con-

straints,

(cid:15) 1 > p > 0 denotes the tightness of each constraint.

To build one instance P 2 RB(k,n,(cid:11),r,p), we select with rep-
etition m constraints, each one formed by selecting k distinct
variables and p:dk distinct unallowed tuples (as p denotes a
proportion).

When (cid:2)xed, (cid:11) and r give an indication about the growth
of the domain sizes and of the number of constraints as n
increases since d = n(cid:11) and m = rn ln n, respectively. It is
then possible, for example, to determine the critical value pcr
of p where the hardest instances must occur. Indeed, we have
pcr = 1 (cid:0) e(cid:0)(cid:11)=r which is equivalent to the expression of pcr
given by [Smith and Dyer, 1996].

Another model, denoted model RD, is similar to model RB
except that p denotes a probability instead of a proportion.
For convenience, in this paper, we will exclusively refer to
model RB although all given results hold for both models.

In [Xu and Li, 2000], it is proved that model RB, under cer-
tain conditions, not only avoids trivial asymptotic behaviors
but also guarantees exact phase transitions. More precisely,
with Pr denoting a probability distribution, the following the-
orems hold.
Theorem 1 If k, (cid:11) > 1

k are constants then

k and p (cid:20) k(cid:0)1

lim
n!1

P r[P 2 RB(k; n; (cid:11); r; p) is sat ] =(cid:26) 1

0

if r < rcr
if r > rcr

where rcr = (cid:0) (cid:11)

ln(1(cid:0)p) .
Theorem 2 If k, (cid:11) > 1

k and pcr (cid:20) k(cid:0)1

k are constants then
if p < pcr
if p > pcr

0

lim
n!1

P r[P 2 RB(k; n; (cid:11); r; p) is sat ] =(cid:26) 1

where pcr = 1 (cid:0) e(cid:0) (cid:11)
r .

Remark that the condition pcr (cid:20) k(cid:0)1
k

is equivalent to
r (cid:21) 1 given in [Xu and Li, 2000]. Theorems 1 and 2
ke(cid:0) (cid:11)
indicate that a phase transition is guaranteed provided that the
domain size is not too small and the constraint tightness or the
threshold value of the constraint tightness not too large. As
an illustration, for instances involving binary (resp. ternary)
constraints, the domain size is required to be greater than the
square (resp. cubic) root of the number of variables and the
constraint tightness or threshold value of the tightness is re-
quired to be at most 50% (resp. (cid:25) 66%).

The following theorem establishes that unsatis(cid:2)able in-
stances of model RB almost surely have the guarantee to be
hard. A similar result for model A has been obtained by
[Frieze and Molloy, 2003] with respect to binary instances.
Theorem 3 If P 2 RB(k,n,(cid:11),r,p) and k, (cid:11), r and p are con-
stants, then, almost surely1, P has no tree-like resolution of
length less than 2(cid:10)(n).

The proof, which is based on a strategy following some re-
sults of [Ben-Sasson and Wigderson, 2001; Mitchell, 2002],
is omitted but can be found in [Xu and Li, 2003].

To summarize, model RB guarantees exact phase transi-
tions and hard instances at the threshold. It then contradicts
1We say that a property holds almost surely when this property
holds with probability tending to 1 as the number of variables tends
to in(cid:2)nity.

the statement of [Gao and Culberson, 2004] about the require-
ment of an extremely low tightness for all existing random
models in order to have non-trivial threshold behaviors and
guaranteed hard instances at the threshold.

3 Generating hard satis(cid:2)able instances
For CSP and SAT, there is a natural strategy to generate forced
satis(cid:2)able instances, i.e., instances on which a solution is im-
posed. It suf(cid:2)ces to proceed as follows: (cid:2)rst generate a ran-
dom (total) assignment t and then generate a random instance
with n variables and m constraints (clauses for SAT) such
that any constraint violating t is rejected. t is then a forced
solution. This strategy, quite simple and easy to implement,
allows generating hard forced satis(cid:2)able instances of model
RB provided that Theorem 1 or 2 holds. Nevertheless, this
statement deserves a theoretical analysis.

Assuming that d denotes the domain size (d = 2 for SAT),
we have exactly dn possible (total) assignments, denoted by
t1; t2; (cid:1) (cid:1) (cid:1) ; tdn, and d2n possible assignment pairs where an
assignment pair < ti; tj > is an ordered pair of two assign-
ments ti and tj. We say that < ti; tj > satis(cid:2)es an instance if
and only if both ti and tj satisfy the instance. Then, the ex-
pected (mean) number of solutions Ef [N ] for instances that
are forced to satisfy an assignment ti is:

Ef [N ] =

Pr[< ti; tj >]
Pr[< ti; ti >]

dn

Xj=1

where Pr[< ti; tj >] denotes the probability that < ti; tj >
satis(cid:2)es a random instance. Note that Ef [N ] should be inde-
pendent of the choice of the forced solution ti. So we have:

Ef [N ] = X1(cid:20)i;j(cid:20)dn

Pr[< ti; tj >]

dn Pr[< ti; ti >]

=

E[N 2]
E[N ]

:

where E[N 2] and E[N ] are, respectively, the second moment
and the (cid:2)rst moment of the number of solutions for random
unforced instances.

For random 3-SAT, it is known that the strategy mentioned
above is unsuitable as it produces a biased sampling of in-
stances with many solutions clustered around t [Achlioptas et
al., 2000]. Experiments show that forced satis(cid:2)able instances
are much easier to solve than unforced satis(cid:2)able instances.
In fact, it is not hard to show that, asymptotically, E[N 2] is
exponentially greater than E2[N ]. Thus, the expected num-
ber of solutions for forced satis(cid:2)able instances is exponen-
tially larger than the one for unforced satis(cid:2)able instances.
It then gives a good theoretical explanation of why, for ran-
dom 3-SAT, the strategy is highly biased towards generating
instances with many solutions.

For model RB, recall that when the exact phase transi-
tions were established [Xu and Li, 2000], it was proved
that E[N 2]=E2[N ] is asymptotically equal to 1 below the
threshold, where almost all instances are satis(cid:2)able,
i.e.
E[N 2]=E2[N ] (cid:25) 1 for r < rcr or p < pcr. Hence, the
expected number of solutions for forced satis(cid:2)able instances
below the threshold is asymptotically equal to the one for un-
forced satis(cid:2)able instances, i.e. Ef [N ] = E[N 2]=E[N ] (cid:25)

E[N ]. In other words, when using model RB, the strategy
has almost no effect on the number of solutions and does not
lead to a biased sampling of instances with many solutions.

In addition to the analysis above, we can also study the
in(cid:3)uence of the strategy on the distribution of solutions with
respect to the forced solution. We (cid:2)rst de(cid:2)ne the distance
df (ti; tj) between two assignments ti and tj as the proportion
of variables that have been assigned a different value in ti and
tj. We have 0 (cid:20) df (ti; tj) (cid:20) 1.

For forced satis(cid:2)able instances of model RB, with E (cid:14)

f [N ]
denoting the expected number of solutions whose distance
from the forced solution (identi(cid:2)ed as ti, here) is equal to (cid:14),
we obtain by an analysis similar to that in [Xu and Li, 2000]:

E(cid:14)

f [N ] =

Pr[< ti; tj >]
Pr[< ti; ti >]

with df (ti; tj) = (cid:14)

dn

Xj=1

n(cid:14)! (n(cid:11)-1)n(cid:14)"(cid:0)n(cid:0)n(cid:14)
k (cid:1)
(cid:0)n
k(cid:1)

+ (1 (cid:0) p) 1 (cid:0) (cid:0)n(cid:0)n(cid:14)
k (cid:1)
(cid:0)n
k(cid:1)

!#rn ln n
=  n
= exphn ln n(cid:16)r ln(cid:16)1 (cid:0) p + p(1 (cid:0) (cid:14))k(cid:17) + (cid:11)(cid:14)(cid:17) + O(n)i :
It can be shown, from the results in [Xu and Li, 2000] that
f [N ], for r < rcr or p < pcr, is asymptotically maximized
E(cid:14)
when (cid:14) takes the largest possible value, i.e. (cid:14) = 1.

For unforced satis(cid:2)able instances of model RB, with
E(cid:14)[N ] denoting the expected number of solutions whose dis-
tance from ti (not necessarily a solution) is equal to (cid:14), we
have:

E(cid:14)[N ] =(cid:18) n

n(cid:14)(cid:19) (n(cid:11) (cid:0) 1)n(cid:14) (1 (cid:0) p)rn ln n

= exp [n ln n (r ln(1 (cid:0) p) + (cid:11)(cid:14)) + O(n)] :

It is straightforward to see that the same pattern holds for this
case, i.e. E(cid:14)[N ] is asymptotically maximized when (cid:14) = 1.

Intuitively, with model RB, both unforced satis(cid:2)able in-
stances and instances forced to satisfy an assignment t are
such that most of their solutions distribute far from t. This in-
dicates that, for model RB, the strategy has little effect on the
distribution of solutions, and is not biased towards generating
instances with many solutions around the forced one.

For random 3-SAT, similarly, we can show that as r (the
ratio of clauses to variables) approaches 4:25, E (cid:14)
f [N ] and
E(cid:14)[N ] are asymptotically maximized when (cid:14) (cid:25) 0:24 and
(cid:14) = 0:5, respectively. This means, in contrast to model RB,
that when r is near the threshold, most solutions of forced in-
stances distribute in a place much closer to the forced solution
than solutions of unforced satis(cid:2)able instances.

4 Experimental results
As all introduced theoretical results hold when n ! 1, the
practical exploitation of these results is an issue that must be
addressed. In this section, we give some representative ex-
perimental results which indicate that practice meets theory
even if the number n of variables is small. Note that different
values of parameters (cid:11) and r have been selected in order to
illustrate the broad spectrum of applicability of model RB.

s
d
l
o
h
s
e
r
h
t
 
l
a
t
n
e
m

i
r
e
p
x
e
 

d
n
a
 
l
a
c
i
t
e
r
o
e
h
t
 

n
e
e
w
t
e
b

 
e
c
n
e
r
e
f
f
i

D

 0.055

 0.05

 0.045

 0.04

 0.035

 0.03

 0.025

 0.02

 0.015

 0.01

 0.005

 0

 n ˛ [8..100] while a = 0.52, r = 1
r ˛ [0.8..2.5] while n=20, a » 0.77 
a ˛ [0.2..1] while n=20, r=2.5 

 0

 0.2

 0.4
 0.6
Nomalized scale

 0.8

 1

   10000.0

    1000.0

     100.0

)
s
d
n
o
c
e
s
 

n
i
(
 
e
m

i
t
 

U
P
C

      10.0

       1.0

       0.1

       0.0

n = 24

n = 20

n = 16

unforced sat instances
unforced sat and unsat instances
forced sat instances

 0.52  0.54 0.56  0.58  0.6  0.62 0.64  0.66 0.68  0.7  0.72  0.74

Tightness (p)

Figure 1: Difference between theoretical and experimental
thresholds against (cid:11), r and n

Figure 3: Mean search cost (50 instances) of solving in-
stances in RB(3,f16; 20; 24g,1,1,p)

First, it is valuable to know in practice, to what extent,
Theorems 1 and 2 give precise thresholds according to dif-
ferent values of (cid:11), r and n. The experiments that we have
run wrt Theorem 2, as depicted in Figure 1, suggest that all
other parameters being (cid:2)xed, the greater the value of (cid:11), r
or n is, the more precise Theorem 2 is. More precisely, in
Figure 1, the difference between the threshold theoretically
located and the threshold experimentally determined is plot-
ted against (cid:11) 2 [0:2; 1] (d 2 [2::20]), against r 2 [0:8; 2:5]
(m 2 [50::150]) and against n 2 [8::100]. Note that the ver-
tical scale refers to the difference in constraint tightness and
that the horizontal scale is normalized (value 0 respectively
corresponds to n = 8, (cid:11) = 0:2 and r = 0:8, etc.).

   10000.0

    1000.0

     100.0

)
s
d
n
o
c
e
s
 

n
i
(
 
e
m

i
t
 

U
P
C

      10.0

       1.0

       0.1

unforced sat instances
unforced sat and unsat instances
forced sat instances

n = 40

n = 30

n = 20

       0.0

 0.14  0.16 0.18  0.2  0.22  0.24 0.26  0.28  0.3  0.32 0.34  0.36

Tightness (p)

Figure 2: Mean search cost (50 instances) of solving in-
stances in RB(2,f20; 30; 40g,0:8,3,p)

To solve the random instances generated by model RB, we

have used a systematic backtracking search algorithm (MAC)
and a local search algorithm (tabu search). Both algorithms
have been equipped with a search heuristic that learns from
con(cid:3)icts [Boussemart et al., 2004].

We have studied the dif(cid:2)culty of solving with MAC the bi-
nary instances of model RB generated around the theoretical
threshold pcr (cid:25) 0:23 given by Theorem 2 for k = 2, (cid:11) = 0:8,
r = 3 and n 2 f20; 30; 40g. In Figure 2, it clearly appears
that the hardest instances are located quite close to the the-
oretical threshold and that the dif(cid:2)culty grows exponentially
with n (note the use of a log scale). It corresponds to a phase
transition (not depicted here, due to lack of space). A similar
behavior is observed in Figure 3 with respect to ternary in-
stances generated around the theoretical threshold pcr (cid:25) 0:63
for k = 3, (cid:11) = 1, r = 1 and n 2 f16; 20; 24g.

As the number and the distribution of solutions are the two
most important factors determining the cost of solving sat-
is(cid:2)able instances, we can expect, from the analysis given in
Section 3, that for model RB, the hardness of solving forced
satis(cid:2)able instances should be similar to that of solving un-
forced satis(cid:2)able ones. This is what is observed in Figure 2.
To con(cid:2)rm this, we have focused our attention to a point
just below the threshold as we have then some (asymptotic)
guarantee about the dif(cid:2)culty of both unforced and forced in-
stances (see Theorems 5 and 6 in [Xu and Li, 2003]) and the
possibility of generating easily unforced satis(cid:2)able instances.
Figure 4 shows the dif(cid:2)culty of solving with MAC both
forced and unforced instances of model RB at pcr (cid:0) 0:01 (cid:25)
0:40 for k = 2, (cid:11) = 0:8, r = 1:5 and n 2 [20::50].

To con(cid:2)rm the inherent dif(cid:2)culty of the (forced and un-
forced) instances generated at the threshold, we have also
studied the runtime distribution produced by a randomized
search algorithm on distinct instances [Gomes et al., 2004].
For each instance, we have performed 5000 independent runs.
Figure 5 displays the survival function, which corresponds to
the probability of a run taking more than x backtracks, of a

unforced sat and unsat instances
unforced sat instances
forced sat instances

  10000.00

   1000.00

    100.00

e
m

     10.00

i
t
 

U
P
C

      1.00

      0.10

      0.01

 20

 25

 35

 30
 40
Number of variables (n)

 45

 50

  10000.00

   1000.00

    100.00

)
s
d
n
o
c
e
s
 

     10.00

n
i
(
 
e
m

i
t
 

U
P
C

      1.00

      0.10

      0.01

      0.00

unforced (sat and) unsat instances
forced sat instances

Pcr+0.2

Pcr

Pcr+0.3

Pcr+0.4

 0

 50  100  150  200  250  300  350  400  450  500

Number of variables (n)

Figure 4: Mean search cost (50 instances) of solving in-
stances in RB(2,[20::50],0:8,1:5,pcr (cid:0) 0:01)

Figure 6: Mean search cost (50 instances) of solving in-
stances in RB(2,[20::450],0:8,1:5,p)

randomized MAC algorithm for two representative instances
generated at pcr (cid:25) 0:41 for k = 2, (cid:11) = 0:8, r = 1:5 and
n 2 f40; 45g. One can observe that the runtime distribution
(a log-log scale is used) do not correspond to an heavy-tailed
one, i.e., a distribution characterized by an extremely long tail
with some in(cid:2)nite moment. It means that all runs behave ho-
mogeneously and, therefore, it suggests that the instances are
inherently hard [Gomes et al., 2004].

 1

 0.1

 0.01

 0.001

)
F
D
C

 
-
 

1
(
 
n
o
i
t
c
n
u
f
 
l
a
v
i
v
r
u
S

n=45

n=40

 1e-04

 10

unforced instances
forced instances

 100

 1000
Number of backtracks

 10000

 100000

 1e+06

Figure 5: Non heavy-tailed regime for
RB(2,f40; 45g,0:8,1:5,pcr (cid:25) 0:41)

instances in

Then, we have focused on unforced unsatis(cid:2)able instances
of model RB as Theorem 3 indicates that such instances have
an exponential resolution complexity. We have generated un-
forced and forced instances with different constraint tightness
p above the threshold pcr (cid:25) 0:41 for k = 2, (cid:11) = 0:8, r = 1:5
and n 2 [20::450]. Figure 6 displays the search effort of a

MAC algorithm to solve such instances against the number
of variables n. It is interesting to note that the search effort
grows exponentially with n, even if the exponent decreases
as the tightness increases. Also, although not currently sup-
ported by any theoretical result (Theorems 5 and 6 of [Xu and
Li, 2003] hold only for forced instances below the threshold)
it appears here that forced and unforced instances have a sim-
ilar hardness.

Finally, Figure 7 shows the results obtained with a tabu
search with respect to the binary instances that have been pre-
viously considered with MAC (see Figure 2). The search ef-
fort is given by a median cost since when using an incomplete
method, there is absolutely no guarantee of (cid:2)nding a solution
in a given limit of time. Remark that all unsatis(cid:2)able (un-
forced) instances below the threshold have been (cid:2)ltered out
in order to make a fair comparison. It appears that both com-
plete and incomplete methods behave similarly. In Figure 7,
one can see that the search effort grows exponentially with n
and that forced instances are as hard as unforced ones.

5 Related work
As a related work, we can mention the recent progress on gen-
erating hard satis(cid:2)able SAT instances. [Barthel et al., 2002;
Jia et al., 2004] have proposed to build random satis(cid:2)able 3-
SAT instances on the basis of a spin-glass model from statis-
tical physics. Another approach, quite easy to implement, has
also been proposed by [Achlioptas et al., 2004]: any 3-SAT
instance is forced to be satis(cid:2)able by forbidding the clauses
violated by both an assignment and its complement.

Finally, let us mention [Achlioptas et al., 2000] which
propose to build random instances with a speci(cid:2)c structure,
namely,
instances of the Quasigroup With Holes (QWH)
problem. The hardest instances belong to a new type of phase
transition, de(cid:2)ned from the number of holes, and coincide
with the size of the backbone.

   10000.0

    1000.0

     100.0

)
s
d
n
o
c
e
s
 

n
i
(
 
e
m

i
t
 

U
P
C

      10.0

       1.0

       0.1

       0.0

       0.0

n = 40

n = 30

n = 20

unforced sat instances
forced sat instances

 0.14  0.16 0.18  0.2  0.22  0.24 0.26  0.28  0.3  0.32 0.34  0.36

Tightness (p)

Figure 7: Median search cost (50 instances) of solving in-
stances in RB(2,f20; 30; 40g,0:8,3,p) using a tabu search

6 Conclusion
In this paper, we have shown, both theoretically and practi-
cally, that the models RB (and RD) can be used to produce,
very easily, hard random instances. More importantly, the
same result holds for instances that are forced to be satis(cid:2)-
able. To perform our experimentation, we have used some of
the most ef(cid:2)cient complete and incomplete CSP solvers. We
have also encoded some forced binary CSP instances of class
3,p = pcr = 0:25) with n ranging from 40
RB(2,n,0:8,0:8=ln 4
to 59 into SAT ones (using the direct encoding method) and
submitted them to the SAT competition 20042. About 50% of
the competing solvers have succeeded in solving the SAT in-
stances corresponding to n = 40 (d = 19 and m = 410)
whereas only one solver has been successful for n = 50
(d = 23 and m = 544).

Although there are some other ways to generate hard sat-
is(cid:2)able instances, e.g. QWH [Achlioptas et al., 2000] or 2-
hidden [Achlioptas et al., 2004] instances, we think that the
simple and natural method presented in this paper, based on
models with exact phase transitions and many hard instances,
should be well worth further investigation.

Acknowledgments
The (cid:2)rst author is partially supported by NSFC Grant
60403003 and FANEDD Grant 200241. Other authors have
been supported by the CNRS, the (cid:147)programme COCOA de la
R·egion Nord/Pas-de-Calais(cid:148) and by the (cid:147)IUT de Lens(cid:148).

References
[Achlioptas et al., 1997] D. Achlioptas, L.M. Kirousis,
E. Kranakis, D. Krizanc, M.S.O. Molloy, and Y.C. Sta-
matiou. Random constraint satisfaction: a more accurate
picture. In Proc. of CP’97, pp. 107(cid:150)120, 1997.

2http://www.nlsde.buaa.edu.cn/(cid:152)kexu/

benchmarks/benchmarks.htm

[Achlioptas et al., 2000] D. Achlioptas, C. Gomes, H. Kautz,
and B. Selman. Generating satis(cid:2)able problem instances.
In Proc. of AAAI’00, pp. 256(cid:150)301, 2000.

Jia,

Hiding satisfying assignments:

[Achlioptas et al., 2004] D. Achlioptas, H.

and
C. Moore.
two are
better than one. In Proc. of AAAI’04, pp. 131(cid:150)136, 2004.
[Barthel et al., 2002] W. Barthel, A.K. Hartmann, M. Leone,
F. Ricci-Tersenghi, M. Weigt, and R. Zecchina. Hiding so-
lutions in random satis(cid:2)ability problems: a statistical me-
chanics approach. Physical review letters, 88(18), 2002.

[Ben-Sasson and Wigderson, 2001] E.

and
A. Wigderson. Short proofs are narrow - resolution made
simple. Journal of the ACM, 48(2):149(cid:150)169, 2001.

Ben-Sasson

[Boussemart et al., 2004] F. Boussemart, F. Hemery, C. Lec-
outre, and L. Sais. Boosting systematic search by weight-
ing constraints. In Proc. of ECAI’04, pp. 146(cid:150)150, 2004.
[Cook and Mitchell, 1997] S.A. Cook and D.G. Mitchell.
Finding hard instances of the satis(cid:2)ability problem: a sur-
vey. DIMACS Ser. Disc. Math. & TCS, 35, 1997.

[Frieze and Molloy, 2003] A.M. Frieze and M. Molloy. The
satis(cid:2)ability threshold for randomly generated binary con-
straint satisfaction problems. In Proc. of Random’03, pp.
275(cid:150)289, 2003.

[Gao and Culberson, 2004] Y. Gao and J. Culberson. Con-
sistency and random constraint satisfaction models with a
high constraint tightness. In CP’04, pp. 17(cid:150)31, 2004.

[Gent et al., 2001] I.P. Gent, E. MacIntyre, P. Prosser, B.M.
Smith, and T. Walsh. Random constraint satisfaction:
(cid:3)aws and structure. Constraints, 6(4):345(cid:150)372, 2001.

[Gomes et al., 2004] C.P. Gomes, C. Fern·andez, B. Selman,
and C. Bessiere. Statistical regimes across constrainedness
regions. In Proc. of CP’04, pp. 32(cid:150)46, 2004.
Impagliazzo, L.

levin, and
M. Luby. Pseudo-random number generation from one-
way functions. In Proc. of STOC’89, pp. 12(cid:150)24, 1989.

[Impagliazzo et al., 1989] R.

[Jia et al., 2004] H. Jia, C. Moore, and B. Selman. From spin

glasses to hard satis(cid:2)able formulas. In SAT’04, 2004.

[Mitchell, 2002] D.G. Mitchell. Resolution complexity of
random constraints. In Proc. of CP’02, pp. 295(cid:150)309, 2002.
[Molloy, 2003] M. Molloy. Models for random constraint
SIAM Journal of computing,

satisfaction problems.
32(4):935(cid:150)949, 2003.

[Smith and Dyer, 1996] B.M. Smith and M.E. Dyer. Locat-
ing the phase transition in binary constraint satisfaction
problems. Arti(cid:2)cial Intelligence, 81:155(cid:150)181, 1996.

[Smith, 2001] B.M. Smith.

Constructing an asymptotic
phase transition in random binary constraint satisfaction
problems. TCS, 265:265(cid:150)283, 2001.

[Xu and Li, 2000] K. Xu and W. Li. Exact phase transitions
in random constraint satisfaction problems. Journal of Ar-
ti(cid:2)cial Intelligence Research, 12:93(cid:150)103, 2000.

[Xu and Li, 2003] K. Xu and W. Li. Many hard examples in
exact phase transitions with application to generating hard
satis(cid:2)able instances. CoRR Report cs.CC/0302001, 2003.

