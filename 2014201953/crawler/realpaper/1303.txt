Session  11  Robot  Implementations 

A  VERSATILE  COMPUTER-CONTROLLED  ASSEMBLY  SYSTEM 

A.P.  Ambler 
H.G,  Barrow 
C M.  Brown 

R.H.  B u r s t a ll 
R.J.  Popplestone 

Department  of  Machine 

I n t e l l i g e n ce 

University  of  Edinburgh 

Abstract 

A  versatile  assembly  system,  using  TV  cameras  and 
oomputer-controlled  arm  and  moving  table,  is  described. 
It  makes  almple  assemblies  such  aa  a  peg  and  rings  and 
a  toy  car.  It  separates  parts  from  a  heap,  recognising 
them  with an  overhead  camera,  then  assembles  them  by 
feel. 
It  can  be  instructed  to  perform  a  new  task 
with  different  parte  by  spending  an  hour  showing  it 
the  parts  and  a  day  or  two  programming  the  assembly 
manipulations.  A  hierarchical  description  of  parts, 
views,  outlines  etc.  is  used  to  construct  models,  and 
a  structure  matching  algorithm  is  used  in  recognition. 

1, 

Introduction 

A  computer-controlled  versatile  assembly  system 
has  been  programmed  during  the  past  12  months  using, 
the  Edinburgh  hand-eye  hardware  (Barrow aid  Crawford  ) 
The  equipment  (Fig.  1)  consists  of  a moveable  table, 
a  mechanical  hand  with  sensors  and  rotating  palms, 
and  two  TV  cameras,  a ll  conneoted  via  an 8X Honeywell 
316  to  a  128K  time-shared  ICL  4130  running  POP-2 
programs.  Several  other  programs  are  running  on 
thia  equipment,  including  a  program  for  recognising 
irregular  objects  and  one  which  packs  a r b i t r a r i ly 
shaped  objects  into  a  box  (Mlchie  et  al  ). 
The 
program  described  here  is  our  most  ambitious  effort. 
It  is  capable  of  assembling  a  variety  of  structures, 
and  much  of  our  effort  has  been  spent  in  enabling  the 
machine  to  acquire  descriptions  of  the  parts  for 
i t s e lf  using  an  overhead  TV  camera. 

Related  work  has  been  carried  out  at  Hitachi 

and  at  Stanford 

(EJiri  et  al),  at  MIT  (Winston45  ) 
University  (Feldman).  The  Hitachi  program  could 
build  a  variety  of  simple  structures  of  blocks  from 
line  drawings  of  the  structure,  the  HIT  programs  can 
learn  concepts  about  structures  and  copy  an  arbitrary 
structure  of  simple  blocks  given  spare  parts,  and  a 
recent  Stanford  program  can  assemble  a  simple  auto­
mobile  water  pump  using  preprogrammed  hand  manip-
ulations. 

2.  The  TAsk 

A  number  of  parta  are  placed  by  the  operator  in 

a  heap  on  the  table  (Fig.  2,  peg  and  rings).  The 
machine's  task  is  to  separate  the  parts  and  recognise 
them,  then  to  assemble  them  into  some  predetermined 
configuration  (Fig.  3).  Figs.  4  and  5  show  another 
example,  a  toy  oar.  We  are  currently  thinking  in 
terms  of  up  to  a  dozen  parts  with  outlines  described 
by  up  to  twenty  or  so  straight  or  ourved  segments  from 
any  one  view,  possibly with  some  holes  of  similar 
complexity. 

In  order  to  explore  the  capabilities  of  a 

computer-controlled  system  aa  opposed  to  a 
conventional  electromechanical  device  we  seek  a 
versatile  assembly  system.  The  demand  for  versa­
t i l i ty  is  also  calculated  to  raise  interesting 
aspects  from  an  A r t i f i c i al  Intelligence  point  of  view. 

Our  goal  has  been  to  develop  a  system which 

enables  one  to:-

298 

( i) 

think  up  a  new  aaaembly  involving  a  k it  of 

parta  which  have  not  been  used  before, 

( i i)  spend  a  day  or  so  familiarising  the  machine 
with  the  appearance  and  manipulation  of  the  parts  and 
instructing  it  how  to  assemble  them  into  the  required 
structure, 

( i i i) 

leave  the  machine  unattended,  busily  making 
the  structures  ad  nauseam,  provided  that  a  fresh  heap 
of  parte  is  dumped  on  the  table  from  time  to  time. 

We  have  achieved  this  goal  for  simple  structures. 

interactively  programming  the 

We  can  show  the machine half a dozen new parts  and 
instruct  it  how  to  lay  them  out  ready  for  assembly  in 
about  two  hours; 
assembly  operations  themselves  takes  four  hours  or  so. 
The  machine  can  make  the  structures  like  the  peg  and 
rings,  the  toy  car  or  a  toy  ship  unassisted,but  slowly, 
taking  an  hour  or  two  to  find  and  assemble  the  parts. 
It  completes  the  assembly  correctly  about  four  times 
out  of  f i v e. 
programming  of  the  assembly  operations  somewhat,  but 
removing  the  need  to  program  movements  in  terms  of 
numerical  co-ordinates  would  need  a  new  approach. 
The  system  is  about  50K  of  POP-2  code. 

It  should  be  possible  to  ease  the 

3. 

How  The Syatem Performs  the  Task 

The  system  transforms  a  heap  of  parts  into  a 

completed  assembly,  typically  going  through  the 
following  s t e p :-

Layout: 

Identify  parts  visually  and  put  them  in 

standard  positions. 

1. 

Locate  a ll  parts  or  heaps  of  parts  on  the 

table  using  the  side  camera  (wide  angle). 

Inspect  each  part  or  heap  with  the  overhead 
If  it  is  recognisable  as  an  isolated  part 

2. 
camera. 
pick  it  up  and  lay  It  out  in  a  standard  position  and 
orientation. 

3. 

If  there  are  no  parts  or  heaps  l e f t,  or  if 
a ll  the  required  parts  have  been  found  go  to  step  5. 

4.  Using  the  overhead  oamera  look  for  a 

protrusion  in  the  smallest  heap,  grasp  the  protruding 
part  or  parts  and  separate  them  from  the  heap  and  go 
to  step  1. 
If  it  has  no  protrusions  try  to  break  up 
the  heap  by  picking  it  up  as  a  whole  and  turning  it 
If  this  does  not  work, 
over  so  that  it  falls  apart. 
t ry  pushing  it  with  the  hand  at  various  heights. 
If 
s t il  no  success,  try  another  heap.  Go  to  step  1. 

5. 

If  some  parts  are  missing,  complain. 

If 

there  are  more  parte  than  are  needed,  clear  them  away. 
Assembly: 

Pick  up  each  part  from  its  standard  position  and 

insert  it  into  the  assembly,  by  f e e l.  A  workbench 
with  a  simple  vice  and  various  working  surfaces  is 
used. 

The  program  is  written  as  two  quite  distinct  sub­

programs,  layout  and  assembly.  At  present  they  do 
not  communicate; 

they  both  know  the  standard 

TAble 
Hierarchical  structure  of  e n t i t l es 
An  e n t i ty  is  e i t h er  a  table  top,  or  an  object-set,  or 

— 

- 

' 

.

1

1. 

an  object,  or  a  part,  or  a  hand,  or  a  workbench,  or 
a  heap,  or  a  stable  state,  or  a  view,  or  a  region, 
or  a  hole-set,  or  a  hole,  or  an  o u t l i n e,  or  a  seg(cid:173)
ment. 

A  table  top  has  an  object-set. 
An  object-set  has  objects. 
An  object  is  e i t h er  a  p a r t,  or  a  hand,  or  a  workbench, 

or  a  heap. 

A  part  has  stable  states. 
A  stable  state  has  a  view. 
A  view  has  a  region. 
A  region  has  an  outline  and  a  hole-set. 
A  hole-set  has  holes. 
A  hole  has  an  o u t l i n e. 
An  outline  has  segments. 

positions  and  orientations  of  the  parts. 
subprogram  uses  descriptions  of  the  parts,  acquired 
during  the  i n s t r u c t i on  phase, 
them  up, 
i n to  standard  positions. 
The  assembly  subprogram 
works  b l i n d,  using  no  i n t e r n al  descriptions  of  the 
p a r t s. 
i n s t r u c t i on  phase. 

t u rn  them  over  if  necessary  and  put  them 

It  is  w r i t t en  i n t e r a c t i v e ly  during  the 

to  recognise  them,  pick 

The  layout 

. 

The  system  carries  cut  the  steps  l i s t ed  above  at 

'execution  t i m e '. 
It  is  able  to  do  so  because  the 
f o l l o w i ng  steps  have  been  carried  out  previously  at 
' i n s t r u c t i on 
A. 

I n s t r u c t i ng  the  layout  program 
For  each  part  in  each  stable  state  ( e . g.  r i g ht 

t i m e '. 

way  up,  or  on  i ts  s i d e ). 

1. 

The  operator  places  the  part  on  the  table 

the  machine  takes  a 

under  the  v e r t i c al  camera, 
picture  and  creates  from  it  an  i n t e r n al  deacription  of 
that  view  of  the  p a r t. 
times,  and  the  machine  adjusts  i ts  descriptions  each 
time, 
taking  note  of  the  v a r i a t i o ns  caused  by 
r e o r i e n t a t i on  of  the  part  and imperfect picture 
information. 

This  is  repeated  several 

2, 

The  programmer  types  in  on-line  commands  to 

to  pick  up  the  object, 

it  down  and  pick  it  up  again  if  necessary, 

turn  it  over, 
move  the  hand, 
put 
then 
to  put  it  down  in  the  standard  position  and  o r i e n t­
( if  the  assembly  has  several  i d e n t i c al  parts 
a t i o n, 
separate  commands  are  given  f or  putting  each  one  down 
in  i ts  own  place.) 
The  programmer  intersperses  these 
commands  with  i n s t r u c t i o ns  to  remember  the  current 
s t a t e,  e . g.  when  the  hand  has  closed  over  the  p a r t. 
The  system  takes  a  note  of  these  specified  states  and 
at  execute  time  constructs  a  sequence  of  actions 
put 
a t i o n, 

the  part  i n to  i ts  standard  position  and  o r i e n t­

to 

B.  Writing 

the  assembly  program 

For  each  part 
1. 

The  programmer  puts  the  part  on  the  table  in 

i ts  standard  p o s i t i on  and  o r i e n t a t i o n,  and  he  i n t e r­
a c t i v e ly  devises  and  edits  some  POP-2  program  to  make 
the  machine  pick  up  the  part  and  f it  it  i n to  the 
assembly. 
operations,  and  two  high  level  manipulation  operations 
provided  f or  constrained  moves  and  hole  f i t t i n g. 

His  program  uses  basic  move  and  grasp 

4. 

The  Layout  Subprogram;  Descriptions 

We  must  f i r st  explain  the  kind  of  i n t e r n al 

descriptions  of  parts  used  in  the  layout  program. 
We  can  then  show  how  it  creates  these  descriptions  at 
i n s t r u c t i on  time  and  how  it  uses  them  to  recognise 
partB  at  execution  time. 
s i m p l i f i ed  a  few  programming  d e t a i l s,  glossing  over 
some  unnecessary  or  uninteresting  d i s t i n c t i o n s. 

For  c l a r i ty  we  have 

The  program  works  in  terms  of  a  hierarchy  of 

concepts  c a l l ed  e n t i t i e s,  each  represented  by  program 
data  s t r u c t u r e s,  having  other  e n t i t i es  as  i ts  com­
ponents. 
Table  1  and  Table  2  gives  a  b r i ef  description  of  each. 

The  e n t i t i es  used  are  summarised  in 

299 

Table  2 
The  e n t i t i es  used 
The  Table  top  is  the  whole  c o l l e c t i on  of  things  on  the 

t a b l e. 

An  Object  is  any  physical  thing  on  the  table  which  can 
be  seen  or  touched; 
it  is  i n i t i a l ly  distinguished 
from  i ts  surroundings  by  clear  space  on  the  t a b l e. 

A  Part  is  one  of  the  separate  pieces  needed  f or  the 

assembly  e.g.  one  of  the  wheels  of  the  car. 

A  Stable-state  is  one  of  the  states  in  which  a  part 

can  rest  on  the  table, 
or  position  e.g.  on  i ts  side,  upside  down. 
should  be  only  a  small  number  of  distinguishable 
such  states. 

irrespective  of  o r i e n t a t i on 
There 

A  View  is  an  analysed  TV  p i c t u r e. 
A  Region  is  a  connected  l i g ht  area  in  a  p i c t u r e, 

possibly  w i th  darker  holes  (we  use  l i g ht  objects 
on  a  dark  background). 

A  Hole  is  a  dark  area  inside  a  region. 
An  Outline  is  the  outer  boundary  of  a  region  or  hole. 
A  Segment  is  a  segment  of  a  c i r c le  (up  to  360  )  with 

specific  length  and  curvature  (zero  curvature 
means  a  straight  segment). 
The  i r r e g u l ar  boundary 
of  a  region  or  hole  is  analysed  i n to  a  small  number 
of  segments  by  curve  f i t t i ng  ( F i g.  6 ). 

Bach  e n t i ty  either  has  an  n-tuple  of  components, 

The  size  of  the 
or  it  has  a  aet  of  components. 
n-tuple  is  fixed  as  in  the  above 
'syntax', 
example  a  region  has  a  pair  of  components; 
but 
size  of  the  set  is  not  f i x ed  u n t il  i n s t r u ct  time, 
f or  example  the  system  discovers  that  the  hole-set  of 
a  car  body  side  view  has 

two  holes. 

the 

f or 

An  e n t i ty  may  possess  properties  and  some 

relations  (at  present  only  binary  ones)  may  subsist 
between  i ts  components. 
have  names  and  may  be  truth-valued  or  take  values  in 
some  other  domain  such  as  numbers. 

The  properties  and  relations 

We  make  an  important  d i s t i n c t i on  between  two 

An  individual 

Bach  has 

kinds  of  e n t i t i e s:  model  and  i n d i v i d u a l. 
e n t i t i es  of  i ts  own  kind  as  components. 
e n t i ty  is  an  internal  description  generated  by  a 
p a r t i c u l ar  exposure  to  a  physical  objeot  using 
information  from  TV  camera  and  hand  aensors. 
when  the  operator  puts  a  car  body  on  the  t a b l e, 
machine  takes  a  picture, 
turns  it  over  and  takes 
another  p i c t u r e,  one  i n d i v i d u al  e n t i ty  of  type  ' p a r t' 
is  generated  and  two  i n d i v i d u al  e n t i t i ea  of  type 
'view'  are  generated, 
A  model  e n t i t y,  on  the 
l i n e s,  holes,  segments  e t c. 
is  a  summary  or  composite  of  a  number  of 
other  hand, 
such  experiences. 
The  end  result  of  the  i n s t r u c t i on 
phase  is  a  collection  of  model  e n t i t i es  incorporating 
the  system's  knowledge  about  the  p a r t s, 
outlines  e t c .; 

the  i n d i v i d u al  parts,  view  and  out-

together  w i th  i n d i v i d u al  out­

t h e ir  views, 

Thus 
the 

l i n es  which  gave  r i se  to  these  w i ll  have  been  d i s­
carded. 

The  important  operation  in  recognition  is 

the 
creation, 
from  v i s u al  and  t a c t i le  sense  data,  of  an 
i n d i v i d u al  e n t i ty  which  matches  a  model  e n t i ty  and 
whose  components  match  the  components  of  the  model 
e n t i t y. 
i ts  model  and  one  to  i ts  sense  data, 
them  together; 
information,  e . g.  p o s i t i on  and  o r i e n t a t i o n,  not 
appropriate  to  model  e n t i t i e s. 

thus  binding 
it  also  contains  c e r t a in  s p e c i f ic 

The  i n d i v i d u al  e n t i ty  contains  a  pointer  to 

There  are  a  few  exceptions  to  the  above. 

The 

system  does  not  create  models  f or  i ts  hand  or  the 
workbench  at  i n s t r u c t i on  time; 
beforehand. 
i n d i v i d u al  heap  is  generated  by  e l i m i n a t i o n,  on 
f a i l u re  to  recognise  a  p a r t,  hand  or  workbench. 

There  is  no  model  f or  a  heap  since  an 

these  are  given 

The  system  has  a  data  structure  f or  each  model 

these  are  POP-2 

e n t i ty  and  i n d i v i d u al  e n t i t y; 
records  linked  by  pointers  to  t h e ir  components  i n to 
tree  structures. 
each  e n t i ty  c l a s s, 
the  class  ' r e g i o n '. 
belongs  to  some  class  and  c e r t a in  data  pertains  to 
the  class  as  a  whole  -  f or  example  a  l i st  of  the 
properties  which  an  entity  of 
functions 

There  is  also  a  data  structure  f or 
f or  example  the  class 

Each  model  or  i n d i v i d u al  e n t i ty 

for  computing  t h e ir  values. 

that  class  enjoys  and 

'view'  and 

To  b u i ld  e n t i t i es  the  machine  needs  raw  material 

which  we  shall  c a ll  'sense  data1,  information  from 
the  TV  camera  or  possibly  the  hand  sensors  which  has 
not  yet  been  recognised  as  r e f e r r i ng  to  any  known 
e n t i t y. 
The  recognition  process,  which  we  describe 
below,  takes  a  model  e n t i ty  and  some  sense  data  and 
t r i es  to  create  an  i n d i v i d u al  e n t i ty  which  corresponds 
to  the  model. 

Table  3  summarises  the  four  notions  of  e n t i ty 

i n d i v i d u al  e n t i ty  and  sense  data 

class,  model  e n t i t y, 
showing  what  information  is  associated  w i th  each. 
The  use  of  t h is  information  w i ll  be  clearer  when  we 
discuss  the  recognition  process. 
The  matching  process  which  recognises  parts 

To  understand  the  recognition  process  l et  us 

This  may  be  during  the  instructionphass when 

consider  what  happens  when  the  system  has  taken  a  TV 
picture  and  t r i es  to  i n t e r p r et  it  as  a  side  view  of  a 
car  body. 
it  has  been  t o ld  that  it 
of  a  car  body,  or  during  the  execution  phase  a f t er  it 
had  found  an  upright  car  body  and  turned  it  over. 
Or 
again  it  might  be  dealing  w i th  an  unknown  object,  and 
•sideview  of  car  body'  might  be  j u st  one  possible 
i n t e r p r e t a t i on  among  several  which  it  was 
t r y i n g. 

the  side  view 

is  looking  at 

The  TV  p i c t u r e,  a  2-dimensional  array  of  b r i g h t-

ness  l e v e l s,  constitutes  a  sense  datum,  d  in  D, 
A 
matching  function  is  now  applied  to  t h is  sense  datum 
and  the  model  of  the  side  view  of  the  car  body. 
This  function  produces  a  set  of  i n d i v i d u al  side  views 
of  car  bodies,  an  empty  set  if  there  is  no  way  of 
i n t e r p r e t i ng  the  p i c t u re  as  such  a  view,  otherwise  one 
element  f or  each  possible  i n t e r p r e t a t i o n. 

Thus 

matchi  Sense  data  x  Models  ->  Set  of  i n d i v i d u a ls 
The  matching  function  works  i ts  way  recursively 

the  region  it  is 

Thus  it  might  f a il  because 

down  the  hierarchy  from  top  to  bottom,  comparing 
gross  properties  on  the  way  down  and  f a i l i ng  if  they 
are  too  discrepant. 
the 
area  of 
the  p i c t u re  is 
too  small 
analyse  the  o u t l i ne  of  the  r e g i o n. 
it  refines 
region  f i n d er  routine  to  set  region  l e v el  sense  data 
from  the  view  l e v el  brightness  array, 
f i n d i ng  holes 
w i th  the  same  routine  to  get  hole  data  and  f i t t i ng 

the  sense  data,  using  a  t h r e s h o l d i ng 

for  a  car  body,  without  bothering  to 

As  it  goes  down 

looking  at  in 

300 

(We 

curves  to  the  perimeters  to  get  segment  data. 
have  called  the  region  f i n d er  and  curve  f i t t er 
'component  f i n d i ng 
f u n c t i o n s ' )*  When  it  gets  to  the 
bottom  l e v el  the  recursion  unwinds  and  passes  up  the 
hierarchy  descriptions  of  i n d i v i d u al  e n t i t i e s,  using 
t h e ir  f i n er  properties  and  r e l a t i o ns  between  them  to 
establish  correspondence  w i th  the  model. 
l e v el  the  matching  function  produces  a  set  of 
i n d i v i d u al  e n t i t i es  each  of  which  might  correspond  to 
the  model, 
thus  dealing  w i th  ambiguity  essentially  as 
would  a 

'back-track'  or  n o n d e t e m i n i s t ic  process. 

At  each 

To  be  more  precise,  the  function  'match'  works 

as  f o l l o w s t-

Function  mateh(d,m) 

Let  c  be  the  e n t i ty  class  of  m. 
Let  f  be 

the  special  matching  function  of class 

c. 

r e s u lt  =  f(d,m) 

The  special  matching  function  f  may  vary  from 
'general-match', 

class  to  class,  but  normally  f  is 
defined  as 
general-match  :  Sense  data  x  Models  -> Sets of i n d i v i d u a ;s 
Function  general-mateh(d,m) 

f o l l o w s :-

Let  c  be  the  e n t i ty  class  of  m. 
Let  F  be  the  set  of  properties  f or  class  c. 
For  each  p  in  P,  oompare  f  ( d ), 

the  value  of 

property  d  f or  the  senaePdatum,  w i th  the  value  of 
p  in  the  model  m. 
crepancy  e x it  with  r e s u lt  =  empty  set. 

If  there  is  too  much  dis-

Case  1.  m  has  an  n-tuple  of  components,  m 1 . . . , m.  . 

Ii=match(d.fm,). 

Apply  the  component  f i n d i ng  functions  of  the 
class  c  to  d, 
to  f i nd  sense  data  relevant  to  the 
components  say  d1..........,dn  .  As  each  d.  is  com-
puted,  match  it  against  the  oomponentJm,, 
thus 
l et 
is  empty  then 
e x it 
Otherwise  use  each  element 
Cartesian  product  of  the  setsJof  I n d i v i d u al 
components) 
these  components. 

Immediately  w i th  r e s u lt  " e m p ty  set. 
(the 

to  construct  a  new  i n d i v i d u al  w i th 

The  r e s u lt  is  the  set  of 

If  some  I. 

of. 

I 

these  i n d i v i d u a l s. 

Case  2.  m  has  a  set  of  components,  S  . 

f 

Use  the  r e l a t i on  value  f i n d i ng 
f or  r  in  R, 

Apply  the  component  f i n d i ng  functions  f or  class 
c  to  f i nd  a  set  of  sense  data  relevant  to  the 
components,  S .. 
functions  of  e, 
to  compute  the 
values  of  relations  between  the  Sd.  Compare 
these  with  the  known  values  of  the  r e l a t i o ns  f or 
the  S  ,  and  use  the  r e l a t i o n al  structure  matching 
algorithm  (described  below), 
function  match, 
3.  which  correspond. 
s u f f i c i e n t ly  large  construct  a  new  i n d i v i d u al 
e n t i ty  from  eaoh  correspondence  among  the  com­
ponents. 
the  set  of  individuals 
so  constructed. 

together  w i th  the 
to  f i nd  the  largest  subsets  of 

If  these  subsets  are 

The  r e s u lt  is 

5 

Matching  Relational  Structures 

A  set  of  segments  forming  the  o u t l i ne  of  a  part 

it  w i ll 

can  be  regarded  as  a  r e l a t i o n al  structure  endowed 
w i th  properties,  such  as  length  and curvature, and 
r e l a t i o n s,  such  as  adjacency,  distance  or  r e l a t i ve 
o r i e n t a t i o n,  s i m i l a r ly  f or  holes  or  objects  on  the 
table  top. 
Although  the  properties  and  relations 
usually  take  numerical  values  (length) 
s i m p l i fy  the  discussion  to  t a lk  in  terms  of  t r u th 
valued  ones  ( l o n g,  medium,  s h o r t ). 
given  in  the  l a st  section  there  is  a  point  (case  2) 
where  we  need  to  put  two  sets  (of  segments,  say)  i n to 
correspondence  on  the  basis  of  these  properties  and 
r e l a t i o n s. 
TV  picture  processing  being  what  it  is 
we  expect  discrepancies  (segments  missing,  two  seg­
ments  coalesced)  but  we  want  to  match  as  many 
elements  as  possible. 
l i n es  and  corresponding  r e l a t i o n al  structures; 
have  several  common  substructures,  e.g. 
{ 1 1 ' , 3 2 ',  54*,  43'). 

Pig.  7  shows  two  simple  out­
they 

In  the  algorithm 

More  p r e c i s e l y,  by  a  r e l a t i o n al  structure  we 

mean  a  set  S  of  elements  together  w i th  a  set  of 
properties  P  and  a  set  of  r e l a t i o ns  R  over  it  (we 
consider  only  binary  r e l a t i o ns  here). 
Given  two 
r e l a t i o n al  structures  <S,,P,R>  and  <S2,P,R>  we  define 
a  match  between  them  as  a  set  T1  C  s1  a  set  T2C  S2 
and  an  isomorphism,  ~  ,  between  T1  and  T2  preserving 
properties  and  r e l a t i o n s. 
p(s1) 
■' 
imply  r(S1,S1')  i ff  r(s2,s2')  f or  each  r  in  R, 
and  a  match  represents  a  common  substructure  in  our 
two  r e l a t i o n al  s t r u c t u r e s. 

Thus  s1  =  s2  implies 
i ff  p(s2)  f or  each  p  in  P,  also  S1=S2  and 

s1 

In 

1 1 ',  1 2 ',  1 4 ',  23',  3 1 ', 
We  say  two  assignments  <s1S2> and 

By  an  assign-
We  can  f i nd  matches  as  f o l l o w s. 
nwijiv  we  mean  a  pair  <a1,a2>  with  s1  in  Sj  and  s2  in 
ment  we  mean  a  p a ir  <s1,s2>  with  s1 
S2  such  that  p(s1)  i ff  p(s2)  f or  each  p  in  P. 
Fig.  7  the  assignments  are 
3 2 ',  3 4 ' . e t c. 
<s1',s'>  are  compatible  if  r ( s 1 , s ') 
a ll  r  in  R, 
set  of  assignments  such  that  each  assignment  is 
compatible  w i th  every  other  assignment  in  the  set. 
Indeed  we  may  think  of  the  assignments  as  forming 
the  nodes  of  a  graph  w i th  c o m p a t i b i l i ty  as  the 
(symmetric)  r e l a t i on  forming  the  arcs.  Our  problem 
then  is  to  f i nd  t o t a l ly  oonnected  subsets  of  t h is 
graph,  often  c a l l ed  cliques. 

New  by  d e f i n i t i on  a  match  is  j u st  a 

i ff  r ( s „ , s |) 

f or 

A  clique  is  said  to  be  maximal  if  no  other 
Finding  m a x i m al 
A 

clique  properly  includes  i t. 
(Karp7) 
cliques  is  a  w e ll  known  problem 
graph  of  n  assignments  may  have 
(n/2)  maximal 
oliques  in  a  t h e o r e t i c al  bad  case,  but  at  least  we 
can  f i nd  each  maximal  clique  in  time  proportional 
to  n 
by  using  a  refinement  of  a  simple  binary  search 
algorithm given  by  B u r s t a l l 8. 
KnSdel?  gives  a 
s i m i l ar  a l g o r i t h m. 
problem  it  seems  adequate  to  generate  only  largest 

log  n  if  we  push  i t ).  We  can  do  this 

In  fact  f or  our  recognition 

(or  n 

301 

heap  long  enough. 
i n t e r n al  l i n e s,  r e l y i ng  on  the  outline  of  the  heap. 
It  attacks 

Our  program  does  not  detect 

the  smallest  heap  f i r s t. 

A 

The  f i r st  t a c t ic  used  is  to  look  f or  a  pro-
trusion  in  the  heap  o u t l i ne  w i th  a 
'neck'  which 
might  indicate  a  part  which  is  easily  separable. 
number  of  possible  hand  positions  are  then  considered 
so  as  to  pick  up  the  protruding  part  or  parts  without 
f o u l i ng  the  r e st  of  the  heap. 
picking  something  up  the  machine  examines  both  t h is 
and  the  r e st  of  the  heap, 
isolated  p a r t. 
t a c t ic  is  to  t ry 
and  pick  up  the  whole  heap,  then  rotate  the  palms  to 
l et  pieces  f a ll  o f f. 
The  t h i rd  is  to  push  the  heap 
with  the  hand  at  various  heights. 
subtler  ways  of  picking  objects  out  of  a  heap,  but 
for  the  time  being  our  simple  t a c t i cs  s u f f i c e. 
Overall  control  aspects  of  the  layout  program 

t r y i ng  to  recognise  an 

The  second,  cruder, 

Clearly  there  are 

If  it  succeeds  in 

according  to 
the  surface. 
f o l l o w s :-

the  component  of  -um  tangential  to 
The  operation  works  in  d e t a il  as 

ment  which  a  single  c a ll  on  the  constrained  move 
operation  might  produce. 
The  constraining  force 
parameter  may  be  l e ft  undefined  g i v i ng  an  unconstrained 
move 
This  operation  was  suggested  to  us  by  work  at  HIT 
Draper  Laboratory  (Kevins  et  al  15 ). 

in  d i r e c t i on  -u  u n t il  an  opposing  force  is  f e l t. 

The  control  structure  of 

the  layout  program  is 

quite  simple. 
loop.  We  may  transcribe  the  POP-2  code  thus 

At  the  top  l e v el  there  is  a  simple 

This  snables  it 

to  cope  w i th  too  many  or  too  few 
If  one  of  the  lower  l e v el  routines  enoounters 

p a r t s. 
d i f f i c u l t i es 
lower  level  various  routines  on  entry  assign  a  label 
to  the  variable  p i c k - u p - f a i l,  and  f a i l u re  to  pick 
something  up  s a t i s f a c t o r i ly  causes  a  jump  out  to  the 
current 

it  simply  jumps  out  to  loop. 

l a b e l. 

At  a 

Our  recognition  process  is  b a s i c a l ly  recursive 

(we  have  experimented  with  some  process-swapping 
techniques  but  they  are  not  in  our  program  at  present). 
This  does  not  lead  to  too  much  r i g i d i t y,  because  we 
make  rather  extensive  use  of 
f or  example,  when  an  analysis  of  the  outline  of  a 
region 
the  r e s u lt  and,  when  asked  f or  it  again,  simply 
returns  it  immediately. 
only  done  when  needed  and  never  repeated. 

is  required  the  analysing  function  remembers 

Thus  outline  analysis  is 

'memo-functions'  (Michie14) 

6. 

The  Assembly  Subprogram 

This  program  works  b l i n d,  using  only  hand 

It  is  w r i t t en  i n t e r a c t i v e ly  at  i n s t r u c t i on 

sensing. 
time  in  terms  of  basic  hand  moving  and  sensing 
operations 

together  with  two  higher  l e v el  operations. 

The  basic  operations  include 

'raise  z  centime-tea', 

'grasp  to  w  centimetres', 

',  and  functions  f or  reading  forces  on  the 

'move  to  ( x , y ) ', 
palm  by  O 
hand  by  means  of  s t r a in  guages,  namely  gripping  force, 
weight  of  the  object  held  and  torque. 
There  are  two 
higher  l e v el  operational 
f i t t i n g. 

constrained  move  and  hole 

' r o t a te 

Constrained  move. 

This  operation  has  two 

and  £ 

f  a  force  opposing 
Let 

parameters,  both  force  vectors, 
movement  and  f  a  constraining  force,  ( F i g.  9 ). 
u  and  u  be  Tne  u n it  vectors  in  these  two  d i r e c t i o n s. 
Let  6 
The 
hand  attempts  to  move  in  d i r e c t i on  -u  u n t il  it  is 
opposed  by  a  force  larger  than  f  .  ~2t  the  same  time 
it  keeps  in  contact  w i th  a  surface  which  offers  a 
r e s i s t i ng  force  f  . 
The  r e s u l t i ng  movement  w i ll  not 
necessarily  be  in  d i r e c t i on  -u  but  along  the  surface 

be  small  scalar  distances. 

Til 

^* 

302 

The  wooden  car  assembly  gives  an  idea  of  how  the 

A 

It  has  a 

'workbench1  is  used, 

f i x ed  to 
program  proceeds. 
one  corner  of  the  table  ( F i g.  10). 
' v i c e' 
f or  holding  a  wheel  while  an  axle  is  being  inserted, 
consisting  of  an  L-shaped  corner  piece  and  a  pivoted 
bar  which  the  hand  closes  so  that  the  wheel  is  held 
between  the  bar  and  the  L. 
It  also  has  a  v e r t i c al 
' w a l l'  so  that  the  car  body  can  be  held  f i r m ly  while 
the  second  wheel  is  pushed  onto  each  axle. 
in  o u t l i ne  i s :-

The  sequence  of  events, 
( i)  The  hand  puts  a  wheel  in  the  vice  and 

i n s e r ts  an  a x l e. 

( i i) 

It  turns  the  car  body  upside  down,  picks  up 
the  axle  with  the  wheel  on  it  and  i n s e r ts  it  i n to  the 
body. 

( i i i)  Repeat  ( i)  and  ( i i)  f or  the  second  wheel  and 

a x l e. 

( i v)  Put  the  car  body  against  the  wall  upside 

down  with  the  two  wheels  against  the  w a l l. 

(v)  Push  the  remaining  two  wheels  onto  the 

protruding  axles. 

the 

( v i)  Pick  up  the  assembled  oar  and  place  it  on 
t a b l e. 
Assembly  programming  is  s t i ll  quite 

tedious, 

There  is  c l e a r ly  a  l ot  of  t h i n k i ng 

i n v o l v i ng  choice  of  numerical  parameter*  f or  distances 
and  forces,  and  we  have  some  ideas  f or  easing  i t, 
Popplestone1 6, 
to  be  done  before  we  could  make  the  assembly  phase 
as  v e r s a t i le  and  e a s i ly  instrucable  as  the  layout, 
e . g.  by  replacing  numerical  commands  with  i n s t r u c t i o ns 
using  r e l a t i o ns  l i ke 
by  showing  the  machine  intermediate  assemblies. 
p a r t i c u l ar  our  present  assembly  subprogram  does  not 
use  the  i n t e r n al  descriptions  of  the  parts  which  have 
been  acquired  during  i n s t r u c t i on  by  the  layout  pro-
gram. 
Such  descriptions  would  have  to  be  recast  so 
as  to  be  u s e f ul  for  assembly  as  w e ll  as  r e c o g n i t i o n. 

' f i t t i ng  i n t o'  or 
In 

'on  top  of  and 

7, 

Concluding 

Remarks 

W r i t i ng  t h is  program  has  been  a  valuable  exercise 

Report  231,  A r t i f i c i al  Intelligence  Laboratory,  MIT, 
Cambridge,  Mass.  (1970). 
(12)  Cornell,  D.G.  and  Gottlieb,  C.C.  An  e f f i c i e nt 
algorithm  f or  graph  isomorphism. 
J.  Assoc,  comput. 
Mach.,  17.,  51-64.  (1970). 
(13)  Barrow,  H.G.,  Ambler,  A.P.  and  B u r s t a l l,  l . M. 
Some  Techniques  f or  Recognizing  Structures  in  Pictures. 
Frontiers  of  Pattern  Recognition  (ed.  S.  Watanabe) 
New  York:  Academic  Press,  pp.  1-29.  (1972). 
(14)  Michie,  D, 
Nature,  118,  19-22.  (1968). 
(15)  Nevins,  J . L .,  Sheridan,  T.B.,  Whitney,  D.E.  and 
Woodin,  A.E.  The  Multi-Moded  Remote  Manipulator 
System. 
MIT,  Cambridge,  Massachusetts.  (1972). 
(16)  Popplestone,  R.J,  Solving  equations  involving 
r o t a t i o n s. 
Department  of  Machine  I n t e l l i g e n c e,  School  of 
A r t i f i c i al 

Intelligence,  University  of  Edinburgh, 

'Memo'  functions  and  machine  learning. 

Charles  Stark  Draper  Laboratory, 

Research  Memorandum  MIP-R-99. 

E-272O. 

(l973) 

Reference  on  cliques  which  came  to  hand  after  paper 
was  typed:-  „ 
(17)  Akkoyunlu,  E.A.  The  Enumeration  of  Maximal 
Cliques  of  Large  Graphs.  SIAM  Journal  on  Computing. 
V o l.  2.  No.  1.  March.  (1973) 

from  the  point  of  view  of  understanding-  what  problems 
are  important  f or  an  integrated  assembly  system. 
By 
t a c k l i ng  a  d e f i n i te  task  but  imposing  the  requirement 
of  v e r s a t i l i t y,  We  hare  raised  some  i n t e r e s t i ng 
A r t i f i c i al  I n t e l l i g e n ce  questions  without  w r i t i ng  a 
program  j u st  to  j u s t i fy  A . I.  dogmas.  We  hope  to 
work  in  f u t u re  on 
coherent  ( i l)  extending  the  v i s i on  system  to  deal 
better  w i th  side  views 
3-dimensional  teohnigues)  and  to  analyse  half-completedl 
assemblies,  and 
( i i i)  making  it  easier  to  program 
assembly  manipulations,  being  less  specific  about 
nuaerical  co-ordinates  and  the  magnitudes  of  forces. 

( i)  making  the  learning  system  more 

(essentially  r e q u i r i ng 

Acknowledgements 

Donald  M i c h ie  i n i t i a t ed  our  work  on  robotics 

Steve  Salter  and  Gregan  Crawford  made 
Ban  Bobrow 

and  directed  the'  e f f o r ts  to  produce  a  working  hand-
eye  system. 
the  main  contributions  to  the  hardware. 
made  h e l p f ul  suggestions  about  the  v i s i on  and 
recognition  side,  also  about  t h is  paper. 
Ken  Turner 
contributed  the  outline  segmentation  routines  to  our 
v i s i on  work. 
Valuable  ideas  about  assembly  came 
from  MIT  Draper  Labs.  We  are  g r a t e f ul  to  Eleanor 
Kerse  f or  t y p i n g. 
Science  Research  Council  and  from  the  General  Post 
O f f i c e. 

The  project  had  support  from  the 

References 

(1937) 

Proceedings  of  Second 

Vision  Flash  15.  A r t i f i c i al  Intelligence 

(1)  Barrow,  H.G.  and  Crawford,  C.F.  The  Mark  1.5 
Edinburgh  Robot  F a c i l i t y.  Machine  Intelligence  7 
(eds.  B.  Meltzer  and  D.  Michie)  Edinburgh:  Edinburgh 
University  Press,  pp.  465-480.  (1972). 
(2)  Michie,  D.,  Ambler,  A . P .,  Barrow,  H.G., 
B u r s t a l l,  R.M.,  Popplestone,  R.J.  and  Turner,  K. 
Vision  and  Manipulation  as  a  Programming  Problem. 
Proceedings  of  the  1st  Conference  on  I n d u s t r i al  Robot 
Technology.  Nottingham. 
(3)  E j i r i,  M.,  Uno,  T.,  Yoda,  H.,  Goto,  T.  and 
Takeyasu,  K.  An  i n t e l l i g e nt  robot  with  cognition 
and  decision-making  a b i l i t y. 
I n t e r n a t i o n al  Joint  Conference  on  A r t i f i c i al 
I n t e l l i g e n c e.  Imperial  College,  London,  pp.  350-358. 
(1971). 
(4)  Winston,  P.H.  Wandering  About  on  the  Top  of  the 
Robot. 
Laboratory,  MIT,  Cambridge,  Massachusetts.  (1971). 
(5)  Winston,  P.H.  The  MIT  Robot.  Machine 
I n t e l l i g e n ce  7  (eds.  B.  Meltzer  and  D.  Michie) 
Edinburgh:  Edinburgh  University  Press,  pp.  431-463. 
(1972). 
(6)  Feldman,  J.A.  Private  Communication.  (1973). 
(7)  Karp,  R.M.  Redueibility  Among  Combinatorial 
Problems, 
Complexity  of  Computer  Computations 
(ed.  K.E.  M i l l er  and  J.W,  Thatcher)  New  York: 
Plenum  Press,  pp.  85-103.  (1972). 
(8)  B u r s t a l l,  R.M.  Tree-searching  methods  with  an 
a p p l i c a t i on  to  a  network  design  problem. 
Machine 
I n t e l l i g e n ce  1  (eds.  N.L.  Collins  and  D.  Michie) 
Edinburgh:  Oliver  and  Boyd,  pp.  65-85.  (1967). 
(9)  Khodel,  W.  Bestimmung  a l l er  maximalen 
vollstandigen  Teilgraphen  eines  Graphen  G  nach  Stoffers. 
Computing.  V o l.  3.  Ho.  3,  pp.  239-240.  (1968). 
Correction  in  fbi,d.  4,  p.  75. 
(10)  Walts",  D.L.  Generating  Semantic  Descriptions  f rr 
Drawings  of  Scenes  w i th  Shadows. 
I n t e l l i g e n ce  Laboratories  Report  AI  TR-271.  MIT, 
Cambridge,  Mass.  (1972). 
( i l)  Winston,  P.H. 
from  Examples. 

A r t i f i c i al  I n t e l l i g e n ce  Technioal 

Learning  S t r u c t u r al  Descriptions 

A r t i f i c i al 

303 

FIGURE  1 

FIGURE  2 

FIGURE 

3 

FIGURE 

4 

FIGURE 

5 

FIGURE 

6 

304 

305 

MAXIMAL  CLIQUES 

FIGURE 

8 

306 

A  CONSTRAINED MOVE 

FIGURE  9 

FIGURE 

10 

307 

Session  11  Robot  Implementations 

P L A N N I NG  CONSIDERATIONS  FOR  A  ROVING  ROBOT  W I TH  A R M* 

R i c h a rd  A.  L e w is  and  Antat  K.  Bejczy 

Guidance  and  C o n t r ol  Division 

Jet  Propulsion  L a b o r a t o ry 

California  Institute  of  Technology 
91103 

Pasadena,  C a l i f o r n ia 

Abstract 

to  i n t e g r a te  a  v a r i e ty  of  r o b n t ic 

The  Jet  Propulsion  L a b o r a t o ry  is  engaged  in  a 
is  aimed  at 

robot  r e s e a r ch  p r o g r a m.  The  p r o g r am 
the  development  and  demonstration  of  technology 
r e q u i r ed 
f u n c t i o ns 
{locomotion,  manipulation,  sensing  and  perception, 
decision  m a k i n g,  and  m a n - r o b ot  interaction)  into  a 
working  robot  unit  operating  in  a  real  w o r ld  e n v i r o n(cid:173)
ment  and  dealing  w i th  both  man-made  and  natural 
objects. 
This  paper  b r i e f ly  describes  the  hardware 
and  software  system  architecture  of  the  robot  b r e a d(cid:173)
board  and  s u m m a r i z es  the  developments  to  date. 
The  content  of  the  paper  is  focused  on  the  unique 
planning  considerations  involved  in  incorporating  a 
manipulator  as  part  of  an  autonomous  robot  system. 
In  p a r t i c u l a r, 
a rm  t r a j e c t o ry  calculations,  and  a rm  dynamics  and 
control  are  discussed  in  the  context  of  planning  a rm 
motion  in  complex  and  changing  sensory  and  w o r k(cid:173)
space  environments. 

the  effects  of  system  a r c h i t e c t u r e, 

KEY  TERMS:  Robot  system;  Robot  system 
planning;  Robot  breadboard  a r c h i t e c t u r e;  A rm  m o(cid:173)
tion  planning;  A rm  control;  A rm  dynamics;  Sensors 
for  manipulation;  Manipulating  in  natural  and  con(cid:173)
strained  environment. 

1.  0 

introduction 

Autonomous  goal-directed  coordination  of 

locomotion,  manipulation,  and  sensation  and  p e r c e p(cid:173)
tion  in  a  s e m i - n a t u r al  environment  is  the  capability 
being  sought  by  the  J PL  Robot  Research  P r o g r a m. 
The  i n i t i al  goal  of  the  p r o g r am  is  to  demonstrate 
the  integration  of  sensory  and  motor  functions  in  the 
autonomous  performance  of  manipulation  and  loco(cid:173)
motion  tasks  in  response  to  global  commands  issued 
by  an  operator.  The  long-range  goal  is  to  develop, 
test,  and  display  concepts  of  robot  s t r u c t u r e,  system 
integration  and  operation,  and  machine  intelligence 
for  the  design  and  use  of  adaptive  autonomous  m a(cid:173)
chines  for  advanced  space  and  planetary  exploration. 
The  J PL  p r o g r am  utilizes  results  of  p r o g r e ss  ob(cid:173)
tained  at  other  institutions  engaged  in  robotics  and 
artificial 
(Ref.  1  contains  an  extensive  l i st  of  related  l i t e r a(cid:173)
t u r e.  )  The  robot  breadboard  i t s e lf  is  a  mobile 
vehicle  ( s i m i l ar  to  that  used  by  the  astronauts  on  the 
moon)  equipped  w i th  a  six  d e g r e e - o f - f r e e d om  m a n i p(cid:173)
ulator  (a  modified  version  of  the  Stanford  E l e c t r ic 
A r m,  see  Ref.  2),  a  complement  of  sensors  ( T V, 
laser  range  f i n d e r,  navigation  and  guidance  sensors, 
tactile  sensors,  and,  eventually,  p r o x i m i ty  sensors), 
and  a  local  m i n i - c o m p u t er  in  communication  w i th 
remote  c o m p u t e r s,  graphic  displays,  and  operator 
consoles. 

intelligence  work 

reviewed 

in  Ref. 

1. 

* T h is  paper  presents  the  results  of  one  phase  of  r e(cid:173)

search  c a r r i ed  out  at  the  Jet  Propulsion  L a b o r a t o r y, 
California  Institute  of  Technology,  under  Contract 
No.  N A S 7 - 1 0 0,  sponsored  by  the  National  A e r o(cid:173)
nautics  and  Space  A d m i n i s t r a t i o n. 

808 

In  this  paper,  we  focus  on  the  p a r t i c u l ar  plan(cid:173)

ning  considerations  involved  in  i n c o r p o r a t i ng  a 
manipulator  as  part  of  a  total  robot  system  operating 
in  a  complex  sensory  environment  and  dealing  w i th 
both  man-made  and  natural  objects. 
chitecture  of  the  J PL  robot  breadboard  and  then  the 
different  aspects  of  planning  manipulator  motion  are 
discussed. 

F i r st  the  a r(cid:173)

2.  0  Breadboard  System  A r c h i t e c t u re 

The  breadboard  is  divided  into  six  functional 

robot  executive  (REX),  and  o p e r a t o r-

subsystems: 
locomotion,  manipulation,  environment 
sensing  and  perception,  computing  and  data  handling 
f a c i l i t i e s, 
robot  interface.  Each  subsystem  contains  both  h a r d(cid:173)
ware  and  software.  Subsystem  design  is  based  solely 
on  c r i t e r ia  of  functional  c o m p a t i b i l i t y,  p e r f o r m a n c e, 
growth  capability,  and  convenient  interfacing.  Total 
robot  system  integration  w i ll  be  studied  e x p e r i m e n(cid:173)
tally  and  different  concepts  w i l!  be  demonstrated  in 
successive  stages. 

2.  1  Breadboard  Hardware 

The  m a j or  subsystem  hardware  elements  are 
indicating  also  the  physica]  size  of 

shown  in  F i g.  1, 
the  m o v i ng  part  of  the  breadboard. 

F i g.  1.  Breadboard  Hardware  Configuration 

The  v e h i c l e,  on  loan  f r om  M a r s h a ll  Space 

Flight  Center,  provides  a  flat  and  r e l a t i v e ly  stable 
p l a t f o rm  for  mounting  breadboard  elements  to  be 
moved  around  in  the  environment.  T o t al  effective 
load  capacity  o£  the  vehicle  is  about  500  pounds. 
Travel  speed  w i ll  be  l i m i t ed  to  1  m i l e / h o u r.  The 
vehicle  has  A c k e r m a n - t y pe  double  steering; 
ends  can  be  steered  in  the  same  or  opposite  d i r e c(cid:173)
tions.  A l t e r n a t i v e l y,  one  or  the  other  end  only  can 
be  steered.  Each  wheel  is  independently  d r i v en  by 
a  DC  torque  m o t o r.  C u r r e n t l y, 
dynamic  b r a k i n g.  The  suspension  has  a  modified 

the  vehicle  has  only 

the  two 

Inputs  to 

independent  spring  action  at  each  wheel. 
the  vehicle  navigation,  guidance,  and  control  system 
are  furnished  by  odometers  mounted  on  the  front 
wheels  (providing  vehicle  center  line  distance  t r a v el 
information),  a  " r u g g e d i z e d"  d i r e c t i o n al  gyro  c o m(cid:173)
pass  (providing  d i r e c t i o n al  reference),  and  wheel 
drive  motor  tachometers  (providing  information  on 
vehicle  velocity). 

The  manipulator  is  a  modified  version  of  the 
Stanford  E l e c t r ic  A rm  described  in  detail  in  Ref.  2. 
It  has  six  degrees  of  f r e e d o m,  allowing  any  desired 
hand  position  and  orientation  in  an  open  or  slightly 
obscured  workspace.  The  reachable  set  of  points 
(the  workspace)  is  within  a  radius  of  52  inches  m e a(cid:173)
sured  f r om  the  o r i g in  of  the  manipulator  base  r e f e r(cid:173)
ence  f r a m e. 

(See  F i g.  2.  )  The  six  joints  connecting 

TV  cameras  which  w i ll  provide'digitized  stereoscopic 
input  to  both  scene  analysis  and  operator  display 
(Ref.  5).  A  729  by  729  resolution  sequential  column 
d i g i t i z er  furnishes  video  data  for  c o m p u t e r - r a te 
digital  picture  processing  and  operator  display. 
TV  cameras  and  laser  are  mounted  on  a  pan  and  t i lt 
mechanisms  referenced  to  a  common  coordinate 
system  and  w i ll  be  used  as  an  integrated  scene  anal(cid:173)
ysis  subsystem.  A r m - m o u n t ed  p r o x i m i ty  sensors 
{described  in  Ref.  6)  and  tactile  sensors  w i ll  at  a 
later  date  augment  the  environment  sensing  and 
perception  subsystem. 

The 

The  p r o x i m i ty  sensor  is  a  small  (about  0.  3 

cubic  inch)  e l e c t r o - o p t i c al  device  with  a  small 
ellipsoid-shaped  sensitive  volume  permanently  f o(cid:173)
cused  at  a  distance  of  a  few  inches  in  front  of  the 
sensor. 
If  this  p r o x i m i ty  sensor  is  mounted  to  an 
appropriate  place  on  the  hand, 
the  sensitive  volume 
w i ll  move  w i th  and  ahead  of  the  hand  at  a  known  d i s(cid:173)
tance  relative  to  a  reference  point  on  the  hand.  A 
voltage  signal  w i ll  appear  when  the  sensitive  volume 
"touches"  a  solid  surface  as  the  hand  approaches  the 
surface.  This  voltage  signal  can  be  used  to  guide 
and  control  the  t e r m i n al  motion  of  the  hand  in  direct 
response  to  sensed  relative  hand-object  position  and 
orientation.  Of  course,  several  p r o x i m i ty  sensors 
can  be  mounted  on  the  hand,  providing  several  sensi(cid:173)
tive  volumes  in  a  known  pattern  around  the  hand  and 
facilitating  the  design  of  a  versatile  conditional  t e r(cid:173)
m i n al  guidance  and  control  logic  for  hand  motion. 

The  computing  and  data  handling  subsystem 

architecture  is  c u r r e n t ly  based  on  a  remote  PDP-10 
in  the  ARPA  net  as  an  off-line  computer.  This  w i ll 
be  connected  to  a  local  r e al  time  computer  p e r f o r(cid:173)
ming  realtime  robot  control  and  I/O  functions. 
F i g.  3.  )  The  remote  computer  system  w i ll  be  used 

(See 

F i g.  2.  Reference  F r a m es 
F or  .Link-Joint  P a i rs  of  A rm 

the  links  f r om  the  base  to  the  hand  are  in  the  f o l l o w(cid:173)
ing  sequence: 
two  r o t a ry  joints  (providing  shoulder 
azimuth  and  elevation  action),  a  linear  joint  { p r o v i(cid:173)
ding  in  and  out  reach  action),  and  three  r o t a ry  joints 
(providing  the  w r i st  action).  The  hand  is  presently 
a  simple  p a r a l l el  jaw  m e c h a n i s m.  The  joints  are 
driven  by  permanent  magnet  DC  torque  motors 
geared  d i r e c t ly  to  the  corresponding  links.  Depen(cid:173)
ding  on  the  relative  position  of  the  links, 
the  a rm 
can  handle  loads  of  up  to  5-8  pounds  E a r th  weight. 
The  a rm  servo  control  utilizes  analog  position  mea(cid:173)
surements  f r om  the  joint  outputs  and  analog  velocity 
measurements  f r om  the  motor  shafts.  Holding 
torque  at  each  joint  is  provided  by  electromagnetic 
brakes.  The  a r m 's  s t r u c t u r al  stiffness  and  tight 
servo  control  can  provide  hand  positioning  accuracy 
within  a  few  tenths  of  an  inch.  A  suitable  articulated 
and  adaptively  controlled  hand  w i ll  be  added  at  a 
later  date. 

Environment  sensing  and  perception  is  mainly 

obtained  f r om  two  sources:  TV  cameras  and  laser 
ranging.  The  laser  ranging  device  is  a  GaAs  pulsed 
mode  laser  w i th  fast  pulse  (~10  ns).  The  beam  is 
pointed  by  a  gimballed  m i r r or  and  detected  by  a 
p h o t o m u l t i p l i e r.  Provisions  are  made  for  multipulse 
averaging  using  analog  integration  and  variable 
averaging  t i m e.  The  sensing  range  is  tentatively 
up  to  150  feet.  The  design  is  based  on  previous  J PL 
experiments  (Ref.  3).  Related  data  handling  p r o b(cid:173)
lems  are  treated  in  Ref.  4.  The  vision  system  con(cid:173)
sists  of  two  identical  and  optically  p a r a l l el  vidicon 

309 

F i g.  3.  Computing  and  Data  Handling 

Subsystem  A r c h i t e c t u re 

to  process  TV  and  laser  p i c t u r e s, 
to  construct  the 
" w o r ld  model,  "  to  operate  the  different  subsystem 
planning  p r o g r a m s,  and  to  execute  top-level  decision(cid:173)
making  programs  of  the  robot  executive  (REX).  REX 
is  described  in  detail  below. 

The  r e a l t i me  computer  w i ll  interface  w i th  the 

robot  through  input  and  output  units  which  contain 
A /D  and  D/A  c o n v e r t e r s.  A  Cable  Unit  w i ll  contain 
the  necessary  logic  devices  allowing  the  robot  to  be 
tethered  to  the  CPU  via  a  50-100  foot  cable.  TV  data 
f r om  the  robot  w i ll  interface  directly  (via  the  Video 
Converter)  to  the  CPU  through  a  separate  cable.  A 
disk  storage  unit  w i ll  be  used  for  fast, 
mass  storage  and  w i ll  serve  to  store  the  operating 

random  access 

robot  eupport  p r o g r a m s,  TV  and 

system  routines, 
laser  p i c t u r e s,  and  status  files  for  the  operator 
t e r m i n a l.  A  magnetic  tape  unit  w i ll  be  used  for 
p e r f o r m i ng  system  diagnostics  and  for  entering  oper(cid:173)
ating  system  p r o g r a ms  and  any  robot  subsystem  p r o(cid:173)
grams  developed  in  the  off-line  computer.  The 
operator  console  w i ll  allow  operator  interaction  with 
the  system  and  development  of  subsystem  support 
p r o g r a m s. 

The  o p e r a t o r - r o b ot  interface  functions  w i ll  be 
p e r f o r m ed  through  an  I M L AC  t e r m i n al  connected  to 
the  r e a l t i me  computer. 
g r am  development, 
simulation  studies.  The  I M L AC  t e r m i n al  includes  a 
CRT  display,  a  teletype,  and  a  r e a d / w r i te  cassette 
r e c o r d e r. 

(See  F i g.  3.)  D u r i ng  p r o(cid:173)
the  I M L AC  w i ll  also  be  used  for 

2. Z  Breadboard  Software 

The  software  system  architecture  is  essentially 

h i e r a r c h i c al  w i th  the  robot  executive  (REX)  c o n t r o l(cid:173)
ling  and  m o n i t o r i ng  the  various  software  subsystems. 
REX  p e r f o r ms  p r o b l em  solving, 
human  input  command  s t r u c t u r e,  manages  the  " w o r ld 
m o d e l ,"  and  calls  the  m a j or  subsystem  software 
modules  (vehicle,  a r m,  e t c . ).  The  m a j or  subsystems 
are  designed  to  be  largely  independent  of  each  other. 
Necessary  data  concerning  the  state  of  the  robot  and 
environment  used  by  the  various  subsystems  are  f u r(cid:173)
nished  through  the  " w o r ld  m o d e l,  " 

interacts  w i th  the 

A  M a s t er  Control  P r o g r am  (MCP)  ties  the 

various  subsystem  p r o g r a ms  together  and  acts  as  an 
operating  system  for  them.  Present  plans  are  to 
design  the  M CP  in  the  remote  computer  using  the 
mechanisms  in  SAIL  (Stanford  A r t i f i c i al  Intelligence 
Language  ,  Refs.  7  and  8)  for  the  creation  and  control 
of  concurrent  processes.  Operating  system  m o d i f i(cid:173)
cations  are  also  planned  based  on  the  use  of  the 
T E N EX  paging  system  (Ref.  9)  which  makes  available 
i n t e r r u p ts  of  various  types  not  incorporated  into 
SAIL,  Subsystem  p r o g r a ms  can  be  w r i t t en  in  SAIL 
or  possibly  in  other  languages.  SAIL  provides  easy 
linkages  to  F O R T R AN  and  assembly  languages. 

The  total  breadboard  system  is  of  experimental 
the  software  system  is  intended  to  be 

nature.  Thus, 
expandable  and  evolutionary. 

3.  0  Planning  Manipulator  Motion 

This  task  involves  three  separate  efforts: 

s y s(cid:173)

t r a j e c t o ry  planning,  and 
r e(cid:173)

tem  a r c h i t e c t u re  effects, 
manipulator  dynamics  and  c o n t r o l.  These  a r e, 
spectively,  planning  for  manipulator  m o t i o n,  planning 
o{  m o t i o n,  and  execution  of  planning. 
manipulator  m o t i on  occurs  at  the  system  level  in  the 
selection,  design,  and  placement  of  robot  h a r d w a r e. 
Planning  of  motion  involves  the  selection  and  i m p l e(cid:173)
mentation  of  methods  of  specifying  p a r t i c u l ar  motions 
and  motion  constraints.  Execution  planning  deals 
w i th  motion  control  implementation  schemes.  We 
now  consider  each  of  these  three  separately. 

Planning  tor 

3.  1  System  A r c h i t e c t u re  Effects 

Placement  of  the  manipulator  along  the  center 
line  of  the  vehicle  about  8  inches  f r om  the  f r o nt  edge 
of  the  vehicle  p l a t f o rm  allows  a  reasonable  workspace 
for  the  manipulator  on  the  ground  (which  is  18  inches 
below  the  p l a t f o r m)  while  s t i ll  p e r m i t t i ng  access  to 
tools  and  sample  storage  bins  near  the  center  of  the 
p l a t f o r m.  This  placement  does,  however,  give  r i se 
to  s e v e r al  motion  constraints;  the  manipulator  can 

310 

easily  collide  w i th  the  p l a t f o r m, 
p l a t f o r m, 
even  though  the  basic  vehicle  was  modified  exten(cid:173)
sively  to  m i n i m i ze  this  p r o b l e m. 

the  wheels,  and  the  wheel  d r i ve  m o t o r s, 

the  f r o nt  edge  of  the 

the  dual  TV  and  laser  range 

The  manipulator  makes  use  of  both  e x t e r(cid:173)
In  the  i n i t i al  configuration 
the  p r i m a ry  external  sensors  to  be  used 

The  selection  and  placement  of  sensors  give 
r i se  to  additional  motion  constraints  for  the  m a n i p(cid:173)
ulator  as  w e ll  as  allowing  the  manipulator  to  know 
its  w o r l d. 
nal  and  i n t e r n al  sensors. 
of  the  robot, 
by  the  manipulator  are 
finder.  These  are  used  to  determine  a  p r i o ri  m a n i p(cid:173)
ulator  targets  and  are  assumed  to  have  sufficient 
resolution  in  the  i n i t i al  s i m p l i f i ed  robot  environment 
for  effective  target  specification. 
Later  operation  of 
the  robot  in  r i c h er  and  m o re  perceptually  complex 
environments  rendering  the  sole  use  of  these  sensors 
open  to  question  w i ll  be  accompanied  by  the  use  of 
conditional  a rm  control  loops  regulated  by  direct 
inputs  f r om  tactile  and  p r o x i m i ty  sensors.  Use  of 
these  latter  devices  in  conjunction  w i th  an  adaptive, 
articulated  t e r m i n al  effector  w i ll  p e r m it  the  a rm  to 
respond  d i r e c t ly  to  relevant  aspects  of  the  e n v i r o n(cid:173)
ment. 

F i g.  4a  shows  a  p r o x i m i ty  sensor  mounted  on 
the  hand,,  while  F i g.  4b  shows  the  concept  of  p r o x i m(cid:173)
ity  sensor  application  for  t e r m i n al  guidance  and 
control  of  hand  motion  in  "distance  seeking"  and 
"distance  keeping"  modes  of  operation.  A  m o re  de(cid:173)
tailed  treatment  of  p r o x i m i ty  sensor  application  to 
manipulator  control  can  be  found  in  Ref.  10. 

i  ■  UNIFORM  DISTANCE  BETWEEN A 
FIXED  POINT  ON  THE  HAND  AND 
SOLID  OBJECTS  DURING  MOTION 

CONCEPT  Of  PROXIMITY  SENSOR  APPLICATION 
FOR  CLOSED-LOOP  GUIDANCE  AND  CONTROL 
OP  HAND  MOTION 

Fig-  4.  T e r m i n al  Guidance  and  C o n t r ol 
Of  Hand  Motion  Using  P r o x i m i ty  Sensing 

Our  robot-hand  application  calls  for  handling 
a  variety  of  both  regular  (man-made)  and  i r r e g u l ar 
(natural)  objects  of  different  size  and  weight  in  v a r(cid:173)
ious  manipulative  tasks.  T h e r e f o r e,  a  v e r s a t i le 
hand-finger  m e c h a n i sm  w i ll  u l t i m a t e ly  be  r e q u i r e d. 
An  a r t i c u l a t ed  and  adaptively  controlled  hand  (using 
design  and  control  p r i n c i p l es  s i m i l ar  to  those  applied 
in  prosthetic  hand  r e s e a r c h;  see  Refs.  11  and  12) 
w i ll  not  r e q u i re  detailed  a  p r i o ri  i n f o r m a t i on  on  o b(cid:173)
jects  to  be  handled  and  w i ll  ease  the  c o n t r ol  of  many 
details  of  a  grasping  motion  since  the  hand,  while 
gripping  an  object  and  monitoring  only  one  actuator, 
adapts  i t s e lf  " r e f l e x i v e l y"  to  the  shape,  size,  o r i e n(cid:173)
tation,  and  weight  of  the  object. 

Placement  of  tactile  and  p r o x i m i ty  sensors  on 

the  manipulator  i t s e lf  creates  no  new  obstacles  or 
additional  c o n s t r a i n t s,  but  placement  of  the  T V / l a s er 
head  is  a  Berious  p r o b l e m.  The  present  configuration 
places  these  sensors  on  a  mast  above  the  a rm  support 

post  and  represents  a  tradeoff  between  good  viewing 
angle  and  keeping  out  of  the  way  of  the  manipulator. 
Even  so, 
it  is  possible  for  the  manipulator  to  collide 
w i th  the  T V / l a a er  head,  either  in  n o r m al  motion  or 
in  switching  f r om  a  right  a rm  to  left  a rm  configura(cid:173)
tion.  However,  since  the  manipulator  and  T V / l a s er 
systems  are  not  run  simultaneously  in  this  b r e a d(cid:173)
board  and  the  T V / l a s er  head  is  mounted  on  a  p a n / t i lt 
mechanism, 
way. 

these  sensors  can  be  moved  out  of  the 

The  physical  dimensions  of  the  manipulator 

have  been  modified  f r om  the  o r i g i n al  Stanford  design 
to  p e r m it  a  greater  workspace  on  the  ground.  Spe(cid:173)
c i f i c a l l y, 
the  a rm  support  post  has  been  reduced  by 
two  inches  and  the  extendable  boom  lengthened  con(cid:173)
siderably. 

The  i n i t i al  configuration  of  the  robot  thus  p r o(cid:173)

vides  the  tools  for  d e t e r m i n i s t ic  planning  of  a rm 
motion  based  on  a  p r i o ri  T V / l a s er  data  with  motion 
implementation  based  on  feedback  f r o n v i n t e r n al 
position  (pot)  and  rate  (tach)  sensors.  Only  p r i m i t i ve 
tactile  feedback  in  the  i n i t i al  configuration  allows  for 
some  conditional  m o d i f i c a t i on  of  plan. 
In  subsequent 
configurations,  p r o x i m i ty  sensing  and  an  adaptive 
t e r m i n al  effector  w i ll  p e r m it  m o re  flexible  and 
environment-responsive  manipulator  motion  planning. 
In  all  cases, 
nipulator  motion  by  presenting  a  series  of  permanent 
obstacles  to  the  a r m. 

rover  hardware  design  constrains  m a(cid:173)

3.2  T r a j e c t o ry  Planning 

The  t e rm  " t r a j e c t o r y"  is  here  meant  to  refer 

to  some  d e s c r i p t i o n,  p a r t i al  or  complete,  of  the 
path  that  the  a rm  follows. 

T r a j e c t o ry  "planning"  is  the  activity  preceding 

t r a j e c t o ry  execution), 

a rm  motion  (that  i s, 
pose  of  which  is  to  constrain  or  otherwise  define 
that  motion.  Target  and  environmental  obstacle  i n(cid:173)
f o r m a t i on  are  here  assumed  to  be  provided  by  REX 
and  the  " w o r ld  m o d e l ." 

the  p u r(cid:173)

The  degree  to  which  the  t r a j e c t o ry  is  to  respond 

to  external  sensing  during  t r a j e c t o ry  execution  de(cid:173)
fines  a  continuum  of  t r a j e c t o ry  planning.  At  one 
extreme  is  purely  d e t e r m i n i s t ic  t r a j e c t o ry  planning. 
Any  external  sensing  to  be  done  is  p e r f o r m ed  during 
the  planning  stage;  only  a  catastrophe  halts  execu(cid:173)
tion  of  the  planned  path. 
Internal  sensing  is  used 
throughout  execution  to  maintain  the  adherence  of 
actual  motion  to  plan.  D e t e r m i n i s t ic  planning  as(cid:173)
sumes  a  static  w o r ld  during  a rm  motion  as  well  as 
sufficient  a  p r i o ri  knowledge  and  execution  accuracy 
capabilities,  and  l i m i ts  adaptive  c o n t r o l.  Towards 
the  other  extreme  is  conditional  planning, 
the  nature 
of  which  is  highly  dependent  on  the  specific  external 
sensors  used.  The  benefits  of  conditional  planning 
are  f l e x i b i l i ty  of  response  and  possible  reduction  of 
planning  time  at  the  possible  cost  of  increased  r e a l-
time  computation  r e q u i r e m e n t s. 

In  the  i n i t i al  configuration,  d e t e r m i n i s t ic  plan(cid:173)

ning  s i m i l ar  to  that  used  in  the  Stanford  hand-eye 
project  (Refs.  13  and  14)  is  to  be  employed.  Reasons 
include  the  i n i t i al  lack  of  p r o x i m i ty  sensing, 
the 
adequacy  of  T V / l a s er  a  p r i o ri  i n f o r m a t i on  in  the 
i n i t i al  s i m p l i f i ed  environment,  and  the  fact  that  most 
of  the  obstacles  to  a rm  motion  are  (in  the  i n i t i al 
configuration)  permanent  obstacles  known  a  p r i o ri 
and  resulting  f r om  the  placement  of  vehicle  hardware. 
Conditional  planning  is  to  be  implemented  and  i n t e r(cid:173)
faced  w i th  existing  d e t e r m i n i s t ic  planning  at  a  later 
time. 

A  related  distinction  concerns  the  manner  in 

which  the  t r a j e c t o ry  plan  is  specified.  Either  a 
sequence  of  a  few  points  or  the  complete  time  history 
of  the  a rm  (that  i s, 
motion  in  a  constrained  workspace  involves  path 
planning. 

the  path)  can  be  planned.  A rm 

D e t e r m i n i s t ic  path  planning  can  be  performed 
In  the  f o r m er 

the  time  history  of  each  joint  is  planned;  it  is 

In  the 
it  is  the  motion  of  a  particular  point  on 

in  j o i n t - v a r i a b le  space  or  in  3-space. 
case, 
the  combination  of  the  time  histories  of  the  joint  v a r i(cid:173)
ables  that  describes  the  motion  of  the  a r m. 
latter  case, 
the  manipulator  (commonly,  a  point  on  the  hand)  that 
is  planned;  the  required  joint  variable  time  histories 
are  derived  f r om  the  plan.  The  advantage  of  planning 
in  j o i n t - v a r i a b le  space  is  that  the  plan  is  formulated 
m o re  d i r e c t ly  in  t e r ms  of  the  variables  to  be  con(cid:173)
t r o l l ed  during  motion.  The  associated  disadvantage 
is  the  difficulty  in  determining  where  the  various 
links  w i ll  be  during  motion,  a  task  required  to  guar(cid:173)
antee  avoidance  of  collisions  with  the  other  parts  of 
the  robot, 
the  natural  environment,  or  even  with  the 
arm  itself. 

Constraining  the  fingertips  to  describe  an 

elliptical  arc  is  an  example  of  planning  in  3-space. 
In  addition  to  the  difficulties  in  finding  the  path  de(cid:173)
scribed  by  other  points  on  other  links  of  the  a r m, 
there  is  also  the  problem  of  determining  the  kine(cid:173)
matic  sequence  of  joint  variable  values  required  to 
implement  the  plan. 

In  the  Stanford  Hand-Eye  Project  (Refs.  13  and 
the  focus  to  date  has  been  on  deterministic  path 

14), 
planning  in  j o i n t - v a r i a b le  space,  with  some  condi(cid:173)
tional  planning.  Specifically, 
the  time  histories  of 
the  joint  variables  have  been  specified  in  terms  of 
sequences  of  polynomials  with  continuity  of  joint 
variable  value  and  its  f i r st  two  derivatives  guaran(cid:173)
teed  at  the  boundary  points  of  polynomials  in  the 
polynomial  sequence.  The  number  of  polynomial 
segments  and  specified  motion  contraints  determine 
the  total  number  of  coefficients  required  for  a  c o m(cid:173)
plete  quantitative  specification  of  joint  t r a j e c t o r y. 
The  J PL  robot  research  p r o g r am  uses  a  modified 
version  of  the  Stanford  planning  a l g o r i t h m. 

F i g,  5a  shows  the  time  history  of  a  joint  v a r i(cid:173)

It  has  been  found  that  t r a j e c t o r i es  using 

able  described  by  a  cubic,  a  quintic,  and  another 
cubic. 
polynomials  of  degree  five  or  higher  typically  wan(cid:173)
der,  as  shown.  This  behavior  appears  in  observa(cid:173)
tion  as  gross  extraneous  motion  of  the  a r m. 

Use  of  a  q u a r t i c - c u b i c - q u a r t ic  trajectory  r e(cid:173)
veals  a  somewhat  different  p r o b l e m.  As  shown  in 
F i g.  5b, 
the  desire  to  assure  an  appropriate  d i r e c(cid:173)
tion  of  departure  and  approach  of  the  t e r m i n al  effec(cid:173)
tor  can  be  thwarted  by  the  tendency  of  the  q u a r t i c-
cubic-quartic  t r a j e c t o ry  to  overshoot  or  undershoot 
its  endpoint  values. 
The  Stanford  Hand-Eye  project 
used  both  of  these  polynomial  sequences,  eliminating 
overshoot  by  special  code. 

A  t h i rd  polynomial  sequence, 
being  implemented  for  the  J PL  a r m. 
appears  to  m i n i m i ze  the  "wander"  and  "overshoot" 
p r o b l e m s.  T y p i c a l l y,  as  in  F i g.  5c, 
overshoot;  wander,  when  it  occurs, 

five  cubics, 

there  is  no 

is  s m a l l. 

is 

This  trajectory 

Obstacle  avoidance  has  been  implemented  for 
the  J PL  a rm  in  two  ways.  The  f i r st  method  consists 
of  the  specification  of  an  additional  safe  intermediate 
position  for  the  joint(s)  most  c r i t i c a l ly  affecting  a rm 
motion  in  the  sensitive  d i r e c t i o n.  An  additional 

311 

312 

313 

cubic  is  r e q u i r ed  for  each  additional  intermediate 
position  specified. 
The  effect  of  implementing  this 
type  of  obstacle  avoidance  is  shown  in  the  t r a j e c t o ry 
i l l u s t r a t ed  in  F i g s.  6  and  7.  F i g.  6  describes  joint 
variable  motion  and  F i g.  7  i l l u s t r a t es  the  projection 
of  the  same  planned  t r a j e c t o r i es  in  the  base  c o o r d i(cid:173)
nate  system,  as  w e ll  as  the  associated  total  veloci-
ties. 

As  seen  in  F i g.  7a,  the  task  is  to  l i ft  an  object 
f r om  the  ground  ( f r om  xQ  =  2 0 ",  yO=  30",  zQ  -  - 1 7" 
in  the  base  reference  frame)  and  deposit  it  on  the 
vehicle  p l a t f o rm  at  xQ  =  10",  yO  =  - 2 5 ",  zO  -  2". 
The  hand  orientation  is  also  specified  at  both  end 
points  of  the  t r a j e c t o r y.  F u r t h e r, 
mination  of  the  l i f t - o ff  and  t e r m i n al  approach  phases 
of  the  joint  t r a j e c t o r i e s, 
two  i n t e r m i t t e nt  hand  p o s i(cid:173)
tions  are  also  specified.  As  seen  in  F i g-  6,  joint 
t r a j e c t o r i es  #2  and  #5  contain,  respectively,  9  and  8 
segments  due  to  obstacle  avoidance. 

to  aid  the  d e t e r(cid:173)

A  second  method  of  obstacle  avoidance  is  called 

" f r e e w a y s ") 

relating  c o m m o n ly  accessed 

This  freeway  method  is  poten(cid:173)

the  "freeway  method.  "  Precomputed  safe  t r a j e c t o(cid:173)
ries  (called 
points  are  u t i l i z ed  in  conjunction  w i th  entrance  and 
exit  " r a m p s"  relating  planned  a rm  configurations  to 
existing  freeways. 
tially  useful  in  avoiding  obstacles  permanently  affixed 
to  the  vehicle,  such  as  the  T V / l a s er  head  and  support, 
the  wheels  and  wheel  m o t o r s,  and  the  vehicle  plat(cid:173)
f o r m.  P r e s e n t l y,  there  are  14  such  permanent 
obstacles  on  the  JPL  robot.  The  freeway  method  can 
be  used  m o re  frequently  if  the  vehicle  is  positioned 
in  a  predetermined  standard  manner  w i th  respect  to 
objects  of  intended  manipulation. 

Obstacle  detection  is  p e r f o r m ed  by  the  r e l a(cid:173)

for  many  obstacles, 

t i v e ly  cumbersome  method  of  checking  for  c o l l i s i on 
with  all  possible  objects  at  various  points  along  the 
t r a j e c t o r y.  Of  course, 
safety  of  several  links  mast  be  examined. 
case  of  permanent  obstacles,  however, 
property  of  the  relationship  has  been  exploited  to 
produce  a  series  of  increasingly  complex  tests. 
Thus, 
values  can  assure  safe  m o t i o n, 

in  many  cases,  simple  checks  of  joint  variable 

the  invariant 

the 
In  the 

The  dynamics  of  motion  at  the  six  joints  of  the 
a rm  is  described  by  a  coupled  set  of  six  second  order 
nonlinear  d i f f e r e n t i al  equations  w i th  t i m e - v a r y i ng 
(in  fact,  w i th  state-varying)  coefficients.  There  is 
no  simple  p r o p o r t i o n a l i ty  between  torque  {or  force) 
acting  at  one  joint  and  the  acceleration  of  the  same 
j y i nt  when  several  joints  are  in  motion  s i m u l t a(cid:173)
neously.  Even  if  only  one  joint  moves  at  a  given 
t i m e, 
eration  is  a  complex  function  of  the  actual  configura(cid:173)
tion  of  a ll  links  ahead  of  the  moving  joint  and  any 
load  in  the  hand.  The  total  variations  in  link  i n e r(cid:173)
tias  as  seen  at  the  joint  drives  due  to  changes  in  a rm 
link  configuration  or  load  in  the  hand  have  been 
calculated  for  the  J PL  a rm  (Ref. 
in  Fig.  9. 

the  p r o p o r t i o n a l i ty  between  torque  and  a c c e l(cid:173)

] 6)  and  are  shown 

3.  3  Manipulator  Dynamics  and  C o n t r ol 

Execution  planning  deals  w i th  the  specification 

of  control  laws  and  the  design  of  control  schemes 
whose  implementation  w i ll  assure  that  the  physical 
motion  of  the  a rm  w i ll  follow  the  desired  motion. 

A rm  motion  between  distant  points  without 

p r e s c r i b ed  continuous  t r a j e c t o r i es  between  the  points 
can  simply  be  controlled  by  d r i v i ng  each  motor  at 
some  preset  rate  and  t e r m i n a t i ng  the  m o t or  drive 
at  each  joint  when  an  appropriate  signal  (potentiome(cid:173)
ter  or  some  external  sensor)  indicated  that  the  joint 
position  had  reached  the  preset  or  desired  t e r m i n al 
value,  A rm  t r a j e c t o r i es  planned  in  t e r ms  of  c o n t i n(cid:173)
uous  space-time  coordination  of  joint  motions,  how(cid:173)
ever,  r e q u i re  that  the  joints  be  d r i v en  to  comply 
s t r i c t ly  w i th  the  planned  time  h i s t o r i es  of  joint 
positions. 

Several  techniques  are  available  to  build  a 
suitable  position  servo  for  each  joint  d r i v e. 
(See 
Ref.  15.)  An  appealing  c o m p u t e r - o r i e n t ed  servo 
technique  (used  in  the  Stanford  Hand-Eye  project)  is 
to  compute  the  r e q u i r ed  torque  or  force  as  a  func(cid:173)
tion  of  time  for  each  joint  d r i v e,  accounting  also  for 
gear  r a t i o,  efficiency,  and  possible  n o n l i n e a r i t i e s, 
and  construct  the  joint  position  servo  loops  around 

i n e r t i al  acceleration  of  the  j o i n t;  reaction 

In  the  case  of  simultaneous  motion  of  several 
the  effective  torque  (or  force)  acting  at 
a rm  j o i n t s, 
each  joint  is  the  sum  of  a  number  of  dynamic  c o m(cid:173)
ponents: 
torques  or  forces  due  to  acceleration  and  velocity 
at  other  j o i n t s;  g r a v i ty  t e r m s. 
The  r e l a t i ve  i m p o r(cid:173)
tance  of  the  various  dynamic  components  related  to 
the  planned  motion  displayed  i n ' F i g s.  6  and  7  and 
computed  for  the  actual  kinematic  and  i n e r t i al  p a r a m(cid:173)
eters  of  the  J PL  robot  research  a rm  is  i l l u s t r a t ed 

314 

in  Fig-  10.  To  s i m p l i fy  the  displayed  v a r i a t i o n s, 
only  motions  and  inertias  of  the  f i r st  three  joints  are 
accounted  for  in  the  diagrams  of  F i g.  10. 
the  total  l i me  of  motion) 
speed  of  motion  (or  rather, 
is  changed  by  a  factor  n, 
then  the  acce  l e r a t i on  and 
velocity  dependent  torque  and  force-components  of 
F i g.  10  can  simply  be  scaled  by  a  factor  n2. 

If  the 

Two  questions  are  c u r r e n t ly  investigated 
16): 
to  what  extent  should  the  reaction  components 
be  accounted  f o r,  and  in  what  f o rm  should  the  state-
varying  dynamic  coefficients  be  specified  to  ease 
control  scheme  implementation. 

(Ref. 

4.  0  Summary 

The  integration  of  several  robot  subsystems 
into  a  functioning  autonomous  adaptive  machine  r e(cid:173)
quires  significant  planning  considerations  on  all 
system  levels. 
The  J PL  robot  r e s e a r ch  p r o g r am  is 
c u r r e n t ly  focused  on  subsystem  planning  and  design 
and  is  in  the  process  of  implementing  results  in 
hardware  and  software.  The  manipulator  itself  has 
been  manufactured  and  is  undergoing  final  testing. 
Vehicle  modifications  are  partly  completed.  Con(cid:173)
struction  of  the  TV  and  laser  systems  are  in  p r o(cid:173)
gress.  Selection  of  complementary  sensors  and 
other  hardware  and  acquisition  of  a  r e a l t i me  c o n t r o l(cid:173)
l er  (the  local  computer)  are  underway. 
The  design 
and  building  of  the  A /D  and  D/A  interface  units  are 
also  underway.  Development  of  the  executive  and 
subsystem  software  and  the  m a s t er  control  p r o g r am 
have  begun.  The  future  concerns  are  m a i n ly  related 
to  the  implementation  of  subsystem  execution  p r o(cid:173)
g r a m s,  planning  for  subsystem  i n t e r a c t i o n,  and  the 
integration  of  subsystems  into  a  unified  robot  b r e a d(cid:173)
board. 

The  outlined  considerations  and  results  related 

to  the  design  of  a  self-contained  planning  a l g o r i t hm 
for  manipulator  c o n t r o l,  when  the  manipulator  is 
part  of  a  total  robot  system,  suggest  conducting  f u r(cid:173)
ther  w o rk  in  two  directions:  d i r e ct  path  planning  in 
the  object  space;  and  t r u ly  adaptive  manipulator  con(cid:173)
t r ol  through  unification  of  d e t e r m i n i s t ic  and  condi(cid:173)
tional  elements  in  the  planning  a l g o r i t h m. 

Acknowledgment 

The  preparation  of  the  f i r st  part  of  the  paper 

benefited  f r om  discussions  with  several  members  of 
the  J PL  AI  w o r k i ng  group. 

References 

Bejczy,  A.  K.  ,  "Machine  Intelligence  for  Auto(cid:173)

1. 
nomous  Manipulation,  "  Proceedings  of  the  F i r st 
National  Conference  on  Remotely  Manned  Systems, 
California  Institute  of  Technology,  Pasadena,  C a l i f o r(cid:173)
nia,  September  13-15,  1972. 

2. 
Scheinman,  V.  D.  .  "Design  of  a  Computer  Con(cid:173)
t r o l l ed  Manipulator,  "  Computer  Science  Department, 
Stanford  U n i v e r s i t y,  A r t i f i c i al  Intelligence  Project, 
Memo  No.  92,  June  1969,  and 

Dobrotin,  B.  M.  ,  Scheinman,  V.  D.  ,  "Design 
of  a  Computer  Controlled  Manipulator  for  Robot  R e(cid:173)
search,  "  see  in  this  Proceedings,  T h i rd  International 
Joint  Conference  on  A r t i f i c i al  Intelligence. 

Escobal,  P.  R.  ,  et  a l .,  "3D  M u l t i l a t e r a t i on 

3. 
Cone,  A  P r e c i s i on  Geodetic  Measurement  System,  " 
TM  33-605,  Jet  Propulsion  Laboratory,  California 
Institute  of  Technology,  March  15,  1973. 

Hong,  J.  P.  ,  "Registration  of  Points,  "  sub(cid:173)

4. 
m i t t ed  to  the  I E EE  Transactions  on  Computers. 

5. 
Levine,  M.  D.  ,  O'Handley,  D.  A.  ,  Y a g i,  G. 
M.  ,  "Computer  Determination  of  Depth  Maps,  "  to 
appear  in  Computer  Graphics  and  Digital  Display. 

6. 
Johnston,  A.  R.  ,  "Optical  P r o x i m i ty  Sensors 
for  M a n i p u l a t o r s ,"  TM  33-612,  Jet  Propulsion  L a b(cid:173)
o r a t o r y,  California  Institute  of  Technology,  May  1, 
1973. 

7. 
F e l d m a n,  J.  A .,  Sproull,  R.  F.  ,  "System 
Support  for  the  Stanford  Hand-Eye  System,  "  P r o(cid:173)
ceedings  of  the  Second  International  Joint  Conference 
on  A r t i f i c i al  Intelligence,  September  1-3,  197], 
London,  England. 

315 

F e l d m a n,  J.  A.  ,  et  a l.  ,  "Recent  Developments 

8. 
in  SAIL  -  An  A L G O L - B a s ed  Language  f or  A r t i f i c i al 
I n t e l l i g e n c e ,"  1972  FJCC  Proceedings,  December 
5-7,  1972,  A n a h e i m,  C a l i f o r n i a. 

Bobrow,  D.  G.  ,  et  al.  ,  " T E N E X,  A  Paged 

9. 
Time  Sharing  System  for  the  P D P - 1 0 ,"  Proceedings, 
A CM  T h i rd  Symposium  on  Operating  Systems  P r i n(cid:173)
ciples,  Stanford  U n i v e r s i t y,  October  18-20,  1971. 

Bejczy,  A.  K.  ,  Johnston,  A.  R.  ,  "New  T e c h(cid:173)

10. 
niques  for  T e r m i n al  Phase  Control  of  Manipulators,  " 
TM  33-  (to  be  published),  Jet  Propulsion  L a b o r a t o r y, 
C a l i f o r n ia  Institute  of  Technology. 

T o m o v i c,  R.  ,  Boni,  G.  ,  " An  Adaptive  A r t i f i(cid:173)

11. 
c i al  Hand,  "  IRE  Transactions  on  Automatic  C o n t r o l, 
A p r il  1962. 

12. 
Nightingale,  J.  M.  ,  Todd,  R.  W.  ,  " An  Adap-
tively  C o n t r o l l ed  Prosthetic  Hand,  "  Engineering  in 
Medicine,  V o l.  J,  No. 

],  October  1971. 

13. 
Paul,  R.  C.  ,  " T r a j e c t o ry  C o n t r ol  of  a  C o m(cid:173)
puter  A r m ,"  Proceedings  of  Second  International 
Joint  Conference  on  A r t i f i c i al  Intelligence,  London, 
England,  September  197 1. 

Paul,  R.  C, 

14. 
tion  and  Servoing  of  a  Computer  Controlled  A r m,  " 
P h . D.  Thesis,  Computer  Science  Department,  Stan(cid:173)
f o rd  U n i v e r s i t y,  August  1972. 

" M o d e l l i n g,  T r a j e c t o ry  C a l c u l a(cid:173)

15.  M a r k i e w i c z,  B.  R.  , 
Torque  D r i ve  Method  and  Comparison  w i th  Conven(cid:173)
tional  Position  Servo  for  a  C o m p u t e r - C o n t r o l l ed 
M a n i p u l a t o r ,"  TM  3 3 - 6 0 1,  Jet  Propulsion  L a b o r a t o r y, 
California  Institute  of  Technology,  M a r ch 

" A n a l y s is  of  the  Computed 

]5,  1973. 

Bejczy,  A.  K.  ,  "Robot  A rm  Dynamics  and 

16. 
C o n t r o l ,"  TM  33-  (to  be  published),  Jet  Propulsion 
L a b o r a t o r y,  California 

Institute  of  Technology. 

316 

CONTROL  ALGORITHM  OP  THE  WALKER  CLIMBING  OVER  OBSTACLES 

D.E.  Okhotsimski,  A.K,  Platonov 

U  S  S  R 

Session  11  Robot  Implementations 

t e r r a in  p r o f i le  b e f o re 

f or  s i x - l e g g ed  automatic  w a l k e r, 

A b s t r a c t.  The  paper  deals  w i th  t he  p r o b­
t he  m u l t i l e v el  c o n t r ol  a l­

the  w a l k er  w i th  the  p o s s i b i l i­
the 

lem  of  development 
gorithms 
which  p r o v i de 
ty 
to  analyse 
w h i le  moving  over  rough  t e r r a i n,  and  to  s y n­
t h e s i ze  adequate, 
r a t h er  reasonable  kinema­
t i cs  of  body  and 
l o c o m o t i­
on  along  t he  r o u te  and  c l i m b i ng  over  o b s t a c­
l es  on  i ts  way.  DC  s i m u l a t i on  and  a n a l y s is 
of  w a l k e r 's  model  moving  image  on  DC  d i s p l ay 
screen  make 
gorithms  developed  and  to  f i nd  ways  f or 
t h e ir 

improvement. 

f or  w a l k e r 's 

to  evaluate 

it  p o s s i b le 

the  a l­

legs 

it 

Key  words:  s i x - l e g g ed  w a l k e r,  DC  simu­
l a t i o n,  c o n t r ol  a l g o r i t h m,  data  p r o c e s s i n g, 
o b s t a c le  overcoming. 

It 

t h at 

The  paper  deals  w i th  t he  problem  of  con­

the  walker 

is  supposed 

f or  a  s i x - l e g g ed 
is 

t r ol  a l g o r i t hm  s y n t h e s is 
w a l k e r. 
s u p p l i ed  w i th  an  onboard  d i g i t al  computer. 
Rather  a  complicated  a l g o r i t hm  may  be  used, 
which  p r o v i d es  w a l k i ng  over  rough 
i s o l a t ed  obstacles.  lt 
and  c l i m b i ng  over  some 
is  a l so  supposed  t h at 
t he  walker  is  equipped 
w i th  a  measurement  system  g i v i ng  i n f o r m a t i­
on  about 
t he  t e r r a in  r e l i e f.  Measurement  d a­
ta  are  processed  by  DC  and  used  when  making 
d e c i s i o n. 

t e r r a in 

An  e f f e c t i ve  method  of 

t e s t i ng  the  a l­

is 

t he  walker 

is  p o s s i b le 

It 
t e r r a in  r e­

t h e ir  s i m u l a t i on  on  a  d i g i t al 

gorithms 
computer  w i th  a  d i s p l ay  u n i t. 
to  s i m u l a te 
i t s e l f, 
l i e f,  measurement  system  f u n c t i o n i n g!  data 
p r o c e s s i n g,  d e c i s i on  making  and  walker  c o n­
t r o l l i n g.  Observing  on  t he  CRT  screen  t he 
moving  image  of  t he  v e h i c le  w a l k i ng  over  t he 
t e r r a i n, 
oning  of 
e f f e c t i v e n e ss  and  to 
provement  . 

it 
t he  a l g o r i t h m s, 

to  check  the  f u n c t i­

f i nd  ways  f or 

to  estimate 

is  p o s s i b le 

t h e ir 

t h e ir 

i m­

This  paper  deals  w i th  t he  a l g o r i t h ms 

f r om  the  environment 
the  v e h i c le  k i n e m a t i cs 

i n f o r m a t i on 
t he  range 
(output).. 
( i n p u t) 
to 
The  problem  of 
t e r r a in  measurement  data  p r o­
cessing  and  measurement  c o n t r o l l i ng  are  a l so 
i n v e s t i g a t e d.  The  s i m u l a t i on  r e s u l ts  are 
d i s c u s s e d. 

in 

On  t he  f i r st  stage  of 

i n f o r m a t i on  about 

r i t hm  s y n t h e s is  it  was  assumed 
cessary 
t he 
was  got  and  processed  and  was  kept 
computer  memory  in  t he 
i ts  f u r t h er  use 
r i t h m. 

in 

f o rm  convenient 

t he  decision-making  a l g o­

t he  c o n t r ol  a l g o­
t h at  a ll  n e­
t e r r a in  r e l i ef 

in  t he 
f or 

Several  types  of  s i x - l e g g ed  w a l k i ng  sys­

I.  A ll  s ix 

them  is  seen  in  P i g. 

the  w a l k er  have  equal  g e o m e t r i c al  parame­

tem  were  i n v e s t i g a t e d.  Schematic  image  of 
one  of 
legs 
of 
t e rs  and  equal  o r i e n t a t i on  of 
axes.  Each  l eg  has  t h r ee  degrees  of  freedom 
in  the 
j o i nt  and  one 
in 
p e r p e n d i c u l ar  to 
body,  w h i le 
t he  body  p l a ne  and  p e r p e n d i c u l ar  to 

is 
the  v e h i c le 
is  p a r a l l el  to 

in  t he  h ip 
f i r st  hip-joint  a x is 

two 
t he  k n e e.  The 

t he  second  one 

t he  p l a ne  of 

j o i n t s: 

j o i nt 

the 

the 

the  s e­

freedom  in  i ts  motion  r e l a t i ve 

it  may  have  s ix  d e­
to 

t h i g h.  The  knee  a x is  is  p a r a l l el  to 
cond  h i p - j o i nt  a x i s.  The  t o t al  number  of  de­
grees  of 
freedom  in  s ix  legs  amounts  to  e i g h­
t e e n.  The  v e h i c le  body  has  no  k i n e m a t ic  c o n­
s t r a i n t s,  and  t h e r e f o re 
grees  of 
the  s u p p o r t i ng  s u r f a c e. 
t h is 

type  has  r a t h er  r i ch 
k i n e m a t ic  f e a s i b i l i t i es  which  may  be  used  to 
p r o v i de 
t e r­
r a i n.  The  problem  is  to  synthesize  a p p r o p r i­
a te  c o n t r ol  a l g o r i t h ms  which,  could  organize 
the  walker  k i n e m a t ic 
in  a  reasonable  way  f or 
t he  e f f e c t i ve  s o l v i ng  of  d i f f e r e nt 
locomotion 
t a s k s. 

t he  v e h i c l e 's  a d a p t i v i ty 

The  walker  of 

the 

to 

It  was  reasonable 

to  design  c o n t r ol  a l­

gorithms  as  a  m u l t i l e v el  h i e r a r c h i c al  system. 
The  f o l l o w i ng  5 

l e v e ls  were  adopted: 

1.  Leg.  This 

is 
is  necessary  to  synthesize 
the  support  and  swing  phases  and  to  a v o id 
s m a l l - s i ze  o b s t a c l e s. 

the 
lowest  o n e . It 
l eg  motion  d u r i ng 

l e v el 

l e g s, 

2.  L eg  c o o r d i n a t i o n.  This 

l e v el  is  h i g h­
er  than  the  previous  one.  The  l e g - c o o r d i n a t i­
on  a l g o r i t h ms  provide  support  scheduling  of 
the 
l e g s.  The  con-
" u p"  and  "down" 
d i t i on  must  be  s a t i s f i e d:  The  s t a b i l i ty  mar­
g in  of  t he  v e h i c le  should  be  always  no 
l e ss 
t h an  a  given  value.18 

they  generate  sequences  of 

times  f or  a ll 

i . e. 

3.  Standpoint  sequence.  T h is 

l e v el  f i x es 

In  a  simple  case, 

in  advance  s e v e r al  s u p p o r t i ng  p o i n ts  on  the 
support  s u r f a c e. 
t e r r a in  r e l i ef  a l l o ws 
a  r e g u l ar  standpoint  sequence  described  by 
two  parameters: 
s t r i de 
l e n g t h. 
necessary  to  p l an  an  i r r e g u l ar  standpoint  se­
quence,  e . g. 
f or  some  cases  of  c l i m b i ng  over 
o b s t a c l e s. 

the  gauge  w i d th  and  the 
In  more  complicated  cases 

l e v el  generates 

t he 

the 

i t, 

if 

it  is 

4.  Body.  The  output  of  t h is 

l e v el 

is  the 

parameters  of  motion  of 
t he  w a l k e r 's  centre 
of  mass  b o th  along 
the  r o u te  and  in  v e r t i c al 
d i r e c t i o n,  and  t he  parameters  of  body  r o t a t i­
on  ( p i t c h, 

jaw,  r o l l ). 

5.  Route.  The  r o u te  p l a n n i ng 

l e v el  is 
the  h i g h e st  one.  Up  to  now  the  r o u te  of  t he 
walker  has  been  planned  by  an  o p e r a t o r. 

P i g.  2  shows 

i n t e r l e v el  i n f o r m a t i on  f l o w. 

The  complex  of  c o n t r ol  a l g o r i t h ms 
l i n e d.  Dotted  l i n es 
r a in  i n f o r m a t i on 

i n d i c a te 
to  d i f f e r e nt 

the  f l ow  of 
l e v e l s. 

is  dash-

t e r­

It  was  reasonable 

to  begin  d e s i g n i ng 
l e v e ls  and  then 

the  outputs  of  h i g h er 

the  a l g o r i t h ms  f r om  lower 
pass  on  to  t he  h i g h er  ones.  When  t e s t i ng  the 
a l g o r i t h ms 
l e v e ls  were 
i m i t a t e d. 
The 
the 

i n i t i al  stage  of 
l e g - c o n t r ol  a l g o r i t hm  in  the  simple 

w i th 
case  of  r e g u l ar  g a it  of 
along  the  r e g u l ar  s t a n d p o i nt  sequence.  The 
body  moved  w i th  constant  v e l o c i t y.  The 
i m i­
the 
l e g - c o n­
t a t i on  of 
r a t h er  s i m p l e. 
t r ol 

the  walker  moving 

l e v e ls  h i g h er  to 

in  t h is  case, 

l e v el  was, 

i n v e s t i g a t i on  d e a lt 

the 

317 

The  leg-control  algorithm  provided  v e r t i c al 
legs  adaptation  to  small-scale  t e r r a in  rough­
ness. 

A  special  block  was  designed  for  synthe­
sizing  l e g - t ip  motion  during  the  swing  phase 
in  the  case  of  complicated  small-scale  r e­
l i e f.  The  ordinates  of  the  l e g - t ip  t r a j e c t o­
ry  (Fig.  3)  were  calculated  as  the  sum  of 
the  ordinates  of  the  convex  envelope  of  the 
r e l i ef  (dashed  l i ne  in  F i g.  3)  and  of  the 
ordinates  of  a  parabola  with  v e r t i c al  a x i s. 
The  parabola  was  chosen  in  such  a  way  that 
i tB  ordinates  were  equal  to  zero  both  in  the 
i n i t i al  and  f i n al  points. 
that  the  horizontal  component  of  the  l e g - t ip 
velocity  was  constant  during  the  whole  swing 
phase. 

It  was  assumed 

For  the  second  l e v el  of  leg  coordination 

-  the  algorithm  f or  support  scheduling  with 
prescribed  s t a b i l i ty  margin  was  designed  in 
a  general  case  f or  i r r e g u l ar  standpoint  se­
quence . 

Two  types  of  gait  were  investigated: 
1.  Tripod  g a i t.  Each  of  the  two  tripods 
consists  of  foreleg  and  hind  leg  of  one  size 
and  of  middle  leg  of  another  size.  Three 
legs  of  the  t r i p od  swing  simultaneously.Two 
tripods  swing  a l t e r n a t e l y.  F i g.  4a  i l lu  -
strates  the  adopted  logics  of  calculating 
"up"  and  "down"  times  of  the  t r i p od  in  the 
case  when  a ll  legs  of  the  same  side  use  the 
same  standpoint  sequence  ("step-in-step" 
type  of  locomotion).  The  swing  phase  of  the 
t r i p od  coincides  with  the  time  i n t e r v al  when 
the  projection  of  the  centre  of  mass  of  the 
walker  moves  between  two  dashed  lines  inside 
the  supporting  t r i a n g le  formed  by  the  legs 
of  the  other  t r i p od  (Fig.  4a).  This  logics 
provides  s t a b i l i ty  margin  of  prescribed  va­
l u e. 

2.  Wave  g a i t .18  The  idea  of  t h is  type 

of  gait  was  taken  from  one  of  the  enthomolo-
g i c al  papers  by  D.  Wilson.14  The  swing  waves 
propagate  along  the  legs  of  each  side  of  the 
walker  beginning  from  the  hind  legs.  The 
hind  legs  of  both  sides  start  a l t e r n a t e l y. 
Support  scheduling  logics  is  shown  in 
F i g.  4b,  The  time  i n t e r v al  between  the  s t a rt 
of  the  hind  leg  and  the  standing  of  the  fo-
releg  (wave  propagation  time)  was  calculated 
under  condition  of  prescribed  s t a b i l i ty  mar­
g i n.  Two  equal  intervals  of  simultaneous 
support  of  hind  and  middle  legs,  and  of  mid­
dle  and  f r o nt  legs  were  subtracted  from  the 
wave  propagation  time.  The  rest  of  the  time 
was  devided  among  three  legs  proportional 
to  t h e ir  strides  (the  r u le  of  constant 
l e g-
t ip  horizontal  v e l o c i t y. 

It  should  be  noted  that  in  special  case 
of  regular  standpoint  sequence  the  gaits  ge­
nerated  both  by  wave  and  by  t r i p od  algo­
rithms  may  coincide.  But  in.  general  case  of 
i r r e g u l ar  standpoint  sequence  algorithms 
synthesize  d i f f e r e nt  g a i t s. 

The  designed  algorithms  of  t h is  l e v el 

generated  support  schedule  f or  both  cons­
tant  and  variable  v e l o c i ty  of  the  body  in 
general  case  of  curve  route.  The  body  r o t a­
t i on  and  the  v e r t i c al  component  of  body  ve­
l o c i ty  might  be  taken  i n to  consideration. 

318 

On  the  t h i rd  l e v el  two  versions  of 

standpoint  planning  algorithms  were  designed 
which  were  able  to  generate  standpoint  se­
quences  f or  a r b i t r a ry  curve  route  on  the  sup­
port  surface  with  small-scale  roughness. 
It 
was  assumed  that  each  point  of  the  surface 
might  be  used  as  a  standpoint. 

Some  algorithms  were  designed  f or  gene­

r a t i ng  special  i r r e g u l ar  standpoint  sequen­
ces  in  case  of  overcoming  obstacles. 

The  f o u r t h - l e v el  algorithms  formed  body 

motion  f or  curve  route  under  the  above  men­
tioned  condition  r e l a t i ve  to  the  support 
surface.  Some  cased  of  overcoming  obstacles 
were  considered. 

F i g.  5  presents  an  example  of  the  walk­
e r 's  locomotion  along  the  curve  route.  The 
vehicle  moved  at  f i r st  along  the  r e c t i l i n e ar 
segment  AB.  Then,  at  point  B, 
it  changed  i ts 
route  and  began  walking  along  the  c i r c le  of 
the  prescribed  radius  around  the  object  l o­
cated  inside  the  c i r c le  (part  BOB).  At  point 
B  the  walker  continued  i ts  previous  route 
(segment  BD). 

The  problem  of  overcoming  isolated  ob­
stacles  of  some  types  was  investigated.  An 
obstacle  may  be  considered  as  an  isolated 
one  when  it  is  located  on  the  support  sur­
face  a ll  points  of  which  might  be  used  as 
standpoints.  For  some  obstacles  it  appears 
undesirable  or  impossible  to  use  points  of 
the  support  surface  in  the  v i c i n i ty  of  the 
obstacle  due  to  geometrical  r e s t r i c t i o ns 
associated  with  the  neighbourhood  of  the  ob­
stacle. 

Some  types  of  isolated  obstacles  are 

shown  in  F i g.  6.  One-parameter  obstacle 
" c l e f t"  (Fig.  6a) 
is  f u n c t i o n a l ly  equivalent 
to  the  domain  forbidden  f or  standing  the  legs. 
There  are  no  geometrical  r e s t r i c t i o ns  in  the 
v i c i n i ty  of  the  " c l e f t ". 

Two-parameter  obstacle  "boulder"  (Fig. 
6b),  on  the  contrary,  creates  two  r e s t r i c t ed 
spots  close  to  i t.  The  spot  before  the  boul­
der  is  undesirable  because  of  the  p o s s i b i l i­
ty  of  contacting  the  boulder  in  the  support 
phase.  The  body  of  the  boulder  may  make  it 
impossible  to  stand  leg  t ip  in  the  spot  be­
hind  the  obstacle. 
stand  legs  of  the  walker  on  the  boulder; 
it 
is  even  desirable. 

is  permissible  to 

It 

The  bottom  of  the  three-parameter  ob­
stacle  " p i t"  (Fig.  6c)  may  be  used  to  stand 
legs  on  it  except  two  spots  near  the  w a l l s. 
It  should  be  noted  that  " c l e f t ",  " b o u l­
der"  and  " p i t"  from  the  geometrical  point  of 
view  may  be  regarded  as  a  combination  of 
more  simple  obstacles  of  the  types  "step-
i n"  and  "step-down"  ( F i g.  6d,  e ). 
If  the 
longitudinal  dimensions  of  the  upper  part 
of  the  boulder  or  these  of  the  p it  bottom 
are  large  enough,  the  boulder  and  the  p it 
may  be  interpreted  as  two  separate  isolated 
obstacles  of  the  "step"  type. 
If  the  "steps" 
are  positioned  rather  close  one  a f t er  ano­
ther, 
there  exists  interference  between 
them,  and  it  i s,  apparently,  more  reasonable 
to  t r e at  such  a  combination  as  a  special 
type  of  obstacle  with  i ts  own  special  method 
of  overcoming. 

It  was  assumed  that  the  measurement  sys­
tem  was  able  to  estimate  the  distance  between 
the  f i x ed  point  of  the  vehicle  and  the  point 
of  intersection  of  the  measuring  beam  and  the 
support  surface.  The  direction  of  the  beam 
may  be  constant.  When  the  vehicle  walkes,  the 
beam  slides  over  the  t e r r a in  and  measures  i ts 
p r o f i l e.  But  this  may  be  i n s u f f i c i e n t.  The 
angle  between  the  beam  and  horizon  must  be 
small  enough  for  the  vehicle  could  get  t e r­
r a in  r e l i ef  information  beforehand  and  has 
p o s s i b i l i ty  of  planning  i ts  actions  in  a  rea­
sonable  way.  On  the  other  hand, 
it  is  clear 
that  f or  small  beam-horizon  angle  rather  long 
zones  after  obstacles  are  inaccessible  to  r e­
l i ef  measurements.  The  increasing  of  the 
beam-horizon  angle  diminishes  the  inaccessible 
zones  but  diminishes  simultaneously  the  d i s­
tance  between  the  vehicle  and  the  measured 
points  of  the  t e r r a i n. 

Under  the  circumstances  it  was  reaso­

nable  to  control  the  beam  direction  f or  more 
effective  use  of  measurement  system.  One  of 
the  adopted  rules  was  as  follows.  A ll  the 
time  when  it  is  possible,  some  "small"  beam-
horizon  constant  angle  is  used.  This  regime 
is  used  as  long  as  the  size  of  inaccessible 
zones  is  no  more  than  a  given  value  and  each 
zone  can  be  "overstepped",  i . e.  overcomed 
without  placing  any  standpoint  inside  the 
zone. 
the  additional  measurements 
must  be  carried  out  when  approaching  nearer 
to  the  obstacle.  The  measuring  beam  must  be 
inclined  steeper  to  horizon. 

If  not, 

indicate  that 

If  measuring  results 

it 
is  Impossible  to  place  standpoints  inside  the 
zone  after  the  obstacle  in  an  appropriate 
If 
way, 
the  further  locomotion  is  excluded. 
appropriate  placing  the  standpoints  is  pos­
s i b l e, 
ding  i ts  legs  and  walks  on. 

the  walker  uses  these  points  for  stan­

The  investigation  carried  out  confirmed 
that  observing  on  the  display  screen  the  mo­
ving  image  of  the  vehicle  walking  on  the  t e r­
r a in  is  a  very  effective  method  for  testing 
the  control  algorithms  and  estimating  t h e ir 
properties.  The  motion  picture  made  from  the 
CRT  screen  of  the  display  unit  gives  an  idea 
of  the  walker  control  algorithms  e f f e c t i v e­
ness. 

Some  algorithms  were  designed  f or  deci­
sion-making  concerning  the  reasonable  a c t i­
ons  of  the  walker  overcoming  the  obstacle. 
It  was  assumed  that  a ll  necessary  i n f o r m a t i­
on  about  the  type  and  geometrical  parameters 
of  the  obstacle  are  available  and  may  be 
used  by  decision-making  algorithm. 

As  to  the  methods  of  overcoming  obsta­
cles,  the  basic  p r i n c i p le  was  assumed  that 
the  higher  l e v el  might  be  involved  only  in 
if  adapta­
case  of  r e al  need.  For  instance, 
t i on  to  email  scale  obstacles  can  be  made  by 
means  of  l e v el  " l e g ",  t h is  must  be  done. 
If 
the  special  stand­
t h is  appears  impossible, 
point  sequence  and  appropriate  support  sche­
dule  must  be  generated. 
If  necessary, 
special  body  motion  has  to  be  used. 

the 

The  algorithms  for  overcoming  the  c l e f t-
type  obstacle  were  designed  in  greater  details 
A  special  c l a s s i f i c a t i on  block  estimated  the 
s i t u a t i o n:  standpoint  sequence  parameters, 
c l e ft  width  and  i ts  p o s i t i on  r e l a t i ve  to  the 
walker.  Depending  on  the  s i t u a t i on  analysis 
results  the  following  decisions  about  the 
regime  could  be  made: 

1.  Nothing  has  to  be  changes. 
2.  It 

is  necessary  to  make  longer  one 
stride  before  the  c l e ft  by  changing  the  po­
s i t i on  of  two  standpoints  and  s h i f t i ng  them 
in  such  a  way  that  one  of  them, 
the  nearest 
to  the  c l e f t,  would  be  positioned  on  the 
b r i n k.  The  f u r t h er  development  of  standpoint 
sequence  may  be  regular,  as  before  the  c l e f t. 

3.  It 

is  necessary  to  position  four 

standpoints  on  the  brinks  of  the  c l e ft  (two 
on  each  b r i n k)  and  to  rearrange  some  other 
standpoints. 

4.  To  apply  regime  3  but  to  s h i ft 

standpoints  on  the  brink  closer  to  the  axis 
of  the  standpoint  sequence. 

5.  The  body  of  the  walker  must  be  low­

ered,  and  regime  4  must  be  applied. 

The  standpoint  sequences  in  F i g.  7  cor­

respond  to  regime  2,  while  those  in  F i g.  8 
correspond  to  regimes  4  and  5. 

The  regimes  1-5  are  l i s t ed  in  order  of 
growth  of  t h e ir  complicacy  and  t h e ir  f e a s i-
b i l i t i e s.  According  to  the  basic  p r i n c i p le 
the  c l a s s i f i c a t i on  block  t r i ed  to  f i nd  out 
subsequently  the  p o s s i b i l i ty  to  use  regimes 
1-5,  beginning  from  regime  I,  and  adopted 
the  f i r st  of  them  which  provided  successful 
overcoming  the  c l e f t. 

Such  an  approach  is  evidently  a p p l i­
cable  to  designing  reasonable  methods  of 
overcoming  other  types  of  obstacles. 
It 
should  be  noted  that  for  a  p it  rather  deep, 
or  f or  a  boulder  rather  high,  or  f or  an  ob­
stacle  l i ke  the  one  in  F i g.  10  it  may  be  ne­
cessary  to  t i lt  the  body  of  the  walker  and 
change  i ts  p i t ch  angle  in  an  appropriate  way 
It  is 
as  a  function  of  time  (Fig.  9,  10). 
evident  that  when  analysing  the  obstacle, 
t h is  regime,  as  the  most  complicated  one, 
has  to  be  tested  in  the  last  t u r n. 

Some  problems  connected  with  measure­
ments  were  investigated:  measurement  data 
processing,  obstacle  i d e n t i f i c a t i o n,  measu­
rement  c o n t r o l. 

3l9 

320 

321 

322 

323 

