Session  6  Theorem  Proving  and 
Logic: 

II 

STEPS  TOWARD AUTOMATIC  THEORY  FORMATION 

Information  and  Computer  Science  Department 

University  of  California  Irvine 

John  Seely  Brown 

I r v i n e,  California 

Abstract 

This  paper  describes  a  theory  formation  system 
which  can  discover  a  p a r t i al  axiomization  of  a  data 
base  represented  as  extensionally  defined  binary 
r e l a t i o n s .-  The  system  f i r st  discovers  a ll  possible 
intensional  d e f i n i t i o ns  of  each  binary  relation  in 
terms  of  the  others. 
It  then  determines  a  minimal 
set  of  these  relations  from  which  the  others  can  be 
defined. 
the  ways 
the  relations  of  t h is  minimal  set  can  interact  with 
each  other, 
Although  the  system  was  o r i g i n a l ly  designed  to  explore 
for 
automatic 
question-answering  systems, 
is  currently  being 
expanded  to  function  as  a  symbiotic  system  to  help 
social  s c i e n t i s ts  explore  certain  kinds  of  data  bases. 

thus  generating  a  set  of  inference  rules. 

then  attempts  to  discover  a ll 

for  theory  construction 

techniques 

It 

it 

Introduction 

For  over  a  decade  researchers  in  AI  have  been 

designing  question-answering  systems  which  are 
from  a  sparse 
capable  of  deriving  " i m p l i c i t"  facts 
data  base.  Whether  these  systems  use  an  axiomatic 
theorem  proving  approach  or  a  procedurally  oriented 
approach,  they  a ll  must  eventually  face  the  problem 
of  characterizing 
the  generic  knowledge  or  structural 
redundancies  of  t h e ir  particular  domain  of  discourse-
Even  the  simplest  of  such  domains  contains  countless 
subleties  which  somehow  must  be  captured  before  a 
complete  characterization  can  be  achieved. 

In  t h is  paper  we  discuss  the  problem  of  automat(cid:173)

i c a l ly  constructing  such  a  characterization.  Our 
research  has  not  been  directed  toward  a  theoretical 
investigation  of  t h is  general  problem  as  in  Plotkin 
but  rather  towards  constructing  and  experiment-
ing  with  a  prototype  system  which  has  been  applied  to 
large  and  s t r u c t u r a l ly  rich  domains.  We  w i ll  provide 
numerous  examples  to  show  what  is  involved 
forming 
conjectures  about  "apparent"  structural  redundancies 
in  a  given  data  base  (model)  and  how  such  conjectures 
can  be  h e u r i s t i c a l ly  validated.  The  search  for 
structure  is  inherently  combinatorial.  We  w i ll  there(cid:173)
fore  discuss  Borne  ways  to  control  the  combinatorial 
explosion  involved  in  forming  and  validating  s t r u c t(cid:173)
ural  conjectures.  F i n a l l y,  we  w i ll  discuss  ways  in 
which  such  a  system  might  be  used  to  help  a  social 
s c i e n t i st  discover  s t r u c t u r al 
observations  over  some  "world". 
aim  is  to  expand  t h is  system  into  a  tool 
uses . 

theories  about  a  set  of 
Indeed,  our  eventual 

for  such 

in 

Problem  D e f i n i t i on 

Before  describing  our  system,  a  d e f i n i t i on  of 

the  vague  term  " s t r u c t u r al  redundancies"  is 
Let  us  consider  a  data  base  consisting  of  the  com(cid:173)
plete  extensions  of  a  collection  of  binary  relations 
R  -  {R1......Rn}  .  That  i s,  for  each  Ri  e  R  the  data 
base  contains  a ll  the  t r i p l es  (x  Ri  y) 
(x,y)€R1.  The  s t r u c t u r al  redundancies  of  t h is  data 
base 
category  occurs  where  one  of 

f a ll  i n to  three  basic  categories.  The  f i r st 

the  relations 

for  each 

is 

in  order. 

121 

The  second  kind  of  s t r u c t u r al  redundancy  occurs 

where  the  existence  of  a  path  In  the  graph  forms  a 
s u f f i c i e nt  but  not  a  necessary  condition  for  some 
other  arc  to  e x i s t.  Tor  example,  suppose  we  augment 
our  data  base  to  Include  the  extensions  of  the  Sib(cid:173)
l i ng  and  Cousin  relations  over  the  sane  domain  P.  We 
would  then  discover  that  for  every  path  of  the  form 
(x  Sibling  z)  and  (z  Cousin  y) 
there  was  always  an 
arc  of  the  form  (x  Cousin  y ).  Such  a  pattern  would 
lead  to  the  r u l e: 

Sibling/Cousin  =>  Cousin 

The  t h i rd  and  simplest  kind  of  s t r u c t u r al 

redundancy  occurs  where  the  r e l a t i on 
tain  l o g i c al  properties  such  as: 

i t s e lf  has  cer(cid:173)

Transitive 
Symmetric 
Reflexive 
I r r e f l e x i ve 

The 

f i r st  two  kinds  of  redundancies  cover  how 

a  given  r e l a t i on  interacts  with  other  relations  In  R, 
whereas  the  last  kind  covers  only  how  a  relation 
Interacts  with 

i t s e l f. 

The  s t r u c t u r al  patterns  comprising  a ll  three 
categories  form  the  basis  of  a  l o g i c al  theory  (or 
axiomatic  characterization)  of  the  data  base  in  the 
following  way: 

I n i t i a l l y, 

the  data  base  consists  of  the  com(cid:173)

intensional  d e f i n i t i on  in 

plete  extensional  definitions  of  a ll 
the  given  r e l a(cid:173)
tions.  After  our  system  discovers  a ll  the  intension-
al  definitions  of  the  r e l a t i o n s, 
then  some  subset  of 
these  relatione  can  be  selected  (to  be  called  the 
atomic  relations) 
the 
from  which  the  extension  of  a ll 
remaining  relations  can  be  derived.  The  extension  of 
a  non-atomic  r e l a t i on  can  be  computed  by  knowing  only 
i ts 
atomic  r e l a t i o n s.  Consequently, 
definitions  of  a ll  non-atomic  relations  can  be  d i s(cid:173)
carded  with  no  loss  of  information. 
the  extensions  of  the  atomic  relations  can  be  pruned 
by  using  s t r u c t u r al  properties  in  the  second  and 
t h i rd  categories.  For  example, 
is  symmetric, 
eliminated  without  loss  of  information.  With  respect 
to  the  two  s t r u c t u r al  redundancies: 

then  h a lf  of  i ts  extension  can  be 

terms  of  the  selected 

if  an  atomic  r e l a t i on 

the  extensional 

In  addition, 

Parent  =  Spouse/Parent 
Spouse  symmetric 

half  of  the  parent  and  spouse  extensions  can  be  l i k e(cid:173)
wise  discarded.  What  remains  after  a ll  the  redundant 
extensions  have  been  eliminated  is  a  kernel  Bet  of 
extensions. 

The  s t r u c t u r al  rules  defined  by  the  set  of  I n t e n(cid:173)

sional  d e f i n i t i o n s, 
the  l o g i c al  properties  of  the 
atomic  relations  and  the  implicational  statements 
in  conjunction  with  a  kernel  set  of  extensions 
the  complete  extensions  of  a ll 
suffice  to  determine 
the  r e l a t i o n s.  These  rules  plus  the  kernel  set  of 
data  form  a  logical 
theory  of  the  o r i g i n al  extens(cid:173)
ional  r e l a t i o n s.  Note  that  the  complete  extensional 
set  of  delations 
of  the  resultant  "theory".  The  fact  that  this  model 
(or  equlvalently  —  the  extenaionally  defined  r e l a(cid:173)
f i n i t e,  as  far  as  our  system  is  concerned, 
tions) 

is  necessarily  a  l o g i c al  model 

is 

Techniques  to  select  the  atomic  sets  are  not  discuss(cid:173)
ed  here  but  arc  discussed  at  length  in  Brown3. 

interesting  s i t u a t i on  that  our 

presents  the 
system  w i ll  often  produce  numerous  rules  that  hold  f or 
t h is 
f i n i te  collection  of  data  but  which  appear  to  be 
i d i o s y n c r a t i c.  That 
the  collection  of  data  is 
r e a l ly  a  sample  from  some  p o t e n t i a l ly  i n f i n i te  model, 
then  of  course  numerous  "rules"  may  be  found  that 
might  prove  to  be  false  when  the  data  base  is  enlarged. 

i s, 

if 

On  Discovering  Intensional  Definitions 

The  basic  idea  underlying  the  discovery  of  i n(cid:173)

the  possible  definitions  of 

(*i»yi)  and  then  searching  for  a ll 

tensional  d e f i n i t i o ns  is  quite  simple.  Suppose  we  are 
t r y i ng  to  discover  a ll 
Ri  e  R.  Since  Ri  exists  in  the  data  base, 
it  has  a 
set  of  2-tuples  which  represent  i ts  extension.  We 
commence  our  process  by  a r b i t r a r i ly  choosing  one  of 
these  2-tuples 
possible  simple  directed  paths  that  start  at  xi  and 
end  at 
of  each  such  path  leaving  only  an  ordered 
l i st  of  the 
labels  of  the  path  which  we  w i ll  c a ll  a  Labelled  Path 
Sequence  (LPS).  The  end  result  of  this  process  is  a 
l i st  of  d i s t i n ct  LPS's,  each  stemming  from  at 
one  specific  path  from  x±  to  y j. 
(Several  xi 
paths  can  collapse  onto  one  LPS,) 

yi  We  then  delete  the  Intermediate  nodes 

least 

yi 

Depending  on  storage  l i m i t a t i o ns  etc.  ,  we  repeat 

t h is  process  several  times,  choosing  a  d i f f e r e nt 
2-tuple  from  Ri's  extensions  for  each  r e p e t i t i o n. 
In  this  manner  we  construct  a  c o l l e c t i on  of  l i s ts  L: 

If  t h is 

for  these  l i s t s ). 
then  the  LPS's 

(Computing  t h is  Intersection  can  be  quite  costly,  so 
some  care  is  required  in  choosing  a  good  data  struc(cid:173)
intersection  Is  non-
ture 
empty, 
that  l ie  in  this  intersection 
form  the  f i r st  set  of  conjectures  and  are  therefore 
passed  to  the  v e r i f y i ng  procedures 
if 
there  are  any  counter-examples  to  these  conjectures. 
If  an  LPS  survives  t h is  check  then  it  represents  an 
intensional  d e f i n i t i on  for  Ri.  For  example,  suppose 
R1  -  R2  -  R3  is  an  LPS  which  is  in  common  to  a ll  the 
Lxy's. 
The  intermediate  nodes  that  were  removed  from  the  var(cid:173)
ious  paths  underlying  t h is  LPS  are  possible  bindings 
variables z 1. z2 in the expression: 
for 

It  is  then  conjectured  that  R1  =  R1/R2/R3. 

the  extensional 

to  determine 

On  the  other  hand,  the  v e r i f i er  determines  whether  for 
every  x,  y,  and  z1  and  z2  that  satisfy  the  right-hand 
side  of  the  above  expression, 
necessarily  contained 
not 
ed  to  be  "over-general". 

t h is  Is 
then  the  conjectured  d e f i n i t i on  is  consider(cid:173)

in  Ri's  extension- 

the  2-tuple  (x,y) 

true 

is 

If 

A  more  i n t e r e s t i ng  case  arises  when  the  intersec(cid:173)

t i on  of  a ll  the  Lxy's  is  empty. 
In  such  situations 
there  is  no  simple  compositional  d e f i n i t i on  for  Ri. 
Instead, 

i ts  d e f i n i t i on  ( If  there  is  one)  must 

involve 

Thus  an  intensional  d e f i n i t i on  of  Ri  would  be  a  d i s(cid:173)
junct  of  r e l a t i o n al  compositions. 

A  moment's  r e f l e c t i on  on  the  above  intersection 

process  reveals  that  the  outcome  of  these  intersec(cid:173)
tions  can  be  c r i t i c a l ly  dependent  on  the  order  in 
which  the  l i s ts  are  intersected.  For  example,  the 
l i s ts  L1,L2,L4  might  very  well  form  a  non-void  i n t e r(cid:173)
section  and  likewise  the  l i s ts  L3,L5,L6. 
the  case,  we  would  then  have  unfolded  a  simpler  set 
of  conjectured  definitions  of  the 

form: 

If  t h is  were 

Given  a  moderately  large  data  base  of  several 
hundred  2-tuples  over  t h i r ty  kinship  r e l a t i o n s,  we 
were  trying  to  discover  some  definitions  of  "Parent". 
The  resultant  intersections  computed  with 
o r i g i n al  ordering  of  the  LPS  l i s ts  (using  a  consider(cid:173)
ably  more  sophisticated  algorithm 
for  choosing  what 
l i st 
the  disjunctive  sets  of 
conjectures  found  in  Table  l a.  However,  a  further 
search  revealed  a  s t i ll  better  ordering  y i e l d i ng  the 
conjectures 

found  In  Table  l b. 

to  merge  next) 

the 

led 

to 

a  disjunct.  An  obvious  strategy  to  pursue  Is  to  keep 
i n t e r s e c t i ng  the  Lxy's  u n t il  the  Intersect  becomes 
empty.  At  that  p o i n t,  undo  the  l a st  i n t e r s e c t i o n, 
leaving  a  non-empty  i n t e r s e c t.  Then,  s t a r t i ng  with 
t h is  removed  l i s t,  recommence  forming  the  intersection 
w i th  it  and  the  next  l i st  and  so  on.  For  example, 
suppose  we  have  L1,L2,L3,L4,L5,L6  as  six  l i s ts  of 
LPS's  with 

the  following  properties: 

We  are  l e ft  with  three  sets  of  non-empty  intersec(cid:173)
t i o n s,  namely  L12,L34,L56  The  conjectured  defini(cid:173)
tions  for  Ri  would  then  be  of  the  form: 

123 

Having  great  f a i th  In  Occam's  Razor,  we  only 
from  the 

attempt  to  v e r i fy  conjectures  that  emerge 
minimal  number  of  disjunctive  i n t e r s e c t i o n s.  Finding 
an  optimal  grouping  of  the  L  l i s ts 
minimal  property  iB  combinatorlally  equivalent  to  the 
classical  covering  problems  ,  However,  unlike 
many  covering  problems,  a  f a i r ly  simple  h e u r i s t ic 
turns  out  to  be  quite  satisfactory  (see  Brown3  for 
more  d e t a i l s ). 

that  lead  to  t h is 

A  grouping  for  these  l i s ts  which  leads  to  the 
minimal  number  of  non-null  intersections  induces  a 
clustering  of  R i 's  extension  ( i .e  group  together 
a ll  the  ( x , y ) 's  that  generated  the  LPS's  of  each 
d i s j u n c t ).  Often  this  clustering  can  i n d i r e c t ly 
induce  a  clustering  or  even  a  p a r t i t i on  on  either 
RI'S  domain  or  range.  This  clustering  should  r e f l e ct 
some  " i n t e r n a l"  structure  of  the  objects  themselves. 
Considering  the  above  Parent  example  reveals 
clustering  of  2-tuples  induced  by  the  definitions  of 
Table  lb  shared  the  property  that  the 
f i r st  component 
of  each  of  them  were  female.  Likewise,  the  f i r st 
component  of  the  other  2-tuples  were  a ll  male.  But, 
as  far  as  the  system  knew,  no  object  in  the  domain 
had  any  distinguishing  characteristics  whatsoever. 
Thus,  in  some  sense,  the  system  had  unfolded  the 
necessary  information  to  conjecture  two  unary 
predicates 
to  i t. 
J u s t i f i c a t i on  of  these  predicates  often  requires 
supporting  evidence  which  may  be 
forthcoming  i f, 
considering  other  r e l a t i o n s,  similar  clusterings 
are  induced. 

theretofore  completely  unknown 

that 

in 

the 

Another  way  t«  generate  p o t e n t i a l ly  useful  rules 

would  be  to  discover  d e f i n i t i o ns 
r e l a t i on  which  turn  out  not 
when  t h e ir  defining  subspace  is  enlarged.  An  example 
of  such  a  d e f i n i t i on  might  be: 

for  a  p a r t i c u l ar 
to  cover  R's  extension 

which  could  arise  from  a  data  base  in  which  every 
family  had  two  c h i l d r e n.  But  again, 
the  key  problem 
is  finding  ways  that  the  structure  of  a  r e l a t i on  can, 
i t s e l f,  delimit  " i n t e r e s t i n g"  subsets  of  i ts  own  ex(cid:173)
tensions  so  that  we  don't  have  to  rely  on  chance  f o r' 
providing  such  subspaces. 

Determining  Subspaces 

for  the  Discovery  of  Inference 
Rules 

One  way  in  which  the  structure  of  a  r e l a t i on 

can  induce  a  natural  p a r t i t i on  on  i ts  extension  is  by 
possessing  a  disjunctive  d e f i n i t i o n.  This,  as  men(cid:173)
tioned  above,  s p l i ts  the  r e l a t i o n 's  extension  into 
groups  of  2-tuples  covered  by  the  p a r t i c u l ar  disjunc(cid:173)
t i ve  terms.  For  example,  using  the  Parent  example, 
we  are  lead  to  form  the  t r i v i al  rules: 

Discovering  Rules  of 

Inference 

We  w i ll  concern  ourselves  only  with  discovering 

inference  rules  of  a  very  r e s t r i c t ed  form.  These 
rules  w i ll  be  e i t h er  of  the  form: 

1) 

(where  R  i t B e lf  could  be  also  on  the  l e f t) 

or  of  the  form: 

That  i s, 

the  disjunctive  d e f i n i t i on  underlying  these 

However, 
rules  has  the  property  that 
d i s j o i n t. 
if  (x,y) 
the  disjuncts, 
in 
other.  By  searching  for  disjunctive  definitions 
whose  disjuncts  can  overlap,  and  in  which  one  of 
the  disjuncts  covers  a  maximal  portion  of  the  given 
r e l a t i o n 's  extension,  we  discover  such  rules  as: 

the  two  disjuncts  are 
is  s a t i s f i ed  by  one  of 

it  necessarily  is  not  contained 

the 

In  the  l a t t er  case, 

the  relatione  under  the  ver(cid:173)
t i c al  bar  denote  a  required  context  before  this  rule 
can  be  applied.  The  s i m i l a r i ty  of  these  rules  to 
context 
free  and  context  sensitive  grammars  is  not 
accidental. 
d i r e c t ly  usable  bv  the  question-answering  system 
detailed  in  Brown. 

these  inference  rules  are 

f a c t, 

In 

Discovering  the  f i r st 

type  of  inference  rule 

would  appear  to  be  straight-forward.  We  need  merely 
locate  a  sequence  of  relations  whose  compositional 
extension  is  contained  w i t h in  the  extension  of  R. 
The  problem,  however,  l i es  not  in  finding  such  seq(cid:173)
uences  but  In  finding  " u s e f u l"  sequences.  Although 
we  have  no  way  of  making  t h is  d i s t i n c t i on  precise, 
we  realize  that  in  creating  an  axiom  system  for  a 
question-answerer  we  often  want  more  than  j u st  a 
minimal  independent  set  of  axioms.  We  want  axioms 
that  enable  us  to  answer  "usual"  questions  without 
undue  inferencing.  Believing  that  t y p i c al  questions 
often  relate  to  subparts  of  the  intensional  d e f i n i(cid:173)
tions  we  Bought  ways  to  use  the  structure  of  the 
relations 
rules. 

i s o l a t i ng  p o t e n t i a l ly  " u s e f u l" 

themselves 

in 

Another  way  to  u t i l i ze  the  structure  of  a  r e l a(cid:173)
tion  in  i s o l a t i ng  subspaces  stems  from  the  co-occur(cid:173)
rence  of  compositional  seouences  in  a  given  disjunct 
of  i ts  d e f i n i t i o n.  For  example, 
data  base  of  over  f i ve  hundred  f a c t s,  we  discovered 
the  standard  d e f i n i t i on  of  Brother-in-Law: 

in  considering  a 

Let  us  consider  the  last  disjunct  which  asserts  t h a t: 

Line  1  suggests  that  in  the  "context"  of  "Husband"  the 
relations  " S i s t e r"  and  " S i b l i n g"  function  equivalent-
l y,  or  we  could  say  t h a t: 

One  way  to  isolate  these  rules  would  be  to  use 
intenaional  d e f i n i t i o ns  themselves.  S p e c i f i c a l l y, 

the 
any,  recursive  d e f i n i t i on  is  a  p a r t i c u l a r ly  good  can(cid:173)
didate ,  such  as: 

124 

when  conditioned  on  the  l e ft  with  "Husband".  Clear(cid:173)
f o r, 
l y, 
although  the  rule  "Sister  =>  Sibling"  could  be  inde-

the  notion  of  "context" 

is  quite  important 

On  Checking  for  Over-Generality 

The  result  of  intersecting  the  LPS  l i s ts  is  a 
collection  of  conjectural  definitions 
the  p a r t(cid:173)
icular  r e l a t i on  R  under  study.  A  property  of  any 
such  conjectural  d e f i n i t i on 

for 

i s: 

test  for  i ts 

f i r st  glance, 

If  it  is  included, 

At 
the  v e r i f i c a t i on  seems  s t r a i g h t - f o r(cid:173)
ward:  simply  compute  the  extension  of  the  conjectural 
inclusion  in  the  extension 
d e f i n i t i on  and 
of  R. 
then  the  conjectural  d e f i n i(cid:173)
t i on  has  been  v e r i f i e d.  The  problem  of  e f f i c i e n t ly 
performing  t h is  computation  is  the  concern  of  associa(cid:173)
t i ve  memory  processors  l i ke  TRAMP5  and,  as  such, 
w i ll  not  be  discussed  here.  Such  v e r i f i c a t i on  is 
obviously  possible,  but 
large 
data  bases. 

is  expensive 

It 

for 

We  were  primarily  interested  in  developing  heur(cid:173)

i s t ic  techniques  that  could  be  used  to  e f f i c i e n t ly 
detect  over-general  conjectures.  After  these  heur(cid:173)
i s t i cs  were  applied,  exhaustive  techniques  could  be 
applied  to  the  few  remaining  d e f i n i t i o ns  so  as  to 
remove  any  doubt  about  t h e ir  v a l i d i t y. 

Our  heuristic  procedures  are  baaed  on  the  con(cid:173)
cept  of  "the  inverse  image  of 
x  with  respect  to  a 
binary  relation  R"  informally  defined  as  the  set  of 
a ll  y's  such 
of 

that  the  range  of 

x  overlaps  the  range 

y. 

Def:  The  inverse  image  of  x  with  respect  to  a 

binary  r e l a t i on  R,  denoted  IR(x)  , 

i s: 

(note  that  inverse  images  do  not  form  equivalence 
relations  on  the  domain  of  the  given  r e l a t i o n ). 
In  a 
similar  manner,  we  can  define  the  inverse  image  of  x 
w i th  respect  to  a  conjectural  d e f i n i t i on  of  R. 

12S 

x 

If  n o t, 

I"Def"(x). 

to  see 
IR(x). 

Our  h e u r i s t ic  procedure  picks  an  object 

It  then 
to 
is  equivalent 
the  "Def";  other(cid:173)

if  the  set  X"Def"(x) 
it  rejects 
x 

in 
the  domain  of  the  r e l a t i on  R  being  defined  and  com-
putes  both  the  sets  IR(x)  and 
checks 
the  set 
wise  It  chooses  a  new 
from  R's  domain  and  repeats 
this  procedure  u n t il  the  domain  of  R  has  been  exhaust(cid:173)
ed.  A  faster  but 
h e u r i s t ic  doesn't  bother  to  exhaust  R'e  domain  but 
chooses  only  one  element  from  each 
class.  These  checkB  are  only  h e u r i s t ic  since  they 
do  not  take  i n to  consideration  the  local  connections 
of  the  relations  w i t h in  each 
image  class,  but 
that  is  precisely  why 

less  complete  version  of  t h is 

inverse 
they  are  f a s t! 

inverse 

image 

An  example  of  the  power  and  l i m i t a t i o ns  of  this 
h e u r i s t ic  may  be  seen  from  another  date  base  (of  over 
a  hundred  facta)  analyzed  by  t h is  system. 

have  to  be  temporarily  "blocked"  and  a  new  set  of 
conjectures  would  have  to  be  invented.  These  new 
conjectures  would  then  have  to  be  v e r i f i e d,  and  so  on, 
u n t il  a ll 
phase. 

the  conjectures  passed  the  v e r i f i c a t i on 

Our  experiments  have  revealed  t h a t, 

for  most  of 
this  process  of  conjecturing,  v e r i f y(cid:173)

our  test  data, 
ing  and  blocking  is  often  repeated  a  dozen  or  so 
times  before  a  set  of  conjectures  are 
formed  which 
cannot  be  disproved  w i t h in  the  data  i t s e l f.  Conse(cid:173)
quently,  our  system  must  t y p i c a l ly  v e r i fy  many  more 
conjectures 

than  appear  in  the 

f i n al  output. 

Some  Experiences 

We  have  applied  t h is  system  (implemented  in  L  on 

the  most 

to  several 

types  of  data, 

a  16-K  PDP-9) 
common  of  which  is  kinship  data.  We  primarily 
worked  on  kinship  data  because,  although  we  know  what 
to  expect, 
the  richness  of  i ts  structure  can  present 
many  challenges.  Also,  by  choosing  a  domain  that  is 
i n t u i t i v e ly  understandable, 
the 
more  subtle  relationships  among  the  obvious.  Altho(cid:173)
ugh  t h is  domain 
it  was 
a  great  surprise  to  us 
data  base,  generated  —  for  test  purposes  — 
family  tree  shown  in  Figure  3  below,  and  perform  a 
search 
might  have  passes  unnoticed  from  our  biased  viewpoint. 

the  s t r u c t u r al  relationships 

to  take  a  reasonably  laree 

t r i v i al  in  many  respects, 

is  easier  to  spot 

from  the 

for  a ll 

that 

is 

it 

The  d e f i n i t i o ns 

for  the  binary  r e l a t i on  "Niece" 

l i s ts  the  conjectural 

were  f i r st  explored.  Table  2 
definitions  r e s u l t i ng  from  intersecting  the  LPS 
These  d e f i n i t i o ns  were  then  subjected  to  the  above 
h e u r i s t ic  check  which  resulted 
in 
given  in  Table  3.  Of  the  o r i g i n al 
intensional  d e f i n i t i o ns  eleven  were  rejected  by 
our  check  and  the  remaining  d e f i n i t i o ns  were  a ll 
correct. 

the  d e f i n i t i o ns 
f i f t e en 

l i s t s, 

The  need  for  developing  h e u r i s t i cs  for  speeding 

up  the  v e r i f i c a t i on  of  conjectured  d e f i n i t i o ns 
is 
better  appreciated  whan  we  understand  the  complex 
interactions  between  the  generation  of  conjectures 
and  t h e ir  subsequent  v e r i f i c a t i o n. 
there 
is  a  constant  switching  of  control  between  these 
two  phases.  For  example,  suppose  the  f i r st  set  of 
definitions  conjectured  were  subsequently  disproved 
in  the  v e r i f i c a t i on  phase.  Then  a ll  the  paths 
the  data  graph  that  lead  to  these  conjectures  would 

f a c t, 

In 

in 

Two  types  of  patterns  could  appear.  On  one  hand, 
that  r e f l e c t ed  idiosyncracies 

d e f i n i t i o ns  might  emerge 
of  t h is  p a r t i c u l ar  data  which  would  "disappear" 
if  we 
considered  more  data.  On  the  other  hand,  completely 
v a l id  d e f i n i t i o ns  might  appear  which  were 
l o g i c a l ly 
equivalent  to  ones  we  already  knew,  but  which  might 
be  "simpler"  r e l a t i ve  to  some  c r i t e r i o n.  Both  types 
of  unexpected  patterns  may  be  seen  in  the  f i r st  set 
of  d e f i n i t i o ns  discovered  for  the  Uncle  r e l a t i on 
on  t h is  data  base  (see  Table  A).  Clearly  the  f i r st 
two  of 
the  idiosyncracy 
that  every  uncle  is  married.  The  t h i rd  d e f i n i t i on 
which  is  complete  yet  involves  no  disjuncts  and  as 
such  might  be  considered  simpler  than  the  standard 
two  disjunct  d e f i n i t i o n: 

these  d e f i n i t i o ns  r e f l e ct 

126 

Uncle  =  Brother/Parent  V  Husband/Sibling/Parent 

Weaknesses 

There  are  several  l i m i t a t i o ns  to  our  system 

that  deserve  further  attention.  The 
f i r st  concerns 
the  d i f f i c u lt  area  of  characterizing  when  something 
cannot  be  true.  All 
the  d e f i n i t i o ns  and  axioms  i n(cid:173)
vented  by  our  system  express  positive  assertions. 
That  i s,  our  system  never  discovers 
fact  that  siblings  can't  marry  and  hence  a  father 
cannot  be  an  uncle  to  his  own  c h i l d.  Of  course, 
we  can  hedge  this  problem  by  including  just  the 
r i g ht  additional  relations  which  cover  precisely 
what  can't  hold  over  the  original  set  but 
this 
quickly  gets  us  i n to  a  combinatorial  explosion. 
For  example,  we  could  include  the  r e l a t i on  "Non-
Uncle"  whose  extension 
then  perhaps  we  could  uncover: 

the  crucial 

is 

the  complement  of  Uncle  and 

Father  ->  Non-Uncle. 

Somehow  such  a  solution  seems  unpleasing  since  once 
the  positive  assertions  have  been  characterized  one 
might  hope  that  they  could  he  combined  with  a  few 
negative  assertions 
negative  assertions. 

the  potential 

imply  a ll 

to 

The  second  major  l i m i t a t i on  is 

that  nur  system 

this 

l i m i t a t i o n, 

to  over-rule 

to  be  complete, 

for  any  r e j e c t i o n, 

the  counter-examples. 

i . e. 
expects  i ts  sample  data  base 
missing  no  data  and  containing  no  erroneous  data. 
There  are  numerous  wavs  to  circumvent 
some  of  which  have  been  implemented.  For  example, 
the  v e r i f i c a t i on  phase  not  only  checks  a  conjecture 
but  Isolates, 
The  user  can  then  decide  whether  or  not 
the  v e r i f i er  by  deleting  from  the  data  hase  these 
"counter-examples."  However,  a  considerably  more 
provocative  approach  to  the  problem  should  be 
possible.  Relying  on  Occam's  Razor,  we  might  consider 
the  entire  set  of  discovered  d e f i n i t i o ns  and  see  how 
a  p a r t i c u l ar  set  of  changes  on  the  data  base  affects 
the  complexity  of  not  only 
the  definitions  of  the 
relation  under  Btudy,  but  also  the  collection  of 
definitions 
a  given  r e l a t i o n 's  extension 
affects  not  only 
own  d e f i n i t i on  but  also  the  d e f i n i t i o ns  of  a ll 
other  relations  definable  in 
terms  of  t h is  r e l a t i o n, 
we  would  expect  a  dramatic  global  s i m p l i f i c a t i on  for 
the  "correct"  changes  to  the  data. 

the  r e l a t i o n s.  Since  a l t e r i ng 
i ts 
the 

for  a ll 

It  was  not  u n t il  these  d e f i n i t i o ns  were  manually 
over-ridden  and  indeed  a  f a ir  number  more  before  our 
system  came  up  w i th  the  " t r a d i t i o n a l"  d e f i n i t i o n. 

Appendices  1  and  2  give  a  feeling  for  the  sur(cid:173)

p r i s i ng  multitude  of  s t r u c t u r al  d e f i n i t i o ns 
on  t h is  data  base.  For  example,  Appendix  1  contains 
some  of  the  three  hundred  definitions  of  "Uncle"which 
were  discovered  just  on  the  above  data  base.  The 
second  appendix  reveals 
f i r st  set  of  d e f i n i t i o ns 
discovered  for  some  of  the  other  kinship  r e l a t i o n s. 
Note, 
definitions  for  "Cousin". 

the  seven  universally  valid 

for  example, 

found 

the 

Not  a ll  our  experimenting  has  been  l i m i t ed  to 

the  data  base  consists  of  a  universe  of  64 

kinship  r e l a t i o n s.  Another  domain  that  has  been 
analyzed  was  made  up  of  the  extensional  d e f i n i t i o ns 
of  the  a c c e s s i b i l i ty  relations  between  squares  on  a 
chess  board  for  the  various  chess  pieces.  More  pre(cid:173)
c i s e l y, 
objects  —  representing  the  squares  of  a  chess  board 
—  and  a  c o l l e c t i on  of  extensionally  defined  r e l a(cid:173)
t i o n s.  Some  of  these  relations  are  geometric  ( e . g. 
East,  Just-East,  Positive-Diagonal)  and  the  others 
are  chess  moves  represented  as  binary  r e l a t i o n s.  For 
example,  ( x , y )€  Knight  means  that  a  knight  can  move 
in  one  step  from  x 
the  d e f i n i t i o ns  of  the  legal  moves  of  the  various 
chess  pieces  in  terms  of  the  other  chess  pieces  and/ 
or  in  terms  of  the  geometric  r e l a t i o n s.  Although 
space  precludes  a  thorough  description  of  our  f i n d(cid:173)
ings,  we  indicate  below  some  of  the  discovered 
d e f i n i t i o n s: 

to  y.  The  task  was  to  discover 

Further  Plans 

In  addition  to  exploring  the  above  issues  we 

plan  to  investigate  how  to  achieve  more  of  a  syner(cid:173)
g i s t ic  effect  between  the  user  and  the  computer 
in  seeking  the  underlying  structure  of  his  data. 
The  system  is  being  re-implemented  in  LISP  on  a 
PDP-10  in  hopes  of  having  a 
for  exploring  the  symbiotic  uses  of 
a  theory  formation  system. 

f r i e n d l i er  environment 

this  kind  of 

Acknowledgement 

I  am  deeply  Indebted  to  Dr-.  Robert  K,  Lindsay 
for  defining  this  research  problem  and  for  helping 
me  understand  some  of  i ts  ramifications. 

the  user  has  the  freedom  to  reject 
*In t h is  system, 
d e f i n i t i o ns  even  if  they  have  been  accepted  by  the 
v e r i f i er  and  thus  search  for  additional  d e f i n i t i o ns 
which 

involve  more  disjunctions  than  the  current  ones. 

127 

129 

