Reasoning about the Interaction of Knowlege, Time and Concurrent Actions in the 

Situation Calculus 

Richard B. Scherl 

Computer Science Department 

Monmouth University 

West Long Branch, New Jersey 

07764-1898  U.S.A. 

rscherl@monmouth.edu 

Abstract 

A formal framework for specifying and developing 
agents/robots must handle not only knowledge and 
sensing actions, but also time and concurrency. Re(cid:173)
searchers  have  extended  the  situation  calculus  to 
handle  knowledge  and  sensing  actions.  Other re(cid:173)
searchers  have  addressed the  issue  of adding time 
and  concurrent  actions.  Here  both  of these  fea(cid:173)
tures are combined  into a uni£ed logical theory of 
knowledge, sensing, time, and concurrency. The re(cid:173)
sult preserves the solution to the frame problem of 
previous  work,  maintains  the  distinction  between 
indexical  and  objective  knowledge  of time,  and  is 
capable  of representing  the  various  ways  in  which 
concurrency  interacts  with  time  and  knowledge. 
Furthermore,  a method based on regression  is de(cid:173)
veloped for solving the projection problem for the(cid:173)
ories speci£ed in this version of the situation calcu(cid:173)
lus. 

Introduction 

1 
The  aim  of this  paper  is  to  develop  a  uni£ed  approach  for 
axiomatizing the interaction of knowledge, sensing, time, and 
concurrency.  Actions have preconditions which may  include 
knowledge  preconditions.  Sensing  actions  alter knowledge. 
The  knowledge  produced  depends  upon  the  relative  time  at 
which  sensing  actions  occur  and  also  whether  or  not  other 
sorts  of actions occur concurrently.  All  of this  interacts  with 
the agent's evolving knowledge of time. 

Consider  a  robot  gathering  knowledge  about  its  environ(cid:173)
ment.  It moves about while concurrently panning the camera 
and at various points senses the environment for the presence 
of objects  with  various  characteristics.  The  knowledge  ob(cid:173)
tained through  sensing (positions of objects of various sizes, 
shapes and colors) depends upon the position of the robot at 
a particular point  in  time,  the angle  of the  camera,  etc.  For 
many purposes, the results of sensing actions that occur at the 
same time are  important.  Not only do we have the need for 
two  distinct concurrent sensing actions  in binocular stereop-
sis, but also in the simultaneous use of other features such as 
texture gradients and shading to achieve knowledge of depth 
relationships.  Here  it  is  relative,  not  absolute  time,  that  is 
important. 

Furthermore,  speci£cation of an agent's ability to  achieve 
a goal in general involves requiring that the agent know what 
to  do to  arrive  at a  goal  state  [Moore,  1980;  Lesperance et 
al, 2000].  As the ability to achieve particular goals will often 
involve the ability to perform concurrent actions, the integra(cid:173)
tion  of knowledge  and  concurrency  is  an  important  step  in 
fully  formalizing these aspects of ability. 

We  develop  our  framework  within  the  situation  calcu(cid:173)
lus  -  a  £rst-order  formalism  for  representing  and  reasoning 
about  the  effects  of actions.  The  language  is  based  upon 
the  dialect  of  the  situation  calculus  used  in  the  Cognitive 
Robotics  Group  at the  University  of Toronto.  Certainly,  an(cid:173)
other formalism  could have been  used.  Within  A.I.  numer(cid:173)
ous  varying  formalisms  are  available  for  nrepresenting  and 
reasoning  about  action  (to  name  a  few,  [Shanahan,  1995; 
Baral  et  al,  1997]).  Knowledge  has  been  incorporated 
into  a  number  of  these  (for  example,  [Lobo  et  al,  2001; 
Thielscher, 2000]).  Outside of A.I. proper, there is also  [Fa-
gin et al,  1995]  on the interaction of knowledge and time. 

But  by  working  in  the  situation  calculus,  we  are  able  to 
extend previous work on reasoning (by regression and theo(cid:173)
rem proving) to cover the  language  developed here  as well. 
Furthermore, our work is suitable to be incorporated into the 
robot programming languages GOLOG and CONGOLOG. It 
can then be used to specify agents that must reason about the 
interactions  of time,  knowledge,  and concurrent actions  (in(cid:173)
cluding sensing actions). 

The  situation  calculus  [McCarthy  and  Hayes,  1969]  is 
a  language  for  modeling  dynamically  changing  worlds. 
Changes  to  the  world  are  the  results  of actions,  while  pos(cid:173)
sible  world  histories  consisting  of sequences  of actions  are 
represented  by  situations.  The  situation  calculus  can  be 
used  for agent planning  via  goal  regression.  Reiter  [Reiter, 
1991]  proposed a simple solution to the  frame problem,  an 
approach to axiomatization within the situation calculus.  Al(cid:173)
though  this  approach  to  the  frame  problem  requires  certain 
simplifying assumptions, it has proven to be useful and is the 
foundation for both goal regression and the programming lan(cid:173)
guage GOLOG. Goal regression was extended by Scherl and 
Levesque[Scherl  and  Levesque,  2003]  to  apply  to  an  agent 
who  can  sense  properties  of the  external  world  (e.g.,  read 
numbers  on  a  piece  of paper  or  determine  the  shape  of an 
object). 

REASONING ABOUT ACTIONS AND CHANGE 

1091 

This  paper1  combines  and  extends  the  work  of  Scherl 
and Levesque [Scherl and Levesque, 2003] incorporating the 
model  of  concurrency  and  time  presented  by  Reiter  [Re(cid:173)
nter,  2001].  At  the  same  time,  Reiter's  simple  solution  to 
the frame problem is preserved.  The real difficulty is to per(cid:173)
form  the  synthesis  in such  a way  that the  important distinc(cid:173)
tion  between  indexical  and  objective  time  [Lesperance  and 
Levesque, 1995] is preserved. 

If the  agent  currently  knows  the  absolute  time,  then  he 
knows  the absolute time after executing an action.  But if he 
doesn't know the absolute time,  then he only knows that he 
began  executing  the  action  some  number  of time  units  ago, 
unless of course  he  reads  a  clock.  While  maintaining these 
properties, the results presented here allow the representation 
of the  various  ways  in  which  actions  (including  sensing  ac(cid:173)
tions and possibly other concurrent actions) interact with time 
and knowledge. The method of regression is also extended to 
work with this augmented language. 

Section 2 gives a quick introduction to the situation calcu(cid:173)
lus and Section 3 does the same for the foundational axioms. 
The representation of knowledge and sensing actions are cov(cid:173)
ered in Section 4.  Concurrency is integrated into the frame(cid:173)
work  in  Section  5.  Section  6  covers  some  additional  con(cid:173)
structs  of the  language  and  illustrates  their  representational 
power.  A  number  of properties  of the  formulation  are  dis(cid:173)
cussed in Section 7.  Regression is covered in Section 8.  Fi(cid:173)
nally, Section 9 is the conclusion. 

2  Situation Calculus and the Frame Problem 
Space  does  not  permit  a  full  exposition  of the  background 
material on the situation calculus.  The framework developed 
in  [Reiter,  2001]  is  followed  and  full  details  may  be  found 
there or in [Scherl, 2003].  We assume that the frame problem 
has been handled by utilizing successor state axioms. 

3  Foundational Axioms 
Following  [Lin  and  Reiter,  1994;  Reiter,  2001]  the  founda(cid:173)
tional  axioms  for the  situation  calculus  are  utilized.  These 
axioms  provide  us  with  a  definition  of s 
which  says 
that  there  is  a  sequence  of zero  or more  executable  actions 
that move from situation s to situation s'.  Again, space does 
not permit full development of this material here. Full details 
may be found in [Reiter, 2001; Scherl, 2003]. 

4  An  Epistemic 'Fluent 
Scherl and Levesque [Scherl and Levesque, 2003] adapt the 
standard possible-world model of knowledge to the  situation 
calculus, as £rst done by Moore [Moore, 1980]. Informally, 
one  can  think  of there  being  a  binary  accessibility  relation 
over situations,  where  a  situation  s'  is  understood as being 
accessible from a situation s if as far as the agent knows in sit(cid:173)
uation s, he might be in situation s'.  So something is known 
in s if it is true in every  s'  accessible  from  s, and conversely 
something is not known if it is false in some accessible situa(cid:173)
tion. 

'An earlier version of some of this work has appeared in [Zim-

merbaum and Scherl, 2000]. 

read  as 

To treat knowledge as a ¤uent, they introduce a binary rela(cid:173)
tion  K 
is accessible from s" and treat it the 
same way we would any other auent. In other words, from the 
point of view of the situation calculus, the last argument to K 
is the  official  situation  argument (expressing what is known 
in situation s), and the £rst argument is just an auxiliary like 
the 

in  B R O K EN  

The  notation  Knows(P(now),s)  (read  as  P  is  known  in 
situation s) can then be introduced as as an abbreviation for a 
formula that uses K.  For example 

2 

The special indexical now is instantiated with a situation vari(cid:173)
able upon expansion. 

The  approach  also  handles  actions  that  make  known  the 
denotation of a term.  For this  case,  one  needs  the notation 
Kref(T(now), s) de£ned as follows: 

In general,  there  may  be  many  knowledge-producing  ac(cid:173)
tions,  as well as many ordinary actions.  To characterize all 
of these,  we  have  following  the  presentation  in  [Scherl  and 
Levesque, 2003], a function SR (for sensing result), and for 
each action a, a sensing-result axiom of the form: 

(1) 
This result is "YES" if " Q" is true and "NO" otherwise.  The 
symbols are given in quotes to indicate that they are not 
ents.  The sensing result function for SENSEQ  is axiomatized 
as follows: 

(2) 

For ordinary actions, the SR result is always the same, with 
result  not  being  signi£cant.  For  example,  we 

the  sped 
could have: 

In the case of a RE A 

the term  known, we would have: 

(3) 
action that makes the denotation of 

Therefore, 
that 

(4) 
has  the  same  denotation  in  all  worlds  s"  such 
S)) 

and  so  K r ef   DO(REA 

The  form of the  successor state axiom  for  K  without con(cid:173)

currency is as follows: 

(5) 

The relation K at a particular situation DO 
determined by the relation at s and the action 

is completely 

2Note that using this convention means that the arguments to K 

are reversed from their normal modal logic use. 

1092 

REASONING ABOUT ACTIONS AND CHANGE 

5  Concurrency 
As originally de£ned in the situation calculus  [McCarthy and 
Hayes,  1969],  actions  had  to  occur  sequentially,  with  one 
action  completed before  another could begin.  Furthermore, 
there  was no  facility  to deal  with the  continuous passage of 
time. This contrasted with other formalisms such as the event 
calculus which could naturally handle concurrent actions and 
continuous time. 

5.1  Concurrency with  Knowledge 
The  work  of Pinto  [Pinto,  1994]  and  Reiter  [Reiter,  2001] 
proposed  an  approach  to  dealing  with  concurrency,  natural 
actions  and  continuous  time  while  still  maintaining  the  so(cid:173)
lution  to  the  frame  problem.  Reiter  [Reiter,  2001]  de£ned 
a  new  sort  concurrent,  sets  of  simple  actions.  Variables 
represent  the 
sort  concurrent.  In Reiter's  notation,  the time  of an  action's 
occurrence  is  the  value  of that  action's  temporal  argument. 
and for each action an 
Thus an  action has the  form  A 
axiom of the form T I ME  
is required to indicate 
the time of the action. 

represent  the  sort  actions  and 

Concurrent  actions  are  sets  of  ordinary  actions  that  are 
taken  to  represent  instantaneous  acts.  An  action  with  dura(cid:173)
tion is represented by two instantaneous actions — a start ac(cid:173)
tion and an end action. Additionally, the foundational axioms 
are modi£ed to rule out the possibility of prior actions having 
later times. 

So if we want to represent a PRESSING action with duration 
(as  in pressing a button that keeps a light on),  the approach 
is to de£ne two  actions;  STARTPRESS  and  ENDPRESS.  We 
also must introduce a auent PRESSING.  The needed succes(cid:173)
sor state axiom is as follows: 

(6) 

This approach to representing actions with duration is some(cid:173)
thing that we make use of here. 

But, the use of a temporal argument for actions is problem(cid:173)
atic  in the presence of knowledge.  Given our successor state 
axiom for K, it would require the agent to know the time after 
any action, even  if it was  unknown  in the previous situation. 
To avoid this, we can not represent time as an argument to the 
instantaneous actions. 

Instead,  we represent the  instantaneous actions and asso(cid:173)
ciated times as a tuple of the  form 
with  functions 
ACTION and TIME de£ned, returning the  rst and second ele(cid:173)
ments of the tuple: 

(7) 
(8) 
These pairs, represented by variables 
are elements of 
the sort action-time pairs.  Concurrent Actions are now a set 
of such  tuples.  The  sort  action  contains  actions  without  a 
temporal argument. 

We also have the following 

(9) 

which  is needed to  relate  the time  of the  action/time pair to 
the start of a situation. There may also be an axiom giving the 
start time of the initial situation So.  We also de£ne a variant 
notation: 

(10) 
We adopt, without signi£cant change, Reiter's requirement 
that concurrent actions be coherent, that is there is at least one 
action-time  pair 
in the collection,  and the time of all pairs 
in the collection is the same: 

A  set  of action-time  pairs  are  coherent  if each  of them  have 
the same time component. 

The  de£nition  of time  can  readily  be  extended  to  sets  of 
concurrent actions  and  this  allows  us  to de£ne  the  function 
start of a  situation  resulting  from the  execution  of a  concur(cid:173)
rent action. 

The predicate  POSS(c\ $)  means that it is possible to exe(cid:173)

cute concurrent action c in situation .s. 

If it is possible to execute a concurrent actions, then it is co(cid:173)
herent and each of the simple actions is possible. 

We implicitly assume an additional sort ranging over time 
points which can be integers, rationals or reals; depending on 
how one wants to model time.  The standard Arabic numerals 
are used to represent time points.  Additionally, the symbols 
for addition and subtraction are interpreted as the usual oper(cid:173)
ations on numbers (integers, reals etc.) 
5.2  Precondition  Interactions 
We need to be able to conclude when a particular concurrent 
action c is possible in a situation c in order for the machinery 
being  developed  in  the  rest  of this  paper to  work.  Unfortu(cid:173)
nately, Sentence 15 does not suffice. The conditional can not 
be changed to a biconditional because of the precondition in(cid:173)
teraction problem [Pinto,  1994;  1998]. 

This  issue  needs  to  be  handled  by  the  axiomatizer of the 
domain.  For example, the axiomatizer might provide the fol(cid:173)
lowing axiom: 

As  discussed  in  [Pinto,  1994;  1998],  the  axiomatization  of 
P R E C I NT is domain dependent and can be done at increasing 
levels of detail. 

REASONING ABOUT ACTIONS AND CHANGE 

1093 

For the purposes of this paper, the point here is that what(cid:173)
ever solution is used for the precondition interaction problem 
in  the ordinary situation  calculus  carries over to the case  of 
knowledge and sensing. 
5.3  Successor State Axiom for K with 

Concurrency 

The  Successor State Axiom for K  using concurrency can be 
stated  in several alternative ways depending on  what condi(cid:173)
tions one wishes to apply regarding the agent's knowledge of 
time. We continue to require that the relation K at a particular 
situation DO(<?, s)  is completely determined by the relation at 
* and the set of concurrent actions c. 

The following successor state axiom models an agent who 
knows how much time is passing3.  This is an agent who has 
an accurate clock. 

After executing a  set  of concurrent  actions  c  in  situation  s, 
as far as the agent knows, it could be in a situation 
in  some  previously  accessible 
is  the  result  of performing 
and  that  s'  is 
situation 
is  possible  in 
provided  that 
identical to s in terms of what is being sensed.  Furthermore, 
being performed in 
it is required that the concurrent action 
all situations accessible from .s be identical to 
in  terms  of 
the individual actions that make up the set. 

Note that it is not required that the T I ME of the actions in all 
the accessible situations be identical.  If this were the case, it 
would force the agent to know the objective time after execut(cid:173)
ing any action.  Rather,  it is only required that the difference 
between  the start of the  current situation  and  the start of the 
previous situation be the same in all accessible situations (in(cid:173)
cluding the  actual  situation).  This  requirement  does  ensure 
that the agent knows how much time  is passing, but the ob(cid:173)
jective time  is only  known  if it was known before the  action 
has occurred. 

5.4  Concurrency  and  Sensing 
One  can  readily  imagine  cases  of  sensing  actions  where 
the  desired  result of sensing  (knowing  whether or not  some 
proposition holds) depends upon some other action occurring 
concurrently.  For example,  the  light  needs to be turned  on 
while the camera  is  clicked.  If the  light is  off,  then  sensing 
produces no knowledge. 

Consider representing, the requirement that the light switch 
be  pressed  while  SENSEp  occurs  for  the  knowledge  of 
whether  or  not  P  holds  to  result  from  the  execution  of 
SENSKp. We need to de£ne a predicate SCOND. 

SCOND(SHNSEp,cs)  =  PRESSING(s) 

(18) 

3Other possibilities are considered in [Scherl, 2003]. 

Now the successor state axiom for K needs to be modi£ed 

to include SCOND as well. 

For  every  action  an  appropriate  SCON  axiom  needs  to  be 
written. For most actions, the action is simply: 

(20) 

Further Constructs 

6  The Language and Examples 
6.1 
Wc need some way to refer to the current time without speci(cid:173)
fying the value of the current time. To achieve this we use the 
special indexical term now.  Upon expansion the term is re(cid:173)
placed with the appropriate situation term.  So, START(now) 
can be used to refer to the current time. Here we illustrate by 
example. The agent's knowing the objective time is expressed 
as  K n ow (start (now)  

This expands into 

We augment our language with a number of additional ex(cid:173)
pressions. These are based on ideas developed by Lesperancc 
and Levesque [Lesperance and Levesque,  1995] and require 
the  use  of the  notion  of precedence  of situations  as  de£ncd 
relation  on 
earlier.  Note that  we  distinguish  between the 
integers  used  to  represent  time  points  and  the 
relations 
on  situations  as  de£ned  in  the  foundational  axioms  for  the 
situation calculus. 

The  macro  Happened  is  introduced  to  allow  one  to  talk 

about an action occurring at a particular time point. 

(21) 
It speci£es that an action occurred prior to s and it was time t 
at some point during the action's duration. 

The macro Wasat is introduced to allow one to assert that 

a ¤uent was true at a particular point in time. 

It speci£es that P held at s' and  was the time  of  or  pre(cid:173)
ceded t  and  no  other  situation after s' preceded 
Here we 
introduce another special  indexical then  which is needed to 
ensure that the correct situation is substituted into the situa(cid:173)
tion argument of the predicate which is the middle argument 
to Wasat. 

1094 

REASONING ABOUT ACTIONS AND CHANGE 

7  Properties of the Formulation 
First  of all,  we  show  that  the  distinction  between  indexical 
and objective time is preserved. 

8  Reasoning 
is  de£ned  relative  to  a  set  of suc(cid:173)
A  regression  operator 
Space  limitations here only allow a 
cessor state axioms 
sketch of the regression operators.  Full details may be found 
in [Scherl, 2003]. 

The operators satisfy the following regression theorem: 

Theorem 1  For any ground situation term 
G: 

and  formula 

is the initial axiomatization of the domain and 

Here 
the set of successor state axioms. 

is 

Even if agents do not know the objective time, they do know 
how much time has passed since the last occurrence of a par(cid:173)
ticular action or the last time at which a particular nuent was 
true. 
Proposition 3 (Knowledge of Indexical Time  1) 

Proposition 4 (Knowledge of Indexical Time 2)  For  every 

Additionally,  the  crucial  results  of  [Scherl  and  Levesque, 
2003] carry over to the case considered here. These include 
Proposition 5 (Default Persistence of Ignorance)  For  an 
action  a  and a  situation  s,  if-iKnows(P,  s)  holds  and the 
axiomatization  entails 

and 

then 

-iKnows(P, DO(a, s)) 

holds as well. 
Proposition 6 (Knowledge Incorporation)  For 
knowledge-producing  action 
of 
situation a, if the axiomatization entails 

V , or

  the  negation  of  ¤uent  P,   and 

or  the  negation 

8.1  Regression Operators 
The regression operator 7Z is de£ned relative to a set of suc(cid:173)
cessor state axioms 
The  £rst  four parts  of the  de£nition 
of the  regression  operator 
concern  ordinary  (i.e.  not 
knowledge-producing)  actions  [Reiter,  2001].  They  are  ex(cid:173)
actly the same as those in  [Reiter, 2001].  Additionally,  it is 
necessary  to  correctly  regress  the  equality  predicate  as  dis(cid:173)
cussed in [Scherl and Levesque, 2003; Reiter, 2001]. 

Additional  steps  are  needed to  extend  the  regression  op(cid:173)
erator to knowledge-producing  actions.  Two  de£nitions are 
is an arbitrary 
needed for the speci£cation to follow. When 
sentence and s a situation term, then 
is the sentence that 
results from  instantiating every occurrence of now in  with 
s'.  The  reverse  operation 
is  the  result  of instantiating 
every occurrence of s'  in  with now. 

Step  v  covers  the  case  of regressing  the  Knows  operator 
through  a  non-knowledge-producing  action.  Step  vi  covers 
the case of regressing the Knows operator through a knowl(cid:173)
edge producing action.  In the de£nitions below, ,s' is a new 
situation variable. 
v.  Whenever c does not contain a knowledge-producing ac(cid:173)

tion, 

Knows(Poss(c) 

vi.  Whenever c does contain a knowledge-producing action, 

and also 

and 

hold, then 

Knows 

Knows 

Knows 

holds as well. 
Proposition 7 (Memory)  For  all 
if Knows(P, s) holds then Knows 
as the axiomatization entails 

The special function trans replaces c with a 

that has the 
identical  action  in  each  of the  action-time  pairs.  But  it  re(cid:173)
places the time portion with a relative time.  This  is an ex(cid:173)
pression  of the  form  (3  =  TIMK(now)).  So,  if c  occurs  in 
a situation term of the form  DO(C, s) and TlME(r)  is 7 and 
START(s)  is 4,  then  the  7  in  the  time  part  of every  action-
time pair in c would be replaced by (3 = TlME(now)). These 
are properly handled by the operators for regressing equality 
predicates. 

The regression operators for Happened and Wasat follow: 

viii. 

P and situations .s, 
holds as long 

These results ensure that actions only affect knowledge in the 
appropriate way. 

REASONING ABOUT ACTIONS AND CHANGE 

1095 

ix. 

The  end  result  of regression  is  a  sentence  (possibly  much 
larger)  in  a  language  without  actions.  The  language  is  a 
modal language with both temporal and epistemic operators. 

9  Conclusions 
The  results  reported  in  this  paper  can  be  combined  with 
Concurrent,  Temporal  Golog  or  RGolog[Reiter,  2001]  or 
CONGOLOG[Giacomo  et  al,  1997]  to  specify  and  control 
an agent (such as the robot discussed in Section  1) that con(cid:173)
currently moves about its environment and performs various 
actions  including  sensing actions.  Future work will  address 
the  issue  of developing a good  theorem  proving  method  for 
the language resulting from regression. This method needs to 
combine  modal  theorem  proving  with  a  method  for solving 
integer constraints. 

Acknowledgments 
Numerous  helpful  discussions  have  been  held  with  Yves 
Lesperance on many of the topics covered in this paper.  Use(cid:173)
ful suggestions made by Patrick Doherty, Daniele Nardi, and 
a  number  of anonymous  reviewers  of earlier  versions  of this 
paper have been incorporated.  Additional thanks are due to 
Steve Zimmerbaum with whom the initial stages of this work 
were  carried  out.  This  research  was  partially  supported  by 
NSF grants SES-9819116 and CISE-9818309. 

References 
[Baralet al., 1997]  Chitta  Baral,  Michael  Gelfond,  and 
Alessandro Provetti.  Representing actions:  Laws,  obser(cid:173)
vations  and  hypotheses.  Journal  of Logic  Programming, 
31(l-3):201-243, 1997. 

[Fagin et al,  1995]  R. Fagin, J.Y. Halpern, Y.O. Moses, and 
M.Y.  Vardi.  Reasoning  about  Knowledge.  MIT  Press, 
Cambridge, Mass, 1995. 

[Giacomoefa/.,  1997]  G.  De Giacomo,  Y.  Lesperance, and 
H.  J.  Levesque.  Reasoning  about  concurrent  execution, 
prioritized interrupts, and exogeneous actions in the situa(cid:173)
tion calculus. In Proceedings of the Fifteenth International 
Joint  Conference  on Artiicial Intelligence\  Nagoya,  Japan, 
1997. 

[Lesperance and Levesque,  1995]  Yves  Lesperance  and 
Hector Levesque. Indexical knowledge and robot action— 
a  logical  account.  Artilcial  Intelligence,  73(1-2):69-115, 
February  1995. 

[Lesperance et  al,  2000]  Yves  Lesperance,  Hector 

J. 
Levesque, Fangzhen Lin, and Richard B.  Scherl.  Ability 
and knowing how in the situation calculus.  Studia Logica, 
66(1), 2000. 

[Lin and Reiter,  1994]  Fangzhen  Lin  and  Raymond  Reiter. 
State  constraints  revisited.  Journal  of  Logic  and  Compu(cid:173)
tation, 4(5):655-678,  1994. 

[Lobo et  al,  2001]  Jorge  Lobo,  Gisela  Mendez,  and  Stuart 
Taylor.  Knowledge and the action description language A. 
Journal of Logic Programming, 1 (2): 129-184, 2001. 

[McCarthy and Hayes,  1969]  J.  McCarthy  and  P.  Hayes. 
Some  philosophical  problems  from  the  standpoint  of ar(cid:173)
terial intelligence.  In B. Meltzer and D.  Michie, editors, 
Machine  Intelligence  4,  pages  463-502.  Edinburgh  Uni(cid:173)
versity Press, Edinburgh, UK,  1969. 

[Moore,  1980]  R.C. Moore. Reasoning about knowledge and 
action.  Technical  Note  191,  SRI  International,  October 
1980. 

[Pinto,  1994]  J.A.  Pinto.  Temporal  Reasoning  in  the  Sit(cid:173)
uation  Calculus.  PhD  thesis,  Department  of Computer 
Science,  University  of Toronto,  Toronto,  Ontario,  1994. 
Available as technical report KRR-TR-94-1. 

[Pinto,  1998]  Javier A.  Pinto.  Concurrent actions and  inter(cid:173)
acting effects. In Principles of Knowledge Representation 
and  Reasoning:  Proceedings  of the  Sixth  International 
Conference  (KR-98),  pages  292-303.  Morgan  Kaufmann 
Publishing, 1998. 

[Reiter,  1991]  Raymond  Reiter.  The  frame  problem  in  the 
situation  calculus:  A  simple  solution  (sometimes)  and  a 
completeness result for goal regression.  In Vladimir Lifs-
chitz,  editor,  ArtiicialIntelligence  and  Mathematical  The(cid:173)
ory  of  Computation:  Papers  in  Honor  of  John  McCarthy, 
pages 359-380. Academic Press, San Diego, CA, 1991. 

[Reiter, 2001]  Raymond Reiter.  Knowledge in Action:  Logi(cid:173)
cal  Foundations for Specifying  and  Implementing  Dynam(cid:173)
ical Systems.  The MIT Press, Cambridge, Massachusetts, 
2001. 

[Scherl and Levesque, 2003]  Richard  Scherl  and  Hector 
Levesque. Knowledge, action, and the frame problem. Ar-
tiicial  Intelligence,  144:1-39,  2003. 

[Scherl, 2003]  Richard Scherl.  Axiomatizing the interaction 
of knowledge,  time,  and  concurrency  with  the  situation 
calculus, journal version in progress, 2003. 

[Shanahan,  1995]  Murray Shanahan.  A circumscriptive cal(cid:173)
culus  of  events.  Arti  cial  Intelligence,  77(2):249-284, 
September  1995. 

[Thielscher, 2000]  Michael  Thielscher.  Representing  the 
knowledge  of  a  robot. 
In  A.  Cohn,  F.  Giunchiglia, 
and  B.  Selman,  editors,  Proceedings  of the  International 
Conference  on  Principles  of Knowledge  Representation 
and Reasoning (KR), pages  109-120.  Morgan  Kaufmann, 
2000. 

[Zimmerbaum and Scherl, 2000]  Stephen Zimmerbaum  and 
Richard Scherl.  Knowledge, time, and concurrency in the 
situation calculus.  In C. Castelfranchi and Y. Lesperance, 
editors,  Intelligent  Agents  VII:  Proceedings  of the  2000 
Workshop  on  Agent  Theories,  Architectures,  and  Lan(cid:173)
guages  (ATAL-2000),  LNAI,  Berlin,  2000.  Springer-
Verlag. 

1096 

REASONING ABOUT ACTIONS AND CHANGE 

