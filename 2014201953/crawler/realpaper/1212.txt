OPTIMIZING  A  VIDEO  PREPROCESSOR  FOR  OCR 

MR 

IBM  Systems  Dev 
Rochester, 

elopment Division 
Minnesota 

Summary 

This  paper  describes  how  optimal  video  preprocessor 
performance  can  be  achieved  using  a  software  recog(cid:173)
nition  system  and  a  set  of  controlled  experiments. 
It 
basically  involves  optimizing  on  a  constant  threshold 
and  then  using  recognition  logic  designed  f r om  that 
threshold  to  optimize  an  adaptive  threshold  function 
or  threshold  operator.  By  using  this  technique,  the 
video  preprocessor  can  be  optimized  early  In  the 
development  of  an  OCR  (Optical  Character  Recognition) 
machine.  The  software  recognition  system  is 
described  and  experimental  data  is  presented  to 
illustrate  the  procedures. 

Introduction 

There  are  three  basic  stages  in  the  data  path  of  an 
optical  character  recognition  (OCR)  machine;  scanning, 
video  preprocessing,  and  recognition.  The  video  p r e(cid:173)
processor  configuration  could  be  one  of  many  possible 
configurations,  but,  in  general,  its  function  is  to 
improve  the  image  quality  p r i or  to  the  actual  recogni(cid:173)
tion  process. 
sor  discussed  here,  the  analog  video  is  compared  to 
an  automatic  or  adaptive  threshold  derived  f r om 
intelligence  in  the  video  signal. 

In  the  video  threshold  type  of  preproces(cid:173)

Since, 
for  many  OCR  applications,  a  wide  range  of 
print  quality  distortions  can  be  expected  on  the  input 
documents,  the  c i r c u i t ry  deriving  a  threshold  f r om 
video  obtained  from  these  documents  becomes  neces(cid:173)
sarily  complex  and  difficult  to  optimize  in  terms  of 
recognition  performance.  Optimization  techniques  in 
the  past  have  consisted  of  analysis  of  video  output 
signals  and  of two-dimensional  video  bit  patterns,  and 
evaluation  using  the  recognition  c i r c u i t ry  of  the 
machine  for  which  the  thresholding  scheme  is  being 
designed.  F r om  either  of  these  evaluation  techniques 
one  can  determine  the  type  of  automatic  threshold 
function  needed, 
repeat  the  evaluation  to  determine  if  the  output  has 
improved. 
needed,  the  process  must  be  repeated.  This  contin(cid:173)
ues  on  a  t r i al  and  e r r or  basis  until  the  best  results 
are  achieved.  Use  of  the  recognition  c i r c u i t ry  as  an 
evaluation  tool  has  proven to  be  the  most  fruitful 
technique. 

If  readjustment  to  the  f i r st  function  is 

implement  it  in  hardware,  and  then 

This  paper  describes  how  optimal  video  preprocessor 
performance  can  be  achieved  using  a  software  recog(cid:173)
nition  system  and  a  set  of  controlled  experiments. 
Even  though  a  specific  type  of preprocessor  is  assumed 

- 7 9-

It  basically  involves  optimizing the 

here,  the  techniques  can  be  applied  to  other  preproces(cid:173)
sors  as  w e l l. 
recognition  performance  on  a  constant  threshold  and 
then  using  recognition  logic  designed  f r om  that  t h r e s(cid:173)
hold  to  optimize  the  adaptive  threshold  functions. 
Recognition  reject  rates  are  used  to  measure  improve(cid:173)
ment  or  deterioration  In  image  quality  at  the  prepro(cid:173)
cessor  output.  The  recognition  reject  rate,  therefore, 
provides  the  basis  for  determining  when  the  preproces(cid:173)
sor  is  optimal. 

General  Description  of  Video  Preprocessor 

The  relationship  of  a  video  preprocessor  to  the  entire 
OCR  system  is  shown  in  Figure  1.  An  optical  scanner 
provides  an  analog  representation  of the  scanned  image. 
Circuitry,  called  threshold  operators  or  adaptive 
threshold  functions,  measures  certain  distinguishing 
characteristics  of  the  video  (average  contrast,  peak 
control  pulse  width,  etc.)  and  produces  a  threshold  to 
which  the  analog  video  is  compared  using  a  voltage 
discriminator.  The  voltage  discriminator  output,  or 
amplitude  quantized  video, 
is  then  time  sampled  and 
stored  in  a  shift  register  for  recognition.  The  t h r e s(cid:173)
hold  operator  may  also  use  the  information  stored  in 
the  shift  register.  For  a  thresholder  to  perform 
optimally  when  the  input  consists  of  a  wide  range  of 
print  quality  distortions  at  least  one,  and  usually  more, 
threshold  operators  are  needed. 

The  operator  outputs  T1  T2,  T3,  T4  in  Figure  1  are 
combined  to  f o rm  a  final  video  threshold.  To  show  how 
Ti  might  be  produced,  consider  an  operator  which 
measures  average  contrast  V  over  previously  scanned 
characters.  The  threshold  T^  could then  be  generated 
by  making  it  a  linear  function  of  V, 

T1  =  K  V  + 

C1 

(1) 

The  threshold  T1  would  then  respond  to  changes  in V 
and  this  would  be  reflected  in  the  final  video  threshold 
along  with  other  s i m i l a r ly  generated  operator  outputs. 

The  basic  hardware  design  of  the  threshold  operators 
depends  heavily  on  the  type  of  optical  scanner  being 
used.  Generally,  however,  the  operators  w i ll  measure 
contrast,  character  line  width,  or  any  other  conceiv(cid:173)
able  video  characteristic.  Another  design  parameter 
is  the  area  of threshold  Influence.  This  may  be  a  local 
area  about  a  point  or  an  area  encompassing  several 
characters. 

Video  thresholding  is  used  to  reduce  the  variations  in 

the  thresholder  output  caused  by  print  quality  distor(cid:173)
tions  of the  scanned  image.  Once  the  threshold  opera(cid:173)
tors  are  designed,  considerable  effort  s t i ll  remains  in 
optimizing parameters,  such  as  K  and  C1  in  Equation  1, 
for  each  operator  and  for  other  parameters  which  are 
involved  in  mixing  the  operator  outputs  to  f o rm  a  final 
video  threshold.  Difficulty  arises  when  a  subjective 
decision  is  made  as  to  when  a  variation  in  thresholder 
output  has  been  significantly  reduced  by  a  particular 
threshold  operator.  Another  difficulty  is  that  a  p a r t i c(cid:173)
ular  threshold  operator  may  have  bad  as  well  as  good 
effects  on  certain  types  of  scanned  images. 
In  other 
words, 
the  thresholder  itself  may  introduce  distortions 
into  the  video.  Here,  again,  some  means  of  measuring 
the  severity  of the  distortion  is  needed. 

A  thresholder  w i ll  be  optimal  when  it  has  adapted  to  the 
widest  print  quality  range  possible.  Thus,  the  p a r a m(cid:173)
eters  in  each  operator  must  be  adjusted  for  the  p a r t i c u(cid:173)
lar  type  of  distortion  the  operator  was  designed  to 
improve.  The  outputs  of  each  operator  need  to  be  mixed 
in  such  a  way  that  the  thresholder  adapts  to  the  different 
types  of  print  quality  distortions  which  occur  in  the 
input. 

Thresholder  Optimization 

The  basic  tool  used  here  for  evaluating  the  thresholder 
type  of  video  preprocessor  is  a  software  character 
recognition  system.  Hardware  or  software  recognition 
could  be  used,  but  there  are  certain  advantages  to  the 
latter.  With  a  software  recognition  system, 
it  is  not 
necessary  to  wait  until  hardware  is  designed  and  built 
before  optimizing  the  preprocessor.  Preprocessor 
optimization  can  be  completed  p r i or  to  designing  h a r d(cid:173)
ware  and,  therefore,  the  logic  designers  can  converge 
more  rapidly  to  an  optimal  hardware  recognition  logic 
design. 

For  this  application,  an  adaptive  computer  program  was 
used  to  automatically  design  recognition  logics.  These 
logics  were  then  used  by the  software  recognition  system. 
Use  of the  adaptive  program  allowed  the  logics  to  be 
easily  adapted  to  a  large  number  of  scanning  devices 
and  also  to  a  wide  range  of print  quality. 

Optimization  Technique 

Print  quality  distortions  are  introduced  f r om  four  r e l a(cid:173)
tively  independent  sources  in  the  document  preparation 
process;  the  printer,  the  ribbon,  the  scanner  itself,  and 
the  document  handling  process.  For  a  conceptual  under(cid:173)
standing,  some  hypothetical  quality  function  Q  can  be 
defined  as  a  measure  of the  image  quality  which  finally 
reaches  the  recognition  system.  Q could  then  be  r e p r e(cid:173)
sented  as  the  product  of  four  independent  quality  functions. 

where  p,  r,  h  and  s  denote  printer,  ribbon,  document 

(2) 

- 8 0-

handling  and  scanner,  respectively.  Q  would  be 
maximum  when  each  stage  passed  the  image  with 
minimum  distortion. 

Attempts  have  been  made  to  define  a  unique  measure  of 
quality,  such  as  Q,  which  can  be  related  to  measurable 
characteristics  of  the  image  and  ultimately  predict  the 
performance  of  an  optical  character  reader.  Most  of 
these  attempts  have  been  only  mildly  successful.  For 
example, 
the  average  contrast  or  average  stroke  width 
of  an  image  has  been  used  as  a  measure  of  quality. 
These  are  only  two  of  the  many  image  characteristics 
which  are  altered  by  print  quality  distortion,  and 
measuring  these  two  alone  cannot  possibly  provide  a 
unique  measure  of  print  quality.  The  evaluation  tech(cid:173)
nique  described  here  uses  a  character  recognition 
system  to  provide  a  measure  of  Image  quality. 

It  should  be  clear  that  a  wide  range  of  print  quality  w i ll 
occur  over  the  lifetime  of  a  ribbon  for  any  given  printer 
The  varying  contrast  levels  which  occur  during  this 
period  of  time  constitute  a  print  quality  distortion,  and, 
in  addition,  they  modify  the  severity  of  distortions 
introduced  by  the  printer  itself.  Shaded  printing  (light 
tops  with  dark  bottoms),  for  example,  which  normally 
is  a  distortion  introduced  by  the  printer  may  be  a 
serious  problem  to  a  recognition  system  only  with  very 
old  ribbons  or  when  contrast  levels  are  low.  On  the 
other  hand, 
particular  type  slug,  this  may  only  cause  recognition 
problems  at  high  contrast  levels  where  smudged  images 
or  even  background  noise  would  be  expected.  The  f i r st 
step  in  preprocessor  evaluation  then  is  to  check  its 
performance  at  different  points  during  ribbon  life. 

if  the  impression  is  set  too  high  on  a 

The  number  of  lines  printed  is  used  as  a  measure  of 
ribbon  age.  To  evaluate  the  dependency  of  image 
quality  on  ribbon  age,  the  number  of  characters  rejected 
by  a  recognition  system  is  calculated  over  t h i r ty  inter(cid:173)
vals  of  ribbon  age. 
w i ll  denote  the  interval  and 
R(N)m  w i ll  be  defined  as  the  number  of  rejects  which 
occur  between  
in  Figure  2  illustrate  the  dependency  of  R ( N )m  on  a 
constant  video  threshold  (a  threshold  which  is  indepen(cid:173)
dent  of  all  contrast  variations). 

and  N.  The  three  curves  shown 

The  shape  of the  function  R ( N )m  is  used  to  determine 
which  of the  three  thresholds  is  best.  Since  it  is  the 
goal  of  the  preprocessor  to  produce  an  output  which 
has  the  least  amount  of  variation  at  different  points  in 
ribbon  life,  Curve  b  would  represent  the  best  choice. 
It  shows  the  least  amount  of  deviation  throughout  ribbon 
life  f r om  the  minimum  reject  rate.  This  choice 
becomes  obvious  after  observing  the  extremes  in 
image  distortion  which  occur  early  in  ribbon  life  for  a 
low  threshold,  or  late  in  ribbon  life  for  a  high  t h r e s(cid:173)
hold. 

It  is  possible  to  express  the  conditions  for  an  optimum 
constant  threshold  in  mathematical  t e r m s.  By 

it  is  possible  to 

and 

,  which 

differentiating  Curve  b  of  Figure  2, 
determine  two  points  of  inflection,  
can  be  used  to  define  boundaries  of three  contrast 
ranges. 
for  increasing  values  of  
which  dR(N)m  
three  contrast  ranges  can  then  be  defined  as 

is  the  f i r st  point  at  which 

is  the  f i r st  point  at 

for  decreasing  values  of  N.  The 

m = N1/ AN 

(3) 

In  addition to  calculating  R ( N )m, 
pattern  distortions. 
a  s i m i l ar  function  was  calculated  for  each  character 
class.  This  allowed  determination  of which  classes, 
if  any,  were  significantly  more  troublesome  than 
others.  Also the  video  patterns  which  were  stored  on 
the  input  tape  were  sorted  according  to  class  and  then 
stored  on the  output  tape.  The  output  patterns  can then 
be  printed  out  in  order  of  increasing  values  of  N  so  that 
the  type  of  distortion  can be  observed.  This  is  neces(cid:173)
sary  in  order  to  determine  what  type  of  threshold 
operator  needs  to  be  designed. 

The  program  also  calculated  the  number  of high, 
medium,  and  low  contrast  substitutions.  Since  the 
number  of  substitutions  is  normally  small, 
it  is  not 
possible  to  determine  a  reliable  relationship  between 
substitution  e r r o rs  and  ribbon  age.  The  substitution 
patterns,  however,  were  stored  on the  output tape  so 
they  could  be  printed  for  visual  inspection. 

where  m  is  a  positive  integer  ranging  f r om  1  to  30.  The 
optimum  constant  threshold  w i ll  occur  when 

Input  Documents 

A ll  discussion  to  this  point  have  been  concerned  with  a 
constant  video  threshold.  While  this  is  the  most 
elementary,  selecting  the  optimum  constant  threshold 
should  be  the  f i r st  design  step.  When  new  threshold 
operators  are  designed,  new  values  of  RH,  RM,  and 
RL  can  be  calculated  and  compared  against  the  old  to 
give  a  measure  of  success  or  failure. 

Still  another  factor  in  favor  of  f i r st  optimizing  on  a 
constant  threshold  Is  that  it  gives  a  data  set  with  a 
proportionate  number  of  high  and  low  contrast  problem 
patterns  on  which  a  software  recognition  logic  can be 
designed.  This  is  an  important  consideration  because 
the  recognition  logic  w i ll  be  used  for  additional  prepro(cid:173)
cessor  evaluation.  The  reliability  of  a  recognition 
logic  design  on  extremely  distorted  data  such  as  that 
which  produced  Curves  a  or  c  of  Figure  2  would  be 
very  questionable. 

Video  Evaluation  Program 

is  very  simple  in  con(cid:173)

it  is  very  time  consuming  to  determine  by  manual 

Even  though  the  function  R(N) 
cept, 
calculation.  For  example,  consider  an  optical  character 
reader  for  which  the  average  reject  rate  over  ribbon 
life  time  is  required to  be  0 . 1%  (1  reject  per  1000 
characters).  Also  assume  that  it  is  necessary  to  calcu(cid:173)
late  the  reject  rate  at  thirty  points  throughout  ribbon 
life  to  accurately  determine  R(N)m. 
It  seems  reason(cid:173)
able  to  require  at  least  100  rejects  on  the  average  for 
each  point  to  minimize  statistical  fluctuations.  This 
means  that  3  x  106  characters  need  to be  scanned 
(1000  x  100  x  30)  and  3000  reject  patterns  have  to  be 
analyzed.  Thus,  a  computer  program  was  written to 
calculate  R(N) 

. 
*  m 

Several  other  features  were  incorporated  into  the  p r o(cid:173)
gram  to  allow  rapid  determination  of  predominate 

- 8 1-

Input  documents  which  are  scanned  for  preprocessor 
optimization  must  be  representative  of  those  which  the 
machine  is  finally  expected  to  handle. 
If  the  machine 
is  expected  to  operate  in  an  uncontrolled  print  quality 
environment,  documents  printed  with  low  quality 
ribbons,  worn  out  ribbons,  and  poorly  adjusted  printers 
can  be  expected.  For  machines  that  are  designed  to 
perform  in  a  so-called  controlled  environment,  the 
print  quality  is  considerably  better  but  the  machine 
must  s t i ll  be  able  to  handle  a  large  number  of  print 
quality  distortions. 

Documents  can  be  printed  for  laboratory  testing  to 
simulate  the  range  of  print  quality  distortions  a  machine 
is  expected  to  handle.  For  this  evaluation  technique, 
the  documents  must  be  sampled  f r om  the  printer  output 
at  equal  intervals  throughout  the  lifetime  of  a  ribbon. 
Ribbon  lifetime  is  specified  for  an  OCR  ribbon  as  the 
number  of  lines  that  can  be  printed  with  a  ribbon  before 
print  quality  deteriorates  to  an  unacceptable  level  for 
OCR.  However,  ribbons  are  often  used  beyond  their 
specified  lifetimes  in  customer  applications,  but  this 
condition  is  easily  simulated  in  the  laboratory.  Sched(cid:173)
uled  maintenance  is  normally  recommended  for  printers 
used  in  OCR  applications  and  here  again, 
if the  m a i n(cid:173)
tenance  is  not  done,  print  quality  w i ll  deteriorate.  To 
simulate  this  condition  several  batches  of  documents 
(one  batch  per  ribbon)  can  be  printed  without  adjusting 
the  printer. 

In  multifont 

there  are  usually  many  more  printing 

These  simulation  techniques  would  apply  for  multifont 
applications  as  well  as  single  font. 
applications, 
devices  each  introducing  print  quality  distortions 
characteristic  of  a  particular  printing  mechanism.  A 
particular  type  style  itself  may  be  the  source  of  a 
unique  print  quality  distortion.  To  minimize  the  number 
of  documents  required  for  preprocessor  optimization,  a 

preliminary  study  should  be  made  to  determine  which 
printers  and  fonts  can  be  expected  to  occur  most 
frequently. 

Pattern  Collection 

implies  that  the  document  transport,  scanner 

A  two-dimensional  bit  pattern  of the  scanned  image  is 
essential  for  the  optimization  technique.  This,  of 
course, 
and  CPU  interface  be  made  operational  p r i or  to  p r e(cid:173)
processor  optimization.  A  pattern  collection  program 
need  also  be  written  to  store  the  two-dimensional  bit 
patterns  on  magnetic  tape.  This  program  would  be 
dependent  on  a  particular  machine  configuration.  A ll 
programs  used  in  the  optimization  scheme  beyond  this 
point  can  be  adopted  to  a  variety  of  video  patterns 
making  them  useful  on  any  OCR  machine. 

Segmentation  and  Registration  Program 

Pattern  segmentation,  another  type  of  video  preprocess(cid:173)
ing  must  be  completed  before  the  recognition  process. 
A  computer  program  was  written  to  p e r f o rm  segmenta(cid:173)
tion  as  well  as  the  pattern  registration  required  by  the 
adaptive  program.  A  sampling  feature  was  included  in 
the  program  to  reduce  the  amount  of  data  which  had  to 
be  analyzed  by the  recognition  system.  The  input 
documents  were  divided  into  small  groups  with  M 
documents  in  each  group  (M  can  be  chosen  by the 
designer). 

The  segmentation  algorithms  were  kept  quite  simple  to 
keep  computer  time  minimal.  This  simplicity  caused 
segmentation  e r r o r s,  but  these  could  be  detected 
automatically  by  comparing  the  number  of  segmented 
characters  per  line  to  the  number  of  characters  printed 
on  the  document.  E r r or  lines  determined  in  this  way 
were  not  used  as  input  to  recognition. 

Segmentation  e r r o rs  which  could  not  be  detected  in  the 
above  manner  occur  infrequently  enough  for  single  font 
applications  so  as  not  to  significantly  affect  the  final 
calculation  of  recognition  e r r or  rates.  This  may  not 
be  true  for  multifont  applications,  but  it  would  be 
possible  to  manually  eliminate  those  recognition  e r r o rs 
caused  by  Improper  segmentation  f r om  the  final  statis(cid:173)
t i c s.  Another  alternative  for  multifont  machines  is  to 
design  a  sophisticated  hardware  segmentation  system. 

Optimization  Steps 

A ll  of the  optimization  steps  discussed  are  summarized 
in  a  flowchart  shown  in  Figures  3  and  4.  The  process 
consists  of three  phases.  During  Phase  I  the  optimum 
constant threshold  is  determined.  This  provides  a 
recognition  logic  capable  of handling  a  reasonable  print 
quality  range  that  can  be  used  for  additional  optimiza(cid:173)
tion  in  Phase  I I.  One  set  of  documents  (about  10,  000 
lines)  Is  required  and  the  same  document  can  be  used 
during  Phase  I  and  Phase  I I. 

- 8 2-

The  documents  should  be  printed  with  that  device  which 
is  expected  to  produce  the  largest  percentage  of  input 
for  the  particular  OCR  application  under  consideration. 
The  same  is  true  of  the  font  with  which  the  printer  is 
equipped  in the  case  of  multifont  applications.  The 
printing  device  should  be  properly  adjusted  so  that  Its 
output  is  typical  rather  than  worst  case.  This  prevents 
designing  threshold  operators  around  distortions  which 
are  characteristic  of  a  single  printer.  Program  r u n(cid:173)
ning  times  are  indicated  in  Figure  3  and  apply  to  an 
IBM  System/360  Model  30.  The  number  of  lines  and 
characters  required  are  also  indicated  and  were 
arrived  at  f r om  statistical  considerations. 

During  Phase  II  (Figure  4),  the  threshold  operators  are 
designed,  implemented  and  evaluated.  The  criterion 
for  successfully  completing  Phase  II  is  to  make 
dR(N)m/dN  =  0  for  all  values  of  N. 

A  third  phase  is  included  to  extend  the  evaluation  to 
more  printers  of  the  same  type  used  In  Phase  I  and  II 
and  also  to  other  printing  devices.  This  w i ll  expose 
other  print  quality  distortions  and  if  they  occur  f r e-
questly  enough  w i ll  require  the  design  of  additional 
threshold  operators.  New  fonts  can  also  be  investigated 
in  a  multifont  application.  This  would  require  f i r st 
scanning  the  documents  at  the  constant  threshold 
derived  in  Phase  I  so  that  a  new  logic  can  be  designed 
which  Is  capable  of  recognizing  the  character  shapes 
presented  by  the  new  font. 

Experimental  Results 

In  order  to  check  the  computer  programs  and  techniques 
described  In  Figure  3,  all  of  the  steps  of  Phase  I  were 
carried  out. 

A  sample  of  the  printing  which  was  scanned  for  the 
evaluation  is  shown  In  Figure  5.  An  I BM  1403  Nl  high(cid:173)
speed  printer  was  used  to  print  97, 200  lines,  and  a 
l/4-length  ribbon  was  used  to  reduce  the  number  of 
documents  which  had  to  be  printed.  This  represents 
1-1/2  times  the  number  of  documents  recommended 
for  customer  applications. 
recommended  lifetime  for  a  full  length  ribbon.)  The 
impression  setting  of  the  printer  was  also  set  to  its 
maximum  value.  Only  half  of the  printed  lines  were 
scanned  and  this  number  was  again  reduced  by  a  factor 
of ten  In  the  segmentation  program  p r i or  to  recognition 
(there  is  a  sampling  feature  in  the  segmentation 
program).  The  recognition  logics  were  designed  on 
11,  000  patterns  sampled  uniformly  throughout  the  total 
number  of lines  printed. 

(250,  000  lines  is  the 

Print  contrast  levels  were  measured  on  the  documents 
and  the  results  are  shown  in  Figure  6.  Contrast  is 
defined  by  the  equation 

cessor  early  in  a  machine  development  program. 
Recognition  e r r or  rates  need  not  be  within  final 
machine  specification  during  the  optimization  process 
because  they  are  used  as  a  relative  measure  of  image 
quality.  Once  optimal  performance  is  achieved  in  this 
manner  a  sophisticated  recognition  system  can be 
designed  which  performs  within  machine  specifications. 

Acknowledgements 

The  author  would  like  to  acknowledge  Messrs.  C  D 
Tulledge  and  R  Baumgartner  both  of  the  I BM  Systems 
Development  Divison  Laboratory,  Rochester,  Minnesota, 
for  their  programming  assistance. 

References 

1. 

Bartz,  M.  R.,  Video  Preprocessor  Design  for  the 
I BM  1975,  I BM  Journal  of  Research  and  Develop(cid:173)
ment,  V o l.  12,  No.  4,  September,  1968. 

Contrast  levels  take  on  a  range  of  values  over  the  docu(cid:173)
ment  and  even  over  the  character.  This  is  illustrated 
in  the  figure  by  upper  and  lower  l i m i t s.  Notice  that  the 
lower  l i m it  approaches  zero  for  large  values  of  N.  This 
may  or  may  not  be  a  problem  depending  on  whether  the 
contrast  goes  to  zero  in  an  area  of  the  character  that  is 
c r i t i c al  to  its  identification. 

The  electroptic  device  used  to  scan  the  documents  had  a 
square  sampling  aperature  5  x  10~3  in.  wide.  The  video 
was  time-sampled  at  a  rate  which  was  equivalent  to  200 
samples /inch  on  the  document  in  both  the  horizontal  and 
vertical  dimensions.  Amplifiers  and  threshold  circuits 
with  appropriate  gain  and  bandwidth  were  used.  A 
constant  threshold  equivalent  to  20%  contrast  was  used. 
Table  1  summarizes  the  parameters  involved  in  this 
experiment. 

Table  1  Experiment  Parameters 

Printer 
Ribbon 
Lines  printed 
Lines  scanned 
Lines  passed  through  recognition 
Character  passed  through  recognition 

Characters  in  design  set 

Constant  threshold  level 

Figure  7  shows  the  relationship  between  the  character 
reject  rate  and  N. 

It  is  obvious  from  the  shape  of  the  curve  that  the  20% 
contrast  threshold  is  too  high  and  the  documents  should 
be  rescanned  at  a  lower  threshold  in  order  to  produce  a 
symmetrical  curve  similar  to  Curve  b  in  Figure  2. 
Figure  8  shows  an  example  of  some  reject  patterns 
which  contributed  to  the  high  reject  rate  for  large  values 
of  N. 

Conclusion 

The  techniques  and  computer  programs  described  in  this 
report  provide  a  means  of  optimizing  the  video  prepro(cid:173)

- 8 4-

- 8 5-

-90-

