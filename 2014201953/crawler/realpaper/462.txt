Reasoning about soft constraints and conditional preferences:  complexity results 

and approximation techniques* 

C. Domshlak 

F.Rossi  and  K.B.Venable 

T.Walsh 

Dept.  of Mathematics 
University of Padova 

Padova, Italy 

{frossi,kvenable}@math.unipd.it 

Cork Constraint Computation Centre 

University College Cork 

Cork, Ireland 
tw@4c.ucc.ie 

Dept.  of Computer Science 

Cornell  University 
Ithaca, NY, USA 

dcarmel@cs.cornell.edu 

Abstract 

Many real  life optimization problems contain both 
hard and soft constraints, as well as qualitative con(cid:173)
ditional  preferences.  However,  there  is  no  single 
formalism  to  specify  all  three  kinds  of  informa(cid:173)
tion.  We  therefore  propose  a  framework,  based 
on  both CP-nets and  soft constraints,  that handles 
both hard and soft constraints as well as conditional 
preferences  efficiently  and  uniformly.  We  study 
the  complexity  of testing  the  consistency  of pref(cid:173)
erence  statements,  and  show  how  soft  constraints 
can  faithfully  approximate the semantics of condi(cid:173)
tional  preference  statements  whilst  improving  the 
computational complexity. 

Introduction  and Motivation 

1 
Representing  and  reasoning  about  preferences  is  an  area  of 
increasing  interest  in  theoretical  and  applied  Al.  In  many 
real  life  problems,  we  have  both  hard  and  soft  constraints, 
as well as qualitative conditional preferences.  For example, 
in  a product configuration  problem,  the producer may  have 
hard  and  soft  constraints,  while  the  user  has  a  set  of con(cid:173)
ditional  preferences.  Until  now,  there  has  been  no  single 
formalism which allows  all  these  different kinds of informa(cid:173)
tion to be specified efficiently and reasoned with effectively. 
For  example,  soft  constraint  solvers  [Bistarelli  et  al,  1997; 
Schiex  et al,  1995]  are  most  suited  for reasoning  about  the 
hard  and  soft  constraints,  while  CP-nets  [Boutilicr  et  al, 
1999] are most suited for representing qualitative conditional 
preference  statements. 
In  this  paper,  we  exploit  a  connec(cid:173)
tion between these two approaches, and define a framework 
based  on  both  CP-nets  and  soft  constraints  which  can  effi(cid:173)
ciently handle both constraints and preferences. 

*This research was partially funded by AFOSR, grant F49620-
01-1-0076 (Intelligent Information Systems Institute, Cornell Uni(cid:173)
versity) and F49620-01-1-0361  (MURI grant on Cooperative Con(cid:173)
trol  of Distributed  Autonomous  Vehicles  in  Adversarial  Environ(cid:173)
ments),  DARPA,  F30602-00-2-0530  (Controlling  Computational 
Cost: Structure, Phase Transitions and Randomization) and F30602-
00-2-0558  (Confi guring Wireless Transmission  and  Decentralized 
Data Processing for Generic Sensor Networks),  the Italian MIUR 
projects  NAPOLI  and  COVER,  the  ASI  (Italian  Space  Agency) 
project ARISCOM and Science Foundation Ireland. 

Soft constraints [Bistarelli et al,  1997; Schiex et al,  1995] 
are one of the main methods for dealing with preferences in 
constraint optimization. Each assignment to the variables of a 
constraint is annotated with a level of its desirability, and the 
desirability of a complete assignment is computed by a com(cid:173)
bination  operator  applied  to  the  "local"  preference  values. 
Whilst soft constraints are very expressive, and have a power(cid:173)
ful  computational machinery, they are not good at modeling 
and solving the sort of conditional preference statements that 
occur in the real  world.  Moreover, soft constraints are based 
on quantitative measures of preference, which tends to make 
preference elicitation more difficult. 

Qualitative  user  preferences  have  been  widely  studied  in 
decision-theoretic Al  [Doyle  and Thomason,  1999].  Of par(cid:173)
ticular  interest  are  CP-nets  [Boutilier  et  al,  1999].  These 
model  statements  of qualitative  and  conditional  preference 
such  as  "I  prefer  a  red  dress  to  a  yellow  dress",  or  "If the 
car  is  convertible,  I  prefer a  soft top to  a hard  top".  These 
are  interpreted  under  the  ceteris  paribus  (that  is,  "all  else 
being  equal")  assumption.  Preference  elicitation  in  such 
a  framework  is  intuitive,  independent  of the  problem  con(cid:173)
straints, and suitable for naive users.  However, the Achilles 
heel  of  CP-nets  and  other  sophisticated  qualitative  prefer(cid:173)
ence models [Lang, 2002] is the complexity of reasoning with 
them [Domshlak and Brafman, 2002; Boutilier et al, 2002]. 
Motivated  by  a  product  configuration  application  [Sabin 
and Weigel, 1998], we have developed a framework to reason 
simultaneously about qualitative conditional preference state(cid:173)
ments and hard and soft constraints. In product configuration, 
the  producer  has  hard  (e.g.,  component  compatibility)  and 
soft  (e.g.,  supply  time)  constraints,  while  the  customer has 
preferences over the product features.  We first investigate the 
complexity  of reasoning  about  qualitative  preference  state(cid:173)
ments,  addressing  in  particular preferential  consistency.  To 
tackle the complexity of preference reasoning, we then intro(cid:173)
duce two approximation schemes based on soft constraints. 

To  the best of our knowledge, this  work provides the  first 
connection between the CP-nets and soft constraints machin(cid:173)
ery.  In  addition,  for product  configuration problems  or any 
problem  with  both  hard  and  soft  quantitative constraints  as 
well  as  qualitative  conditional  preferences,  this  framework 
lets  us treat the  three kinds of information  in  a  unifying en(cid:173)
vironment.  Finally,  we  compare  the  two  approximations  in 
terms of both expressivity and complexity. 

CONSTRAINTS 

215 

2  Formalisms for Describing Preferences 
2.1  Soft constraints 
There  are  many  formalisms  for  describing  soft  constraints. 
We  use  the  c-semi-ring  formalism  [Bistarelli  et  al,  1997], 
which is equivalent to the valued-CSP formalism when total 
orders  are  used  [Bistarelli  et  ai,  1996],  as  this  generalizes 
many of the others.  In brief, a soft constraint associates each 
instantiation of its variables with a value from a partially or(cid:173)
dered set.  We also supply operations for combining (x) and 

Figure 1:  The CP-net graph for the example. 

preference  0.4".  Of course,  the  former  statement  provides 
less  information, but  it  does not require careful  selection  of 
preference  values  to  maintain  consistency.  Moreover,  soft 
constraints do not naturally represent conditional preferences, 
as  in  "If they  serve  meat,  then  1  prefer  red  wine  to  white 
wine".  It is easy to  see that both qualitative statements and 
conditions are essential ingredients in many applications. 

CP-nets  [Boutilier et al,  1999]  are  a  graphical  model  for 
compactly  representing  conditional  and  qualitative  prefer(cid:173)
ence relations. They exploit conditional preferential indepen(cid:173)
dence  by  structuring  a  user's  preferences  under the  ceteris 
paribus  assumption.  Informally,  CP-nets  are  sets  of condi(cid:173)
tional  ceteris paribus  (CP)  preference  statements.  For  in(cid:173)
stance, the statement "I prefer red wine to white wine if meat 
is  served."  asserts  that,  given  two  meals  that  differ only  in 
the kind of wine served  and both  containing meat,  the meal 
with a red wine is preferable to the meal with a white wine. 
Many  philosophers  (see  [Hansson,  2001]  for  an  overview) 
and AI researchers [Doyle and Wellman,  1994], have argued 
that most of our preferences are of this type. 

tion  to  an  SCSP  is  a  complete  assignment to  its  variables. 
The preference value associated  with  a  solution is obtained 
by  multiplying  the  preference  values  of the  projections  of 
the  solution  to  each  constraint.  One  solution  is  better than 
another if its  preference value  is  higher in  the partial  order. 
Finding an optimal solution for an  SCSP is an  NP-complete 
problem.  On the other hand,  given two solutions, checking 
whether one is preferable is easy:  we compute the semi-ring 
values of the two solutions and compare the resulting values. 

2.2  CP-nets 
Soft  constraints  are  the  main  tool  for representing and  rea(cid:173)
soning about preferences in constraint satisfaction problems. 
However, they require the choice of a semi-ring value for each 
variable assignment in each constraint.  They are therefore a 
quantitative method for expressing preferences.  In many ap(cid:173)
plications, it is more natural for users to express preferences 
via  generic  qualitative  (usually  partial)  preference  relations 
over variable assignments.  For example, it is often more in(cid:173)
tuitive for the  user to say "I  prefer red wine to  white  wine", 
rather than "Red wine has preference 0.7 and white wine has 

216 

CONSTRAINTS 

While  testing  satisfiability  is  hard  in  general,  Theorem 2 
presents a wide class of statement sets that can be tested for 
satisfiability in polynomial time. 

Theorem 2  A  set  of conditional preference  statements  Vt, 
whose  dependency graph  is  acyclic  and has  bounded node 
in-degree can be tested for satisfiability in polynomial time. 

3  Consistency and Satisfiability 
Given a set of preference statements 
extracted from a user, 
we might be interested in  testing consistency of the  induced 
preference relation.  In general,  there  is  no  single notion  of 
preferential consistency [Hansson, 2001].  In [Boutilier et al.9 
1999], a CP-net N was considered consistent iff the partial or(cid:173)
dering 
induced by N  is asymmetric, i.e. there exist at least 
one total  ordering of the outcomes consistent with 
.  How(cid:173)
ever, in many situations, we can ignore cycles in the prefer(cid:173)
ence relation, as long as these do not prevent a rational choice, 
i.e. there exist an outcome that is not dominated by any other 
outcome.  In what follows, we refer to this as satisfiability^.  It 
is easy to see that satisfiability  is strictly weaker than asym(cid:173)
metry, and that asymmetry implies satisfiability.  We will con(cid:173)
sider two cases:  When the set 
of preference statements  in(cid:173)
duces  a  CP-net  and,  more generally,  when preferences can 
take any form (and may not induce a CP-net). 

defines  an  acyclic  CP-net,  the  partial  order  in(cid:173)
When 
is  asymmetric  [Boutilier  et  al,  1999].  How(cid:173)
duced  by 
In 
ever,  for  cyclic  CP-nets,  asymmetry  is  not  guaranteed. 
of  conditional 
the more general  case,  we  are given a set 
preference statements without any guarantee that they define 
a  CP-net.  Let  the  dependence graph  of 
be defined sim(cid:173)
ilarly  to  the  graphs  of CP-nets:  the  nodes  stand  for  prob(cid:173)
lem  features,  and a  directed  arc goes  from 
contains  a  statement expressing preference on  the  values  of 
Xj  conditioned  on  the  value  of  Xi.  For  example,  the  set 
does  not  induce a  CP-
net (the two conditionals are not mutually exclusive), and the 
preference relation  induced by 
is  not asymmetric, despite 
the fact that the dependence graph  of 

is acyclic. 

iff 

Note  that  while  asymmetry  implies  satisfiability,  the  re(cid:173)
verse does not hold in general.  For example, the set 
above 
is not asymmetric, but it is satisfiable (the assignment acb is 
undominated).  Given such a satisfiable set of statements, we 
can prompt the user with one of the undominated assignments 
without  further  refinement  of its  preference  relation.  Theo(cid:173)
rem  1  shows that,  in  general, determining satisfiability of a 
set  of statements  is  NP-complete.  On  the  other hand,  even 
for  CP-nets,  determining  asymmetry  is  not  known  to  be  in 
NP [Domshlak and Brafman, 2002]. 

Theorem  1  SATISFIABILITY  of a  set  of conditional prefer(cid:173)
ence  statements  is NP-complete. 

Proof:  Membership in NP  is straightforward, as an assign(cid:173)
ment  is  a  polynomial-size  witness  that  can  be  checked  for 
non-dominance in time linear in the size  of 
. To show hard(cid:173)
ness, we reduce 3-SAT to our problem: Given a 3-cnf formula 
F,  for  each  c
This  set  of 
tional  preference statement: 
conditional preferences  is  satisfiable  iff the  original  original 
formula F is satisfiable.  D 

l a u s e we  construct  the  condi(cid:173)

_ 

'in preference logic [Hansson, 2001], these notions of Consis(cid:173)
tency as satisfi ability" and Consistency as asymmetry" correspond 
to the notions of eligibility and restrictable eligibility, respectively. 
However, we will use the former terms as they seem more intuitive. 

clauses  of the  formula  the  proof of Theorem  1).  However, 
when  at  most  one  condition  is  allowed  in  each  preference 
statement, and the features are boolean, then SATISFIABIL(cid:173)
ITY can be reduced to 2-SAT, and thus tested in polynomial 
time.  Further study of additional tractable cases is clearly of 
both theoretical and practical interest. 

4  Approximating CP-nets with Soft 

Constraints 

In  addition to testing consistency and determining preferen(cid:173)
tially optimal outcomes, we can be interested in the preferen(cid:173)
tial comparison of two outcomes. Unfortunately, determining 
dominance between a pair of outcomes with respect to a  set 
of qualitative preferential statements under the ceteris paribus 

CONSTRAINTS 

217 

induced by 

assumption is PSPACE-complete in general [Lang, 2002], and 
is NP-hard even for acyclic CP-nets [Domshlak and Brafman, 
2002].  However, given a set 
of preference statements,  in(cid:173)
stead of using a preference relation 
, one can 
use an approximation 
achieving  tractability  while 
sacrificing  precision  to  some  degree.  Clearly,  different ap(cid:173)
proximations 
are not equally good, as they can  be 
characterized by  the precision with respect to 
time com(cid:173)
plexity  of generating  »,  and  time  complexity  of comparing 
outcomes with  respect to  ^>.  In  addition,  it  is  vital  that  >> 
faithfully  extends 
We 
call  this  information preserving.  Another desirable  property 
of approximations  is  that  of preserving  the  ceteris paribus 
property (we call this the cp-condition for short). 

should entail 

(i.e. 

For acyclic CP-nets, two approximations that are informa(cid:173)
tion  preserving have  been  introduced,  both  comparing out(cid:173)
comes  in  time  linear  in  the  number  of features.  The  first 
is  based  on  the  relative  position  of the  features  in  the  CP-
net  graph  [Boutilier et  al,  2002].  This  approximation  does 
not  require  any  preprocessing  of the  CP-net.  However,  it 
is  problematic  when  there  are  hard  constraints.  The  sec(cid:173)
ond, based on UCP-nets [Boutilier et al  2001], can be used 
as  a  quantitative  approximation  of acyclic  CP-nets.  UCP-
nets  resemble  weighted  CSPs,  and  thus  they  can  be  used 
in  constraint optimization using the  soft constraints machin(cid:173)
ery.  However, generating UCP-nets is exponential in the size 
of CP-net  node's  Markov  family2,  and  thus  in  the  CP-net 
node out-degree.  An additional related work  is described in 
LMcGeachie and Doyle, 2002], where a numerical value func(cid:173)
tion is constructed using graph-theoretic techniques by exam(cid:173)
ining the graph of the preference relation induced by a set of 
preference statements.  Note that this framework is also com(cid:173)
putationally hard, except for some special cases. 

Here  we study approximating CP-nets via soft constraints 
(SCSPs).  This  allows  us  to  use  the  rich  machinery  under(cid:173)
lying  SCSPs  to  answer  comparison  queries  in  linear  time. 
Moreover, this provides us a uniform framework to combine 
user preferences with both hard and soft constraints.  Given 
an  acyclic  CP-net,  we  construct  a  corresponding  SCSP  in 
two steps.  First, we build a constraint graph, which we call 
SC-net.  Second,  we  compute  the  preferences  and  weights 
for  the  constraints  in  the  SC-net,  and  this  computation  de(cid:173)
pends on  the actual  semi-ring framework being used.  Here 
we present and discuss two alternative semi-ring frameworks, 
based  on  min+  and  SLO (Soft  constraint  Lexicographic Or(cid:173)
dering) semi-rings,  respectively.  In both cases,  our compu(cid:173)
tation  of preferences  and  weights  ensures  information  pre(cid:173)
serving and satisfies the cp-condition.  We illustrate the con(cid:173)
struction of the  SCSP  using the  example in Figure 2,  which 
continues our running example from Figure  1. 

Given  a  CP-net N,  the  corresponding SC-net  Nc  has  two 
types  of nodes:  First,  each  feature 
is  represented 
in  Nc  by  a  node  Vx  that  stands  for  a  SCSP  variable  with 
,  Second,  for  each  f e a t u r e s u ch 

we  have  a  n o d e w i

th 

Edges in 

correspond to 

2 Markov family of a node X contains X, its parents and children, 

and the parents of its children. 

218 

CONSTRAINTS 

Theorem 4 (Complexity)  Given  an  acyclic  CP-net  N  with 
the node in-degree bounded by a constant, the construction of 
the corresponding SC-net based  weighted SCSP Nc  is poly(cid:173)
nomial in  the  size  ofN. 

Proof: If the CP-net has n nodes then the number of vertices 
V of the derived SC-net is at most 2n.  In fact, in the SC-net 
a node representing a feature appears at most once and there 
is at most one node representing its parents.  If the number of 
edges of the  CP-net  is  e,  then the  number of edges E  in  the 
SC-net (including hard and soft edges) is at most e + n, since 
each edge in the CP-net corresponds to at most one constraint, 
and each feature in the CP-net generates at most one new soft 

We  now prove that  our algorithm  for weight computation 
ensures  the  cp-condition  on  the  resulting  set  of  soft  con(cid:173)
straints,  and this also  implies preserving the ordering infor(cid:173)
mation with respect to the original CP-net. 

Since the min+ approximation is a total ordering, it is a lin(cid:173)
earization of the  original partial  ordering.  In  compensation, 
however, preferential comparison is now linear time. 
4.2  SLO soft constraints 

CONSTRAINTS 

219 

ences,  and  guide  the  user to  a  consistent  scenario.  Morover, 
we  also  plan  to  exploit  the  use  of partially  ordered  prefer(cid:173)
ences,  as  allowed  in  soft  constraints,  to  better  approximate 
CP  nets.  Finally,  we  intend  to  use  machine  learning  tech(cid:173)
niques  to  learn  conditional  preferences  from  comparisons  of 
complete  assignments. 

References 
[Bistarclli e/a/.,  1996]  S.  Bistarclli,  H.  Fargier,  U.  Montanari, 
F.  Ros  si,  T.  Schiex,  and  G.  Verfaillie.  Semiring-based  CSPs 
and  valued  CSPs:  Basic  properties  and  comparison. 
In  Over-
Constrained Systems.  1996. 

[Bistarclli et  al,  1997]  S.  Bistarclli,  U.  Montanari,  and  F.  Rossi. 
Semiring-based  Constraint  Solving  and  Optimization.  Journal 
of the ACM, 44(2):201-  236,  1997. 

[Boutilier et a/.,  1999]  C.  Boutilier,  R.  Brafman,  H.  Hoos,  and 
D. Poole.  Reasoning with Conditional Ceteris Paribus Preference 
Statements. In Proc. of UAZI-99, 1999. 

[Boutilier et al., 2001]  C. Boutilier, F. Bacchus, and R. I. Brafman. 
UCP-Networks:  A Directed Graphical  Representation  of Condi(cid:173)
tional  Utilities.  In Proc.  of UAI-01, 2001. 

[Boutilier et al, 2002]  C.  Boutilier,  R.  Brafman,  C.  Domshlak, 
H.  Hoos,  and  D.  Poole.  CP-nets:  A  Tool  for  Representing  and 
Reasoning  about  Conditional  Ceteris  Paribus  Preference  State(cid:173)
ments,  submitted  for  publication,  2002. 

[Domshlak and Brafman, 2002]  C. Domshlak and R. Brafman. CP-
In  Proc.  of KR-02, 

nets  -  Reasoning  and  Consistency  Testing. 
pages  121-132,2002. 

[Doyle and Thomason,  1999]  J. Doyle and R. I I. Thomason.  Back(cid:173)
ground  to Qualitative  Decision  Theory.  AI Magazine,  20(2):55 
68, 1999. 

[Doyle and Wcllman,  1994]  J. Doyle and M. Wellman.  Represent(cid:173)
ing Preferences as Ceteris Paribus Comparatives.  In  Proc. AAAI 
Spring Symposium  on  Decision-Making  Planning,  pages  69  75, 
1994. 

[Fargier et al.,  1993]  H. Fargier, J. Lang,  and T.  Schiex.  Selecting 
preferred  solutions  in  fuzzy constraint satisfaction problems.  In 
Proc.  1st European Congress on Fuzzy and Intelligent Technolo(cid:173)
gies  (EUFIT),  1993. 

[Hansson, 2001]  S. O.  Hansson.  Preference Logic.  In D.  M. Gab-
bay and F. Guenthner, editors, Handbook of Philosophical Logic, 
volume 4, pages 319  394. Kluwer, 2001. 

[Lang, 2002]  J.  Lang.  From Preference Representation to Combi(cid:173)

natorial Vote. In Proc. of KR-02, 2002. 

[McGeachie and Doyle, 2002]  M.  McGeachie and  J.  Doyle.  Effi -
In  Proc. 

cient  utility  functions  for  ceteris  paribus  preferences. 
AAAI 2002, pages 279-284,  2002. 

[Sabin and Weigel,  1998]  D. Sabin and R. Weigel.  Product Confi g-
IEEE Intelligent  Systems  and 

uration  Frameworks  -  A  Survey. 
their Applications,  13(4):42-49,  1998. 

[Schiex et al.,  1995]  T. Schiex, H. Fargier, and G. Verfaille.  Valued 
In 

Constraint  Satisfaction  Problems:  Hard and Easy Problems. 
Proc.  ofUCAI,  pages  631-637,  1995. 

[Schiex,  1992]  T.  Schiex.  Possibilistic constraint satisfaction prob(cid:173)
lems, or 'How to handle soft constraints?".  In Proc. ofUAI, pages 
269-275,  1992. 

Note  that  the  SLO  model  both  preserves  information  and 
ensures  the  cp-condition.  The proof of this  is  straightforward 
and  is  omitted due to  lack  of space.  The  SLO model,  like  the 
weighted  model,  is  very  useful  to  answer dominance  queries 
as  it  inherits  the  linear  complexity  from  its  semi-ring  struc(cid:173)
ture.  In  addition,  the  sequences  of integers  show  directly  the 
"goodness"  of an  assignment,  i.e.  where  it  actually  satisfies 
the  preference and where  it  violates  it. 
4.3  Comparing the two approximations 

is  to  be preferred to  the  SLO model,  as  far as  approximation 
is concerned.  However, maximizing the minimum reward, as 
in any fuzzy framework [Schiex,  1992], has proved its useful(cid:173)
ness  in problem representation.  The  user may  therefore need 
to  balance  the  linearization  of the  order  and  the  suitability  of 
the  representation provided. 

5  Future Work 
We  plan  to  use  our approach  in  a  preference  elicitation  sys(cid:173)
tem  in  which  we  guarantee the  consistency of the user prefer-

220 

CONSTRAINTS 

