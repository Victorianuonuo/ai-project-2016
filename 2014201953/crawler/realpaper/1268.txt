Session  2  Theory  of  Heuristic 
Search 

THE  AVOIDANCE  OF  (RELATIVE)  CATASTROPHE, 

HEURISTIC  COMPETENCE,  GENUINE  DYNAMIC  WEIGHTING  AND 
COMPUTATIONAL  ISSUES  IN  HEURISTIC  PROBLEM  SOLVING 

A s s i s t a nt  Professor 

I ra  Pohl 

I n f o r m a t i on  Sciences,  U n i v e r s i ty  of  C a l i f o r n ia 

Santa  Cruz,  C a l i f o r n ia 

A b s t r a ct 

to 

f i nd  a  near  optimal  s o l u t i on 

To  solve  d i f f i c u lt  problems  h e u r i s t i c a l l y, 
to  computational 
requires  d e t a i l ed  a t t e n t i on 
This  paper  describes  how  a  heur(cid:173)
e f f i c i e n c y. 
i s t ic  problem  s o l v i ng  system,  HPA,  attempts 
to 
t r a v(cid:173)
e l i ng  salesman  problem.  A  c r i t i c al  innova(cid:173)
is  an 
t i on  over  previous  search  algorithms 
e x p l i c it  dynamic  w e i g h t i ng  of 
the  h e u r i s t ic 
i n f o r m a t i o n. 
is 
i ts  depth 
weighted 
in 
it  pro(cid:173)
duces  a  narrower  depth  f i r st  search  than 
t r a(cid:173)
the  same 
t i m e,  dy(cid:173)
d i t i o n al  w e i g h t i n g s.  At 
namic  w e i g h t i ng  r e t a i ns 
the  catastrophe  pro(cid:173)
t e c t i on  of  o r d i n a ry  branch  and  bound  a l g o r-
i  thms. 

The  h e u r i s t ic 
to 
t r e e - - in  consequence 

i n v e r s e ly  p r o p o r t i o n al 

i n f o r m a t i on 

the  search 

the 

Key  Words.  H e u r i s t ic  Search,  Branch  and 
Bound,  HPA,  T r a v e l i ng  Salesman  Problem,  B i(cid:173)
nary  Tree  S o r t,  Dynamic  Weighting,  precon(cid:173)
d i t i o n i n g,  H e u r i s t ic  Combinatorics,  A r t i f i(cid:173)
c i al 

I n t e l l i g e n c e,  Pruning. 

A r t i f i c i al 

i n t e l l i g e n ce  can  be  defined  as 

in  a r t i f i c i al 

Pro(cid:173)
i n t e l l i g e n ce  are 
the  sense 

the  a rt  of  computational  compromise. 
blem  spaces 
sizeable  and  are  n o n - a n a l y t ic 
t h at  smooth  convergence 
to  a  s o l u t i on  is  un(cid:173)
a v a i l a b l e.  Hence  computational  methods  must 
attempt 
to  use 
t i m e - - c l e v e r l y. 
r i s t ic  search  procedure 
man  problem--n! 
t i o n al  e f f i c i e n cy  and  search  o r g a n i z a t i o n. 

This  paper  discusses  a  heu(cid:173)
the  T r a v el  Sales(cid:173)
in  s i z e,  emphasizing  computa(cid:173)

t h e ir  resources--space  and 

f or 

in 

The  problem  (symmetric  costs) 

There 

is  a  complete  graph  of  n  nodes. 

it 

It 

The 

t o ur 

the  graph 

is  a  path  in 

Each  edge  of  the  graph  has  a  non-negative 
l e n g t h.  A  t o ur 
v i s i t i ng  every  node  once  and  only  once  and 
the  i n i t i al  node. 
r e t u r n i ng  to 
l e n g th 
the  sum  of 
of  a 
the 
is 
edges  of  the 
t o u r.  A 
if  among  a ll  p o s s i b le 
s h o r t e s t.  Since 
i t i al  node  can  be 
space  of  a ll 
t i o ns  of  the  nodes  2 

is 
tours  are  c y c l i c, 
f i x ed  as  node  1.  The 

the  ( n - 1 )!  permuta(cid:173)

the 
tour 
t o u r s, 

the 
the  i n(cid:173)

through  n. 

lengths  of 
is  c a l l ed  o p t i m a l, 

tours  are 

is  w e ll  known  (Lawler  and  Wood,  1966) 

Thus 

the  pro(cid:173)

research  algorithms 
to  solve 

t h at  o r d i n a ry  operations 
r e q u i re  exponential 
time 
blem. 
l a r ge  (n>15)  problems  are  e i t h er 
solved  by  branch-and-bound  methods  or  by  l o(cid:173)
c a l - r e f i n e m e nt  methods  (Shen  L in  1965)  . 
Branch-and-bound  methods  guarantee  an  optim(cid:173)
al  s o l u t i o n, 
a l l o t t ed 
anteed 
Local-refinement  methods  generate  s o l u t i o ns 
in  polynomial 
time  which  are  not  guaranteed 
to  be  o p t i m a l. 

the  method 
in  exponential 

t h e ir 
is  guar(cid:173)
t i m e ). 

terminate  w i t h in 

time  ( of  course 

terminate 

they 

to 

if 

H e u r i s t ic  path  A l g o r i t hm  (HPA) 

HPA 

is  a  general  graph  search  a l g o r i t hm 

12 

is 

f u n c t i on 

l a t t e r 's  a l g o r i t hm  A* 

It  was  developed  by 
to  generalize 

The  c r i t i c al  d i f f e r e n ce 
the  use  of  a 

t h at  searches  or-graphs  using  a  m e r it  order(cid:173)
t h is  author  (Pohl 
i n g. 
1969,  1970) 
the  methods  of 
Doran  and  Michie  (1966)  and  H a r t,  N i l s s on  and 
Raphael  (1968). 
from 
the 
weighted  m e r it 
f ( x)  =  ( l - w ) g ( x)  +  wh 
( x ),  0  <  w  <  1  (see  Table  1 ).  S u i t a b le  gener(cid:173)
a l i z a t i o ns  of  HPA  have  been  used  by  Kowalski 
(1969)  and  Michie  (1972) 
theo(cid:173)
rem  p r o v i n g. 
c r i t i c i s ms 
a s t u t e.  He  notes 
s t r a t e g i e s"  ( h is 
c r i t i c al  d e f e c t. 
m e r i t o r i o us  a l t e r n a t i ve  paths. 
In  d i f f i c u lt 
problem  spaces  where  any  s o l u t i on  path  is  de(cid:173)
s i r e d, 
breadth 

f or  r e s o l u t i on 
In  t h is  domain,  Kowalski's 

(Kowalski  1972)  are  e s p e c i a l ly 

t h at  "diagonal  search 

i n v e s t i g a te  a ll  equally 

f or  w  ~  0.5)  have  a 

i n a p p r o p r i a t e ly 

t h is  procedure 

term 
They 

f i r s t. 

is 

Computational  Catastrophes 

to 

When  a  computational  procedure 

terminate  having  used  up  i ts 
resources  w i t h o ut 
w i ll  be  c a l l ed  a 

type  1  c a t a s t r o p h e .* 

forced 
time  and  space 
f i n d i ng  a  s o l u t i o n - - t h is 

is 

When  a  computationaT  procedure  terminates 

w i th  an 
i n s u f f i c i e n t ly  good  s o l u t i o n â€” t h is 
w i ll  be  c a l l ed  a  type  2  catastrophe.  This 
type  2  catastrophe  can  only  occur  in  problems 
t h at  have  an  ordered  set  of 
f e a s i b le  s o l u(cid:173)
t i o ns  . 

Examples: 

Type  1  catastrophe  occurs  a ll 

i n t e l l i g e n ce  research. 

time 

in  a r t i f i c i al 

the 
An  e a r ly  example  was  SAINT's 
i n t e g r a t i on  problems  ( S l a g le  1961).  A 
is 
Type  1  catastrophe 
t i on  search  procedure 
a  preset  l e v el  bound. 

the 
to 

t y p i c al 
f a i l u re  of  a  r e s o l u(cid:173)

f i nd  a  proof  w i t h in 

f a i l u re  on  2 

l o c al 

Type  2  catastrophe  can  only  occur  in  p r o(cid:173)

t h at  r e q u i re  " b e s t"  s o l u t i o n s. 

blems 
simplest 
Traveling-Salesman  problem 
neighbor  r u le  ( 1 - o pt 
The  r u le  is 
ogy)  . 
not  yet 
included 
in 
r u le  on 
the  graph  in 
bad  t o u r,  a  type  2  catastrophe. 

refinement  s t r a t e gy 
in  Shen  L i n 's 
to  s e l e ct 
the  sub-tour.  Using 

The 
the 
the  nearest-

the  nearest  node 
t h is 
to  a  very 

f or 
t e r m i n o l(cid:173)

f i g u re  1  leads 

is 

Other  examples  of  type  2  catastrophe  are 

n ot  generating 
move  in  a  game  p l a y i ng  program,  or  remaining 
on  a  " h e u r i s t ic  p l a t e a u"  (Minsky  1961),  which 
is  d i s t i n c t ly  s u b - o p t i m a l, 
in  a  problem  space. 

the  only  winning  or  drawing 

O v e r - r e l a x a t i o n,  a d m i s s i b i l i ty  and  dynamic 
w e i g h t i ng 

When  using  HPA 

to  solve  various  15-puzzle 

it  was 

f i g u re  2)  problems, 

(see 
found 
values  of  w  >  0.5  were  most  e f f i c i e n t. 
w e i g h t i ng  of  the  h e u r i s t ic 
f u n c t i on  no 
guaranteed  " a d m i s s i b i l i t y ", 
l e n g th  s o l u t i o n.  The  o v e r r e l i a n ce  on  the  heu(cid:173)
r i s t ic 
of  the  analogous 

is  c a l l ed  o v e r r e l a x a t i on  because 

i . e.  a  minimum 

This 
longer 

technique 

term 

t h at 

the 

in 

*Space  and 
uished  as  separate 

time  catastrophe  w i ll  be  d i s t i n g(cid:173)

types 

in  a 

l a t er  paper. 

The  weight  w  was  set 

computational  s o l u t i on  of  p a r t i al  d i f f e r e n(cid:173)
t i al  equation  problems. 
to  a  constant  using  previous  experience 
to 
o b t a in  an  e f f i c i e nt  s e t t i n g.  The  15  puzzle 
the  computational 
experiments  demonstrated 
u t i l i ty  of  o v e r r e l a x a t i o n.  However, 
these 
s o l u t i o ns  were  r a r e ly  near 
s o l u t i o n. 
t h is 
catastrophe. 

the  minimum  l e n g th 
t r a v e l i ng  salesman  problem 

type  of  search  would  r e s u lt 

type  2 

In  the 

l i ke 

technique 

To  avoid  a  type  2  catastrophe,  HPA 
to  r e t a in  a d m i s s i b i l i ty  or  at 

would 
l e a st  be  w i t h in  a  known  percentage  of  e r r or 
(Pohl  1970).  This  can  be  accomplished  by 
using  a 
w e i g h t i n g ".  Dynamic  w e i g h t i ng  makes  w  a 
f u n c t i on  of  the  s t a t e.  HPA  now  uses 
g(x)  +  w(x)h(x)  where  1  <  w(x)  * 
the  search 
Let 
cluded 
d e f i ne 

t o u r. 
i n(cid:173)
the  subtour  represented  by  x  and 

in 
f or  a 
the  number  of  edges 

Let  x  be  a  s t a te 
the  depth  (x)  = 

to  be  c a l l ed  "dynamic 

f ( x)  = 

in 

in 

in 

the 

if  and 

f i r st  search, 

If  at  some  p o i nt 

the  search  would  r e v e rt 

insure  a  depth 
if 

the  added  cost  decreases  w i t h in  ever 

type  2  catastrophe  were 
to  ordinary 

The  e f f e ct  of  having  w  decrease  w i th  depth 
is 
to 
only 
t i g h t er  bounds. 
depth  f i r st  search  a 
to  occur, 
The  dynamic 
branch-and-bound  behavior. 
in  a 
w e i g h t i ng  provides 
to  proceed 
i n(cid:173)
depth  f i r st  manner  provided  no  unforseen 
crease 
The  r e s u l t i ng  s o l u(cid:173)
t i on  is  w i t h in  (1  +  e)  of  the  optimal  s o l u(cid:173)
t i on  (see  appendix 
H e u r i s t ic  Estimators 
man  Problem 

the  T r a v e l i ng  Sales(cid:173)

in  cost  occurs. 

f or  proof)  . 

i n c e n t i ve 

f or 

is 

is 

the  Assign(cid:173)

There  are  several  known  bounds  on  the 
T r a v e l i ng  Salesman  Tour.  One 
ment  Problem  (Lawler  and  Wood  1966)  ,  and 
another 
the  Minimum  Spanning  One-tree 
(Held  and  Karp  1971)  .  A  t h i rd  estimator  used, 
in  my  experiments  on  symmetric  distance  pro(cid:173)
blems 
is  a  v a r i a nt 
of 
the  L i t t le  estimator  ( L i t t l e,  et  al  1963), 
to  be  c a l l ed 

( i . e.  undirected  graphs) 

the  i n - o ut  e s t i m a t o r. 
The  T r a v e l i ng  Salesman  Tour  is 

the  minimum 

the  a d d i t i on  of 

The  minimum  spanning  tree 

The  assignment  problem  is 
is 

weight  connected  graph,  whose  nodes  are  a ll 
the 
of  degree  2. 
minimum  weight  graph  whose  nodes  are  a ll  of 
the 
degree  2. 
minimum  weight  connected  graph.  A  1-tree 
is 
a  minimum  spanning  t r ee  over  nodes 
[ 2 , . . . , n] 
w i th 
two  s h o r t e st  edges 
In  the  case  of  the  assignment 
out  of  node  1, 
problem  a  s o l u t i on  graph  may  be  a  set  of 
the  case  of  the  1-tree  a  s o l u t i on 
c y c l e s. 
may  contain  many  nodes  of  degree  not  equal 
to 
Each  relaxes  a  c o n s t r a i nt  of  the  T r a v e l(cid:173)
2. 
i ng  Salesman  Problem,  hence  each  contains 
many  nodes  of  degree  not  equal 
to  2.  Each 
relaxes  a  c o n s t r a i nt  of  the  T r a v e l i ng  Sales(cid:173)
man  Problem,  hence  each  contains 
of 
feas(cid:173)
i b le  s o l u t i o n. 

the  T r a v e l i ng  Salesman  Problem  as  a 

(see  Figure  3) 

the  s o l u t i on 

the 

In 

The 

i n - o ut  e s t i m a t o r,  due 

to 

the  a u t h o r, 

13 

3 

in 

is  a 

0  (n  ) 

t h is  bound 

steps  given 

to  c a l c u l a t e. 

is  p a r t i c u l a r ly  simple 
lower  bound  on  the  Assignment  Problem,  but 
where  an  assignment  problem  is  c a l c u l a t ed 
0(n  )  steps, 
ia  c a l c u l a b le 
the  edges  are 
in 
is  c a l(cid:173)
in  sorted  order. 
culated  by  summing  the  2  shortest  edges  out  of 
each  node  not  already 
and  such  t h at 
i n t e r i or  nodes  of 
added 
node  of  the  subtour,  and 
2. 
The  i n - o ut  estimator 
a 
tour 

these  edges  are  not  connected 
This  sum  is 
the  s h o r t e st  edge  out  of  each  end 

lower  bound  on  the  remaining  l e n g th  of  a 

t o t al  d i v i d ed  by 
to  be 

the 
is  e a s i ly  seen 

from  the  given  subtour. 

i n - o ut  estimator 

the  subtour. 

the  subtour 

included 

t h at 

The 

to 

in 

It 

to 

t h at  dynamic  weighting 

the  one-tree  e s t i m a t o r.  The  experiments  on  a 
20  node  graph  of  known  d i f f i c u l ty  (Croes  1958) 
showed  c l e a r ly 
near  optimal  s o l u t i o ns 
compared 
the  same  h e u r i s t ic  estimator  (see 
A d d i t i o n al  Computational  Techniques 
creasing  Search  E f f i c i e n cy 

to  o r d i n a ry  branch-and-bound  using 
t a b le  2 ). 
I n(cid:173)
" 

r e l a t i v e ly  cheaply  when 

found 

f or 

i n to 

The  candidate  set  is  kept  as  a  sorted  b i(cid:173)
t r e e,  where  m e r it  ( l e ft  son)  <  m e r it 
nary 
(parent)  <  m e r it  ( r i g ht  son). 
The  next  node 
to  be  expanded 
the 
t h is  sorted  candidate  s e t.  New  nodes  are  en(cid:173)
tered 
the 
l o g2  (m) 
t i m e,  where  m  is 
s e t. 

the  size  of  the  candidate 

is  always 
t r ee 

in  approximately 

l e f t - m o st  node  of 

The  bound  on 

the 
best  nearest-neighbor 
neighbor 
is  generated  using  each  node  as 
a  s t a r t i ng  subtour.  During  the  execution  of 
HPA 
course  of  expanding  depth  -  n-  5  search  nodes 

t h is  may  be  updated  by  a  t o ur  found  in 

i n i t i a l ly 
Such  a  nearest-

tour  is 
t o u r. 

t o ur 

the 

the 

2 

The  most 

the  graph 

the  edges 
in 

important  savings  are  obtained 
The 

the  edge  l e n g t h s. 

from  p r e c o n d i t i o n i ng 
edges  are  sorted  by  l e n g th  which  requires 
0  (n2  l o g2  n)  steps. 
are  stored 
sorted  order 
1 

in  completely  sorted  order  and 

f or  each  node. 

Furthermore, 

the  edge  ( j,  k)  of  l e n g th  m  is  the 

r s o r tj  p o i n ts  at  a  t r i p le  ( j,  k,  m)  and 
means 
i th  smallest  edge 
order  ( j, 
is  an 
( j,  k) 
is 
i ng  at  node 

in 
i) 
i n t e g er  k  where  edge 
the  i th  smallest  edge  o r i g i n a t(cid:173)

i n - o ut  computations  only  r e(cid:173)
the  edges  are  already 
these  compu(cid:173)
the  expense  of 

from  q u a d r a t ic 

This  reduces 
time;  at 

j. 
The  one-tree  and 
q u i re 
sorted  by  l e n g t h. 
t a t i o ns 
a  s i n g le  (n 
storage 
f or 
o v e r a ll  saving  w i ll  occur  because  at 
9 
0  (n  )  h e u r i s t ic 
l a t e d. 
Summary 

f u n c t i o ns  need 

l o g2  n)  computation  and  extra 
the  s o r t ed  l i s t s. 
l e a st 

In  a ll  cases  an 

to  be  c a l c u(cid:173)

time  when 

l i n e ar 

An 

important  g u i d i ng  p r i n c i p le 

in  h e u r i s(cid:173)

is 

in  game 

i ts  com-

the  avoidance  of  catas(cid:173)

This  p r i n c i p le  overshadows 

t ic  programming 
t r o p h e. 
p e t i t o r - - t he  p u r s u it  of 
as  a  pragmatic  g u i d e l i ne  in  l a r ge  search 
spaces. 
a l i ty 
z a t i on  of 

The  whole  n o t i on  of  min-max  r a t i o n(cid:173)
is  an  e x p l i c it  a x i o m a t i-

t h is  conservative  r u l e. 
A  dynamic  w e i g h t i ng  approach 

the  optimal  s o l u t i o nâ€” 

computationally  e f f i c i e nt 
optimal  s o l u t i o ns 
Problem. 
f i r st 
search  along  w i th  guarantees  of  a v o i d i ng 
2  catastrophes. 

It  o f f e rs  a  h i g h ly  depth 

is  p r o v i ng 
in  o b t a i n i ng  near 
the  T r a v e l i ng  Salesman 

theory 

type 

to 

References 

1.  Lawler,  E.L.  and  D.E.  Wood  (1966): 

Branch-and-Bound  Methods;  A  Survey,  Opera(cid:173)
t i o ns  Research  v . 1 4,  n o . 4,  pp.699-719, 
July-August  1966. 

2.  L i n,  S. 

(1965):  Computer  S o l u t i on  of  the 

T r a v e l i ng  Salesman  Problem,  B e ll  System 
Technical  J o u r n a l,  v.44  no.10  pp.2245-2269, 
December  1965. 
(1969): 

B i - d i r e c t i o n al  and  Heur(cid:173)
i s t ic  Search  in  Path  Problem,  SLAC  r e p o rt 
no.104,  May  1969. 

I, 

3.  P o h l, 

4.  Fo h l,  1. 

(1970):  H e u r i s t ic  Search  Viewed 

as  Path  F i n d i ng  in  a  Graph,  A r t i f i c i al 
I n t e l l i g e n ce  v .l  pp.193-204,  1970. 

5.  H a r t,  P .,  N i l s s o n,  N.  and  Raphael,  B ., 

(1968):  A  Formal  Basis 
Determination  of  Minimum  Cost  Paths, 
Trans.  System  S c i.  Cybernetics  v.4  no.2 
pp.100-107,  J u ly  1968. 

f or  the  H e u r i s t ic 
IEEE 

6.  Kowalski,  R. 

f or  Theorem-Proving, 
gence  v .5  pp.181-202,  1969. 

(1969):  Search  S t r a t e g i es 
I n t e l l i(cid:173)

in  Machine 

7.  M i c h i e,  D.,  Ross,  R.  and  G.J.  Shannon 

(1972)  G-deduction, 
gence  v .7  pp.141-165,  1972. 

in  Machine 

I n t e l l i(cid:173)

8.  Kowalski,  R., 

(1972):  And-or  Graphs, 

Theorem  Proving  Graphs  and  B i - d i r e c t i o n al 

Search,  Edinburgh  School  of  A r t i f i c i al 
t e l l i g e n ce  Memo  n o . 5 6,  J u ly  1972. 

I n(cid:173)

9.  S l a g l e,  J. 

(1961):  A  Computer  Program  f or 

S o l v i ng  Problems 
(SAINT),  L i n c o ln  Laboratory  Report  5G-001, 
May  1961. 

in  Freshman  Calculus 

lO.Minsky,  M. 

I n t e l l i g e n c e,  Proc. 

(1961):  Steps  Toward  A r t i f i(cid:173)
IRE  49,  p p . 8 - 3 0, 

c i al 
January  1961. 

11.Held,  M.  and  Karp,  R. 

(1971):  The  T r a v e l(cid:173)
i ng  Salesman  Problem  and  Minimum  Spanning 
Trees,  Operations  Research  v . 1 9,  1971. 

1 2 . L i t t l e,  J .,  M u r t y,  K.,  Sweeney,  D.  and  C. 

K a r el  (1963):  An  A l g o r i t hm  f or  the  T r a v e l(cid:173)
i ng  Salesman  Problem,  Operations  Research, 
v . ll  pp.972-989,  1963. 

13.Croes,  G. 

(1958):  A  Method 

f or  S o l v i ng 

T r a v e l i ng  Salesman  Problems,  Operation  Re(cid:173)
search  v .6  pp.791-812 

(1958). 

14.Camerini,  P.M.,  F r a t ta  L .,  F.  M a f f i o li 

the  T r a v e l i ng  Salesman  Problem, 

(1973):  A  H e u r i s t i c a l ly  Guided  A l g o r i t hm 
f or 
I n s t i-
t u to  de  E l e t t r o t e c h n i ca  ed  E l e t t r o n i ca  d el 
P o l i t e c n i co  de  M i l a n o,  Memo  7 3 - 1,  1973. 

Appendix 

f i n i te  d i r e c t(cid:173)

the  set  of 

is  a 

l o c a l ly 

The  H e u r i s t ic  Path  A l g o r i t hm  -  HPA  -
A  problem  space 
ed  graph  G. 
G:  X  -  ( x,  ,  x2,  x 3 , . . ),  X  is 
nodes  and  can  be  i n f i n i te 
E: 
E 
but  l o c a l ly  must  be 
I 

^ ( x1,  Xj) 
the  set  of  edges  and  can  be 
| 

the  i n t e g e r s. 

N  - 
the  successor  mapping 

f i n i t e, 

X,  Xj 

I  xi 

i . e. 

,Xj 

is 

is 

T  ( xi) }, 
i n f i n i te 
( x .) 

i n to  i ts 

2X, 

f  :  X 
power  s e t. 
In  using  d i r e c t ed  graphs 

the  mapping  of  X 

to  s p e c i fy  p r o(cid:173)
the  nodes  are  i n t e r p r e t ed  as 
the  edges  are  operators 

blem  domains, 
problem  states  and 
transforming  s t a t e s. 
man  problem,  a  node  may  s p e c i fy  a  sub-tour  of 
k  c i t i e s,  w i th 
t i on  of  a  c i ty  not  a l r e a dy  contained 
sub-tour. 
moves,  and 
ences . 

In  game  p l a y i ng  the  edges  are  l e g al 
in 
i n f e r(cid:173)

theorem  p r o v i ng  a l l o w a b le 

the  operators  being 

t r a v e l i ng  sales(cid:173)

the  a d d i(cid:173)
the 

the 

f or 

In 

in 

A  problem  c o n s i s ts  of 

f i n d i ng  a 

t e r m i n al 

the  e x p l i c it 

( s o l u t i o n)  node  given  some  s t a r t i ng  node. 
s o l u t i on  would  be 
together  w i th 
In  c e r t a in  cases 
erated 
f i n d i ng 
t h at  s o l u t i on  path  is  o p t i m a l.  An  a l g o r i t hm 
if  w i t h in 
conducting  such  a  search  succeeds, 
the 
It 
reaches  a 

the  path  from  the  s t a r t i ng  node. 
the  complete  search  t r ee  gen(cid:173)
the  s o l u t i on  path 
is  a  proof 

i ts  computational  resources, 

t e r m i n al  node. 

t e r m i n al  node 

l i m i ts  of 

in 

The 

t  =  t e r m i n al  node,  x  =  any 

x 

H e u r i s t ic  Path  A l g o r i t hm  -  HPA 
s  =  s t a rt  node, 
node 
g: 
t o - d a te  of  expanding  a  node  x 
h: 
cost 
f ( x) 

x  ->  R 
to  a 
- 

t e r m i n al  node 

( l - w ) g ( x ) + w - h ( x)  ,  O wl 

(non-negative  r e a l s ), 

,  an  estimate  of  the  remaining 
term 

t  -  h e u r i s t ic 

the  c o s t-

from  s 

14 

-  e v a l u a t i on 

f u n c t i on 

15 

16 

TABLE 

I 

Various  Algorithms  Classified  in  HPA  Terms 

Weight  in  HPA  terms 

Algorithm 

uniform  edge  lengths 
a r b i t r a ry  edge  lengths 

Graph  Traverser 

Moore 
D i j k s t ra 
Doran-Michie 
H.  N.  R. 
A 
Branch-and-Bound  algorithm 
-  when  h  is  a  lower  bound 
Poh1  HPA 
Poh1 

Dynamic  weighting 

TABLE 

II 

Results  of  HPA 

Croes  graph  (20  nodes) 
Best  solution  from  20  d i f f e r e nt 
nearest-neighbor  solutions 
HPA  with  dynamic  weighting 
e  =  0.6 
HPA  with  dynamic  weighting 
e  =  0.4 
HPA  without  dynamic  weighting 

(same  as  A*  or  branch-and-bound) 

Randomly  generated  complete 
graph  (32  nodes) 
Best  solution  from  32  different 
nearest-neighbor  solutions 
HPA  with  dynamic  weighting 
e  -  0.6 

knowi  optimal  length  246 

length  308 
length  260 
nodes  expanded  53 
nodes  expanded  474 
length  253 
nodes  expanded  500 
-  gives  up 

length  270.09 

length  217.34 
nodes  expanded  71 

17 

