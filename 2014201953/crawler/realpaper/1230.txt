COMPLETENESS  THEOREMS  FOR  SEMANTIC  RESOLUTION  IN  CONSEQUENCE-FINDING 

J.R.  Slagle,  C.L.  Chang,  R.C.T.  Lee 

National 

I n s t i t u t es  of  Health 

Bethesda,  Maryland 

Summary 

The  object  of  consequence-finding  is 

to  deduce 

l o g i c al  consequences  from  a  set  of  axioms.  The 
theory  of  J.R.  Slagle's  semantic  resolution  p r i n(cid:173)
c i p l e,  an 
calculus, 
Given  an 
prime  ( n o n - t r i v i a l)  consequence,  which 
false  in 
I,  can  be  derived  from  a  set  of  axioms  by  applying 
I-(semantic) 

inference  r u le  for  f i r s t - o r d er  predicate 
is  extended  to  consequence-finding. 
i n t e r p r e t a t i on  I, 

is  proved  that  any 

r e s o l u t i o n. 

is 

it 

1. 

Introduction 

The  consequence-finding  problem  which  has  been 

. . .,  A 

It  may  w e ll 

,  f i nd  a  statement  B 

that  theory  possible  not 

A  are  the  axioms  or  postulates 

described  by  Lee  {2}  may  have  the  following  form: 
Given  statements  A,, 
1n 
such  that  B  follows  from  
be  that  A 
of  some  theory,  and  B  is  a  new  l o g i c al  consequence 
of 
found  before.  A  proof-
f i n d i ng  problem  is  a  problem  which  is  given  a 
theorem  and  asked  to  f i nd  a  proof  for  the  theorem 
[VJ. 
In  t h is  paper,  we  shall  r e s t r i ct  ourselves 
to  f i r s t - o r d er  predicate  calculus,  and  consider 
only  the  cases  where  
( q u a n t i f i e r - f r e e)  clauses  
under  t h is  formulation, 
if  B 
consequence-finding  reduces 
Hence,  consequence-finding  may  be  considered  more 
general 

is  the  empty  clause, 
to  p r o o f - f i n d i n g. 

than  p r o o f - f i n d i n g. 

and  B  are 

C l e a r l y, 

is 

In  

f or 

Because  of 

the  r e l a t i on  between  consequence-
f i n d i ng  and  p r o o f - f i n d i n g,  most  of  the  strategies 
used  in  p r o o f - f i n d i ng  can  also  be  used 

Lee  proved  that 

is  also  complete 

for  p r o o f - f i n d i ng 

in  consequence-finding. 
Robinson's  ordinary  resolution  p r i n c i p le 
which 
consequence-finding.  The  present  paper  wil_l 
extend  the  semantic  resolution  of  Slagle   _ 
consequence-finding,  and  prove  that  given  an 
i n t e r p r e t a t i on  I,  any  prime  consequence  B,  which 
is  f a l se  in  I,  can  be  derived  from  a  set  of  axioms 
(or  postulates)   " 
r e s o l u t i o n. 
standard  p r a c t i c e,  we  use  " i n t e r p r e t a t i o n"  rather 
than  "model,"  which  was  used 
are  more  general  than  Lee's  r e s u l t s.  The  d e f i n i(cid:173)
in  t h is  paper  follow 
t i o n s, 
closely  those  given 
It 
is  also  assumed 
that 
the  reader 
is 
review  a r t i c le 

in  
f a m i l i ar  with  Robinson's 

In  order  to  be  more  in  keeping  with 

theorems,  and  proofs 

in  

to 

,  Our  theorems 

by  applying  I-(semantic) 

2.  Prime  ( N o n - t r i v i a l)  Consequences 

In  t h is  section,  we  shall  define  a  prime 
consequence,  and  use  t h is  concept  to  explain 
completeness 

in  consequence-finding. 

theorems 

Roughly  speaking,  we  shall  prove  below  completeness 
theorems  which  show  that  ordinary  resolution  w i ll 
generate  a ll 
clauses  and 
the  prime  consequences  which  are  false  in  the 
a ll 
i n t e r p r e t a t i on  used 
It 
is  possible  that  both  kinds  of  resolutions  may  or 
may  not  generate  some  non-prime  consequences. 

the  prime  consequences  of  a  set  of 
that  semantic  resolution  w i ll  generate 

the  semantic  deduction. 

in 

to  emphasize  the  universe  U,  we  say  an 

D e f i n i t i o n*  An  i n t e r p r e t a t i on  of  a  set  S  of  clauses 
consists  of  a  nonempty  set  U  called  a  universe 
(sometimes, 
i n t e r p r e t a t i on  over  U.)  and  an  assignment  of 
"values"  as  follows  to  each  i n d i v i d u al  symbol, 
function  symbol  and  predicate  symbol  occurring  in 
S:  ( i)  to  each  i n d i v i d u al  symbol,  we  assign  an 
element 
to  each  function  symbol  with  n 
arguments,  we  assign  a  function  whose  n  variables 
range  over  U  and  whose  values  are  in  Uj 
each  predicate  symbol  with  n  arguments,  we  assign 
a  function  whose  n  variables  range  over  U  and  whose 
values  are  the  t r u th  values, 
S  is  a  set  of  ground  ( v a r i a b l e - f r e e)  clauses,  we 
c a ll  an  i n t e r p r e t a t i on  of  S  a  ground  i n t e r p r e t a t i o n. 

true  and  f a l s e.  When 

in  U;  ( i i) 

( i i i) 

to 

D e f i n i t i o n.  A  ground  instance  of  a  clause  C  over 
a  universe  U  is  a  ground  clause  obtained  by  sub(cid:173)
s t i t u t i ng  elements  of  U 
in 
C. 

the  variables 

for  a ll 

We  note  that  if  U 

is  the  Herbrand  universe  H 
of  S,  then  an  i n t e r p r e t a t i on  of  S  over  H  may  be 
represented  by  a  sequence  m  ,  m  , 
which  ra-  is  e i t h er  A.  o r ~A 

in 
' 
are  the  d i s t i n ct  ground  instances  of  atoms 

. . .,  m., 
where  A r  2' 

. .. 

of  S  over  H. 
D e f i n i t i o n.  An  i n t e r p r e t a t i on  I  of  a  set  S  of 
clauses  over  a  universe  U 
is  said  to  s a t i s fy  a 
clause  C 
instance  of  C  over  U  is  true  in  I.  Otherwise, 
is  said  to  f a l s i fy  C  (or  C 

is  true  in  I) 

false  in  I ). 

in  S  (or  C 

is 

i ff  every  ground 

I 

D e f i n i t i o n*  A  set  S  of  clauses  is  said  to  be 
s a t i s f i a b le  i ff 
such  that  I  s a t i s f i es  a ll 
wise,  S  is  said  to  be  u n s a t i s f i a b l e. 

i n t e r p r e t a t i on  I  of  S 

the  clauses  in  S.  Other(cid:173)

is  an 

there 

D e f i n i t i o n*  A  clause  C  is  said  to  be  a  l o g i c al 
consequence  of  a  set  S  of  clauses  C 
. . .,  C  , 
(or  C  follows  from  C, 
i ff  for  every 
i n t e r p r e t a t i on  I  of  (S  &  C) 
I  s a t i s f i es  C1, 
. . .,  C 
possible,  we  shall  sometimes  say  that  C  is  a 
l o g i c al  consequence  of  C,, 

,  I  also  s a t i s f i es  C.  When  no  confusion  is 

. . .,  C  .  We  note  that 

,  C  )  , 

if 

, 

-281-

A  as  required  by  Theorem  4,  by  Theorem  4  there  is 
a  ground  maximal  AIH--deduct  ion  from  S'  of  some 
ground  clause  T'which  subsumes 
t h is  deduction  tree  T r,  we  attach  to  each  node  of 
Tr  a  f u r t h er  clause  over  and  above  the  clause 
already  there  as  f o l l o w s:  To  each  i n i t i al  node 
of  T r,  attach  the  corresponding  S-clause  of  which 
the  clause  already  there  is  an  instance.  Then  f or 
each  n o n - i n i t i al  node  of  T r, 
if  clauses  have  been 
attached  in  t h is  way  to  each  of 
predecessor  nodes  and  c o n s t i t u te  the  set  W,  attach 
to 

that  I  -resolvent  of 

I  -clash  W 

the  l a t e nt 

immediate 

For 

i ts 

it 

of  which  the  clause  already  there  is  an  instance. 
In  t h is  fashion,  a  clause  is  attached  to  each  node 
of  which  the  clause  already  at  the  node  is  an 
stance. 
node  be  T.  Since  each  
is  an  I - c l a s h, 
deduction  of  T  is  an  I-deduction.  Since  T  does 
not  contain  the  i n d i v i d u al  symbols  b 
f or 

i n(cid:173)
Let  the  clause  attached  to  the  terminal 

, . . . ,b 

the 

H 

H 

1 

m 

As  in  ground  case, 

in  Theorem  6, 

if  C  is  a 

prime  consequence  of  S,  then  T  =  C.  Since  C  can 
be  derived  from  S,  every  symbol  which  occurs  in  C 
must  occur  in  S.  Therefore,  we  can  use  i n t e r p r e(cid:173)
t a t i o ns  of  S, 
in 
order  predicate  calculus. 

the  f o l l o w i ng  completeness 

instead  of  i n t e r p r e t a t i o ns  of  (S  &  C), 

theorem  f or  f i r s t-

The  f o l l o w i ng  theorem  is  a  c o r o l l a ry  of  Theorem 

9: 

If  a  p o s i t i ve  (negative)  u n it  clause 

Theorem  10. 
C  is  a  prime  consequence  of  a  f i n i te  set  S  of 
clauses  and 
ordering  P  of  the  predicate  symbols 
predicate  symbol 
(negative)  P-hyper-deduction  of  C  from  S. 

if  the  f i r st  predicate  symbol 

in  an 
in  S  is  the 
is  a  p o s i t i ve 

then  there 

in  C, 

We  now  give  an  example  to  i l l u s t r a te  our 

r e s u l t s. 

In  an  associative  system, 

Example. 
l e ft  and  r i g ht  s o l u t i o n s, 
there 

is  a  r i g ht 

i d e n t i t y. 

if  there  are 
then  we  can  derive  that 

The  system  is  expressed 

in 

three  clauses: 

A l: 

A2: 

A 3

: E x

i

s

t

e

ce  of  a 

n
s o l u t i on 

r i g ht 

Since  we  know  beforehand  that  the  theorem 

the  r i g ht 

i d e n t i ty  is  a  p o s i t i ve  u n i t, 

concerning 
we  use  a  negative  i n t e r p r e t a t i on  to  guide  our 
deduction.  The  electrons 
p o s i t i ve  clauses  and  the  deduction  uses  p o s i t i ve 
h y p e r - r e s o l u t i o n. 

in  the  deduction  w i ll  be 

Theorem  7. 
If  a  clause  C  is  a  prime  consequence 
of  a  f i n i te  set  S  of  clauses,  and  is  f a l se  in  an 
i n t e r p r e t a t i on  I  of  S, 
then 
there  is  an  I-(seman(cid:173)
t i c)  deduction  of  C  from  S. 

The 

following  theorem  follows  d i r e c t ly 

Theorem  7: 

from 

5.  Conclusion 

If  a  clause  C  is  a  prime  consequence 

Theorem  8, 
of  a  f i n i te  set  S  of  clauses  and  contains  no 
negative  ( p o s i t i v e) 
then  there  is  a 
p o s i t i ve  (negative)  hyper-deduction  of  C 

l i t e r a l s, 

from  S. 

We  now  consider  the  theorems  f or  u n it  clauses 
because  prime  consequences  which  are  u n it  clauses 
are  i n t e r e s t i n g. 
deduction  instead  of  I-deduction  as  stated  in  the 
f o l l o w i n g. 

In  t h is  case,  we  can  use  P I-

Theorem  9. 
If  a  u n it  clause  C  is  a  prime  conse(cid:173)
quence  of  a  f i n i te  set  S  of  clauses  and  is  f a l se 
in  an 
predicate  symbol  in  an  ordering  P  of  the  predicate 
symbols  occurring  in  S  is 
in 
D, 

i n t e r p r e t a t i on  I  of  S  and  if  the  f i r st 

then  there  is  a  Pi-deduction  of  C 

the  predicate  symbol 

from  S. 

The  proof  is  the  same  as 

the  proof  f or  Theorem 

6  except  we  carry  the  ordering  of  the  predicate 
symbols  from  the  ground  case  to  the  l a t e nt  case. 

In  the  preceding  sections,  we  have  given 

theorems 

f or  consequence-

several  completeness 
f i n d i n g.  Using  I-(semantic)  r e s o l u t i o n, 
f i n i te  set  of  axioms,  we  can  generate  at 
prime  consequences  which  are  f a l se  in  I. 
resolution  reduces  the  number  of  clauses  we  have 
to  generate  in  order 
sequences • 

to  derive  these  prime  con(cid:173)

from  a 
least  the 
Semantic 

it 

In  consequence-finding, 

to 
f i nd  a  c r i t e r i on  f or  i n t e r e s t i ng  consequences. 
In 
t h is  paper,  we  have  given  the  d e f i n i t i on  of  a  prime 
consequence.  We  believe  that  many  i n t e r e s t i ng  con(cid:173)
sequences  may  be  obtained  from  prime  consequences. 
However,  much  work  needs  to  be  done  in  t h is  area. 

is  d i f f i c u lt 

In  addition 

to  generating 

i n t e r e s t i ng  conse(cid:173)

quences,  consequence-finding  may  also  be  relevant 
to  p r o o f - f i n d i n g.  The  t h e o r e t i c al 
framework  given 
tere  reveals  part  of 
s o l u t i o n. 
It  shows 

the  behavior  of  semantic  r e(cid:173)
that  semantic  r e s o l u t i on 

-284-

(Oct.  1965),  536-541. 

This  gives  us  more  insight 

generates  prime  consequences  of  any  subset  of  a 
set  of  clauses. 
into 
in 
semantic  resolution  and  may  prove  to  be  useful 
in  p r o o f - f i n d i n g,  we 
p r o o f - f i n d i n g.  For  example, 
are  interested 
in  deducing  a  pair  of  contradictory 
u n i t s.  From  Theorem  10,  these  contradictory  units 
can  be  deduced  by  using  p o s i t i ve  and  negative 
P-hyper-resolution  simultaneously.  We  may  c a ll 
the  strategy  that  uses  p o s i t i ve  and  negative  P-
hyper-resolution  simultaneously 
the  "bridging 
s t r a t e g y ." 
In  most  cases,  p o s i t i ve  hyper-resolu(cid:173)
t i on  corresponds  to  thinking  forward  from  axioms 
whereas  negative  hyper-resolution  corresponds 
to 
t h i n k i ng  backward  from  conclusion.  This  is  a  good 
sign  because  people  reason  in  both  directions  when 
proving  d i f f i c u lt  theorems.  Therefore,  a  program 
that 
the  bridging  strategy  corresponds 
to  a  theorem  prover  who  thinks  forward  and  back(cid:173)
ward  simultaneously.  The  bridging  strategy  may  be 
useful 
Since  u n it  clauses  are  either  p o s i t i ve  or  negative 
the  u n it  section  of 
which 
plemented  on  computers, 
bridging  strategy. 

f or  theorems  which  require  long  proofs. 

the  most  e f f i c i e nt  strategy  ever  im(cid:173)

the  u n it  preference  strategy, 

is  a  special  case  of  the 

implements 

is 

References 

1.  Davis,  M.,  and  Putnam,  H.  A  computing  p r o(cid:173)
cedure  f or  q u a n t i f i c a t i on  theory. 
201-215. 

J.  ACM  7  (1960), 

2.  Lee,  R.C.T.  A  completeness  theorem  and  a 
computer  program  f or  f i n d i ng  theorems  derivable 
from  given  axioms,  Ph.D.  d i s s e r t a t i o n,  University 
of  C a l i f o r n i a,  Berkeley,  1967. 

3.  Meltzer,  B.  Theorem  proving  for  computers: 
some  r e s u l ts  on  resolution  and  renaming.  Computer 
J.  8(1966),  341-343. 

4.  Robinson,  J.A.  A  machine-oriented  logic  based 
on  the  r e s o l u t i on  p r i n c i p l e. 
1965),  23-41. 

J.  ACM  12, 

l ( J a n. 

5. 
t i o n. 

.  Automatic  deduction  with  hyper-resolu(cid:173)
I n t.  J.  Computer  Math.  1  (1965),  227-234. 

6.  — . -,  A  review  of  automatic 
Proc.  Symp. 
Providence,  R . I .,  1967. 

in  Appl.  Math.,  Amer.  Math.  Soc., 

theorem  proving. 

7.  S l a g l e,  J.R.  Automatic  theorem  proving  with 
renamable  and  semantic  r e s o l u t i o n. 
4 ( 0 c t.  1967),  687-697. 

J.  ACM  12, 

8.  S l a g l e,  J . R .,  Chang,  C.L.,  and  Lee,  R.C.T. 
A  new  algorithm  f or  generating  prime  implicants. 
(September  1968) 

to  appear. 

9.  Wos,  L .,  Carson,  D.F.,  and  Robinson,  G.A. 
The  u n it  preference  strategy  in  theorem  proving. 
Proc.  AFIPS  1964  F a ll  Comput.  Conf.,  V o l.  26, 
616-621. 

.  Robinson,  G.A.,  and  Carson,  D.F. 

10. 
E f f i c i e n cy  and  completeness  of 
strategy  in  theorem  proving. 

J.  ACM  12,  4 

the  set  of  support 

-285-

