Co-Localization from Labeled and Unlabeled Data Using Graph Laplacian

Department of Computer Science, Hong Kong University of Science and Technology, Hong Kong

{panjf, qyang}@cse.ust.hk

Jeffrey Junfeng Pan, Qiang Yang

Abstract

This paper addresses the problem of recovering the
locations of both mobile devices and access points
from radio signals, a problem which we call co-
localization, by exploiting both labeled and unla-
beled data from mobile devices and access points.
We ﬁrst propose a solution using Latent Seman-
tic Indexing to construct the relative locations of
the mobile devices and access points when their
absolute locations are unknown. We then pro-
pose a semi-supervised learning algorithm based
on manifold to obtain the absolute locations of
the devices. Both solutions are ﬁnally combined
together in terms of graph Laplacian. Extensive
experiments are conducted in wireless local-area
networks, wireless sensor networks and radio fre-
quency identiﬁcation networks. The experimental
results show that we can achieve high accuracy with
much less calibration effort as compared to several
previous systems.

1 Introduction
Accurately tracking mobile devices in wireless networks us-
ing radio-signal-strength (RSS) values is a useful task in ro-
botics and activity recognition. It is also a difﬁcult task since
radio signals usually attenuate in a highly nonlinear and un-
certain way in a complex environment where client devices
may be moving. Existing approaches to RSS localization
fall into two main categories [Ferris et al., 2006]: (1) radio
propagation models [Maligan et al., 2005; Savvides et al.,
2001], which rely on the knowledge of access point locations;
(2) statistical machine learning models [Nguyen et al., 2005;
Letchner et al., 2005; Bahl and Padmanabhan, 2000], which
require a large amount of costly calibration.

However, in cities and large buildings where wireless net-
works are set up by different network suppliers, it is not easy
to ask them to share the location information of all access
points for business or privacy reasons. Besides, a mobile de-
vice may also want to locate access points for obtaining sta-
ble connections or to spot them in hostile areas. In all these
cases, sufﬁcient calibration (labeled) data on mobile devices
and access points may not always be available due to the lack
of GPS coverage or costly human effort.

In this paper, we address the problem of simultaneously
recovering the locations of both mobile devices and access
points, a problem which we call co-localization, using la-
beled and unlabeled RSS data from both mobile devices and
access points. We take two steps for solving this problem.

In the ﬁrst step, we assume that only unlabeled RSS data are
given. In such case, we show that the problem can be solved
by Latent Semantic Indexing (LSI) or Singular Value Decom-
position (SVD) [Deerwester et al., 1990], techniques that are
popular in information retrieval. Consequently, the relative
locations of APs and mobile device trajectory can be deter-
mined. In the second step, we assume that a small amount
of labeled RSS data from mobile devices and access points
are given. To determine the absolute locations of the devices
and access points, we apply a semi-supervised algorithm
with graph Laplacian and manifold learning [Chung, 1997;
Belkin and Niyogi, 2003; Ham et al., 2005]. Finally, we pro-
vide a uniﬁed framework for both the above unsupervised and
semi-supervised solutions.

We tested our co-localization algorithms in different indoor
environments using both static and mobile client devices. We
also tested the algorithms with different hardware such as
802.11 Wireless Local Area Networks (WLAN), Wireless
Sensor Networks (WSN) and Radio Frequency Identiﬁers
(RFID). Experimental results showed that we can achieve a
higher accuracy with much less calibration effort in different
environments, motion patterns and with different hardware.

2 Related Works
Propagation-model-based approaches are widely used for
location estimation due to their simplicity and efﬁciency
[Letchner et al., 2005]. These methods usually assume that
access points are labeled, e.g., their locations are known.
They estimate the distance of the mobile devices relative to
some ﬁxed access points based on signal strengths through
models that predicts the signal propagation patterns [Sav-
vides et al., 2001]. Researchers have also used Bayesian
models to encode the signal propagation pattern [Letchner et
al., 2005; Maligan et al., 2005] and infer the locations using
Monte Carlo methods [Thrun et al., 2001]. A drawback of
propagation-model-based methods is that these models may
become inaccurate in a complex domain.

An alternative is to apply machine-learning-based algo-
rithms. With these algorithms the labels of access points
need not be known. Instead, they usually rely on models that
are trained with RSS data collected on a mobile device and
are labeled with physical locations [Letchner et al., 2005;
Nguyen et al., 2005; Ni et al., 2003; Bahl and Padmanab-
han, 2000]. The training data are usually collected ofﬂine.
These signal values may be noisy and nonlinear due to envi-
ronmental dynamics. Therefore, sufﬁcient data shall be col-
lected to power algorithms for approximating the signal to lo-
cation mapping functions using K-Nearest-Neighbors [Bahl
and Padmanabhan, 2000], kernels [Pan et al., 2005], Bayesian

IJCAI-07

2166

ﬁlters [Letchner et al., 2005] and Gaussian processes [Ferris
et al., 2006]. A drawback of these models is that they may
require much calibration effort.

A viable approach is to use both labeled and unlabeled
data. For example, Bayesian frameworks can be applied to
use both labeled and unlabeled access points [Letchner et al.,
2005] and mobile device trajectory [Chai and Yang, 2005].
Our work differs from the above in that we treat mobile de-
vices and access points in a completely symmetric manner:
we use both the labeled and unlabeled data from mobile de-
vices and access points to recover the locations of both of
them rather than locating the mobile devices only. To the best
of our knowledge, this is the ﬁrst such work.

3 Methodology

3.1 Problem Deﬁnition

Consider a two-dimensional co-localization problem. As-
sume that a user holds a mobile device and navigates in an in-
door wireless environment C ⊆ R2 of n access points, which
can periodically send out beacon signals. At some time ti, the
RSS values from all the n access points are measured by the
mobile device to form a row vector si = [si1 si2 . . . sin] ∈
. A sequence of m signal strength vectors form an m × n
R
matrix S = [s(cid:2)
, where “prime” is used to de-
note matrix transposition. Here, the locations of some access
points and the mobile devices at some time t are known or
labeled, while the rest are unlabeled.

2 . . . s(cid:2)

1 s(cid:2)

m](cid:2)

n

1, p(cid:2)

2, . . . , p(cid:2)

Our objectives are stated as follows: We wish to estimate
the m × 2 location matrix P = [p(cid:2)
where
pi = [pi1 pi2] ∈ C is the location of the mobile device at
time ti and the n × 2 location matrix Q = [q(cid:2)
n](cid:2)
where qj = [qj1 qj2] ∈ C is the location of the j access
points. Our objectives are to determine the locations of all of
the remaining access points and the trajectory of the mobile
device. We call this problem co-localization.

2, . . . , q(cid:2)

1, q(cid:2)

m](cid:2)

Example 1 As an example, Figure 1(a) shows an indoor
802.11 wireless LAN environment of size about 60m × 50m.
It is equipped with n = 5 access points. A user with an
IBM T42 notebook that is equipped with an Intel Pro/2200BG
internal wireless card walks from A through B, . . . , E to F
at time tA, tB, . . . , tF . m = 6 signal strength vectors are
extracted and the 6 × 5 matrix S is shown in Table 1. By
walking from A to B, . . . , E and ﬁnally to F in the hallways,
we collected 500 signal strength vectors from 5 access points.
Note that the blank cells denote the missing values, which we
can ﬁll in a small default value, e.g., −100dBm.

Our task is to estimate the trajectory matrix P of the mobile
device at all times and to determine the location matrix Q of
the access points AP1, AP2, . . . , AP5.

3.2 SVD-based Relative Co-Localization

Given unlabeled data only, we can determine the relative lo-
cations of the mobile device and the access points. This prob-
lem is called relative co-localization. Intuitively, we may ob-
serve the following characteristics of the data (see Table 1):

Table 1: Signal Strength (unit:dBm)

-60

-40
-80

-60
-40

AP1 AP2 AP3 AP4 AP5
-40
-70
-50

tA
tB
tC
tD
tE
-80
tF
-50
(All values are rounded for illustration)

-70
-40
-70

-80
-40
-80

-70
-40
-80

1. Considering two rows of the data, the mobile device
at two different time may spatially close to each other
if their signal strengths are similar when received from
most access points, e.g., the time tA and tE.

2. Considering two columns of the data, two access points
may be spatially close to each other if the signal
strengths to the mobile device be similar most of the
time, e.g., AP1 and AP4.

3. Considering a single cell sij of the data, the mobile de-
vice and the j access point may spatially close to each
other at time ti if the signal be strong, e.g., the mobile
device is close to AP3 at time tD.

Not surprisingly,

The above observations enabled us to relate co-localization
with information retrieval.
the co-
localization is closely related to the Latent Semantic Indexing
(LSI) [Deerwester et al., 1990]. In this view, we treat an ac-
cess point as a term and a mobile device at some time as a
document. The above three observed characteristics would
be mapped to the similarities of document-document, term-
term and document-term respectively. Estimating the posi-
tions of the mobile device and the access points corresponds
to discovering the latent semantics of documents and terms in
some concept space.

More speciﬁcally, we can estimate the relative coordinates

by performing Singular Value Decomposition (SVD).

1. Transform the signal matrix S = [sij ]m×n to a non-
negative weight matrix A = [aij]m×n by a linear func-
tion aij = sij − smin
is the minimal signal
strength detected, e.g., the noise level or −100dBm.

where smin

2. Normalize the weight matrix by AN = D

.
Here, D1 and D2 are both diagonal matrices such that
D1 = diag(d1
j=1 aij and
D2 = diag(d2

m) where d1
n) where d2

2, . . . , d1
2, . . . , d2

(cid:2)n
(cid:2)m

1, d1
1, d2

i =
j =

i=1 aij.

AD

−1/2
1

−1/2
2

3. Perform SVD on the normalized weight matrix by
AN ≈ Um×rΣr×rV (cid:2)
n×r. The columns of Um×r =
[u1 . . . ur] and Vn×r = [v1 . . . vr] are the left and right
singular vectors. The singular values of the diagonal
matrix Σr×r = diag(σ1, σ2, . . . , σr) are ranked in non-
increasing order.

4. The (latent) location matrices of the mobile device P
and that of the access points Q can be estimated using
[v2 v3]. Note that
P = D
we skip the ﬁrst singular vectors u1 and v1 which mostly
capture some constant since matrix AN is not centering.

[u2 u3] and Q = D

−1/2
1

−1/2
2

IJCAI-07

2167

E

A

B

AP4

AP5

F

AP1
AP2
AP3

C

D

Static Node

Mobile Node

RFID Reader

RFID Tag

Sink

Mobile Node

Static Node

RFID Reader

RFID Tag

Hub

(a) WLAN Test-bed

(b) WSN Test-bed

(c) RFID Test-bed

Figure 1: The Wireless LAN, Wireless Sensor Network and the RFID Test-beds

0.08

0.06

0.04

0.02

0

−0.02

−0.04

AP2

C

Sampling Location
Access Point

B

D

F

E

A

0.08

0.06

0.04

0.02

0

−0.02

−0.04

AP4

AP3

E

A

D

B

C

Sampling Location
Access Point

F

AP5

AP1

AP2

AP3

AP4

AP1

AP5

−0.06

−0.08

−0.06

−0.04

−0.02

0

0.02

0.04

0.06

−0.06

−0.06

−0.04

−0.02

0

0.02

0.04

0.06

0.08

AP4

AP5

AP1

AP2

AP3

20

10

0

B

)

m

 
:
 
t
i

n
u
(
 
y

−10

−20

−30

C

−40

−30

−20

−10

Sampling Location
Access Point

F

E

A

D

0
10
x (unit : m)

20

30

40

(a) (Linear) SVD Co-Localization

(b) (Nonlinear) SVD Co-Localization

(c) Manifold-based Co-Localization

Figure 2: 802.11 Wireless LAN test in an indoor environment

As an example, after performing SVD on data in Example 1,
we obtained the latent coordinates of the mobile device and
the access points, which are shown in Figure 2(a).
In this
example, it is easy to see that the hallway structure is not well
preserved by comparing the true location sequence shown in
Figure 1(a). This is because SVD assumes a linear subspace,
while the correlation of RSS values and distance to APs is
often nonlinear [Nguyen et al., 2005].

A better solution is using Kernel SVD or simply trans-
forming signal strengths to weights by some nonlinear func-
tion. More speciﬁcally, we transform the signal matrix S =
[sij]m×n to a new weight matrix A = [aij ]m×n by a Gaussian
kernel aij = exp(−|sij − smax|2/2σ2
is the
maximal signal strength detected, e.g., the signal strength
around an access point or −30dBm. Figure 2(b) plots the
co-localization result using P and Q. Intuitively, the recon-
structed hallway structure and the locations of access points
are better than that shown in Figure 2(a) while referring to the
ground truth illustrated in Figure 1(a).

A) where smax

3.3 Manifold-based Absolute Co-Localization
When the physical locations of some access points and the
mobile device at some time are known, we can ground the
unknown coordinates by exploiting the geometry of the signal
distribution. More speciﬁcally, we can use manifold-based
learning, which generally assumes that if two points are close
in the intrinsic geometry of the marginal distribution, their
conditional distributions are similar [Belkin et al., 2005; Ham
et al., 2005]. This implies that the mobile device shall be
spatially close to each other if their signal vectors are similar
along some manifold structure [Patwari and Hero, 2004; Pan
et al., 2006]. For example, the mobile device at time tA and
tE shall be spatially close to each other (Figure 1(a)) since
their signal strengths are similar (Table 1).

When the manifold assumption holds, the optimal solution
is give by f ∗ = arg min Σl
i=1|fi − yi|2 + γf T Lf [Ham et al.,
2005] where the ﬁrst term measures the ﬁtting error and the
second term poses the smoothness along the manifold and L
is the graph Laplacian [Chung, 1997]. For our problem, the
objective is to optimize:

∗

P

= arg min
P ∈Rm×2

(cid:2)
(P − YP )

JP (P − YP ) + γP P

(cid:2)

LP P (1)

m](cid:2)

1, y(cid:2)

2, . . . , y(cid:2)

Here, P is the coordinate matrix of the mobile device to
be determined; JP = diag(δ1, δ2, . . . , δm) is an indica-
tion matrix where δi = 1 if the coordinate of the mobile
device at time ti is given and otherwise δi = 0; YP =
[y(cid:2)
is an m × 2 matrix supplying the calibra-
tion data where yi is the given coordinate of the mobile de-
vice at time ti if δi = 1 and otherwise the value of yi can
be any, e.g., yi = [0 0]; γP controls the smoothness of
the coordinates along the manifold; LP = DP − WP is
the graph Laplacian; WP = [wij ]m×m is the weight matrix
and wij = exp(−(cid:5)si − sj(cid:5)2/2σ2
P ) if si and sj are neigh-
(cid:2)m
bors along the manifold and otherwise wij = 0; DP =
diag(d1, d2, . . . , dm) and di =

j=1 wij .

Setting the derivative of Equation (1) to zero, the optimal

solution is given by [Ham et al., 2005]

∗

P

= (JP + γP LP )

−1JP YP

(2)

Similarly, the coordinates of the access points are given by

∗

Q

= arg min
Q∈Rn×2

(cid:2)
(Q − YQ)

JQ(Q − YQ) + γQQ

(cid:2)

LQQ (3)

and

∗

Q

= (JQ + γQLQ)

(4)
where LQ = DQ − WQ is the graph Laplacian, WQ is the
weight matrix and DQ is constructed from WQ.

−1JQYQ

IJCAI-07

2168

Thus, when the locations of the mobile device and the ac-
cess points are partially known, we can co-localize them by
solving Equations (2) and (4) respectively. Alternatively, we
can combine them into a single equation as

∗

R

= (J + γBLB + γCLC )

−1JY

(5)

Here, R = [P (cid:2) Q(cid:2)](cid:2)
(cid:3)
device and the access points; Y = [Y (cid:2)
(cid:3)
information; J =

0
JQ

JP
0

(cid:4)

(cid:3)

(cid:4)

is the coordinate matrix of the mobile
gives the label

P Y (cid:2)

Q](cid:2)

(cid:4)
is the indication matrix; LB =

LP
0

0

0

and LC =

0

0
0 LQ

are the graph Laplacians.

In practice, the graph Laplacians LB and LC in Equa-
tion (5) are normalized [Belkin and Niyogi, 2003; Shi and
Malik, 2000]. Figure 2(c) shows an example of the manifold-
based co-localization when the locations of the mobile device
at time tA, tB, tC, tD, tE, tF and the access points AP2, AP3,
AP4 are known. As can be seen, the trajectory of the mobile
device is well grounded when compared to the ground truth
shown in Figure 1(a). However, due to the limited number
of access points, their locations are estimated badly, e.g., the
location of AP5.

In the following, we will combine the SVD-based and the
Manifold-based co-localization together so that we can align
the mobile device and the access points to the ground truth
and to each other.

3.4 A Unifying Framework

So far, we have formulated the unsupervised co-localization
based on SVD and the semi-supervised co-localization based
on the manifold assumption using Equation (5) by exploiting
the correlation within the mobile device and the access points.
In this section, we integrate them through a unifying theory.
Essentially, performing SVD on AN is equivalent to solving
the generalized eigenvalue problem [Dhillon, 2001]

LAZ = DAZΛ

(6)
where LA = DA−WA is the graph Laplacian [Chung, 1997],
WA =
. The eigenval-

and DA =

D1
0

(cid:4)

(cid:3)

(cid:4)

(cid:3)

0
A(cid:2)

A

0

0
D2

ues of the diagonal matrix Λ = diag(λ1, λ2, . . . , λm+n) are
ranked in non-decreasing order. Z = [z1, z2, . . . zm+n] are
[P (cid:2) Q(cid:2)](cid:2) = [z2 z3]. Note that we skip
the eigenvectors.
the ﬁrst eigenvector z1 since the solution is trivial. Fur-
thermore, it is interesting to see that we have λi = 1 − σi
where i = 1, 2, . . . , r [Dhillon, 2001]. Detailed analysis
and comparison of LSI, SVD and graph Laplacian can be
found in Latent Semantic Indexing [Deerwester et al., 1990;
Dhillon, 2001; Hendrickson, 2006].

Putting these together, our objective is to optimize:

∗

R

= arg min

R∈R(m+n)×2

(cid:2)
(R − Y )

J(R − Y ) + γR

(cid:2)

LR (7)

The ﬁrst term measures the ﬁtting error and the second term
constrains the smoothness among the mobile device and the
access points. L = γALA + γBLB + γC LC = D − W . The
solution is given by:

∗

R

= (J + γL)

−1JY

(8)

AP4

AP1

AP3

AP2

20

10

0

−10

−20

−30

)

m

 
:
 
t
i

n
u
(
 
y

B

C

E

A

D

Sampling Location
Access Point

F

AP5

−40

−30

−20

−10

0
10
x (unit : m)

20

30

40

Figure 3: Co-Localization with graph embedding

In practice, the graph Laplacian L is normalized. An ex-
ample of applying the above co-localization algorithm using
Equation (8) is shown in Figure 3 when the locations of the
mobile device at time tA, tB , tC , tD tF and the access point
AP4 are known. As can be seen, most of the locations are
correctly recovered while using less calibration data than that
in Figure 2(c).

4 Experiments

We evaluated the performance of the co-localization algo-
rithm on three sets of different devices and test-beds:
(1) Wireless Local Area Network (WLAN): a person carrying
an IBM c(cid:5)
T42 notebook, which is equipped with an Intel c(cid:5)
Pro/2200GB internal wireless card, walked in an indoor envi-
ronment of about 60m × 50m in size as shown in Figure 1(a).
A total of 2000 examples are collected with sample rate 2Hz.
The ground-truth location labels are obtained by referring to
landmark points such as doors, corners and dead-ends. The
localization area is composed by one-dimensional hallways.
(2) Wireless Sensor Network (WSN): We used a number of
MICA2 sensors from Crossbow c(cid:5)
for experiments. As can
be seen from Figure 1(b), 8 static nodes (AP) were placed in
a room of size 5m × 4m. One mobile node (MD) was at-
tached on the top of a robot that moved around freely in this
domain. A total of 4000 examples are collected with sam-
ple rate 2Hz. The ground-truth location labels of the mobile
node were supported by the cameras deployed on the ceiling.
The localization area is a two-dimensional plane.
(3)Radio Frequency Identiﬁcation (RFID): We used 4 Man-
tis readers (AP) and 30 tags (MD) from RF Code c(cid:5)
. They
were all deployed as stationary nodes, which is shown in
Figure 1(c). A total of 2000 examples were collected. The
ground truth locations were marked down manually.

We summarize our three experimental setups in Table 2.
For comparison, we also run the following baseline algo-
rithms (1) LANDMARC, a nearest-neighbor weighting based
method designed for RFID localization [Ni et al., 2003]; (2)
Support Vector Regression (SVR), a simpliﬁed variant of a
kernel-based method used for WSN localization [Nguyen et
al., 2005]; (3) RADAR, a K-Nearest-Neighbor method for
WLAN localization [Bahl and Padmanabhan, 2000].

In each experiment, we randomly pick up 500 examples
for training and the rest for testing. The training data is fur-
ther split into labeled and unlabeled parts. The results shown
in Figure 4 are averaged over 10 repetitions for reducing sta-
tistical variability. All results are measured in relative error

IJCAI-07

2169

Table 2: The experimental setups of WLAN, WSN and RFID

Infrastructure

AP

MD

WLAN
WSN
RFID

5 Access Points
8 Static Nodes
4 RFID Readers

1 Notebook

1 Mobile Node
30 RFID Tags

Test-bed
Hallway

Room
Room

Scale

60m × 50m
5m × 4m
5m × 4m

Dataset Size Motion Pattern
Mobile (robot)
Mobile (human)

2000
4000
2000

Static

distances, which are error distances in percentage while re-
ferring to the maximal error distance in each ﬁgure for easy
comparison. All parameters are determined from a validation
subset. LANDMARC, RADAR and SVR use the labeled part
of training data only.

In contrary, the co-localization method used both labeled
and unlabeled data. We will show how our algorithm ben-
eﬁts from the additional unlabeled data and reduces calibra-
tion effort.
In all, we tested on two conﬁgurations for the
co-localization method: (1) ‘Co-Localization no AP’ uses
partially labeled data from mobile devices for training, in
which we tries to recover the locations of the access points;
and (2) ‘Co-Localization with AP’ repeats the same experi-
ments with the locations of all access points known.

Figures 4(a), 4(b) and 4(c) show the localization error of
different mobile devices by varying the number of labeled ex-
amples in a training subset which size is ﬁxed to be 500. The
three ﬁgures could be read in two directions. First, if we com-
pare the results vertically in each ﬁgure, we can see how the
unlabeled data help improve the result in the proposed meth-
ods. For example in Figure 4(c), most compared methods
have a relative error distance of around 80% when using 50
labeled examples. In contrary, the proposed methods have an
error of around 40% by employing additional 450 unlabeled
examples. Secondly, if we compare the results horizontally in
each ﬁgure, we can ﬁnd how our methods reduce calibration
effort. For example in Figure 4(a), most compared methods
have a relative error distance of around 60% when all 500
examples are labeled. The proposed ‘Co-Localization with
AP’ has a similar performance when using 50 labeled and
450 unlabeled examples. We save the calibration effort.

We found that the mobility of the mobile device and the
environment complexity are two main factors that affected
the performance of the co-localization algorithm. In a sta-
tic and plane-shaped test-bed (Figure 4(a)), the radio signals
are less noisy and the ‘Co-Localization no AP’ conﬁgura-
tion demonstrated similar performance as RADAR, LAND-
MARC and SVR when the number of labeled examples is
small. In a mobile and complex environment, as shown in
(Figure 4(c)), the radio signal is more noisy and the ‘Co-
Localization no AP’ performed much better and more robust
than the compared methods. We have also tried some other
combinations of experiments that led to a similar conclusion,
such as using RFIDs in a mobile scenario.

While comparing the results of ‘Co-Localization no AP’
and ‘Co-Localization with AP’ in Figures 4(a), 4(b) and
4(c), we can ﬁnd that knowing the locations of access points
is more helpful for localizing the mobile devices in a static
and planar scenario (Figure 4(a)) than in a mobile and com-
plex environment (see Figure 4(c)).

Similarly, we can see from Figures 4(d), 4(e) and 4(f) that
knowing the locations of mobile devices are more helpful for

localizing access points in a static and plane-shaped scenario
rather than a mobile and complex environment.

5 Conclusion

We have developed a novel graph Laplacian approach to solve
the problem of simultaneously recovering the locations of
both mobile devices and access points. In our co-localization
framework, we ﬁnd the relative locations of mobile devices
and access points by exploiting a SVD based method, and
ﬁnd the absolute locations using a small collection of labeled
data through graph Laplacian methods. Our extensive exper-
iments in three different conﬁgurations showed that we can
achieve high performance with much less calibration effort
as compared to several previous approaches. The signiﬁcance
of the work is that we can leverage both the knowledge of the
access point locations and the mobile device trajectories to
obtain more accurate localization. Indeed this is one of our
future works. Besides, we would try to evaluate the perfor-
mance in a large-scale and dynamic environment, e.g., in a
city level and in different time. We may also vary more para-
meters such as number of access points and their deployment
density and study the robustness.

Acknowledgement

We thank NEC China Lab (NECLC05/06.EG01) for their
generous support of this research.

References

[Bahl and Padmanabhan, 2000] P. Bahl and V.N. Padmanab-
han. RADAR: An in-building RF-based user location and
tracking system.
In Proceedings of the Conference on
Computer Communications, volume 2, pages 775–784, Tel
Aviv, Israel, March 2000.

[Belkin and Niyogi, 2003] M. Belkin and P. Niyogi. Lapla-
cian eigenmaps for dimensionality reduction and data rep-
resentation. Neural Computation, 15(6):1373–1396, 2003.

[Belkin et al., 2005] Misha Belkin, Partha Niyogi, and Vikas
Sindhwani. On manifold regularization. In Proceedings of
the Tenth International Workshop on Artiﬁcial Intelligence
and Statistics, pages 17–24. Society for Artiﬁcial Intelli-
gence and Statistics, January 2005.

[Chai and Yang, 2005] X. Chai and Q. Yang. Reducing cali-
bration effort for location estimation using unlabeled sam-
ples. In Proceedings of the Third IEEE International Con-
ference on Pervasive Computing and Communications,
pages 95–104, Kauai Island, HI, USA, 2005.

[Chung, 1997] F. Chung. Spectral Graph Theory. American

Mathematical Society, 1997.

IJCAI-07

2170

)
e
g
a

t

n
e
c
r
e
P

(
 

e
c
n
a

t
s
D

i

 
r
o
r
r

E

100%

95%

90%

85%

80%

75%

70%

65%

60%

55%

50%

45%

40%

)
e
g
a

t

n
e
c
r
e
P

(
 

e
c
n
a

t
s
D

i

 
r
o
r
r

E

100%

90%

80%

70%

60%

50%

40%

Radar
Landmarc
SVR
Co−Localizatoin no AP
Co−Localization with AP

50

100

150

200

250

300

350

400

450

500

Number of Labeled Examples of the Mobile Device

)
)
e
g
a

t

n
e
c
r
e
P

(
 

e
c
n
a

t
s
D

i

 
r
o
r
r

E

100%

95%

90%

85%

80%

75%

70%

65%

60%

55%

50%

Radar
Landmarc
SVR
Co−Localizatoin no AP
Co−Localization with AP

50

100

150

200

250

300

350

400

450

500

Number of Labeled Examples of the Mobile Device

)
e
g
a

t

n
e
c
r
e
P

(
 

e
c
n
a

t
s
D

i

 
r
o
r
r

E

100%

90%

80%

70%

60%

50%

40%

30%

20%

Radar
Landmarc
SVR
Co−Localizatoin no AP
Co−Localization with AP

50

100

150

200

250

300

350

400

450

500

Number of Labeled Examples of the Mobile Device

(a) RFID MD (tags)

(b) WSN MD (mobile sensor node)

(c) WLAN MD (notebook)

Co−Localizatoin no AP

Co−Localizatoin no AP

Co−Localizatoin no AP

Improvement=60%

50

100

150

200

250

300

350

400

450

500

Number of Labeled Examples of the Mobile Device

)
e
g
a

t

n
e
c
r
e
P

(
 

e
c
n
a

t
s
D

i

 
r
o
r
r

E

100%

95%

90%

85%

80%

75%

70%

Improvement=23%

)
e
g
a

t

n
e
c
r
e
P

(
 

e
c
n
a

t
s
D

i

 
r
o
r
r

E

100%

98%

96%

94%

92%

90%

88%

86%

Improvement=12%

50

100

150

200

250

300

350

400

450

500

Number of Labeled Examples of the Mobile Device

50

100

150

200

250

300

350

400

450

500

Number of Labeled Examples of the Mobile Device

(d) RFID AP (readers)

(e) WSN AP (static sensor nodes)

(f) WLAN AP (access points)

Figure 4: Experimental Results over 10 Repetitions (Mean and Std.): MD for Mobile Device; AP for Access Point

[Deerwester et al., 1990] S. C. Deerwester, S. T. Dumais,
T. K. Landauer, G. W. Furnas, and R. A. Harshman. Index-
ing by latent semantic analysis. Journal of the American
Society of Information Science, 41(6):391–407, 1990.

[Dhillon, 2001] I. S. Dhillon. Co-clustering documents and
words using bipartite spectral graph partitioning. In Pro-
ceedings of the seventh ACM SIGKDD international con-
ference on Knowledge discovery and data mining, pages
269–274, New York, NY, USA, 2001. ACM Press.

[Ferris et al., 2006] B. Ferris, D. Hahnel, and D. Fox.
Gaussian processes for signal strength-based location esti-
mation. In Proceedings of Robotics: Science and Systems,
Philadelphia, Pennsylvania, USA, August 2006.

[Ham et al., 2005] J. Ham, D. Lee, and L. Saul. Semisuper-
vised alignment of manifolds. In Proceedings of the Tenth
International Workshop on Artiﬁcial Intelligence and Sta-
tistics, pages 120–127. Society for Artiﬁcial Intelligence
and Statistics, January 2005.

[Hendrickson, 2006] B. Hendrickson.

Latent semantic
analysis and ﬁedler embeddings. In Proceedings of SIAM
Workshop on Text Mining, April 2006.

[Letchner et al., 2005] J. Letchner, D. Fox, and A. LaMarca.
Large-scale localization from wireless signal strength. In
Proceedings of the 20th National Conference on Artiﬁcial
Intelligence, pages 15–20, Pittsburgh, USA, July 2005.

[Maligan et al., 2005] D. Maligan, E. Elnahrawy, R. Martin,
W. Ju, P. Krishnan, and A.S. Krishnakumar. Bayesian
indoor positioning systems.
In Proceedings of the Con-
ference on Computer Communications, volume 2, pages
1217–1227, Miami, FL, USA, March 2005.

[Nguyen et al., 2005] X. Nguyen, M. I. Jordan, and B. Si-
nopoli. A kernel-based learning approach to ad hoc sensor

network localization. ACM Transactions on Sensor Net-
works, 1(1):134–152, 2005.

[Ni et al., 2003] L.M. Ni, Y. Liu, Y.C. Lau, and A.P. Patil.
LANDMARC: Indoor location sensing using active RFID.
In Proceedings of the First IEEE International Confer-
ence on Pervasive Computing and Communications, pages
407–416, Dallas, TX, USA, March 2003.

[Pan et al., 2005] J. J. Pan, J. T. Kwok, Q. Yang, and
Y. Chen. Accurate and low-cost location estimation using
kernels.
In Proceedings of the Nineteenth International
Joint Conference on Artiﬁcial Intelligence, pages 1366–
1371, Edinburgh, Scotland, 2005.

[Pan et al., 2006] J. J. Pan, Q. Yang, H. Chang, and D. Y.
Yeung. A manifold regularization approach to calibration
reduction for sensor-network based tracking. In Proceed-
ings of the Twenty-First National Conference on Artiﬁcial
Intelligence, pages 988–993, Boston, USA, July 2006.

[Patwari and Hero, 2004] N. Patwari and A. O. Hero. Mani-
fold learning algorithms for localization in wireless sensor
networks. In Proceedings of the International Conference
on Acoustics, Speech, and Signal Processing, May 2004.

[Savvides et al., 2001] A. Savvides, C. Han, and M. B.
Strivastava. Dynamic ﬁne-grained localization in ad-hoc
networks of sensors.
In Proceedings of the 7th Annual
International Conference on Mobile Computing and Net-
working, pages 166–179, Rome, Italy, 2001.

[Shi and Malik, 2000] J. Shi and J. Malik. Normalized cuts
and image segmentation.
IEEE Transactions on Pattern
Analysis and Machine Intelligence, 22(8):888–905, 2000.
[Thrun et al., 2001] S. Thrun, D. Fox, W. Burgard, and Del-
laert. F. Robust monte carlo localization for mobile robots.
Artiﬁcial Intelligence, 128(1-2):99–141, 2001.

IJCAI-07

2171

