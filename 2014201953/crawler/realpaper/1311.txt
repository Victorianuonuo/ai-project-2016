Session  14  N a t u r al  Language: 
Semantics  and  P a r s i ng 

CASE  STRUCTURE  SYSTEMS 

Bertram  Bruce 

Computer  Science  Department 

Rutgers  U n i v e r s i ty 

New  Brunswick,  New  Jersey,  U.  S.  A. 

A b s t r a ct 

A 

l o g ic 

f or  case  s t r u c t u re  systems 

is  p r e s e n t ed 

in 

in  atomic 

which  a l l o ws  v a r i a t i o ns 
f o r m u l a s. 
terms 
d e s c r i be  and  c h a r a c t e r i ze 
A  computer  program  which  a l l o ws 
t u r es 
to  m e d i c al 
used 
to 
systems. 

t h en  d e s c r i b e d. 

i l l u s t r a te 

is 

r e c o rd  a n a l y s is  and  disease  m o d e l i ng  are 

i m p o r t a nt  concepts  about  case 

Several  open  problems  are  a l so  d i s c u s s e d. 

t he  o r d er  and  number  of 
T h is 
f o ur  e x i s t i ng  case  systems. 

is  used 

l o g ic 

to 

f l e x i b le  case  s t r u c(cid:173)

A p p l i c a t i o ns  of  t he  program 

1. 

I n t r o d u c t i on 

Much  of  t he  r e s e a r ch 

in  n a t u r al 

language  p r o(cid:173)

is 

the 

"How 

focused  on 

i n f o r m a t i on 

t he  q u e s t i o n, 

Some  of  t he  s t o r a ge 

t he  problem  of  s t o r a ge 

to  be  r e p r e s e n t ed  once  a 

c e s s i ng  has 
s t r u c t u r e s,  or 
or  meaning  of  a  sentence 
sentence  has  been  p a r s e d ?" 
s t r u c t u r es  have  been  s p e c i al  purpose  o r g a n i z a t i o ns 
such  as  t he  SAD  SAM  program  of  Lindsay  12, 
the  STUDENT 
BASEBALL  program  of  Green,  et  al 
program  of  Bobrow1.  Others  have  been  semantic  n e t(cid:173)
works  such  as  TLC  by  Q u i l l i a n1 5,  PROTOSYNTHEX 
I II 
by  Simmons2^,  MEMOD  by  Norman  and  R u m e l h a r t1 4,  or 
MENTAL  by  S h a p i r o1 9, 
dependency  grammar  such  as  Schank's  c o n c e p t u al  p a r(cid:173)
ser-*7  or  on  p r e d i c a te  c a l c u l u s,  such  as  QA3  by  Green 
and  Raphael7  or  PCDB  by  S a n d e w a l l1 6, 

s t i ll  o t h e rs  have  been  based  on 

8,  or 

t he 

A  common 

f e a t u re  of  s e v e r al  of  t h e se  n a t u r al 
is  a  r e c o g n i t i on  of  deep  case 
language  p r o c e s s o rs 
r e l a t i o ns  as  d i s c u s s ed  by  F i l l m o r e6.  Some  systems 
w h i ch  have  n ot  e x p l i c i t ly  used  a  case  s t r u c t u re  have 
n e v e r t h e l e ss  used  c a s e - l i ke  mechanisms. 
c a s e - l i ke  systems  have  been  used 
in  m o d e l i ng 
m e d i c i ne  and  p s y c h o l o g y,  even  w i t h o ut  n a t u r al 

Jn  a d d i t i o n, 

in 
language. 

It  appears  now 

t h at  a 

f o r m a l i z a t i on  of  case 

in 

t he 

to  be  s t r u c t u r ed 

in  s i m i l ar  ways  and  y et 

languages  would  be  u s e f ul  and 

t e r m i n o l o gy  and  approach  have  c r e a t ed 

f e a s i b l e.  On 
l a r ge  amount  of  d a ta  on  case  systems 

s t r u c t u re 
t he  one  hand 
appears 
d i f f e r e n c es 
s e r i o us  communication  p r o b l e m s.  On  t he  o t h er  hand, 
even 
if  we  admit 
somehow  c a p t u re 
systems, 
elegance  and 
u s e f ul  as  a  means 
structure  systems. 

l e ss 
f or  examining  and  comparing  case 

t h at 
the  e s s e n t i al  n a t u re  of 

t h e o r e t i c al  u s e f u l n e ss  make 

t he  s i m p l i f i c a t i o ns 

t h e se 
f or 
them 

f i r st  o r d er 

t he  u s u al 

imposed 

l o g i cs 

t h e re 

This  paper  p r e s e n ts 

( in  s e c t i on  2)  a 

language 

terms 

l o g ic  and  y et  a l l o ws  such 

f or  case  s t r u c t u re  systems  which 
o r d er 
r e a r r a n g ed 
and 
m i n a t i on  of  w e l l - f o r m e d n e s s. 
make 
it  s i g n i f i c a n t ly  e a s i er 
or  compare  case  s t r u c t u re  systems. 

t he  c h e c k i ng  of  case  r e s t r i c t i o ns 

in  atomic 

to 

f o r m u l a s,  p r e p o s i t i o n s, 
t he  d e t e r(cid:173)

in 

The  case 

l o g ic  s h o u ld 

f o r m u l a t e,  analyze 

is  b u i lt  on 

f i r st 

t h i n gs  as  o m i t t ed  and 

this  r e s e a r c h,  was  supported  by  t he  N a t i o n al 
I n s t i t u t es  of  Health.  Resource  on  Computers 
B i o m e d i c i ne  at  Rutgers  U n i v e r s i ty 

(Grant  RR  643) 

in 

f o r m a l i s ms  of  case 

few  r e p r e s e n t a t i ve  systems  w i th 
in  t he 
l o g i c. 
t he  CHRONOS  11 

In  s e c t i on  3  a 
cases  are  expressed 
S e c t i on  4  c o n t a i ns  a  d e s c r i p t i on  of 
p r o g r a m3. 
T h is  program 
f l e x i b le  case  s t r u c t u r e. 
used  w i th  one  case  s t r u c t u re 
m e d i c al  r e c o r ds  and  w i th  a n o t h er  as  a  model 
glaucoma. 

t he  a n a l y s is  of 
f or 

For  example 

in  h a v i ng  a 

it  has  been 

is  unusual 

f or 

2.  Case  Logic 

T h is  s e c t i on  d e s c r i b es 

t he  e s s e n t i al  c h a r a c t e r(cid:173)
(CL). 
f o r m a l i z a t i on  can  be  made 

l o g ic 

framework. 

t h at  an  adequate 

f i r st  o r d er 
t h is  and  a  pure  p r e d i c a te  calculus 

i s t i cs  of  a  case  s t r u c t u re  system  or  case 
It  appears 
w i t h in  a 
between 
the 
d i c a t e s,  some  a d d i t i o n al  axioms,  and  some  s y n t a c(cid:173)
t i c al  changes 
languages  of 
and  even  omissions  of  some 

to  r e f l e ct 
i n t e r e st  a l l ow  v a r i a t i o ns 

f i x e d,  or  c o n s t a nt  p r e(cid:173)

i n t r o d u c t i on  of  some 

The  d i f f e r e n c es 

t h at  c e r t a in 

t e r m s. 

f a ct 

t he 

in 

i n v o l ve 

t he  o r d er 

The  axiom  system 

f or  a  case 

l o g ic  depends 

t he  s p e c i f ic  cases  w h i ch  are  used  a n d,  of 

i n t e r p r e t a t i o ns  we  wish 

to  a l l o w. 

is  perhaps  more 
to  c a ll  CL  a  " n o t a t i o n al  s y s t e m"  r a t h er 

it 

h e a v i ly  on 
c o u r s e,  on  t he 
Because  no  axioms  a re  g i v en  here 
a p p r o p r i a te 
t h an  a  " l o g i c ". 
t h at 
axiom  system  as  w e ll  as  naming 
and  semantic  o b j e c ts 

in  any  p a r t i c u l ar  CL  one  must 

However, 

t he  system. 

in 

it  s h o u ld  be  remembered 

t he  v a r i o us  s y n t a c t ic 

i n c l u de  an 

We  have  a ll  of  t he  u s u al  symbols 

l o g i c: 

o r d er 

found 

in 

f i r st 

(p  = 

{ p( n i )} 

is  s  c o u n t a b le  set  of  n . - a ry  p r e d i c a t e s, 

364 

365 

Then  the  set  of  atomic  formulas  is  simply  the  set  of 
those  kernel  strings  which  have  n  terms  for  an  n-ary 
predicate,  a ll  in  the  usual  order.  The  semantic 
structures  and  interpretations  are  unchanged,  but  the 
denotation  of  an  n-ary  predicate  must  necessarily  be 
an  n-ary  r e l a t i on  and  the  case  sequence  i s,  of  course, 
i r r e l e v a n t. 

This  section  presents  a  notation  for  a  class  of 

systems  called  "case  l o g i c s ". 
ask  how  the  case  systems  of  l i n g u i s t s,  psychologists, 
and  computer  s c i e n t i s ts 
p a r t i c u l a r ly  how  the  d i s t i n c t i on  between  surface  and 
deep  case  systems  is  handled. 

into  t h is  framework  and 

It  is  reasonable  to 

f it 

It  is  often  argued  that  a  language  has  at 

least 

two  case  systems,  one  at  the  surface  or  syntactic 
level  and  the  other  at  a  deep  or  conceptual  l e v e l. 
The  notation  presented  here  is  designed  for  both 
levels.  Of  course,  at  the  deep  l e v e l,  we  no  longer 
have  prepositions  in  the  usual  sense,  but  we  do  have 
structures  which  can  be  considered  to  be  atomic 
formulas  of  CL  ,  w i th  v a r i a b i l i ty  in  the  order  and 
presence  of  terms.  Part  of  the  understanding  process 
is  then  a  t r a n s l a t i on  from  one  case  system  to  another. 

Usually  a  deep  case  system  has  very  few  cases, 
is  basic 

each  one  j u s t i f i ed  in  terms  of  i ts  presence 
semantic  constructs.  A  surface  system  may  have  either 
a  profusion  of  cases  corresponding  to  the  many  d i f f e r(cid:173)
ent  syntactic  p o s s i b i l i t i es  or  a  small  set  of  rather 
amorphous  cases,  such  as  " o b j e c t i v e ". 

The  t r a n s l a t i on  from  surface  to  deep  cases  often 
involves  an  expansion  in  storage  structures  wherein 
a  single  predicate  w i th  a  few 
loosely  defined  argu(cid:173)
ments  becomes  a  complex  of  more  p r i m i t i ve  predicates 
with  arguments  often  missing  but  always  well  defined 
conceptually. 
is  the  nature  of  the  missing  argu(cid:173)
ments  which  points  out  connections  to  other  parts  of 
the  discourse. 

It 

In  special  situations  t h is  complex  of  p r i m i t i ve 

predicates  can  be  s i m p l i f i ed  by  elaborating  the 
surface  case  system  (see  section  4).  Positions  of 
nodes  in  the  semantic  or  conceptual 
network  are  in 
effect  named  by  new  surface  cases  whose  case  condi(cid:173)
tions  check  to  see  if  a  term  could  f i ll  the  appro(cid:173)
p r i a te  conceptual  p o s i t i o n. 
The  r e s u lt  is  a  loss 
information  with  a  corresponding  improvement 
e f f i c i e n cy  for  the  special  s i t u a t i o n. 
that  t r e a t i ng  such  things  as  causation  and  purpose 
as  cases  (rather  than  as  second  order  predicates  on 
sentences) 

is  such  a  s i m p l i f i c a t i o n. 

in 
It  appears 

in 

The  next  section  discusses  some  well  known 

case  systems  in  terms  of  CL.  While  space  l i m i t a t i o ns 
make  the  descriptions  rather  spare,  they  should 
indicate  at  least  how  some  of  the  essential  parts  of 
the  systems  would  be  expressed.  The  problems  of  sur(cid:173)
face  vs.  deep  and  f i r st  order  vs.  second  order  f or 
any  p a r t i c u l ar  system  would  need  to  be  discussed  at 
much  greater  length. 

366 

3.  Some  Representative  Case  Structure  Systems 

3.2  Simmons  -i  Semantic  Networks 

In  t h is  section  we  examine  a  variety  of  systems 
which  appear  suitable  for  description  as  case  struc(cid:173)
ture  systems. 
For  the  sake  of  c l a r i t y,  the  special 
case  Co,  which  is  always  assumed  to  be  in  C  is  not 
l i s t ed 

in  the  descriptions. 

3.1  Fillmore  -  Natural  Language  Cases 

R.F.  Simmons20  gives  an  extensive  account  of 

semantic  networks  and  t h e ir  use  in  processing  natural 
language  by  computer.  An  essential  feature  of  these 
networks  is  a  set  of  deep  case  relations  connecting 
nominal  concepts 
(underlying  noun  phrases)  to  verbs. 
While  a  semantic  network  does  not  require  any  specific 
case  structure  Simmons  has  chosen  one  which  follows 
from  work  of  Celce-Murcia  and  Fillmore". 

The  most  persuasive  argument  for  the  u n i v e r s a l i ty 

of  cases  in  the  deep  structures  of  natural 
is  made  by  Fillmore6.  He  argues  from  evidence  in 
many  languages  that  every  language,  regardless  of  i ts 
surface  structures,  has  a  deep  case  system  which 
gives  the  relationship  of  many  nouns  to  a  verb. 

languages 

Fillmore's  description  of  cases  and  t h e ir  pur(cid:173)

pose  in  language  can  be  expressed  d i r e c t ly  in  CL. 
He  suggests  a  minimum  of  six  cases. 

Agentive  (A)  -  the  animate  perceived  instigator  of  an 

action 

Instrumental 

[ I) 

-  the  inanimate  force  or  object 

which  is  causally  involved. 

Dative  (D)  -  the  animate  being  affected. 
F a c t i t i ve  (F)  -  the  object  or  being  resulting  from 

Locative  (L)  - 
Objective  (0)  -  determined  by  verb  (neutral  case). 

the  action. 
location  or  spatial  o r i e n t a t i o n. 

C  =  {A,  I,  D,  F,  L,  0 }. 

While  other  possible  cases  are  mentioned  we  can  say 
roughly  that 
Fillmore  notes  that  the  cases  A  and  D  require 
animate  nouns, 
that  i s, 
agentive  or  dative  case 
"animate".  Other  features  making  up  the  set  m  can 
easily  be  imagined  for  the  other  cases. 

for  a  noun  to  serve  in  the 
it  must  have  the  feature 

Corresponding  to  features  on  nouns  Fillmore 

says  that  verbs  can  be  c l a s s i f i ed  according  to 
"sentence  types"  or  "case  frames".  A  case  frame 
t e l ls  what  case  relationships  may  exist  between  a 
verb  and  i ts  nouns.  For  example  "open"  may  be  used 
in  four  ways: 
The  door  opened. 
(0) 
John  opened  the  door. 
The  wind  opened  the  door. 
John  opened  the  door  with  a  c h i s e l, 

(A  0  I  ) 

(A  0) 

(I  0) 

[A) 

We  can  represent  the  case  frame  for  "open"  as 
[0 
( I ) ].  This  says  that  when  "open"  is  used  i ts 
object  must  appear  but  the  agent  and  instrument  are 
optional.  Clearly  a  case  frame  is  a  case  structure 
(.£  )  in  CL. 

Fillmore  shows  by  example  the  case  signals 
(S.)  of  various  languages.  He  also  gives  some 
tentative  rules  for  English. 

For  example: 

"The  A  preposition  is  by; 
there  is  no  A,  otherwise  it  is  w i t h; 
prepositions  are  t y p i c a l ly  zero;  the  B 
case]  preposition  is  f o r; 
c a l ly 

t o . . .. 

[benefactive 
the  D  preposition  is  t y p i(cid:173)

the  I  preposition  is  by  if 

the  0  and  F 

" If  there  is  an  A  it  becomes  the  subject;  otherwise, 
if  there 
it  becomes  the  subject;  otherwise 
the  subject 

is  the  0 ." 

is  an  I, 

In  his  system  there  are  f i ve  deep  case  relations, 

The  set  of  prepositions,  or  Q., 

so  that  C  =  (  causal  actant,  thome,  locus,  source, 
and  goal}. 
course  just  the  prepositions  of  English.  Verbs  are 
c l a s s i f i ed  i n to  paradigms  according  to  the  case 
sequences  they  allow, 
structure  (  3 
consists  of  the  sequences 

).  For  example,  the  ergative  paradigm 

a  paradigm,  then,  is  a  case 

(for  the  active  voice): 

is  of 

(causal-actant.,  theme,  causal-actant  ) 
theme) 
(causal  actant., 
(causal  actant-,  theme) 
(theme) 

Simmons  gives  "break"  as  an  example  of  an  ergative 
verb.  Thus 

John  broke  the  window  with  a  hammer. 
John  broke  the  window 
The  hammer  broke  the  window 
The  window  broke 

are  a ll  well-formed  since  in  each  case  one  of  the  case 
sequences  is  matched  (where  "John"  is  the  causal-
actant.,  "window"  is  the  theme,  and  "hammer"  is  the 
causal-actant 

). 

Another  example 

is 
paradigm  where  the  theme 
to  the  CA1 
in  several  ways: 

if  it  corresponds 
[causal-actant.]".  Thus  " r u n"  may  be  used 

the  " r e f l e x i v e - d e l e t i on 
is  deleted 

John  ran  to  school 
John  ran  a  machine 
The  machine  ran 
The  brook  ran 

In  each  of  the  sentences  there  is  a  theme  -  John, 
machine,  or  brook.  The  paradigm  allows  the  deletion 
of  the  theme 
the  causal-actant. 
In  t h is  the  case  structure  is 

is  the  same  as 

if  it 

(causal-actant,  goal) 
(causal-actant, 
theme) 
(theme) 

Simmons  discusses  other  aspects  of  the  case 

structure  portion  of  semantic  networks  as  w e l l.  He 
points  out  that  a  "semantic  d e f i n i t i o n"  of  a  verb  can 
be  given  by  describing  the  properties  of  the  nominal 
concepts  serving  in  each  case  relationship  to  the 
verb. 
tions  can  be  adequately  handled  by  means  of  our  case 
conditions. 
If  so  then  a  parser  for  semantic  networks 
would  simply  check  the  descriptions  in  the  process  of 
determining  well-formedness. 

It  appears  to  be  the  case  that  these  descrip(cid:173)

367 

368 

For  example  the  noun  human  might  have  a  property 
"state-of-mind"  with  allowed  values  being  "happy", 
It  could  have  the  superset  "animal" 
"sad",  or  "blue". 
and  the  subset  "woman",  Naturally  any  noun  w i ll  have 
the  properties  of  i ts  supersets 
e x p l i c i t ly  l i s t e d.  A  verb  entry  has  the  form: 
[word] 

in  addition  to  those 

The  paradigm  for  a  verb  is  an  ordered  set  of  cases. 
In  a  given  simple  sentence  CHRONOS  II  w i ll 
allow  any  or  a ll  of  the  cases  to  be  missing.  Thus 
the  case  structure  for  a  verb  is  a  portion  of  the 
power  set  of  paradigm  subject  to  r e s t r i c t i o ns  on 
features. 

(currently) 

Case  determination  depends  on  syntactical  i n f o r(cid:173)

mation  (case  signals)  as  well  as  feature  checking 
(case  conditions).  Currently  in  CHRONOS  II  the  de(cid:173)
f i n i t i o ns  of  case  signals  and  case  conditions  are  com(cid:173)
bined  in  one  LISP  function  for  each  case.  Someone  who 
wishes  to  use  CHRONOS  II  for  a  specific  application 
must  specify  the 
modify  the 

l i st  of  cases,  define  each  case,  and 

lexicon  appropriately. 

Each  possible  case  function  is  called  for  every 
preposition  term  (noun  phrase,  prepositional  phrase, 
or  adverb)  and  returns  a  number  giving  the  likelihood 
that  the  given  preposition  term  serves  that  case  re(cid:173)
lationship  to  the  main verb  of  the  sentence.  The 
case  whose  function  returns  the  highest  value  is  tem(cid:173)
p o r a r i ly  assigned  to  the  preposition  term.  A  f a i l u r e, 
consisting  of  values  of  D  for  a ll  the  cases, 
forces  a 
backup  to  the  previous  term  and  a  reassignment  of  the 
case  for  that  term. 

The  case  parser21 

is  essentially  independent  of 

the  p a r t i c u l ar  set  of  cases  being  used. 
I ts  speed 
and  generality  are  of  course  d i r e c t ly  dependent  on 
the  accuracy  of  the  likelihood  numbers  returned  by  the 
case  functions.  There  are  various  features  which 
extend  the  simple  h e u r i s t ic  value  assignments,  making 
the  case  functions  easier  to  w r i te  or  the  parsing 
more  e f f i c i e n t.  For  example,  a  variable  number  of 
"pre-emptive  levels"  can  be  created.  Once  a  case 
function  returns  a  value  at  a  new  and  higher  pre-
emptive  level  then  only  values  at  that 
(or 
higher)  are  considered  v a l i d.  This 
f ul  when  one  knows  that  a  p a r t i c u l ar  preposition,  say, 
signals  one  and  only  one  case.  Then  that  case  func(cid:173)
t i on  returns  a  value  which  pre-empts  any  previous 
use  of  that  case. 

is  especially  use(cid:173)

level 

CHRONOS  II  has  been  used  p r i m a r i ly  with  two  case 

In  it  c  =  {agentive,  objective,  dative, 

systems.  One  is  for  the  analysis  of  medical  records, 
i . e.  nurse's  notes,  and  is  the  more  general  of  the 
two. 
loca(cid:173)
t i v e,  instrumental,  temporal,  frequency,  d e r i v a t i v e, 
manner)  where  agentive,  objective,  dative, 
i n s t r u(cid:173)
mental,  and  locative  are  as  in  F i l l m o r e1 0,  temporal 
points  to  the  duration  of  an  event, 
indicated  by  adverbs  such  as  " r a r e l y"  and  " o f t e n ", 
derivative  is  indicated  by  words  such  as  "increasing", 
and  manner  includes  most  other  adverbs.  The  effect 
of  such  a  case  system  can  best  be  seen  by  comparison 
with  a  t r a d i t i o n al 
indirect 
object}  system. 

For  example,  the  parse  of  "John 

C  =  {subject,  object, 

frequency  is 

369 

It  is  an  essential  p r i n c i p le  of 

Note  that  in  the  second  parse,  "pressure"  has  become 
the  predicate. 
CHRONOS  II  that  the  predicate  of  a  simple  sentence  is 
the 
logical  predicate  ( r e l a t i ve  to  the  purpose  of  d i s(cid:173)
cussion)  rather  than  the  syntactical  predicate  (usually 
the  verb). 

5.  Discussion 

This  report  presents  a  notational  system  (CL) 

for  case  structure  systems  and  examines  a  few  existing 
systems  in  terms  of  the  notation.  CL  is  a  f i r st  order 
system  which  appears  useful 
in  characterizing  case 
systems  and  w i ll  hopefully  lead  to  a  better  under(cid:173)
standing  of  natural 

language  storage  structures. 

Several  observations  about  case  structure 

it  be  female. 

For  example,  consider  the 

systems  follow  from  t h is  study,  observations  which  are 
actually  open  problems. 
sentence  "John  gave  b i r th  to  a  baby".  The  oddness  of 
t h is  sentence  can  be  handled  in  at  least  three  ways. 
F i r s t,  we  could  say  that  " to  give  b i r t h"  is  a  p r e d i(cid:173)
cate  which  imposes  the  case  condition  on  the  agent 
that 
In  that  case  the  sentence  is  not 
a  formula  of  CL.  CHRONOS  II  could  do  t h a t,  or  a l t e r(cid:173)
n a t i v e l y,  raise  i ts  eyebrows  by  accepting  the  sentence 
at  a  lower  pre-emptive  level  (see  section  4 ).  Second, 
we  could  say  that  " to  give"  is  a  predicate,  that  the 
sentence  is  well-formed,  but 
from  a  set  of  usually  accepted  facts  about  l i f e. 
Third,  we  could  say  that  " to  give"  is  the  predicate 
but  demand  that  the  sentence  be  treated  as  i l l - f o r m e d. 
The  last  approach  is  feasible  as  long  as  the  condi(cid:173)
tions  on  well-formedness  can  be  stated  as  predicates 
on  the  single  sentence  (such  as  features)  but  is 
probably  r i s ky  if  it  requires  examination  of  other 
formulas. 

i ts  negation 

is  provable 

An  i n t e r e s t i ng  problem,  proposed  in  section  2, 

concerns  the  i n t e r a c t i on  of  case  signals  and  case  con(cid:173)
d i t i o n s. 
rather  haphazard  way. 
examine  situations  where  p r i o r i t i es 
affect  e f f i c i e n c y. 

In  CHRONOS  II  these  functions  mesh  in  a 
It  should  be  i n t e r e s t i ng  to 

in  t h e ir  use 

Case  systems,  since  they  emphasize  a  logical 

s t r u c t u r e,  rather  than  a  purely  syntactic  one, 
lessen 
the  importance  of  the  syntactic  predicate  and  of  the 
sentence  as  a  u n i t.  Schank17  and  others  have  stressed 
the  need  to  examine  a  discourse  as  an  integrated 
whole  rather  as  a  c o l l e c t i on  of  isolated  sentences. 
It  seems  that 
is, 
the  more  relevant 
is  to  the  problem  solving  situa(cid:173)
t i on  at  hand, 
in  the  discourse  in  meaningful  ways. 

the  better  a  case  system  i s, 

is  to  connect  sentences 

the  easier 

that 

it 

it 

Since  many  case  systems  are  in  use,  a  natural 
question  arises,  "What  is  the  best  case  system?"  My 
experience  with  CHRONOS  II  suggests  t h a t,  at  t h is 
stage  in  the  development  of  i n t e l l i g e nt  programs,  one 
can  only  speak  of  the  goodness  of  a  case  system  r e(cid:173)
l a t i ve  to  a  problem  s i t u a t i o n.  The  f i n e ly  d i s t i n(cid:173)
guished  cases  which  are  a r i s i ng  in  the  medical  model 
version  of  CHRONOS 
II  would  probably  only  c l u t t er  the 
program  which  analyzes  nurse's  notes.  Conversely, 
c e r t a in  cases  which  one  would  need  in  discussing 
everyday  l i fe  would  be  unnecessary  in  a  medical  model. 
An  important  problem  then  is  to  decide  what  cases 
to  use  in  a  p a r t i c u l ar  application.  Even  more  i n t e r(cid:173)
esting  might  be  a  study  of  transformations  between 
various  case  representations.  Problems  of  summari(cid:173)
zation  and  analogical  reasoning  w i ll  probably  be 
more  t r a c t a b le  w i th  a  better  understanding  of  case 

370 

structure 

transformations. 

Ac knowledgements 

Many  people  have  contributed  to  t h is  work. 

Discussions  with  Robert  Simmons  f i r st  interested  me 
in  case  logics.  William  Fabens,  Richard  Orgass,  and 
Ann  Yasuhara  made  useful  suggestions  on  case  l o g i c, 
Neil  Singer,  Santosh  Chokhani,  Nanette  Yaskin,  and 
Mike  Trigoboff  a ll  worked  on  CHRONOS  II  and  con(cid:173)
t r i b u t ed  to  discussions  on  case  systems. 
I  also 
want  to  thank  the  referees  for  t h e ir  comments  and 
suggestions  which  I  have  incorporated. 

References 

1.  Bobrow,  Daniel. 

"Natural  language  input  for  a 
computer  problem  solving  system". 
In  Semantic 
Information  Processing  (Ed:  Marvin  Minsky)  MIT 
Press,  1968. 

2.  Bruce,  Bertram. 

"A  model  for  temporal  references 

and  i ts  application  in  a  question  answering 
program".  A r t i f i c i al 
Intelligence  3,  1972 
pp.  1-26. 

3.  Bruce,  Bertram,  and  Neil  Singer, 

"CHRONOS  I I: 
the  processing  of  incompletely  specified  data". 
Computer  Science  Department,  Rutgers-NIH  report 
CBM-TR-9,  1972. 

4.  Celce-Murcia,  M.  English  Comparatives.  Ph.D. 

Thesis,  UCLA,  1972. 

5.  Chomsky,  Noam.  Aspects  of  the  Theory  of  Syntax. 

MIT  Press,  1964. 

6.  Fillmore,  Charles. 

"The  case  f or  case". 

In 

Universals  in  Linguistic  Theory  (Ed;  Bach  and 
Harms),  Holt,  Rinehart,  and  Winston,  1968. 

7.  Green,  Cordell,  and  B.  Raphael. 

"Research  on 

i n t e l l i g e nt  question  answering  systems".  Proc. 
ACM  23rd  Nat.  Conf.,  1968. 

8.  Green,  B.F.,  A.K.  Wolf,  Carol  Chomsky,  &  Kenneth 

"Baseball:  An  Automatic  Question 
Laughery. 
Answerer". 
In  Computers  and  Thought 
(Ed: 
Feigenbaum  and  Feldman),  McGraw-Hill,  1963. 

9.  Kaplan,  R.M.  "Augmented  t r a n s i t i on  networks  as 

psychological  models  of  sentence  comprehension". 
A r t i f i c i al  Intelligence  3,  1972.  pp.  77-100. 

10.  Katz,  J . J.  The  Philosophy  of  Language.  1965. 

11.  Kulikowski,  C.  and  S.  Weiss. 

"Computer  based 
models  for  glaucoma".  Computer  Science  Depart(cid:173)
ment,  Rutgers-NIH  report  CBM-TR-3,  1971. 

12.  Lindsay,  Robert  K.  " I n f e r e n t i al  memory  as  the 
basis  of  machines  which  understand  language". 
In  Computers  and  Thought  (Ed:  Feigenbaum  and 
Feldman),  McGraw-Hill  1963. 

13.  Martin,  William  A.,  Rand  B.  Krumland,  and  Alex. 
Sunguroff.  "More  MAPL:  Specifications  and  basic 
structures".  Automatic  Programming  Group,  Project 
Mac,  MIT,  Internal  Memo  8,  1973. 

14.  Norman,  Donald  A.  and  David  E.  Ruraelhart. 

"Active  semantic  networks  as  a  model  of  human 
memory".  Third  International  Joint  Conf.  on 
A r t i f i c i al 

Intelligence,  1973 

15.  Q u i l l i a n,  Ross. 

"The  teachable  language  compre-

hender:  a  simulation  program  and  theory  of 
language".  Comm.  ACM  12,  1969,  pp.  459-476. 

16.  Sandewall,  Erik. 

"A  programming  tool  for  man(cid:173)
agement  of  a  predicate-calculus-oriented  data 
base".  Second  Int'l  .Joint..Conf\.  on  A r t i f i c i al 
Intelligence,  1971. 

17.  Schank,.  Roger. 

"Finding  the  conceptual  content 

and  intention  in  an  utterance  in  natural 
lang(cid:173)
uage  conversation".  Second  J n t 'l  Joint  Conf. 
on  A r t i f i c i al  I n t e l l i g e n c e,  1971. 

18.  Schwarcz,  R.M.,  J.F,  Burger,  6  R.F.  Simmons. 

"A  deductive  question  answerer  for  natural 
language  inference".  Comm.  ACM  13,  1970, 
pp.  167-163. 

19.  Shapiro,  Stuart. 

"A  net  structure  for  semantic 
information  storage,  deduction  and  r e t r i e v a l ". 
Second  I n t '1  Joint  Conf.  on  A r t i f i c i al 
I n t e l l i g e n c e,  1971. 

20.  Simmons,  R.F.  "Semantic  networks:  t h e ir  com(cid:173)

putation  and  use  for  understanding  English 
sentences".  Computer  Science  Department 
University  of  Texas  at  Austin-CAI  Lab 
report  NL-6,  1972. 

21  Trigoboff,  Mike.  "A  heuristic  case  structure 

parser".  Computer  Science  Department,  Rutgers-
NIH  report  CBM-TM-16,  1973. 

22.  Woods,  W.A.  "Transition  network  grammars  for 

natural  language  analysis".  Comm.  ACM  13, 
1970,  pp.  591-602. 

371 

