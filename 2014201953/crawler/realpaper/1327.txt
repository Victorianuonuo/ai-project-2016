Session  18  Automatic  Programming 

A  GLOBAL  VIEW  OF  AUTOMATIC  PROGRAMMING 

Robert  M-  Ba)zer 
Information  Sciences 

4676  Admiralty  Way 

USC 

Marina  del  Rey,  C a l i f o r n ia  9C291 

I n s t i t u te 

Abstract 

a 

This 

paper 

presents 

automatic 

framework 

programming 

the  knowledge 

the  method  and 

Is  communicated  to 

c h a r a c t e r i z i ng 
In  terms  of  how  a  task 
time 
system, 
system  acquires 
to 
t a s k,  and  the  c h a r a c t e r i s t i cs  of 
program  to  perform  t h at 
one  approach 
about 
language 
In 
knowledge  of 
Implement 
system. 

f or 
systems 
the 
at  which  the 
perform 
the 
the  r e s u l t i ng 
Jt 
describes 
In  which  both  tasks  and  knowledge 
natural 
t h at  domain.  A ll 
to 
the 

the  task  domain  are 
terms 

science 
I n t e r n a l i z ed 

the 
computer 
Is 

necessary 
Inside 

stated 
of 

t a s k. 

task 

the 

in 

Preface  and  Acknowledgement 

paper 
vIew  of 

This 
persona I 
Automatic  Programming. 
from 
the 
suggestions 
area  for  which  he 

a u t h o r 's 

from  numerous  colleagues 
indebted. 

Is  deeply 

dlscussions  w l th 
on 

the 
description 
view 

a u t h o r 's 
of 
r e s u l t ed 
and 
t h is 

represents 
a 
globaI 

This 

This  paper 

Is 
from 
s t r u c t u re 

a 
a 

taken 
to 

view, 
attempts 
c o n c e p t u a l i z a t i on 
interested 
which 
and  contains  supporting  evidence 
summarized  here. 

reader  should 

expressed 

describes 

issues 

consult 

the 

condensation 
larger  work 
f i e ld 

the 

of 
t h is 
[ 1]  which 
the 
on 
here. 
The 
this  work, 
In  greater  d e t a il 
the  views 

for 

I n t r o d u c t i on 

automatic 

The  goals  of 

are 
e f f e c t i ve 
deceptIve1y 
u t i l i z a t i on  of  computers. 
both 
s i m p l i c i ty  of  use  and  e f f i c i e nt  a p p l i c a t i on  of 
the  computing  resources. 

namely, 
This 

t he 
Implies 

programming 

simple; 

a 

system 

computing 

programming 

is 
to 
t h at 

u t i l i z i ng 
in 

automatic 
Thus, 
of 
a p p l i c a t i on 
problem 
e f f e c t i v e ly 
of 
another  computing  system 
a  task  s p e c i f i ed  by  the  user. 
is 
c e r t a i n ly 
programming, 
r e s t r i ct 
systems 
domain. 
debugging  systems, 

the 
the 
or 
the  performance  of 
t h is 
is  meant  by  automatic 
to 
computer 
programming 
systems, 
f a ll 

t h is  d e f i n i t i on 

the  automatic 

c o m p i l e r s, 

a p p l i c a b le 

operating 

Although 

e d i t o r s, 

included 

l i t t le 

set 
in 

e t c ., 

does 

what 

t e xt 

the 

A ll 

of 

Is 

This  research 
Research  P r o j e c ts  Agency 
DAHC15  72  C  0308,  ARPA  Order  No. 
Program  Code  No.  3D30  and  3P10. 

supported  by 

the  Advanced 
under  Contract  No. 
2 2 2 3 / 1, 

i n to 
t h is 
"automatic 
e a r ly  compiler  systems  during 

domain  and, 
programming 

In 

f a c t, 

term 
i t s e lf  was  a p p l i ed  to 

the 

the  1950s. 

to 

What 

r e s t r i ct 

is  needed, 

Is 
t h e r e f o re 
the 
d e f i n i t i on 
to  provide  a  set 

used  f or  measuring 

a p p r o p r i a t e ly 
automatic  programming,  or 
c r i t e r ia 
or  performance  of 
system. 
extremely  hard  to  a r r i ve  at  but  would 
the 
a p p l i c a b i l i ty  components: 

f o l l o w i ng  man, 

e i t h er 
of 
of 
the  a c c e p t a b i l i ty 
programming 
is 
contain 
system 

a  measure  of  system  merit 

automatic 

machine, 

Such 

and 

an 

The  e f f i c i e n cy  of 

program; 

the  r e s u l t i ng 

The 
resources 
t h at  program; 

amount 
expended 

of 
In 

computer 
a r r i v i ng  at 

The 

elapsed 

time 

used 

a r r i v i ng  at 

the  r e s u l t i ng  program; 

in 

The  amount  of 

e f f o rt 

the  user 

in  s p e c i f y i ng  the 

task; 

expended 

The 

and 
the  r e s u l t i ng  program; 

reliability 

ruggedness 

by 

of 

The  ease  w i th  which 

f u t u re 

m o d i f i c a t i o ns  can  be 

incorporated; 

and 

f i n a l l y. 

The 

tasks  which 
system. 

range  and 

of 
can  be  handled  by  the 

complexity 

The  Basic  Model 

automatic 

programming 

One  goal 
to 

Is 

any 

of 
allow 

its  users 

I ts  s o l u t i on 

s o l u t i o ns 
in 

f i e l d s,  some  can  best  be 
In  terms  of  a  d i f f e r e nt 

system 
problems  and  any  advice  about 
terms 
natural 
problems  and 
n a t u r a l ly 
t h e ir 
solved 
mathematics.  O c c a s i o n a l l y, 
is 
s o l u t l on 
s t r u c t u r es 
d e s c r i p t i o n s, 
problem 
long 
r e p e r t o i re 
a r t i f i c i a l ly 
to 
s o l u t i o n. 

to  s t a te  t h e ir 
In 
to  the  problem.  Although  most 
t h e ir 
can  be  most 
the  terrnms  n a t i ve  to 
described 
s t a t ed  and/or 
f i e l d,  such  as 
f i e ld 
I ts 
data 
Such 
the 
are  e n t i r e ly  s a t i s f a c t o ry  as 
conceptual 
not 
are 
system 
I ts 

of 
t h e ir  manipulations. 
terms  other 
are 
the 

science, 
expressed 
and 
in 
domain, 

and  the  problem  or 
in 

they 
of 
Introduced 

user 
to  enable 
or 

computer 
is 

than  those  of 

the 
process 

comprehend 

problem 

the 
and 

terms 

other 

t h is 

part 

the 

as 

of 

494 

in 

of 

have 

terms 

domain 

problems 

to  describe 

the  problem 

found  useful 

c o n d i t i o n a l s, 

and  s o l u t i o ns 

terms  of  other 

We  t h e r e f o re  t r e at  both  the  native 

the  s o l u t i on  of  every  computable 
be  represented  e n t i r e ly 

of  a  H e ld  and  the 
users 
conceptualize 
f i e ld  as 
f i e l d.  With 
t h at 
can 
terms  as  a  sequence,  which  may 
actions 
and 
which  a f f e ct 
of 
between 
e i t h er  as  part 
separate 
the  model 
a p p l i ed 
completes  the  model  and  enables 
actions 
handled. 
Is 
system  models  at  each  step  what  would  occur 
the  domain. 

terms 
f i e l ds  which 
and 
t h at 
that 
t h is  d e f i n i t i o n,  we  conjecture 
problem 
In  problem  domain 
loops 
involve 
in 
t h at  domain 
r e l a t i o n s h i ps 
Included 
a 
the  h i s t o ry  of 
actions 
l o g i c a l ly 
or 
Information  to  be 
s o l u t i on 
the  domain.  The 
In 

the  e n t i t i es  of 
the 
the 
model). 

the  domain. 
data 
base 
the  model. 

In  a  strong  sense,  such  a 

of 
part  of 
( I . e ., 
the 

i n v o l v i ng  h i s t o r i c al 

s i m u l a t i on  of 

sequence  of 

of 
data 

questions 

d i r e ct 

base 

This 

as 

or 

to 

a 

a 

Is 

of 

the 

The 

The 

p a rt 

external 
by 

specific 
is 

domaln 
for  such  users 

hence  described, 
This  enables  us 

two  p a r t s,  an  external 
part 
the 
terms. 
no 

important 
conjecture 
Is 
be  s o l v e d,  and 
terms. 
domain 
into 
s o l u t i on 
I n t e r n al 
p a r t. 
problem  s p e c i f i c a t i on  given 
completely 
requirements 
comprehensive 
rather 
the  relevant 
the  problem  domain  and 
domain. 
rough  awar eness 
c a p a b i l i ty 
provide  a d d i t i o n al  help  where 
form 
recommendations 
act Ions, 
and/or 
w i ll  solve  part 
problem  r e l a t ed 

above 
t h at  any  computable  problem  can 
In  problem 
to  d i v i de  the 
and  an 
the 
Is 
In 
user 
The 
a 
but 
characterize 
r e l a t i o n s h i ps  between  e n t i t i es  of 
that 
In  a d d i t i o n,  such  users  should  have  a 
s o l v i ng 
t h at  they  can 
the 
appropriate  macro-actions, 
use 
c e r t a in 
sequences  which 
the 
In 

about 
the 
Imperative 
of 

problem 
so 

to  completely 

or 
a ll 
terms. 

the 
system 

the  a b i l i ty 

computers, 

knowledge 

problem 

actions 

needed 

longer 

more 

the 

the 

In 

of 

of 

of 

of 

of 

in 

Is 

two 

t h is 

part 

given 

and/or 

l e v e l, 

only 
Is 

The 
a 

Second, 

s o l u t i on 

e f f i c i e nt 

s o l u t i o ns 

computing 

r e c o g n i t i on 

I n t e r n al  part 

In  problem  r e l a t ed 

r e l a t i on  ships  are 

t h is  has  not  already  been  provided  by 

f i r st  concerned  with 
finding 
terms. 
the 
if 
Is  concerned  with 
user. 
the 
f i n d i ng 
resources. 
Such 
a v a i l a b le 
levels  beyond  what 
o p t i m i z a t i o ns  occur  at 
normally  considered  o p t i m i z a t l o n.  F i r s t, 
is 
the  problem 
that  c e r t a in 
at 
irrelevant 
e n t i t i es 
from  the  model.  Second, 
enables  t h e ir  removal 
the  modelled 
the  s t a te  of 
since 
part  of 
r e q u i r e d,  and  only  at  certain  points 
domain 
than 
s o l u t I on 
in 
rather 
step, 
s i m u l a t i ng  the  model  completely  at  each 
a l t e r n a t i ve 
the 
less  maintenance 
representations  which  require 
the  required 
and  which  e i t h er  d i r e c t ly  mirror 
parts 
such 
part  of  the  domain  s t a te  or  allow 
Such 
i n f e r r e d. 
to 
direct 
representations  may  also 
these 
s o l u t i on 
d i s t i n c t i on 
o p t i m i z a t i o ns  which  form  the  main 
between 
an 
par t  of 
generation 
Automatic  Programming  system  and  current  s t a te 
of 

enable  more 
Is 

the  a rt  c o m p i l e r s. 

computationally 

problem. 

process, 

system 

employ 

code 

can 

t he 

the 

the 

be 

of 

It 

Thus, 
Programming 

our 
system 

d e f i n i t i on  of 

an  Automatic 
Is  one  which  accepts  a 

obtains 

problem  in  terms  of  a  model 
which 
terms  of 
computer 
the  form  of  a  program. 

domain, 
the  problem  in 
t h is  model,  and  produces  an  e f f i c i e nt 
in 

of 
s o l u t i on  for 

implementation 

t h is  s o l u t i on 

the 

of 

a 

System  Reguirements 

f a c i l i t i es 

There  are  seven 
or 
c r i t e r ia 
i n t e r a c t i ve 
s p e c i f i c a t i on 

to  be  provided 
s a t i s f i ed  by  f u t u re 
is 
Interaction  between 
that 
incrementally 
in 
that  a r i se 
such  s p e c i f i c a t i on  can  be  handled  as 

by, 
Automatic  Programming  Systems. 
an 
the  system  and  the  user 
the 
can  be  given 
and  any  errors  or  discrepancies 
or 
they  occur. 

to  be 
system 
Is 

required 

f i r st 

from 

The 

so 

t h is 

should  be 

Along  with 

very  f o r g i v i n g. 

Interactiveness 

the 
It  should 
system 
the  way  and  time  at 
allow  great 
It  should 
s p e c i f i e d. 
which 
also  be  f o r g i v i ng  by  allowing 
the 
user 
to 
change  or  r e t r a ct  previous  communications  w i th 
the  system. 

f l e x i b i l i ty 
is 

information 

in 

it. 

i s 

As 

t h is 

task 

Most 

There 

to  do 

from  an 

such  a 

than  how 

The  second 

the  amount 

I n i t i al  s t a te 

c r i t e r ia 
used 

transformation 

t r a n s f o r m a t i o n. 

statement  of  WHAT 

to  be  performed. 

problem 
to  achieve 

to  the  system's  c a p a b i l i ty  of 
I n to  actions  and 

of 
is 
non-proceduralness 
In  the  s p e c i f i c a t i on 
of  the 
f ar  as 
possible 
the  system  should  be  t o ld  what  to  do 
rather 
a 
continuum  between 
the  statement  of  a  problem 
as 
the 
to 
a 
goal  s t a t e,  and  the  s p e c i f i c a t i on  of  how  to 
perform 
of 
computer 
languge  development  can  be  viewed  as 
a  movement  from  s p e c i f y i ng  HOW  to  do  something 
towards  a 
is  d e s i r e d.  The 
level  of  non-proceduralness  achi  evable  w l t h in 
is  d i r e c t ly 
an  Automatic  Programming  Sytem 
r e l a t ed 
t u r n i ng 
Is  dependent  upon 
goals 
to  acleve  c e r t a in  r e s u l ts 
f ts  knowledge  of  how 
The  a b i l i ty  of  the 
in 
the 
system 
problem 
the  main  d i s t i n c t i on  between 
domain  Is  used  as 
and 
non-procedural 
languages. 
language 
Thus, 
problems  must 
that 
appropriate 
and 
can 
i n t e r r e l a t i o n s h i ps  of 
that 
domain, 
one  t h at  users  are  f a m i l i ar  w i th 
for 
and 
problems  w i t h in  t h at  domain.  Only  w i th  such  a 
language  can  the  system  know 
to  achieve 
than  being  d i r e c t ly 
the  desired  r e s u l ts  rather 
Some 
t o ld  how  to  produce  the  desired  r e s u l t. 
can, 
actions 
In 
terms  of  bow 
than  by 
procedural 
the 
d e s c r i p t i o ns  are  q u i te  acceptable  as 
long  as 
in  problem  domain 
they 
terms 
computer 
terms. 

are  s p e c i f i ed  e n t i r e ly 
rather 

the 
the  e n t i t l es  w i t h in 

to  accomplish  them  rather 

procedural 
be  stated  in  a 

best  be  described 

I . e ., 
s t r u c t u re 

implementatlon 

t h at  domain, 

describing 

discussing 

r e s u l t i ng 

however, 

domain. 

express 

r e s u l ts 

s t a t e. 

tasks 

Such 

than 

how 

and 

and 

one 

the 

for 

in 

to 

In 

problem 

a d d i t i on 

the  system  to 

the  amount  of 

o r i e n t ed 
Information  t h at 
s p e c i f i c a t i o n s, 
must  be  s p e c i f i ed  f or 
c o r r e c t ly 
process  the  problem  must  be  reduced.  This  can 
the 
best  be  done  by 
f i ll 
s p e c i f i c a t i on 
Is 
them  i n.  As  with  non-proceduralness 
is 
a 
level 
desi red 
the 
to  e n t i t i es  not 
s p e c i f i c a t i on 

but 
which 
references 

removing  d e t a i ls 

from 
to 
there 
t h at 

here, 
one 
a ll 

and  a l l o w i ng 

the  system 

continuum 

omits 

from 

the 

is 

495 

not 

necessary  f or 

contained  w i t h in  the  problem  domain  (and  which 
are 
t r a n s f e r r i ng  knowledge 
between  users  of 
S p e c i f i c a l l y, 
f i e l d ). 
to  the  data  s t r u c t u r es 
a r t i f i c i al 
of 
r i n g s, 
t h at 
a r r a y s, 
l i k e ), 
have  been  Invented  as  a  means 
s p e c i f y i ng 
"how" 
be 
avoided. 

the 
references 
science 

( e . g . , l i s t s, 
and 

symbol 
rather 

to  do  must 

computer 

t a b l e s, 

"what" 

the 
of 

than 

Next,  a  mechanism 

o p e r a t i ng 

of  s p e c i f i c a t i o ns 

m o d i f i c a t i on 
p r e v i o u s ly  entered  e i t h er  because 
work,  or  because  the  environment 
are 
changed, 
df f f e r e nt 
s p e c i f i c a t i o ns  should  be 
changes 
w i t h in  the 
I t s e l f. 

Is 
given 
r e s u l t s, 
of 

deslred 
language 

has 
behavior 

the 

in 

Is 

required 

f or 

they 

the 
t h at  have  been 
d o n 't 
In  which  they 
because 
Such 
of 
e n t i r e ly 
domain 

In 
and, 

terms 

or 

problem 

d e s i r e d. 

Is 

or 

by 

for 

t h at 
This 

between 

I n s u r i ng 

the  user, 

s p e c i f i e d, 

the  domain, 

of 
Whatever 

c r i t i c al 
augmenting 

Once  a  problem  has  been 

needed 
Is  the  one  d e s i r e d. 

a 
the 
mechanism 
Is 
system  produced 
the  system  w i ll  be 
since 
e s p e c i a l ly 
the 
s p e c i f i c a t i o n s. 
great i y 
the  desired  system  and 
Discrepancies 
Inadequate 
the  one  produced  can  a r i se  from  an 
knowledge  of  the  system  about 
from 
a 
from 
a  mis-statement 
t h at  was 
m i s i n t e r p r e t a t i on 
Is 
s p e c i f i e d. 
the  produced 
Important 
In 
system 
I t s e l f,  so 
the 
behavior 
t h at 
against 
In  a d d i t i o n, 
the  system  should  be  able 
t e st 
Input  data  so  that  a  wide  range  of  behavior  of 
by 
the  task  s p e c i f i ed 
the 
the  user 
user. 
a d d i t i o n a l ly  requires  c a p a b i l i t i es 
locate 
the  discrepancy,  and 
and 
t h e n, 
o b t a in 
desired 
r e s u l t. 

language  of  the  problem  domain 
he 
expected 

I s o l a te  the  source  of 
to 

check 
behavior  produced. 

observed 
Is  found, 
to 

can  be 
discrepancy 

something 
the 

In  his  own  terms. 

the  user  can  see 

In  operation 

to  generate 

to  modify 

can 
the 

cause. 

I . e ., 

t h at 

the 

the 

It 

If 

a 

it 

a 

to 

on 

two 

has 

r e st 

task 

kinds 

about 

F i r s t, 

to  be 

c o r r e ct 

program 

a 
It 
w i ll 

knowledge 

mechanism 

needed 
one. 

Is 
I n to  an  e f f i c i e nt 

Information  about  e f f i c i e nt  ways 

been 
After 
f or 
produced, 
Such 
transforming 
of 
e f f i c i e n cy 
the 
i n f o r m a t l o n. 
domain  which  enables  a l t e r n a t i ve  ways 
problem 
evaluated. 
of  performing  the  same 
to 
Secondly, 
t o t al  cost  can  be 
u t i l i ze  computers  so  t h at  a 
d i f f e r e nt  ways  of 
assigned 
each 
the 
implied, 
s o l v i ng  the  problem 
t h at  Automatic 
but  not  s t a t ed 
automate 
j u st 
Programming 
programming. 
provide 
f a c i l i t i es 
which  help  the  user  move  from  an  understanding 
to  be  accomplished  to  a  f i n i s h ed 
of 
running  system  which  performs  t h at 
An 
Is  a  system  which 
Automatic  Programming  system 
problem 
In  a ll 
aids 
d e f i n i t i on 
and 
completed 
running  programs. 

of 
In  domain  terms. 

In  the  above, 
don"t 

systems 
They 

the 
design 

steps 
to 

the  user 

t a s k. 

f i n al 

from 

also 

task 

Is 

a 

To  meet  a ll 

the  above  c r i t e r ia 

the  problem  domain. 

automatic 
programming  systems  r e q u i re  d e t a i l ed  Knowledge 
about 
f or 
system's 
t h is 
a p p l i c a b i l i ty  to  other  areas,  and 
one 
range  of 
measure  of 
the 
can  adequately 
problem 

The  requirement 

domains  which 

, 
hence, 

knowledge 

Is 
they 

systems 

such 

mits 

the 

li 

496 

and 

t h e ir  method 

handle 
knowledge. 
The  Four  Phases:  An  Overvlew 

of 

o b t a i n i ng  t h is 

it 

of 

the 

task 

process 

of 
rather 

begins  w i th 

problem 
than 

s o l v i ng 
problem 

in 
into  one. 

Automatic  Programming 

the  attempt  by  a  computer  system 
understanding 

the 
to  problem 
a p p l i c a t i on 
s o l u t i o n s; 
statements 
to 
I . e .,  w i th 
o b t a in  an 
being 
s p e c i f i e d.  Once  the  task  has  been  understood. 
If 
is  not 
be 
the  t r a d i t i o n al 
transformed 
area  of 
and  human 
program 
the 
the  one  desired  by 
r e s u l t i ng  process  model 
the 
and 
Is 
the 
be  modified 
u s e r 's  problem. 
and 
steps  and 
I n to  an 
r e v e r i f i e d. 
then  be  made 
This 
e f f i c i e n t ly 
involves 
program. 
the  automation  of 
knowledge  of 
computer  science. 

It  must  be  v e r i f i ed  t h at 

t h at 
It 
If  n o t, 
by 

It  must 
the  above 

It  must 
running 

I n t e l l i g e n ce 

adequate  f or 

transformed 

It  must 

Artificial 

design. 

form. 

This 

user 

hoc 

the 

ad 

Is 

Is 

by 

task 

to  be 
the 

performed 
system, 

the  problem 
a 
(2) 

A  complete  Automatic  Programming 
c o n s i s ts 

system 
of 
four  major  phases-  Problem 
thus 
Model 
A c q u l s i t i o n,  Process  Transformation, 
V e r i f i c a t i o n, 
and  Automatic  Coding.  Problem 
A c q u i s i t i on  Is  the  process  by  which  the  system 
obtains  (1)  a  d e s c r i p t i on  of 
to  be 
form 
solved  or 
the 
processable 
problem. 
knowledge  needed  to  solve 
The 
r e s u lt 
formed  problem 
and  knowledge  base  which  can  be  manipulated  by 
the 
level 
the 
process 
Is  used  to 
second 
one 
v e r i fy 
desired 
t h is  process 
it 
and 
t h at 
the  problem 
s o l u t i o n. 
The  f o u r th  phase,  Automatic  Coding, 
the 
f i l ls 
In 
process,  and  produces 
to  solve 
the  problem. 

system  and  transformed  I n to  a  high 
during 

the  necessary  d e t a i l s,  optimizes 

f or  s o l v i ng 
phase. 

the 
Is  a  well 

the  actual  code 

t h i rd  phase 

t h is  phase 

adequate 

problem 

the 
for 

In 
and 

that 

The 

the 

of 

is 

is 

The  Automatic  Programming  Model 

of 

One  of  the  most  s t r i k i ng  and  deep 

features 
presented  here 
between  a  high 
a  problem  which  omits 
are 
of 
implementation  of 
e f f t c l e nt 

rooted 
the  Automatic  Programming  model 
Is 
creates 
level  external  s p e c i f i c a t i on  of 
s t r u c t u r es  which 
internal 
In  an 

the  domain  and 
t h at 

the 
specificaton 

I n t e r f a ce 

r e p r e s e n t a t i o n. 

data 

part 

the 

not 

It 

of 

This  choice 
large 

predicated 
Through 
w l t h ln 
Important  gains  are  expected. 

t h is  choice 
the  Automatic  Programming  model 

I n t e r f a ce 

has 
the  e n t i re  model. 
I n t e r f a ce 
basic 
four 

basic 
of 
the 

a 
parts 
as 

F i r s t, 
t h at 

c o n j e c t u re 
states 
for 
s t a t i ng  and  s o l v i ng  domain  dependent  problems. 

complete  mode] 
Is 

a  d i v i s i on 

the 
such 

f e a s i b le 

Second, 

since 
and 

r e p r e s e n t a t t on 
consistency  occupy  such 
c u r r e nt 
spect 
should  be  d r a s t i c a l ly  reduced  over 
r e t a in 

the 
choice  of  a 
the  mat ntenance 

data 
is 
large  p o r t i on  of 
the  s i ze  and  complexity  of 
representations 
those  which 

f i c a t i o ns  without  such 

these  r e p r e s e n t a t i o n s. 

programs, 

of 

a 

T h i r d,  since 

so  much  d e t a il 

from 

removed 
s p e c i f i c a t i on 
for.  the  system  to  understand  what 
r a t h er 
what 

is  going  on. 

g e t t i ng 

than 

l o st 

the 

has  been 
Is  easier 
task 
Is 
In  the  d e t a i ls  of 

It 
the 

so 

the 

probIem 

not 
choice 

Is  now  free 

t h at  w i ll 
hand. 

t h at 
the  system 

F i n a l l y,  since  the  problem  has 
p a r t i c u l ar 

been 
o v e r s p e c i f i ed  w i th  a 
of 
r e p r e s e n t a t i on 
was 
e x p r e s s i b l e, 
to  choose 
a  r e p r e s e n t a t i on 
solve 
the  problem  at 
system  has  been 
The 
given 
f l e x i b i l i ty 
Increased 
in 
I ts  choice 
and 
may  well  outperform  humans 
In  c o r r e c t ly  making 
r e p r e s e n t a t i on  choices;  not  because  the  system 
the  user,  but  because 
Is  more 
and 
it  can  cycle  through  more 
b r i ng 
a 
In 
such  o p t i m i z a t i o ns 
Is  w i l l i ng  or 
able 

p o s s i b i l i t i es 
level  of  e f f o rt 

than  any  user 

e f f i c i e n t ly 

I n t e l l i g e nt 

In  such 

issues. 

greater 

Invest 

than 

bear 

to 

to 

Problem  A c q u i s i t l on 

The 

t h at 

f i nd 

Thus, 

phase 

Problem 

A c q u i s i t i on 

to 
a 
operations 

the  Problem  A c q u i s i t i on  phase 

I s 
concerned  w i th  o b t a i n i ng  an  understanding  of 
the  users  problem  and  the  domain  In  which 
It 
the  Process  Transformation 
e x i s ts 
so 
sequence  of 
phase 
can  attempt 
or 
transformations 
in  that  domain 
the  s o l u t i on  required  by  the 
which  will  o b t a in 
user. 
is 
concerned  w i th  b u i l d i ng  a  model  of 
users 
i nteractions 
domain 
between  the  e n t i t i es  of 
the 
the  allowed 
e f f e ct 
transformations 
applicable 
our 
w i t h in 
primary 
It 
through 
c o n t e n t i on  that  only 
development 
the  user's  domain  can  the 
of 
such  a  model  of 
any  degree 
Automatic  Programming  system  have 
of 
Is 
a p p l i c a b l e. 

the 
domain  and 
by 

represents 
t h at 
e n t i t i es 

In  the  domains 

operations 

g e n e r a l i ty 

for  which 

domain. 

is 
the 

which 

those 

the 

the 

on 

or 

It 

a] 1 

t h at 

Currently, 

such  models 

such  models 

of 
into  a  system. 

have  been  coded 
here 
to  the  system  by 

user 
Is 
It 
domains 
be 
proposed 
I ts  users  and  that 
s p e c i f i ed 
acquire 
through  these  models  the 
problems 
the 
necessary 
Is 
w i t h in  these  domains  and 
The  two  main 
r e q u i r ed 
Issues, 
t h e n,  are  what  c o n s t i t u t es  an  adequate 
and  appropriate  model  and  how  Is  such  a  model 
s p e c i f i ed  or  communicated 

to  understand  what 

such  a  s o l u t i o n. 

to  the  system. 

can 
solve 

knowledge 

system 

can 

for 

to 

b a s i c a l ly 

There  are 

and 
strong 

two 
fregean. 
resemblence 

types 
of 
Analogical 
the 
a 
the  object  being  described,  such 
diagram 
geometry 

the 
In  his 

f l o or  plan  f or  a  room,  or 
used,  by  Gerlernter 

models,analogical 
models 
s t r u c t u re 
as  the 
model 
proving  program. 

bear 
of 

to 

l i n g u i s t ic 
expressions 
.between 
f u n c t i o n s. 

hand, 
are 
l,n  which 
r e l a t i on 
to 
those 

Fregean  systems,  on  the  other 
based, 

or 
are 

r e l a t i on 
built 

the 
f u n c t i o ns  and  arguments 

up  on 

Since  one 

of 

the 

basic 

Automatic  Programming  system 
It 
of  problem  domains 
capable 
the 
approach  has  been  chosen. 

t h at 
h a n d l i n g, 

of 

of 

is 
Is  w i l l i ng 

goals 
the 
the  g e n e r a l i ty 
and 
fregean  model 

a 

In 

to  as 

r e f e r r ed 

the  models 

the  adequacy 

fregean  model 

This  Is  what  was 

system. 
it 
of 

r e l a t i o ns  between 

transformations  on 

a  model 
that  model 

We  can  now  define 

A 
contains 
the 

the  adequacy  of 
the  use  of 

and 
for  an  Automatic 
appropriateness  of 
i s 
Programming 
complete  enough 
adequate 
If 
the 
d e s c r i p t i on 
in  the  problem  domain  t h at  a  sequence 
e n t i t l es 
t h is  model 
of  operations  or 
to  solve  the  problem  posed  by  the 
can  be  b u i lt 
the 
user. 
the  Basic  Model  Section. 
complete  model 
Is  dependent 
Thus, 
solve  the 
to 
upon 
that 
problem.  O p e r a t i o n a l l, 
is  capable  of 
the  Automatic  Programming  system 
finding 
a p p l i c a b le 
of 
transformations  on  the  model  and  can  c a l c u l a te 
the  consequences  of 
a c t i o n s. 
is  a  measure 
The 
of 
well 
a v a i l a b le 
the  problem  at 
transformations 
I . e .,  an  adequate  model  can  be  made  more 
hand, 
non-primi t l ve 
approprlate 
transformations  made  up  of 
sequence  of 
are  s u i t a b le  b u i l d i ng 
p r i m i t i ve 
blocks  for 
The  model 
i n c l u d i ng 
rr,dy  also  be  made  more  appropriate  by 
the 
recommendatlons 
of 
a l t e r n a t i ve 
for  sequences  of  model 
transformations. 

ones,  which 
the  problem  being  posed. 

appropriateness  of 
how 

s u i t ed 
to  solving 

about 
s t r a t e g i es 

the  model 
the 

s u i t a b l l iy 

complete 

requires 

addi ng 

these 

each 

t h is 

are 

the 

set 

by 

of 

to 

It 

a 

can 
problem 

s i g n i f i c a n t ly 

Users 
well-known 
general  purpose  problem  solver 
the 
appropriate  f or 

by 
make 
the  problem  at  hand. 

s p e c i f i ed  model 

b u i l d i ng 

of 

to 

reduce 
the 
a  powerful 
t a i l o r I ng 
It  more 

the 

the  a rt 

to  u t i l i ze 

our  a b i l i ty 

The  s t a te  of 

appears 
problems 

understanding 
d e s c r i p t i on  of 
beyond 
thus  obtained,  and  hence, 
bottleneck 
Evidence  f or 
t h is 
work  of  Woods 
Winograd 
and 
of  these 
l i n g u i s t ic 
handling  a  wide 
w i t h in 

language 
In  natural 
the 
adequate 
for 
and  of  models 
and 
i n f o r m a t i on 
should  not  be  a 
in  an  Automatic  Programming  system. 
the 
from 
the  blocks  Descr i p t i on  Program, 
in  the  Mind  System.  Each 
a l t e r n a t i ve 
Is  capable  of 
forms 

from 
in  the  Moonrocks  Program, 

from  Martin  Kay 

i ts  competence. 

the  domain  of 

technology 

represents 

l i n g u i s t ic 

viewpoint 

and  each 

systems 

comes 

range 

an 

of 

in 

It 

is 

to 

to 

as 

t h is 

not, 

t h e n, 

Towards 

is  meant 

f u r t h er  query 

e n t i t l es 
them 

end 
and 
from 

e x t r a ct 
between 
It  can 

The  basic  v i e w p o i n t, 

process 
language  communication  w i th 
the  user's  natural 
the  understanding 
convey 
t h at 
to  the  Automatic  Programming  system  a  model  of 
the 
his  problem  domain. 
the 
system 
can 
r e l a t i o n s h i ps 
the 
communication. 
the  user 
to  the  r e l a t i o n s h i ps  between  e n t i t l es  which 
as 
y e t,  been  e x p l i c i t ly  s p e c i f i ed 
have 
but  which  have  been 
previous 
Such  inferences  by  the  system 
communication. 
about 
r e q u i re 
the 
a 
communication  but  of 
used 
s p e c i f i c a t i o n. 
for 
u n f o r t u n a t e l y, 
both 
these 
areas 
In 
communication  we  need  to  be  able  to  understand 
Is  ordered  for  p r e s e n t a t i o n, 
how 
how 
how  context  Is  established  and  u t i l i z e d, 
the 
the 
the  r e c i p i e nt  e f f e c ts 
communication,  and  how  these  c a p a b i l i t i es 
are 
In  modelling  we 
perceived  by 

s o p h i s t i c a t ed  understanding  not  only  of 

the 
domain 
s o p h i s t i c a t i on 

Incompleteness  of 

types  of  models 

c a p a b i l i t i es  of 

In 
l i m i t e d. 

i n f e r r ed  by 

Information 

the  model 

speaker. 

problem 

our 
Is 

q u i te 

the 

the 

the 

497 

need  to  have  a  space  of 
understanding  of 
how 
I n t e r a c t, 
means 
a 
incompleteness 
a  means 
f or 
operations 
on 
transforming 

and 
o b t a i n i ng 
the  model, 
the  models  w i th 

possible  models, 
the  p a r ts 

an 
of  a  model 
recognlzlng 
In  models, 
aIlowed 
and  the  means  f or 
these  o p e r a t i o n s. 

inconsistencies 
the 

f or 
a ll 

Process  Transformation 

representations 

Implemented. 

If 

the 

the 

t r u e, 

solver 

w i t h in 

s o l v i ng 

does 
of 

emphasls 

of 
problems 

The  above  c o n t e n t i o n. 

s h i f ts 
Transformation  Phase  from  that 
problem 
Independent  way  to  modifying 
t h at 
it 
not  maintain 
p o r t i o ns 
a b s t r a c ts 
e f f i d e nt 
r e q u i r e d. 
the 
a b i l i ty 
a b s t r a c t i o ns 
into 
s o l u t i o ns 
representations 
t e c h n o l o g i c al  d e f i c i e n c i es  w i th 
Automatic  Programming  system. 

g r e a t ly 
the  Process 
a 
general 
In  a  domain 
s o l u t i on 
so 
i r r e l e v a nt 
and  which 
into  a  more 
process ing 
Together  w i th  Problem  A c q u i s i t i o n, 
r e p r e s e n t a t i o n al 
complete  model 
u t i l i ze 
these 
mat n 
the 
an 

a 
any 
complete  model 
p o r t i o ns 
the 
f or 

the 
relevant 
r e p r e s e n t a t i on 

ones  which 
represent 

transform 

o b t a i n i ng 

to 
and 

f i nd 

Model  V e r i f i c a t i on 

only 

This 

Phase 

c o r r e ct 

Although  the  Automatic  Coding  phase  w i ll 
code.  Program  Testing 
produce 
the  Problem 
Is  because 
cannot  disappear. 
A c q u i s i ti  on 
and 
the 
Process 
Transformation  Phase  w i ll  undoubtedly  employ  a 
very  well 
number 
of 
problem 
I n c o r r e c t ly 
t h at 
statement 
transformations 
Because 
can  occur 
of 
the 
t h i s, 
the  system 
created 
is 

t h at 
the  one  t h at  he  d e s i r e d. 

and  may 
the 

u s e r 's  model. 

the  allowed 

user  must 

or 
In  the 

h e u r i s t i es 

I n t e r p r et 

v e r i fy 

e i t h er 

to 

f or 

the 

the 

t h is 

is  at 

probe 

system 

process 

of 
given 

The  technology 

hand. 
today's  methods  wherein  a 
and 
the  model 
the  system 

It 
t e st 
consists 
its 
case 
is 
t h at 
Is  used  to  v a l i d a te 
performance 
can 
it  c o n s t r u c t e d.  A d d i t i o n a l l y, 
by  generating  t e st  cases  of 
a id 
Is 
its  own  which 
led  to  e i t h er 
u n c e r t a in 
or 
the 
misunderstanding 
One  might  also  expect  t h at 
o r i g i n al  model. 
f or 
program  debugging  would 
remain  under 
very 
It 
there 
a 
Automatic 
Programming. 
u s e r 's  model  and  the 
d i s p a r i ty  between 
the 
t h is 
system's  model, 
d i s p a r i ty  must  be  o b t a i n e d. 

and  which  could  have 

s i m i l ar  reasons 

incompleteness 

disappear, 

of  which 

the 
then 

too  w i ll 

reason 

areas 

but 

f or 

in 

is 

It 

if 

Our  c o n t e n t i on 

t h is 

processing 

programming 

In 
In  f i n d i ng  a 
Irrelevancles 
necessary 
e f f i c i e n t ly 
t h at 
programming 
s o l u t i on 
f i n d i ng 
o p t i m i z a t i on 
The 
i r r e l e v a n c i es 
r e p r e s e n t a t i o n al 
r e q u i r ed  processing  of 
l o g i c al 
must  be  e f f i c i e n t ly 

concern, 

in 

Is 
Is  not 
s o l u t i on  which 
and  which 
t h at 
It 

so 
implemented. 

the  main 

drops 
out 
abstracts 
it 
can 
is 

t h at 
a c t i v i ty 
f i n d i ng  a  s o l u t i on  but 
the 
the 
be 
recogni zed 
In  most 
a 
t h at 
In 
is 
Is  not 
term. 
f i n d i ng 
and 
the 
these 
they 

have  been  found 

t h at  model.  Once 

model 

w i th 

on 

Is 

is 

r a t h e r. 

the 
a b s t r a c t i o ns  based 

complete 

Is  a  strong  c o n t e n t i o n,  but 
f e lt 

problems 

is  known  and  the  main  concern 
This 
a  more 
the 

In  the  normal  sense  of 

e f f i c i e nt 

one. 

It 

Automatic  Coding 

Is 

phase. 

concerned 

Automatic  Coding 

Include  a  choice  of  data 

the  process  d e s c r i p t i on  obtained 

w i th 
an  e f f l et ent  computer  implementati  on 
the 
This  d e s c r i p t i on  does  not 
r e p r e s e n t a t i o n s, 
the  major  processing  elements 
It 
t h is  phase 
any  domain  s p e c i f ic  knowledge 
d i s t r i b u t i on 
frequency 
r e p r e s e n t a t i on 
already  been 

f i n d i ng 
of 
proceeding 
yet 
but  does  specify 
and  sequences. 
need 
w i ll 
except 
input 
information. 
and  processing 
made  by  the  Process  Transformation  phase. 

intended  t h at 

l o g i c al 
have 

The  major 

decisions 

not 
f or 

from 

and 

Is 

in 

Of 

a lI 

the  one 

the  phases 

Programming  System, 
is 
of 
Automatic  Programming  System.  Without 
system  cannot  produce  programs, 
and 
though  It  may  be  useful 
Programming  System. 

Automatic 
the  Automatic  Coding  one 
any 
the 
it 
hence, 
Is  not  an  Automatic 

component 

essential 

the 

It 

new 

reorganize 

t h e ir  program 

I l l - d e f i n ed  set 

Most  people  are  not 

than 
they  appear 

representations 
f u n c t i on 

t r u ly 
sections  of 
Rather 
r e p r e s e n t a t i o n s, 

they 
increase  e f f i c i e n c y. 
t o t a l ly 
select  one  out  of  an 
possible 
It 
modify 
s i t u a t i o n. 
challenge 
a b i l i ty 
a l t e r n a t i ve  representations  but 
modify 
an 
appl[cableness 
r e p r e s e n t a t i o n s. 

c r e a t i ve  when 
to 
inventlng 
to 
such 
and 
c u r r e nt 
the  main 
the 
through  a  set  of 
and 
to  the  e x i s t i ng  s i t u a t i o n.  Such 
would 
the 
a  small  set  of  a l t e r n a t i ve 
of 

probably 
to  the  Automatic  Coding 

them 
a b i l i ty 

increase 

phase, 

to 
the 

and 
In 

v a s t ly 

adapt 

adapt 

cycle 

This 

only 

not 

to 

to 

of 

to 

is 

From  such  Automatic  Coding 

one 
to  see  both  a  set  of  h e u r i s t i cs 
data 

e v e n t u a l l y, 

s t u d i e s, 

for 

would 
and 
r e p r e s e n t a t i on  choices. 

expect 
a 

c a l c u l u s, 

Summary  and  Conclusions 

The  d e f i n i t i on  of 
s t a r t ed  w i th  a 
g o a l, 
e f f o rt  required  to  get  a 
computer. 
in  which 
Automatic 
described 

From 
the  external 
Programming 

automatic 
namely, 
task 

programming 
reducing  the 
on  a 
t h is  a  framework  was  adopted 
of 
be 

c h a r a c t e r i s t i cs 
Systems 
could 

terms  o f: 

running 

in 

1. 

The 

s t a t e d; 

terms 

in  which 

the 

problem 

is 

2.  The  method  and  time  at  which  the 

the 

knowledge 

of 

system 
the  problem 

acquires 
domain; 

3. 

The  c h a r a c t e r i s ti  c  of 

program. 

the 

r e s u l t i ng 

The  choices  we  made  are; 

1.  problem  statement 

In  natural 
the  problem  domain. 

terms  of 

language 

in 

Know I edge 

n t e r a c t i v e ly 
the 

i 
terms 
problem  domaln. 

of 

abou t 
in 
complete  model 

the 
natural 

domain 

language 

acquired 
in 
the 

of 

2. 

498 

1.  R. 

M. 

Balzer,  Automatic  Programming. 
Memorandum. 
I n s t i t u t e, 

Technical 

Sciences 

I n s t i t u te 
USC/Information 
September  1972. 

3.  Resulting  programs  which 

w i th 
c o n t r ol  s t r u c t u r e,  and  code. 

respect 

data 

to 

are 

optimized 
r e p r e s e n t a t i o n s, 

requires 

approach 

This 
In 
advances 
in 
techniques, 
such 
r e p r e s e n t a t i o n, 
Inference 
and  problem  s o l v i n g,  and 
programming  knowledge 
of 
r e p r e s e n t a t i o n s, 
o p t i m i z a t i on 
techniques. 

s i g n i f i c a nt 
I n t e l l i g e n ce 
knowledge 
l e a r n i n g, 
c o d i f i c a t i on 
In 
in  the  areas  of  data 
aIgorithm 
and 

systems, 
the 
s e l e c t i o n, 

A r t i f i c i al 
areas 

as 

is 

Is 

to 

set 

Increase 

r e s u l t i ng 

p a r t i c u l ar 

language  at 

predi cated  on 

systems  might 
of 

Other  choices  could 
the 

c e r t a i n ly  be  made, 
look  very 
and 
d i f f e r e n t.  One 
choices, 
suggested  by.  Al  P e r i l s,  represents  a  system 
based  on  a  completely  d i f f e r e nt  paradigm.  His 
system 
incremental  growth 
from  an  accepted  base,  namely,  FORTRAN. 
This 
the  d e c l a r a t i ve  parts  of 
Idea 
the 
the  procedural. 
In  t u rn  replaced  by 
The 
a  s e r i es  of  questions 
the 
system  which 
to  be  used. 
s p e c i fy 
Is 
how  a  defined  concept 
For 
might 
the  size  was 
generate 
dynamic  at  run 
or 
the  elements 
deletions  are  being  done,  whether 
are  homogeneous,  and  whether 
they  are  accessed 
s e q u e n t i a l l y. 
and  the 
programs  which  use 
these  concepts,  an  optimal 
r e p r e s e n t a t i on  can  be  chosen. 

d e c l a r a t i ve  parts  are 
from 

such  questions 

t i m e,  whether 

to  see  whether 

the  expense  of 

i n s e r t i o ns 

instance, 

concept 

queries 

" a r r a y* 

From 

the 

In  t h is  system,  higher 

levels  occur  when 
enough  example  systems  have  been  generated  and 
c o d i fy 
understood  by  humans 
t h is 
knowledge  and 
level  of 
semantics  and  questions. 

t h at  someone 
can 
Introduce  a  new 

There 

such  a 

be  u s e f u l, 
the 

Is  no  doubt 
and 

t h at 
incrementally 

that 
It 
f a c i l i t i es 

system 
has  the  appealing 
would 
system 
a t t r i b u te 
can  be 
expanded  from  a  widely 
d i s t r i b u t ed  and  a v a i l a b le  base.  A l s o,  such  a 
used  by  e x i s t i ng 
system 
programmers  who  could  gradually 
to  use 
the 
to 
use  FORTRAN. 

f a c i l i t i es  on 

t h e ir  a b i l i ty 

I n s t a n t ly 

top  of 

could 

learn 

new 

the 

be 

of 

On  the  other  hand. 
such  a 
technique 
far 
Is 
whether 
t h is 
goal  except 
In  the  s h o r t - t e r m. 

the  best  way 

it 
clear 
can  be  pushed, 
to  achieve 

not 

Is 

how 
and 
the 

would 

Automatic 

programming 

r e a l i z e d, 
e f f o rt  and  t r a i n i ng  required  by 
would 
c l o s e ly 
designers. 

s u b s t a n t i a l ly 

however 
the 
and 
subsystem  produced  to  more 
the 
t h e ir 

reduce 
I ts  users 

systems, 

r e f l e ct 

intents 

enable 

the 

of 

So  much 

t i m e,  money, 

expended, 
the 

In 

of 

software 

c u r r e n t ly  being 
amounts  forecasted 
c r e a t i on 
p o t e n t i al  b e n e f i ts 
systems 
required 
systems, 
o u t l i n ed 
should  be  e x t e n s i v e ly 

are  enormous. 
technologies 

u t i l i z i ng 

t h is 

paper 

In 

f or 
t h at 

and  e f f o rt 

is 
and  even  greater 
the 
f u t u r e, 
products, 
the 
programming 
the 
such 
approach 
o t h e r s, 

Therefore,  since 

f e a s i b l e, 

various 

the 

seem 
e i t h er 
or 

I n v e s t i g a t e d. 

from  automatic 

References 

499 

