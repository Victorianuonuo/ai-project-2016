Causal Theories of Action: 

A Computational Core 

Jerome Lang 

Fangzhen Lin 

Pierre  Marquis 

IRIT/UPS 

lang@irit.fr 

Hong  Kong  Univ  of  Sci  and  Tech  CRIL/Universite  d*  Artois 

Dept of Computer Science 

F-62307 Lens Cedex, France 
Clear Water Bay,  KLN,  Hong  Kong  marquis@cril.univ-artois.fr 

F-31062 Toulouse Cedex, France 

flin@cs.ust.hk 

Abstract 

We  propose  a  framework  for  simple  causal  theo(cid:173)
ries  of  action,  and  study  the  computational  com(cid:173)
plexity in  it of various reasoning tasks such as de(cid:173)
terminism,  progression and regression  under vari(cid:173)
ous  assumptions.  As  it  turned  out,  even  the  sim(cid:173)
plest  one  among  them,  one-step  temporal  projec(cid:173)
tion with complete initial state,  is intractable.  We 
also briefly consider an extension of the framework 
to allow truly indeterministic actions, and find that 
this extension does  not  increase the complexity of 
any of the tasks considered here. 

Introduction 

1 
While  there  are  abundance  of  formalisms  for  writing  ac(cid:173)
tion  theories  that  incorporate  explicit  causal  rules  not  only 
between  actions  and  fluents  but  also  between  fluents  (e.g. 
[Baral,  1995;  Lin,  1995;  Thielscher,  1995;  Gustafsson  and 
Doherty,  1996;  McCain  and  Turner,  1997; Zhang  and Foo, 
2001;  Kakas  et ah,  2001]),  and  there  are  some  implemen(cid:173)
tations  of  causal  action  theories  iLin,  2000;  McCain  and 
Turner,  1998; Kakas et al, 2001 ], there have been few formal 
studies  of  complexities  of  various  reasoning  tasks  in  these 
causal  action  theories.  In  this  paper,  we  investigate this  is(cid:173)
sue.  We first study various reasoning tasks such as comput(cid:173)
ing the precondition of an action, checking if an action theory 
specifies a deterministic action, performing temporal projec(cid:173)
tion, and computing regression in a very simple causal action 
framework that is primarily aimed at representing determin(cid:173)
istic  actions.  Basically,  an  action  theory for action a  in  this 
framework is just a finite set of action effect rules of the form 

is true, then action a causes / to be true 

and causal rules of the form 

causes / to be true 

where l's are literals. 

Surprisingly, even in this simple framework, one-step tem(cid:173)
poral  projection  problem  with  complete  initial  state  in  the 
following form:  given a set of literals that completely deter(cid:173)
mines the initial state,  and an  action a, determine if a given 
fluent will hold in the state resulted from doing 
in the initial 
state,  is intractable.  This compares with STRIPS and ADL, 

which are like this simple framework except that they do not 
allow causal  rules,  where  problems like  temporal projection 
and regression are easy. 

As  simple  as  this  framework may  be,  it nonetheless  cap(cid:173)
tures  the  computational  core  of causal  action  theories. 
In(cid:173)
deed, we show that if one extends it to allow arbitrary formu(cid:173)
las in both the right and left hand sides of the effect and causal 
rules:  (1) this extends the expressiveness of the language, but 
(2) it does not affect the complexities of any of the reasoning 
tasks considered here. 

The rest of this paper is organized as follows.  After some 
formal preliminaries (Section 2), we present a framework for 
simple  action  theories  in  Section  3.  Complexity  results  are 
presented in Section 4.  Before presenting some related work 
and concluding, we briefly show in Section 5 how our simple 
action  theories can  be  generalized,  without questioning the 
complexity results  (in  the  general case).  For space  reasons, 
proofs are only sketched or omitted. 
2  Formal preliminaries 
Let  PROPps  be  a  propositional  language  defined  induc(cid:173)
tively from a  finite  set  PS of propositional symbols (atoms), 
the  boolean  constants 
(false),  and  the con(cid:173)
Lps  is  the  set  of  all  literals 
nectives 
generated from PS.  For each formula 
denotes the 
set of atoms occurring in 

(true)  and 

Var 

from  PRO. 

(resp. 

two 

PROPps  every  atom  p 

PS  by  the  atom 

PROPpS' 
(resp. 

We  shall  also  consider 

PROPPSt  and  PROP 

isomorphic  copies  of 
Each  formula 
PROP)  is 
obtained  by  substituting  in  a  uniform  way  in  the  formula 
(resp. 
Propositions indexed by  t  are used to express condi(cid:173)
tions about current situation, and those indexed by 
about 
the situation resulted from doing action a in the current situ(cid:173)
ation.  In  the  following,  by  an  initial state formula  we  mean 
a formula from PROPps,, and by a successor state formula 
. Finally, we shall con(cid:173)
we mean a formula from 
sider the language 
and take advantage of it 
to characterize the eTTects or action a. 

A  truth assignment over PS is called  a complete state.  A 
truth  assignment over PSt  is  called  a  complete  initial state, 
is called a complete suc(cid:173)
while a truth assignment over 
cessor state. In order to avoid heavy notations, we shall iden(cid:173)
tify each complete state s with the conjunction of literals s is 
the unique model of it. 

REASONING ABOUT ACTIONS AND CHANGE 

1073 

As one can see,  the construction of  cf  

is simi­
lar to the  way a causal  theory is  transformed to classical  logic 
in  iLin,  1995] and to literal completions  IMcCain and Turner, 
1997; Lifschitz,  1997].  In fact, all these approaches yield log­
ically  equivalent  theories. 

4  Complexity  issues 
4.1  Executability and determinism 
Several  properties  are  of  interest  when  dealing  with  action 
theories.  First of all,  there is the question of whether an action 
is executable in  a given  initial  situation. 

Definition  3  (executability) 
let 
action 
and 
is  a  positive 
instance  of  EXECUTABILITY  (the  executability 
problem)  if  and  only  if  for  any  complete  state  s  that  satisfies 

be  an  action  theory for 

formula  from 

PROPps-

Let  

there  is  a  state  s'  such  that 

Whenever 

ITY,  α  is  said  to  be  executable  under  
executable  if and  only  if it  is  executable  under 

is  a  positive  instance  of  EXECUTABIL­
is  said  to  be fully 

Proposition  1 

In  the  general  case,  EXECUTABILITY  is 

/. 
2.  Under  the  restriction  where 

complete. 
is  a  complete  state,  EXE­

CUTABILITY 

is  HP-complete. 

Proof. 

1.  Membership is easy.  Hardness comes from the following poly­
to 

complete  problem 

nomial  reduction  from  the 
1 
1 

i 

2.  Comes directly from the fact that, when ip is complete, then α 

is executable under it iff the propositional theory 
is consistent. 

Another  important  property  is  determinism.  Intuitively,  an 
action  is  deterministic  if there  is  at  most  one  successor  state 
corresponding to  any  initial  state. 

3  Simple action theories 
We  shall  first  consider  simple  causal  action  theories. 
Definition  1  (simple action theory)  A  simple action theory 
for 
Causal) 
where 

is  an  ordered  pair 

action 

finite set of effect rules,  of the following 

form: 

where  l's  are  literals from  Lps,  and 
The  left  side  is  understood  to  he  a  tautology  when 
When 
tion  axiom  about  a.  Notice  that for  our  purpose  in 
paper,  we  assume  that 

the  effect  rule  is  really  an  action  precondi­
this 

is  the  only  action. 

I  can  also  he 

•  Causal 

form: 

is  a 

finite  set  of  causal  rules  of  the  following 

where  l's  are  literals from 
understood  to  he  α  tautology  when 

Lps.  Again, 

the  left  side  is 

Such  simple  action  theories  are  sufficient  to  encode  ac­
tions  with  conditional  effects.  The  ratification  problem  is 
addressed  through  causal  rules,  which  represent  static  laws 
and express how  fluents  are related.  While  primarily  targeted 
at representing deterministic actions, they can sometimes give 
rise  to  indeterministic  effects  when  there  arc  cyclic  causal 
rules such as 

Causal  theories of this  form are  special  cases of causal  the­
ories in  situation calculus  [Lin,  1995], domain descriptions in 
action languages [Giunchiglia and Lifschitz,  1998], and other 
more  general  formalisms  (e.g. 
iMcCain  and  Turner,  1997; 
Zhang  and  Foo,  20011).  While  these  formalisms  do  not  al­
ways  agree  on  their  semantics  in  the  general  case,  most  of 
them coincide on  this  special  class. 
Definition 2  (completion) 
(simple)  action 

is  the formula  defined  by 

The  completion 

theory 

of 

We  assume  that 

mentions  each  atom  of  PS  (otherwise 
some  atoms of PS  would  be  useless);  under this  assumption, 
the  size  of cl  

is  polynomial  in the  size  of 

Given  a  simple  action  theory  

is  said  to be   model  of 
Each  model  of  

a  truth  assignment  over 
if  and  only  if 
is  formed  by  the  union 
and  a  complete  suc­

it  satisfies 

of  a  complete  initial  state  

cessor  state 

1074 

REASONING ABOUT ACTIONS AND CHANGE 

Proof:  Membership  is  easy.  Hardness  comes  from  the  following 
polynomial reduction from DNF-VALIDITY.  Let 

a  new  atom  not  mentioned  i n is  valid  if and  only  if  M 
deterministic. 

is 

4.2  Progression 
There  are  two  forms  of the progression  problem,  also  referred 
to  as  (one-step)  temporal projection.  The  simpler  one,  in  the 
form  of  a  query  about  the  effects  of  an  action  given  some 
information about the current situation, can  be described as a 
triple 

,  is an action theory; 
is  a  formula  from  PROPps  representing  the  knowl­
edge  state  before  the  action  is  performed;  we  assume 
that  the  action  α  is executable  under 

• 
• 

• 

is  a  formula  from  PROPps  we  are  interested  in  the 
truth  value of which  after the action has been  performed. 
be  an  action  theory  and 
is  executable  un­

Let  
formula  from  PROPps  such 

that  (\ 

Definition  5  (progression) 

be 

formula  from 

Let 
instance  ^/PROGRESSION 

der 
positive 
if and  only 
state  by  action  α  of  any  complete  initial  state  Sf  satisfying 
equivalently: 

PROPps- 
(the  progression  problem) 
holds  in  any  possible  complete  successor 

is 

if 

According  to  this  definition,  progression  is  really  a  two-
step  process:  first  make  sure  that the  action is executable un­
der  the  given condition  about  the  initial  state,  and  then  com­
pute  the  changes  that  the  action  will  have  under  the  given 
initial condition.  We have shown that the  first  step  is 
-hard 
in  the  worst case.  The  following  proposition shows  the  com­
plexity  of the  second  step  under  various  assumptions. 

Proposition  3  We  have 
results 

("CONP-c"  stands  for  CONP-complete). 

identified  the  following  complexity 

Complexity 

of  PROCiRhSMON 

any  .  any  V' 

0  complete  state 

V'  literal 

€  complete stale  +  €  literal 

with  causal  rules 

no causal  rules 

CoNP-r 
CoNP-c 
CoNP-r 
CoNP-r 

CoNP-r 

coNP-c 

P 

P 

Proof: 

1.Membership 

to  CONP  comes  easily 

that 
positive instance  of PROGRESSION  if and  only 

from 

fact 

the 

2.  In the case where 

is a complete initial state and there are no 

When 

is a complete 
can be evaluated in linear time to a truth 

causal rules, 
where  for each 
initial state, each 
value.  This truth value  is given to the  corresponding 
Since 
diction, and  a complete successor state 
by the values given to the literals 
in linear time  whether 
instance is positive or not. 

this  will  not  lead  to a contra­
is characterized 
It remains  to check 
to determine whether the 

is executable  under 

3.  What remains to be done  is showing CONP-hardncss  in these 

is a literal; 

is a complete state and 

two eases: 
(a)  there are no eausal rules and 
(b) 
Case 1: no causal rules, 
The  proof  comes  from  the  following  polynomial  reduction 
from  DNF-VALIDITY.  Let 
be  any  DNF 
formula  and  let  M 
be  the  instance  of PROGRESSION  de­
fined by 

is  a  literal. 

is a literal; 

is executable  under 

Clearly 
positive  instance of PROGRESSION. 
Case 2: 
The  proof  comes  from  the  following  polynomial  reduction 

is  valid  iff A/(£)  is  a 

complete state, 

and 

and  new,  new'  are new atoms (not appearing  in 
.s  being  any  complete  state  satisfying 

and 
new.  It can be seen that a  is executable in (under) .s, and 
valid  iff  M 

is a positive instance of PROGRESSION. 

Our  results  about  the  complexity  of executability  and  pro­
gression, 
taken  together,  are  strongly  related  to  a  result 
in  [Turner,  2002]  (namely  Theorem  8(i))  which  says  that 
one-stage  conformant  planning  (without  concurrency) is 
is a  valid plan  in  this con­
complete.  Indeed, checking that  
text  amounts  to  checking  that  
is  executable  in  all  possible 
initial  states  and  that  its  progression  satisfies  the  goal.  By 
considering  executability  and  progression  separately,  we  see 
more  clearly  that  
hardness in  Turner's result  is  solely due 
to  the  hardness  of executability. 

PROPps,  compute 

A  second,  perhaps  a  more  difficult  way  of seeing  the  pro­
gression  problem,  is  the  following:  given  some  information 
about  the  current  situation,  compute  all  possible  successor 
states.  Formally,  this  looks  like  consequence  finding:  given 
a  formula 
the  strongest  successor 
state  formula 
that 
Model-theoretically,  this  corresponds  to  finding  all  complete 
such that there is a complete initial  state 
successor states 
that  satisfies 
is consistent. 
is  the  strongest  necessary 

for  which  
As  it  turns  out,  this  formula  
condition  of  

PROPps  such 

[Lin, 2001]: 

under 

REASONING ABOUT ACTIONS AND CHANGE 

1075 

Proposition 4 

from  PROPps, 

Definition 10  Given  an  action 
mula 
Reg  A 
alence) such that 
TIVE REGRESSION if and only if 

is the  formula 

and 

theory 

for(cid:173)
the  abductive  regression  formula 
(unique  up  to  logical  equiv(cid:173)
is  positive instance #/ ABDUC(cid:173)

( 

In  other words, 

is  the  weakest  sufficient  condition  of 

on  PROPPS, 

[Lin,  2001  J. 

Proposition 7 

4.3  Regression 
There  are  (at  least)  two  possible  definitions  for  regression, 
each  of  which  corresponds  to  a  given  need:  deductive  re(cid:173)
gression  (also  referred  to  as  temporal  explanation  or  weak 
preimage) and abductive regression (also referred to as strong 
preimage). 
Definition 7 (deductive regression) 
tion  theory  and  let 

be  an  ac(cid:173)
two  formulas  from  PROPPS-
is a positive instance of DEDUCTIVE REGRESSION 

Let 

be 

(the deductive regression problem) if and only if 

Similar to  progression formulas,  we  can define deductive 

regression formulas: 
Definition 8  (Regp 

formula 

Given an action theory 

and 
from  PROPps,  the  deductive  regression  for(cid:173)
(unique 
positive 

mula  Rcgo(T,i(j)  is  the 
up  to  logical equivalence)  such  that 
instance  fl/DEDUCTIVE  REGRESSION  ij and only  if 

from  PROPps 
is 

formula 

We  immediately get  that  for any  two  formulas 

from 
is a positive instance of DEDUCTIVE 
is  a  positive  in(cid:173)

PROPps, 
REGRESSION  if  and  only  if 
stance of PROGRESSION.  We also have: 
Proposition 5 

This  characterization  helps  understanding  deductive  re(cid:173)
gression:  it intuitively  means  that  we are  interested in  find(cid:173)
ing the set of states which could be possible states before the 
action,  knowing  that 
holds  after  the  action.  This  type  of 
regression  is  useful  for postdiction,  i.e.,  reasoning about the 
past state of the system. 

Since  deductive  regression  is  expressed  as  a  deduction 

REGRESSION 

problem, its complexity is easy to find out. 
Proposition 6  DEDUCTIVE 
complete. 
Definition 9 (abductive regression) 
tion  theory  and  let 

be  an  ac(cid:173)
two  formulas  from  PROPps-
is  positive instance o/ABDUCTIVE REGRESSION 
(the abductive regression problem) if and only if for any com(cid:173)
plete state 

is 

coNP-

implies s 

Let 

be 

w.r.t.  > satisfy 

Thus,  abductive  regression  amounts  to  finding  the  set  of 
all  complete  initial  states  st  for which  all  possible complete 
successor states 
This means that we 
are interested in finding the  set of states in  which performing 
the action leads to states necessarily  satisfying 
- provided 
that the action can be performed in them.  This type of regres(cid:173)
sion is  useful  for planning,  i.e.,  reasoning about the  minimal 
conditions  under  which  an  action  succeeds  in  reaching  the 
is a positive instance of ABDUCTIVE 
goals. Thus, 
REGRESSION  if and only  if 
implies the minimal conditions 
under which the action leads to the goal. 

This shows that the qualifications "deductive'1 and "abduc(cid:173)
tive" are only related to the way initial states can be inferred, 
and  not  to  the  confidence  we  have  in  them  to  be  satisfied. 
Indeed, as far as reasoning is concerned, deductive conclu(cid:173)
sions can be taken for sure since deduction is truth-preserving 
while abductive conclusions cannot be taken for sure in gen(cid:173)
eral  since abduction is only falsity-preserving.  Contrariwise 
obtained through 
to such a reasoning situation, initial states 
deductive regression are only possible ones given  and 
it 
in s leads to a suc(cid:173)
could be the case that performing action 
does not hold.  Contrastingly,  initial 
cessor state  in which 
states 
obtained  through abductive regression  lead  to  suc(cid:173)
cessor states where  necessarily holds. 

The following proposition makes precise the links between 

both forms of regression: 

Abductive  regression  is  computationally  more  expensive 

than deductive regression: 
Proposition 9  ABDUCTIVE REGRESSION is 
Proof.  Membership  is  easy. 
following  polynomial 

reduction 

Hardness  comes  from  the 
complete 

from 

the 

complete. 

The corresponding search problem is defined by: 

1076 

REASONING ABOUT ACTIONS AND CHANGE 

u

e

ts  built  over 

n
(where  new 

is  a  new 
and the following set of static causal 

•

t

he  f

l

atom, not appearing in 
rules: 

(and no effect rule); 

Q is a positive instance  of 
ABDUCTIVE REGRESSION. 

is a positive instance of 

5  Generalized action theories 
Here we want to extend causal and effect rules so as to allow 
for  any  possible  consequents,  including  disjunctions,  while 
keeping the framework simple enough. 
Definition 11  (generalized action theory) 
action 
< 

A  generalized 
is  an  ordered  pair 

Causal)  where 

for  action 

theory 

• 

is a finite set of effect rules of the form pre 
where  pre,  post  are  formulas from  PBDPps 
L P S. 
finite  set  of  causal  rules  of  the  form 
is  j 
right[L]  where  left  and  right  are formulas 

•  Causal 

left 
from  PROPps  and  L 

LPS. 

The  completion  consists  now  in  writing  down  that  every 
literal  /  persists  if  and  only  if  there  is  no  effect  (action  or 
causal)  whose  precondition  is  verified  and  on  which  /  de(cid:173)
pends.  More  generally,  rather than  writing  "there  is  no  ef(cid:173)
fect (action or causal) whose precondition is verified and on 
which / depends", we specify for each action rule the fluents 
L  that  are  influenced and for which  there should not be  any 
frame axiom if the action rule is enabled. 
Definition 12 (completion)  The completion cl  
eralized action  theory 

is the formula defined by 

of gen-

As for simple action theories, we assume that each symbol 
is  polynomial 

so that the size of < 

of PS  occurs  in 
in the size of 

In the previous definition, 

gathers the preconditions 
of  effect  rules  whose  postcondition  influences  positively  / 
the  completion  frame{l)  means 
(and  similarly  for 

that if /  is initially true and there is  no active action rule nor 
any causal rule whose consequent part influences negatively 
/, then / persists after a  is performed. 

By default, the set L associated with an action rule (resp. a 
causal  rule)  is  the  set  of  literals  Lit(post)  (resp.  Lit{right)) 
positively  mentioned  in  the  negation  normal  form  of post 
(resp.  of right)  - an  alternative,  more  refined  possibility  be(cid:173)
ing  the  set  of  literals  DepLit(post)  (resp.  DepLit(right)) 
on  which post  (resp.  right)  semantically depends  [Lang  and 
It  is  easy  to  show  that  the  completion  of 
Marquis,  1998]. 
as defined above (Definition 12) is equivalent to the com(cid:173)
pletion given at Definition 2  whenever  — 
is  simple (in  that 
case, the default choice for L  in each rule is considered, i.e., 
L  = 

whenever the consequent part of the rule is I). 

For  instance,  so  to  say  that  flipping  a coin  release  head, 

we simply write  holdingCoin 
one is holding the coin  initially,  then after the action of flip(cid:173)
ping it, we can neither infer head nor  -head  using inertia. 

Due to space limitation, we cannot provide the full details 
here.  In a nutshell, the main reasons why generalized action 
theories are interesting are twofold. On the one hand, we can 
prove that generalized action  theories can  be used  to repre(cid:173)
sent any nondeterministic action (associating a nonempty set 
of successor  states  to  any  initial  state),  while  such  a  com(cid:173)
pleteness property  is  not satisfied  by  simple action  theories. 
On  the other hand, the complexity of EXECUTABILITY,  DE(cid:173)
TERMINISM,  PROGRESSION,  DEDUCTIVE/ABDUCTIVE RE(cid:173)
GRESSION,  from  generalized  action  theories  coincide  with 
the  corresponding  complexity  result  for  simple  action  the(cid:173)
ories  in  the  general  case.  This  shows  that  the  gain  in  ex(cid:173)
pressiveness offered by generalized action theories is not bal(cid:173)
anced  by  a  complexity  increase  for  any  of  these  reasoning 
tasks.  Furthermore, this suggests that the simple action the(cid:173)
ories  considered  here  constitute  the  computational  core  of 
causal action theories. 

6  Other related work 
iLiberatore,  1997]  investigates  the  complexity  of  reason(cid:173)
ing  about  action  in  the  language A  iGelfond  and  Lifschitz, 
1993], therefore he considers only deterministic actions with(cid:173)
out static causal rules.  He shows the CONP-completeness of 
the  progression  problem  in  language A,  to be  related  to  the 
right-upmost square in our Proposition 3.  lEiter et ai, 2001] 
study the computational of many planning problems (includ(cid:173)
ing the progression problem as a particular case) using an ac(cid:173)
tion description language based on answer set semantics. 

[Drakengren  and  Bjareland,  1997;  1999]  investigate  the 
complexity of checking the consistency of a scenario descrip(cid:173)
tion  in  a  temporal  logic  in  the  style  of  [Sandewall,  19941 
which shares some similarities with causal theories of action, 
although both the syntax and the semantics are different.  No 
static causal rules are considered (but on the other hand, the 
language allows  for explicit  time  and concurrency).  Check(cid:173)
ing the consistency of a scenario description is NP-complete 
and falls in P under specific syntactical restrictions. 

Reasoning  about  action  has  strong  connections  with  be(cid:173)
lief update,  and  therefore,  the complexity study of belief up(cid:173)
date operators is relevant to our concern.  The update opera(cid:173)
tors whose complexity is studied in LEiter and Gottlob,  1992; 

REASONING ABOUT ACTIONS AND CHANGE 

1077 

Herzig  and  Rifi,  1999;  Liberatore,  2000]  do  not  consider 
static  causal  rules,  but allow for expressing any effects,  es(cid:173)
pecially  disjunctions.  The  complexity  of checking  whether 
-  where  o  is  the update  operator,  mapping a 
logical tneory and a formula to a logical theory - corresponds 
to the progression problem2. 

7  Conclusions and future work 
The  main  contribution  of  this  paper  is  the  identification  of 
complexity  results  corresponding  to  many  reasoning  tasks 
considered when  dealing  with  causal  action  theories.  It re(cid:173)
mains to be checked to what extent these results are changed 
when considering additional capabilities such as concurrency 
(as in iGiunchiglia and Lifschitz,  1998]) or resources. 

Because  of the  way  the  progression  problem  is  stated,  it 
was expected that for arbitrary description  of the initial sit(cid:173)
uation and arbitrary query  about the successor situation, the 
problem is coNP-complete.  But when we first started study(cid:173)
ing the problem, we  were really expecting that when 
is a 
complete  state,  the problem  would be easier;  we  were  sur(cid:173)
prised  that even  in  this  case  it  turned  out to  be  intractable. 
In  retrospect,  what happens is  that even  though both  action 
effect rules  and  causal  rules  have  very  restricted  form,  the 
complete action theory 
can be complex, and may not 
always be deterministic. An interesting question is then if we 
already  know  that  the  action  theory  is  deterministic,  would 
progression with complete initial state still be intractable? We 
do not know the answer at that stage. 

Acknowledgements 
Tha authors would  like  to thank the anonymous referees for 
helpful comments.  The second authors work was supported 
in  part by HK RGC CERG HKUST6182/0IE. The third au(cid:173)
thor has been partly supported by the IUT de Lens, the Uni-
versite  d'Artois,  the  Region  Nord / Pas-de-Calais under the 
TACT-TIC project, and by the European Community FEDER 
Program. 

References 
[Baral,  1995]  C. Baral.  Reasoning about actions:  nondeter-
ministic  effects,  constraints,  and  qualification.  In  IJCAI-
95, pages 2017-2023,1995. 

[Drakengren and Bjareland,  1997]  T. 

and 
M. Bjareland. Reasoning about action in polynomial time. 
In  IJCAI-91, pages  1447-1453,1997. 

Drakengren 

[Drakengren and Bjareland,  1999]  T. 

M.  Bjareland. 
nondeterministic  polynomial  time. 
161-171,1999. 

and 
Expressive  reasoning  about  action  in 
In  IJCA1-99,  pages 

Drakengren 

LEiter and Gottlob,  1992]  T.  Eiter  and  G.  Gottlob.  On  the 
complexity of propositional knowledge base revision, up(cid:173)
dates  and  counterfactuals.  Artificial  Intelligence,  57:227-
270, 1992. 
2Note that the fact that the complexity of update lies most often 
at the second level of the polynomial hierarchy (therefore more com(cid:173)
plex than progression in action theories) is not due to the presence of 
disjunctions but is due mainly to the minimization-based semantics 
of the update operators considered. 

LEiter etai, 2001]  T.  Eiter,  W.  Faber,  N.  Leone,  G.  Pfeifer, 
and  A.  Polleres.  A  logic  programming  approach  to 
knowledge-state  planning:  Semantics  and  complexity. 
Technical report, Tech. University Wien, 2001. 

iGelfond and Lifschitz,  1993]  M.  Gelfond  and  V.  Lifschitz. 
Representing action and change by logic programs.  Jour(cid:173)
nal of Logic Programming, pages 301-322, 1993. 

[Giunchiglia and Lifschitz,  1998]  E. Giunchiglia and V. Lif(cid:173)
schitz.  An  action  language based on  causal  explanation: 
Preliminary report.  In AAA1-98, pp. 623-630, 1998. 

[Gustafsson and Doherty,  1996]  J.  Gustafsson  and  P.  Do-
herty.  Embracing occlusion  in  specifying the  indirect ef(cid:173)
fects of actions.  In KR-96, pages 87-98,  1996. 

[Herzig and Rifi,  1999]  A. Herzig and O. Rifi.  Propositional 
belief update  and  minimal  change.  Artificial  Intelligence, 
115:107-138,1999. 

[Kakas etai, 2001]  A.  C.  Kakas, R.  Miller,  and F  Toni.  E-
RES: reasoning about actions, events and observations.  In 
LPNMR-0I,  pages  254-266,  2001. 

[Lang and Marquis, 1998]  J. Lang and P. Marquis. Complex(cid:173)
ity  results  for  independence  and  definability  in  proposi(cid:173)
tional logic.  In KR-98, pages 356-367,1998. 

iLiberatore, 1997]  P. Liberatore.  The complexity of the lan(cid:173)
guage  A.  Electronic  Transactions  on  Artificial  Intelli(cid:173)
gence,  \A3-3S,  \991. 

ILiberatore, 2000]  P.  Liberatore.  The  complexity  of belief 

update.  Artificial  Intelligence,  119:141-190,2000. 

[Lifschitz,  1997]  V.  Lifschitz.  On  the logic of causal expla(cid:173)

nation.  Artificial  Intelligence,  96:451-465,1997. 

[Lin,  1995]  F Lin.  Embracing causality in specifying the in(cid:173)
direct  effects  of actions.  In  UCAI-95,  pages  1985-1993, 
1995. 

[Lin, 2000]  F.  Lin.  From causal theories to successor state 
axioms and STRIPS-like systems.  In AAAI-00, pages 786-
791,2000. 

[Lin, 2001]  F Lin.  On the strongest necessary and weakest 
sufficient  conditions.  Artificial  Intelligence,  128:143-159, 
2001. 

[McCain and Turner,  1997]  N.  McCain  and  H.  Turner. 
Causal  theories of action  and  change.  In AAAI-97,  pages 
460-465,1997. 

[McCain and Turner,  1998]  N.  McCain and H.  Turner.  Sat(cid:173)
isfiability  planning with causal theories.  In  KR-98, pages 
212-223,1998. 

[Sandewall, 1994]  E. Sandewall.  Features and Fluents.  Ox(cid:173)

ford University Press,  1994. 

[Thielscher,  1995]  M.  Thielscher.  Computing  ramification 
by post-processing.  In UCAI-95, pages  1994-2000,1995. 
[Turner, 2002]  H. Turner.  Polynomial-length planning spans 
In  JELIA-02,  pages  111-124, 

the  polynomial  hierarchy. 
2002. 

[Zhang and Foo, 2001]  D. Zhang and N. Foo. EPDL: a logic 
for causal reasoning.  In IJCAI-OI, pages  131-138,2001. 

1078 

REASONING ABOUT ACTIONS AND CHANGE 

