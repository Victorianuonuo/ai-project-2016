Minimally intrusive negotiating agents for resource sharing* 
Fariba Sadri 

Francesca Toni 

Paolo Torroni 

Department  of Computing 

Imperial College 
180, Queens Gate 
SW7 London, UK 

{f s,  ft}@doc.ic.ac.uk 

DEIS 

University  of Bologna 
V.le Risorgimento, 2 
40136 Bologna, Italy 

ptorroni@deis.unibo.it 

Abstract 

We  study  the  problem  of  agents  negotiating  pe(cid:173)
riods  of time  during  which  they  can  have  use  of 
resources,  thus  allowing  for  the  sharing  of  re(cid:173)
sources. We define a multi-stage negotiation frame(cid:173)
work  where  agents,  in  order  to  obtain  resources, 
step  through  a  sequence  of  stages,  each  charac(cid:173)
terised by an increased chance of a mutually agree(cid:173)
able  deal  but  at  the  price  of disclosing  more  and 
more information. In the sequence, the agents may 
agree to move to the next stage if the previous stage 
fails  to produce  a deal  amongst them.  In this pa(cid:173)
per, we concentrate on two early negotiation stages, 
characterised  by  minimal  disclosure  of  informa(cid:173)
tion.  Thus,  the  agents  negotiating at these stages 
can be thought of as "minimally intrusive". 

Introduction 

1 
Negotiation  of  resources  is  an  important  research  area  in 
multi-agent systems.  In general, agents may negotiate to ob(cid:173)
tain resources that they are missing but that are necessary to 
carry out their plans. In this paper, we assume that negotiation 
for resources  takes  place  within  the  framework  of  [Sadri  et 
al,  2002],  where the knowledge of the  agents  is represented 
as a tuple < B, R, X, D, G > with B:  beliefs about the world, 
the self and the other agents, as well as the negotiation poli(cid:173)
cies of the agent;  R:  initially owned resources; X:  intentions, 
i.e., the plans1  that the agent intends to carry out, in order to 
achieve its goals, together with the resources required for that 
plan; V:  store of past dialogues; and Q:  agent goals. 

We  extend  [Sadri  et  al.,  2002]  to  negotiate  not just  re(cid:173)
sources,  but  also  time  windows  during  which  resources 
can  be  used  by  agents,  thus  allowing  for  sharing  of  (non-
consumable)  resources  over  time,  The  extended  framework 
allows  solutions  for  a  wider  range  of resource  re-allocation 
problems.  In  the extended  framework,  agent  intentions  are 

This work is partially funded by the 1ST programme of the Eu(cid:173)

ropean Commission under the IST-2001-32530 SOCS project. 

'It is beyond the scope of this paper to provide a general and 
exhaustive representation of the agent knowledge. Instead, we con(cid:173)
centrate on those elements relevant to the resource sharing problem. 
In particular, for simplicity, we identify here intentions with plans. 

sets of activities.  Drawing  inspiration from  [El  Sakkout and 
Wallace, 2000], we model an activity a (a is a unique identi(cid:173)
denoting that a re(cid:173)
fier) as a tuple 
quires  resource  Ra,  has  duration  Da,  earliest  start  time  Tsa 
latest  end  time 
Note  that,  without  loss  of  generality, 
we assume that each activity requires only one resource 2.  In 
the extended framework, the knowledge of agents includes a 
(possibly empty) concrete schedule 
for activities,  where  if 
J,  such that 

a, R, D, 'T 's a, Tea 

then 

, and  

We  develop  negotiation  protocols  and  policies  that  allow 
agents to exchange resources and strike deals for agreed time 
windows.  We introduce a multi-stage process of negotiation, 
each characterised by a protocol and a policy. A higher stage 
involves more information passing between agents and more 
sophisticated negotiation,  possibly  including  re-planning  by 
the  agents  aimed  at  trying  to  help  satisfy  each  other's  con(cid:173)
straints and requirements.  The following example illustrates 
the sort of problems and solutions we propose in this paper. 
Example 1  Let x and y be two agents,  x's intentions contain 
an  activity  a requiring a resource 
y's  intentions contain an  activity  b also requiring r.  x owns 
r from time  1  to 3  and from time 5 onwards,  and y owns r 
from time 3  to 5.  x  needs  r  for three consecutive  time slots 
between  1  and  5,  but  it  currently  owns  r  for only  two  time 
slots. Let us consider the three scenarios below. 

The  problem  is  solved  by  y 

1. 

agreeing to give r to x for  [3,4]. 

2. 

3. 

and  y  has  a  concrete  schedule 
for b to be carried out between 3 and 
4.  The problem is solved by y agreeing to postpone its 
schedule by  1  time slot and giving r to x for [3,4]. 

cannot give  r  away,  because 
otherwise  b becomes  unfeasible.  The  problem  can  be 
solved by an exchange:  y agrees to give r away to x for 
[3,4], in return for x giving r to y for [5,6].   _ 

2  Background and Preliminaries 
In this section we review and adapt some concepts from back(cid:173)
ground papers, needed in the rest of the paper. 

Indeed, it is possible to model any activity requiring multiple 
resources by a number of activities, one for each resource, with the 
same duration and times. 

796 

MULTIAGENT SYSTEMS 

Definition 1 An agent system is a finite set <S,  with at least 
two elements, where each 
is a ground term, represent(cid:173)
ing the name of an agent.  All elements of S are distinct (agent 
names  must be uniquely  identifiable).  Each agent 
is 
equipped at each time 
namely a tuple 
in the introduction. 

_ 
with a knowledge base  

, as explained 

Note that,  in  this paper,  we  assume that the only parts  of 
the knowledge base of an agent that change over time are the 
dialogue store, which grows in time, and the concrete sched(cid:173)
ule. We will also assume that, in 
, all activities that require 
the same resource have disjoint time windows.  In the sequel, 
when clear from the context,  we will  sometimes refer to the 
knowledge base of an agent x simply as 
Definition  2  Let  S  be  an  agent  system.  Let  Ties  be  a  set 
of  resources.3  Let 
be  the  resource 
(this can  be determined, 
allocation  in  the  system  at  time 
for  example,  from 
.  The 
allocation  of  resources  is  defined  for  time  periods  [TS,TC], 
is the maximum schedul(cid:173)

of all  agents  at  time 

and 

where 
ing time, defined as follows: 

The  negotiation  process  we  will  define  modifies  the  re(cid:173)
source  distribution  in  the  agent  system  through  time.  The 
Temporal  Resource  Reallocation  Problem  (T-RRP)  is  the 
problem of answering  to  the following question:  Does  there 
exist  a  time  r  during  the  negotiation  process  when  the  re(cid:173)
source distribution is such that each agent has the resources it 
requires for time periods that would allow it to perform the ac(cid:173)
tivities in  its intention, within their specified time windows? 
The  purpose  of this  work  is  to  show  how  it  is  possible  to 
find a solution to the T-RRP (when one exists) by using agents 
that negotiate by means of dialogues.  We will assume that all 
agents in a system share the same communication language, 
in terms of syntax, semantics, ontology, and pragmatics.  We 
refer to  [Sadri  et al,  20021  for a  formal  definition  of a  lan(cid:173)
guage for negotiation.  In brief, a language defines the set of 
allowed dialogue moves.  Each dialogue move is coded into a 
tell predicate, which has 5 arguments:  sender, receiver, con(cid:173)
tent,  dialogue identifier,  and time of the  move.  We  will  use 
the communication language 
Definition 3  

defined below: 

Figure 1: Protocol for Stage 1 

J  if Y  will  give  R to  X  for the  interval 
the interval 
[T.s, Te].  (5) is used to refuse a proposed deal and ask for a 
new one (there is no refuse .promise move which only termi(cid:173)
nates a protocol), (6) is used to accept a deal. 

final  moves, 

Given  a  language  for negotiation 

,  we define  the set of 
is the subset of 
that contains all the moves whose content is (2),  (3) 

. In  particular,  

or (6). 

Dialogues can be generated by means of policies, held by 

, where  and 

the knowledge base of the agents. 
Definition 4 Policies are expressed as dialogue constraints of 
the form 
are moves.  The 
conditions C are to be evaluated in the knowledge base of the 
agent or in extensions to it.  The intended use of these policies 
is  that  if the agent  receives  a  move pt,  and  the conditions  C 
are satisfied in its knowledge base, the agent generates 
An operational  model  for policies  is defined  in  [Sadri  et al., 
2002J. 
Definition 5 Given  an agent  system S equipped with a lan(cid:173)
and  two  agents  X  and  Y  in  S 
guage  for  negotiation 
equipped  with  policy  Pol,  a  dialogue  induced  by  Pol  be-

where Ts, Te are positive integers between 0 and Tmax, for 
all dialogue moves, 

and for (4)-(6),  

The first three moves are of intuitive meaning.  (4) is used 
by  X  to  propose  a  deal  (promise):  X  will  give  R  to  Y  for 

3Without loss of generality, we assume that all resources in the 
system arc non-consumable (for resource reallocation, consumable 
resources differ from non-consumable ones in that the former can 
be allocated only for maximal intervals 
and not for any 
sub-intervals, where 

is given below in the definition). 

Note  that  this  definition  prevents  agents  from  being  in(cid:173)
volved  in more than  one dialogue  at a time  (e.g.,  dialogues 
cannot be nested). 

An important property of policies used to induce dialogues 
as in Definition 5  is conformance to protocols,  known to all 
agents involved in the dialogue.  A dialogue protocol  can be 
defined as a set of states, representing the current state of dia(cid:173)
logue, a set of allowed dialogue moves, and a set of transition 
rules that, given a state and a move, produce a state.  A pro(cid:173)
tocol is therefore defined as a finite state machine, consisting 
of states and arcs, which has among its states an initial state 

MULTIAGENT SYSTEMS 

797 

(successful termination) and  

So, two final states, 
(unsuccessful  termination),  and  possibly  a  number of inter(cid:173)
mediate states St.  The arcs can be viewed as allowed transi(cid:173)
tions mapping one state to another given a label. These labels 
correspond to the content of moves.  An example of protocol 
is in Fig.  1.  When we show the protocols, we use some ab(cid:173)
breviations, such as for instance: 

request for request(give 
refuse req for refuse(request(give 

I, 

In  order  to define  the concept of conformance,  we define 

dialogues in relation with protocols. 
Definition 6 Given an agent system S equipped with a lan(cid:173)
and a protocol  .  , a dialogue con(cid:173)
guage  for negotiation 
,  between two agents X  and  Y  in 5,  is a set of 
forming  to 
ground dialogue moves in 
, such that, for 
a given set of time lapses 

, 

1.  2. 4. 5. as for Definition 5; 
3.  the content  of  must label an arc from 

if  the 
is the label of an arc into a final state, then 
content  of 
in the  d i a l o g u e . t he  contents  of pi 
there is no 
, if they both exist, must be labels, respectively, 
and 
of an arc going into a state, and an arc coming out of the 
same state. 

, is terminated  if 

is 

A dialogue 

the label of an arc into a final state. 

We are now ready to define the concept of conformance of 

policies to protocols. 
Definition 7 Given a policy Pol and a protocol 
forms  to 
conforming to  

, Pol con(cid:173)
if every  dialogue  induced  by  Pol  is  a  dialogue 

We define sequences of dialogues for a resource R and an 

activity A,  between two agents  X  and Y. 
Definition  8  Given  an  agent  system  S,  a sequence  of dia(cid:173)
logues o between two agents X and Y in S for a resource R 
and an activity A is a set of terminated dialogues between X 
and Y, 
for all 

, such that, for a given set of time lapses  

, where  

We assume the atomicity of sequences of dialogues:  agents 
will  not  react to  any  incoming request  about  a resource  r  if 
they  are  participating  in  an  ongoing  sequence  of dialogues 
regarding  r,  and  moreover they  themselves  will  not make  a 
request  for  r  with  respect  to  another  activity  while  they  are 
participating in an ongoing sequence of dialogues which they 

initiated (an  agent cycle  very  similar to the one in  [Sadri  et 
al.t 2002]  will achieve this atomicity). 
3  Negotiation Stages 
We define two different stages of negotiation, each character(cid:173)
ized by the degree of  flexibility  of the agents and the amount 
of information disclosed and used by them: 

Stage 1: Request/flexible schedule 
Stage 2: Blind deal 

In this  section,  for each  stage  we define the protocol,  the 
policies adopted by the agents, and the properties of the stage. 
The properties that we study are (i) conformance of the policy 
to  the  protocol,  (ii)  properties  of single  dialogues  (termina(cid:173)
tion and characterization of the class of problems that can be 
solved),  (Hi)  properties of sequences of dialogues happening 
at that stage, and (iv)  subsumption of earlier stages (in terms 
of solvable problems).  In  particular,  for each  stage we give 
an example of a problem that can be solved within it, and an 
example of a problem that cannot. 

In defining the policies and in  stating the results,  we rely 
upon some predicates, whose formal definition is given in ap(cid:173)
pendix.  We use the notation 
to indicate that at 
the knowledge of X entails a certain predicate p.  The 
time 
proofs of the results are omitted for lack of space 

3.1  Stage  1  -  request/flexible schedule 
Protocol.  The protocol is given in Figure 1. 
Policy.  The policy is shown in Figure 2:  an agent will accept 
a request  for R if it can  find  a concrete  schedule  of its  own 
activities  that  does  not  make  use  of  R during  the  requested 
interval. It will refuse it otherwise, leading to an unsuccessful 
final state.  Note  that  it  is  up  to  the requesting  agent to find 
good heuristics to formulate a request or a series of requests 
which can be accepted. 

:  but if y was happy with 
There is no solution if y sticks to 
, then x and 
a different schedule, e.g. 
y could both do their activities by sharing resource r.  Thus, 
this  example  can  be  solved  by  the  following  negotiation 
dialogue d(l) occurring at Stage 1  (i.e., induced by the policy 
of Fig.  2): 

Properties.  Stage  I  is  computationally  demanding  for the 
agent who is replying to a request.  The problems that can be 
solved at this stage are all those that can be solved by means 
of  a  (possibly  empty)  modification  in  the  agents'  current 
concrete schedule. 
(i):  protocol  conformance. 
policy of Stage 1 is conforming to the protocol in Fig.  1. 
(ii):  properties  of  single  dialogues.  A  request/flexible  sched(cid:173)
ule interaction enjoys the property of termination.  In fact, di(cid:173)
alogues following this protocol have a fixed number of steps. 
Theorem  1 
Let  us  consider  a  system  composed  of  two 
agents, x and y. Then, for all system resources r, all activities 

It  is  possible  to  prove  that  the 

798 

MULTIAGENT SYSTEMS 

a assigned to x, all times r, and all intervals  [Ts, Te]  s.t. 

Figure 2: Stage J policy for an agent y 

there  exists  a  dialogue  d induced  by  the  policy  of Stage  1, 
starting at time r, and ending at time 

, such that 

Intuitively this theorem 

states that if there exists a time window tw such that an agent 
x  needs  r  in it and  another agent has  r available  in 
, then 
there  also  exists  a  dialogue  induced  by  the  policy  of Stage 
1  which solves  x's  reallocation problem about r.  This intu(cid:173)
itive understanding of the theorem  is the result of the formal 
predicate definitions given in appendix. 
{iii):  properties of sequences. 
It  is  up to the agent who  is 
missing  a  resource  to  find  good  heuristics  to  formulate  the 
requests,  which can  lead  to a successful  dialogue  sequence 
(provided it is possible to find a solution at this stage). Given 
an  agent  x,  a  resource  r,  and  an  activity  a,  one  possibility 
could be a cycle starting at a time r where x successively asks 
for intervals  [Ts, Te]  such that 
miss{r,  {Ts, Te),  a), 
until all such intervals are exhausted, or the request for one of 
the intervals is accepted.  We call this Strategy!. 
Theorem  2 
Let  us  consider  a  system  composed  of  two 
agents, x and y, negotiating at Stage 1. Then, for all resources 
r in the system, and all activities a assigned to x that require 
r,  if  x  follows  Strategy  1  in  its  attempt  to  acquire  r  from  y, 
starting at T with a request for r for an interval  [Ts, Te]  such 
that 
miss(r, {Ts, Te), a), then either the resulting se(cid:173)
quence of dialogues will be finite and will terminate at a time 
or 

for some 

feas{a, 

, and 
TV, Te ; such that 

{iv):  subsumption  of earlier stages.  Stage  1  subsumes our 
previous  work done  in  [Sadri  et al,  2002],  in  the  sense that 
the  resource  reallocation  problems  it  solves  include  those 
solved by [Sadri et a/., 2002]. 

We now give a counterexample for Stage  1. 

Example 3  Let  us  consider  the  following  modification  of 
Example 2, where there is a different initial resource assign(cid:173)
ment, and different time windows for the activity b (b must be 
completed by  15): 

Figure 3:  Protocol for Stage 2 

3.2  Stage 2  -  blind deal 
Protocol.  The protocol is shown in Fig.  3.  After the initial 
move by y, request{give 
which makes the di(cid:173)
alogue reach state  Sl  the other agent x can either accept or 
refuse,  as in Stage  1,  or can propose a deal  (promise).  Af(cid:173)
ter a promise,  the agent y who  made  the request  can  either 
accept the deal, causing a successful termination, or refuse it 
(change  prorn), which brings back to S1. 
Policy.  The policy is shown in Fig. 4. 4 An agent will accept a 
request about a resource R for the period  [Ts, Te]  if it would 
do it at Stage 1, but it will refuse it only if it does not have any 
deal to propose (promise).  In particular, an agent x will pro(cid:173)
pose a deal, in reply to a request made by an agent y, if there 
exists an interval  [ I V, Te'], disjoint from [Ts, Te], which has 
the  following  property:  Once  y  obtains  R for  [T.s',Tc'],  it 
will  not need  it  anymore  for  [Ts, Te].  In  that  case,  if y  ac(cid:173)
cepts  to give  R away for the interval  [Ts', Te'],  the negotia(cid:173)
tion process reaches a successful final state, otherwise x may 
continue proposing different deals  (if they exist),  until  y ac(cid:173)
cepts one (successful termination), or there exist no new ones 
to propose, in which case x will refuse the initial request, thus 
leading to an unsuccessful final state. 

Since there might be several alternative proposals for a deal 
at a given time, but we want the agent's policies to be deter(cid:173)
ministic,  we use  in the definition of the policies of an agent 
x  at Stage 2  a predicatepick((Ts,Te),T),  that at any  given 
time T uniquely determines a time period, having made ref(cid:173)
erence possibly to  

Example 3 can be solved by the following negotiation dia(cid:173)

logue d(2) occurring at Stage 2: 

We do not give any concrete schedules for the agents'  activi-
ties since they play no role here.  There is no solution to this 
problem that can be found at Stage  1. In fact, if y gives away 
r, it will not be possible for it to carry out a any more.   

Properties.  At Stage 2 agents are more cooperative than at 
Stage  1.  This  is  achieved  by  both  agents  - and  in  particu-
is a set of atoms, 

4We use the notation 

where 

to mean that 

, enlarged with 

, entails p. 

MULTIAGENT SYSTEMS 

799 

Figure 4: Stage 2 policy for an agent y 

It  is  possible  to  prove  that  the 

lar the agent to whom the request is addressed - to do more 
reasoning in order to be helpful in response to requests. 
(?):  protocol conformance. 
policy of Stage 2 is conforming to the protocol in Fig.  3. 
(ii'):  properties  of  single  dialogues.  Stage  2  docs  not  enjoy 
the  fixed  dialogue  length  property  of Stage  1,  but  it  termi(cid:173)
nates if we have a finite scheduling horizon Tmax and we do 
not allow the same move twice at different times, in the same 
dialogue (which is a reasonable requirement). Stage 2 is com(cid:173)
putationally more demanding than Stage 1  for both agents. 
Let  us  consider  a  system  composed  of  two 
Theorem  3 
agents, x and y, each having an initial  resource assignment. 
Then, for all resources r in the system, all activities a and b, 
all  times r and all  intervals  [Ts, Tc], such that 

for some  [Ts''  Te"], there exists a dialogue d induced by the 
policy of Stage 2, starting at time r, and ending at a time T', 
such that 

(iii):  properties  of  sequences. 
Theorem  4 
Let  us  consider  a  system  composed  of  two 
agents,  x  and  y,  negotiating  at  Stage  2.  Then,  for  all  re(cid:173)
sources  r  in  the  system,  and  all  activities  a  assigned  to  x 
which  require  r,  if  starting  at  time  r  x  follows  Strategy! 
to  request  r  from  y,  either  the  sequence  of  dialogues  will 
terminate  at  r'  after  a  finite  number  of  dialogues,  and 

(iv):  subsumption of earlier stages.  More problems can  be 
solved by Stage 2 than by Stage 1, namely: 
Theorem  5  Let  us  consider  a  system  composed  of  two 
agents,  x  and  y.  For  all  resources  r  in  the  system,  all  ac(cid:173)
tivities a assigned to x, all times r and intervals  [T.s, Te] s.t. 

there  exists  a  dialogue  d  induced  by  the  policy  of Stage  2, 
starting at time r, and ending at time 

, such that 

Although  this  enlarges  the  set  of  problems  that  can  be 
solved,  it  does  not  solve,  for  instance,  the  problems  where 
more than one exchange is needed.  We now give the follow(cid:173)
ing counterexample for Stage 2. 
Example  4  Let  us  consider  the  following  modification  of 
Example  2,  where  there  is  a  different  resource  and  activity 
assignment: 

There is no solution to this problem that can be found at Stage 
2.  In fact, the (minimal) requests that  will  make to obtain 
for 5 consecutive time periods are:  [13,15]  and [15,17].  y 
for  [10,12] 

may reply to the first one with a deal to obtain 

800 

MULTIAGENT SYSTEMS 

[Harrison, 2000]  C.A. Harrison.  Distributed Optimisation in a Bro(cid:173)
kered Architecture.  PhD diss., IC-PARC, Imperial College Lon(cid:173)
don, 2000. 

[Kraus et ai,  1995]  S. Kraus, J. Wilkcnfcld, and G. Zlotkin. Multi-

agent negotiation under time constraints.  AIJ, 75(2),  1995. 

[Sadri etai, 20021  F.  Sadri, F. Toni, and P. Torroni.  An abductive 
logic programming architecture for negotiating agents.  In Proc. 
JEL1A, LNCS 2424. Springer Vcrlag, 2002. 

[Yokoo and Hirayama, 2000)  M.  Yokoo  and  K.  Hirayama.  Algo-
rithms for distributed constraint satisfaction:  A review. AAMASJ, 
3(2), 2000. 

Appendix  A 

or  for  [11,13],  neither of which  makes  x's  activity  b feasible. 
The  same  will  happen  for  the  second  request,  which  results 
in  an  unsuccessful  sequence  of  negotiation  dialogues  for  a 
problem that has a solution.   

4  Discussion 
This  work  benefits  from  a  logic-based  high  level  approach 
that  facilitates  specification  and  proof  of  formal  properties 
and which  has  an operational  model,  that  forms  a  bridge  be(cid:173)
tween  the  system  description  and  implementation.  This  fea(cid:173)
ture is difficult to  find  in most related work:  as the negotiation 
process  becomes  more  elaborated,  it  gets  harder  to  find  and 
prove formal properties as those identified here.  In the follow(cid:173)
ing,  we briefly  survey  similar approaches to agent negotiation 
or  proposed  solutions  to  the  same problem. 

Our  modelling  of constraints  draws  inspiration  from  work 
on constraint satisfaction  for a monolithic  system  [El  Sakkout 
and  Wallace,  2000].  But  our  work  differs  from  it  both  in 
context  and  approach.  Our  aim  is  to  provide  protocols  and 
policies  for  a  multi-stage  process  of negotiation  in  a  collab(cid:173)
orative  multi-agent context,  whereas  their aim  is  the  solution 
of  T-RRP  problems  viewed  as  constraint  satisfaction  prob(cid:173)
lems,  while  minimising changes  to concrete  schedules.  [Har(cid:173)
rison,  2000J  extends  such  work  to  multi-agent  systems,  but 
the  focus  there  is  again  that  of  minimising  changes  to  exist(cid:173)
ing schedules,  and not on  negotiation. 

[Conry  et  ai,  1992J  proposes  an  approach  to  negotiation 
based  on  multiple  stages,  focusing  on  coordination  degrees. 
Progressive  stages  require  that  agents  solve  problems  in  a 
more  coordinated  way. 
In  the  first  stage,  the  agents  try  to 
solve  problems  independently  of  other  agents*  constraints, 
while  in  the  last  one  it  is  possible,  e.g.,  to  discover  that  the 
overall  problem  is over-constrained  and thus a certain  goal  is 
unfeasible. 

There  are  many  issues  regarding  negotiation  that  our  pa(cid:173)
per  does  not  address.  For  example,  we  do  not  deal  with  the 
efficiency  and  timeliness  of negotiation.  These  issues  are  ad(cid:173)
dressed  in  [Kraus  et al,  1995]  using  utility  functions. 

We  are  currently  working  on  extending  our  negotiation 
process to  a number of further stages, whereby  the agents dis(cid:173)
close  to  each  other  more  information  about  their  constraints 
in  order  to  be  able  to  propose  more  informed  deals  for  ex(cid:173)
changes  of  resources.  We  would  like  to  stress  that  we  ap(cid:173)
proach  a  resource  sharing  problem  from  a  multi-agent  per(cid:173)
spective:  Existing scheduling techniques  are  likely  to outper(cid:173)
form  compared  to  the  negotiation  processes  outlined  in  this 
work,  but  they  do  not  generally  allow  for agent  autonomy.  In 
the  final  stage  of such  an  approach,  where  all  the  constraints 
are  known,  the problem becomes one of distributed constraint 
satisfaction.  [Yokoo  and  Hirayama,  2000]  reviews  a  number 
of algorithms  for such  an  application. 
References 
[Conry et al.,  1992]  S.E.  Conry,  K.  Kuwabara,  V.R.  Lesser,  and 
R.A. Meyer.  Multistage negotiation in distributed constraint sat(cid:173)
isfaction.  IEEE TSMC, 21(6),  1992. 

[El Sakkout and Wallace, 2000]  H.H.  El  Sakkout  and  M.G.  Wal(cid:173)
lace. Probe backtrack search for minimal perturbation in dynamic 
scheduling.  Constraints, 5(4), 2000. 

MULTIAGENT SYSTEMS 

801 

