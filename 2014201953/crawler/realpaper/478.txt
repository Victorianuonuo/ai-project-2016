Least Common Subsumers and Most Specific Concepts in a Description Logic 

with Existential Restrictions and Terminological Cycles* 

Franz  Baader 

Theoretical Computer Science 

TU  Dresden 

D-01062 Dresden, Germany 
baader@inf.tu-dresden.dea 

Abstract 

Computing least common subsumers (Ics) and most 
specific concepts (msc) are inference tasks that can 
support  the  bottom-up  construction  of knowledge 
bases  in  description  logics. 
In  description  logics 
with existential restrictions, the most specific con(cid:173)
cept  need  not  exist  if one  restricts  the  attention  to 
concept descriptions or acyclic TBoxes.  In this pa(cid:173)
per,  we  extend  the  notions  les  and  msc  to  cyclic 
TBoxes.  For  the  description  logic  EC  (which  al(cid:173)
lows  for  conjunctions,  existential  restrictions,  and 
the top-concept), we show that the les and msc al(cid:173)
ways exist and can be computed in polynomial time 
if we  interpret  cyclic  definitions  with  greatest  fix-
point semantics. 

Introduction 

1 
Computing  the  most  specific  concept  of an  individual  and 
the  least  common  subsumer of concepts can  be  used  in  the 
bottom-up construction of description  logic  (DL)  knowledge 
bases. 
Instead  of defining  the  relevant  concepts  of an  ap(cid:173)
plication  domain  from scratch,  this  methodology allows  the 
user to give typical examples of individuals belonging to the 
concept  to  be  defined.  These  individuals are  then  general(cid:173)
ized to a concept by first computing the most specific concept 
of each  individual  (i.e.,  the  least  concept  description  in  the 
available description  language that has this  individual  as an 
instance), and then computing the least common subsumer of 
these concepts (i.e., the least concept description in the avail(cid:173)
able description language that subsumes all these concepts). 
The knowledge engineer can then use the computed concept 
as a starting point for the concept definition. 

The  least  common subsumer (les)  in  DLs  with  existential 
restrictions was investigated in  [Baader et a/.,  1999].  In par(cid:173)
ticular,  it was  shown  there  that  the  les  in  the  small  DL  EC 
(which  allows  for conjunctions,  existential  restrictions,  and 
the top-concept) always exists, and that the binary les can be 
computed in polynomial time.  Unfortunately, the most  spe(cid:173)
cific concept (msc) of a given ABox individual need not exist 
in  languages  allowing  for  existential  restrictions  or  number 
restrictions.  As a possible solution to this problem, Kiisters 

* Partially supported by the DFG under grant BA 1122/4-3. 

and Molitor [2001] show how the most  specific concept can 
be approximated in EC and some of its extensions.  Here, we 
follow  an  alternative  approach:  we  extend  the  language by 
cyclic  terminologies  with  greatest  fixpoint  (gfp)  semantics, 
and show that the msc always exists in this setting.  Of course, 
then one must also be able to compute the les w.r.t. cyclic ter(cid:173)
minologies with  gfp-semantics.  For the  DL ACM (which al(cid:173)
lows for conjunctions, value restrictions, and number restric(cid:173)
tions)  it  was  shown  in  [Baader and  Kusters,  1998]  that  the 
most  specific  concept  always  exists  if one  adds  cyclic  con(cid:173)
cept definitions  with  gfp-semantics.  One reason for Kusters 
and Molitor to choose an approximation approach rather than 
an  exact characterization  of the  most  specific  concept  using 
cyclic  definitions was that the  impact of cyclic  definitions in 
description logics with existential restrictions was largely un(cid:173)
explored. 

The paper [Baader, 2003a] is a first step toward overcom(cid:173)
ing this deficit.  It considers cyclic terminologies in EC  w.r.t. 
the three types of semantics (greatest  fixpoint,  least  fixpoint, 
and descriptive semantics)  introduced by  Nebel  [1991],  and 
shows that the subsumption problem can be decided in poly(cid:173)
nomial time in all three cases.  This is in stark contrast to the 
case  of DLs  with  value  restrictions.  Even  for  the  small  DL 
F  Lo  (which allows conjunctions and value restrictions only), 
adding  cyclic  terminologies  increases  the  complexity  of the 
subsumption problem from polynomial (for concept descrip(cid:173)
tions) to PSPACE. The main tool in the investigation of cyclic 
definitions in EC is a characterization of subsumption through 
the  existence  of so-called  simulation  relations  on  the  graph 
associated with an  EL-terminology,  which can be computed 
in polynomial time [Henzinger et  al,  1995]. 

This characterization of subsumption can be used to char(cid:173)
acterize  the  les  w.r.t.  gfp-semantics  via  the  product  of this 
graph with  itself (Section 4).  This shows that,  w.r.t.  gfp se(cid:173)
mantics, the les always exists, and that the binary les can be 
computed in polynomial time.  (The  n-ary  les may grow ex(cid:173)
ponentially even in EC  without cyclic terminologies  [Baader 
et al. , 1999].) 

The  characterization  of subsumption  w.r.t.  gfp-semantics 
can be extended to the instance problem in EC.  This allows 
us to show that the msc in EC with cyclic terminologies inter(cid:173)
preted with gfp semantics always exists, and can be computed 
in polynomial time (Section 5). 

In the next section, we introduce E L with cyclic terminolo-

DESCRIPTION LOGICS 

319 

The semantics of (possibly cyclic) 

we have de(cid:173)
fined above  is  called  descriptive semantic  by  Nebel  [1991]. 
For  some  applications,  it  is  more  appropriate  to  interpret 
cyclic concept definitions with the help of a  fixpoint  seman(cid:173)
tics. 
Example 1  To  illustrate  this,  let us recall an example from 
LBaader, 2003a]: 

Here the intended interpretations arc graphs where we have 
nodes (elements of the concept Node) and edges (represented 
by the role edge), and we want to define the concept I node 
of all  nodes lying on an  infinite (possibly cyclic) path of the 
graph.  In order to capture this intuition, the above definition 
must be interpreted with greatest  fixpoint  semantics. 

and the defined concepts 

primitive  interpretations  J  for  T  is  given  by  a  domain 
an  interpretation  of the  roles  r 

Before  we  can  define  greatest  fixpoint  semantics  (gfp-
semantics),  we  must  introduce some  notation.  Let  T be  an 
E  L-TBox  containing  the  r o l e s t he  primitive  concepts 
.  A 
, 
Nrole  by  binary  relations 
and  an  interpretation  of the  primitive  concepts 
Obviously,  a primitive 
by  subsets 
interpretation differs from an interpretation in that it does not 
interpret  the  defined  concepts  in 
.  We say that the  in(cid:173)
terpretation  X  is  based on  the  primitive  interpretation  J  iff 
it  has  the  same  domain as  J  and  coincides  with  J  on  Nrole 
and  Nprim.  For a fixed primitive interpretation  J,  the inter(cid:173)
pretations X based on it are uniquely determined by the tuple 
of the interpretations of the defined concepts in 

We define 

is an interpretation based on 

Interpretations based on J can be compared by the following 
ordering, which realizes a pairwise inclusion test between the 
respective interpretations of the defined concepts:  if 
Int(J), 

then 

It is easy to see that 
induces a complete lattice on  Int  (J), 
i.e., every subset of Jnt(J) has a least upper bound (lub) and 
a greatest lower bound (gib).  Using  Tarski's fixpoint theorem 
LTarski,  1955]  for  complete  lattices,  it  is  not  hard  to  show 
LNebel,  1991]  that,  for  a  given  primitive  interpretation  J, 
there always is a greatest 
model  of T  based  on  J. 
We  call  this  models the greatest  fixpoint  model  (gfp-model) 
of T.  Greatest fixpoint semantics considers only gfp-models 
as admissible models. 
Definition 2  Let T be an 
let 
A, B be defined concepts occurring in T> and a an individual 
name occurring in A.  Then, 

•  A  is subsumed by B  w.r.t.  gfp-semantics 

iff 

holds for all  gfp-models 

•a  is  an  instance  of A  w.r.t.  gfp-semantics 

gfp-models  of T. 

holds  for all  models X of A  that  are 

On the level of concept descriptions, the least common sub-
sumer of two  concept descriptions  C, D  is  the  least concept 

gics as well as the lcs and the msc. Then we recall the impor(cid:173)
tant  definitions and results  from  [Baader,  2003a].  Section 4 
formulates and proves the  new  results  for the  lcs,  and  Sec(cid:173)
tion 5 does the same for the msc. 

2  Cyclic terminologies, least common 

subsumers, and most specific concepts 

Concept  descriptions  arc  inductively  defined  with  the  help 
of a  set  of constructors,  starting  with  a  set 
of  concept 
names and a  set NR  of role names.  The constructors deter(cid:173)
mine the expressive power of the DL. In this paper, wc restrict 
the attention  to the 
whose  concept descriptions arc 
formed  using  the  constructors  top-concept (T),  conjunction 
.  The semantics of 
E L-concept descriptions is defined in terms of an interpreta(cid:173)
tion 
.  The  d o m a i n is   a non-empty set 
of individuals  and  the  interpretation  function  I  maps  each 
and each role 
concept name 
.  The  extension  of 
to arbitrary concept descriptions is inductively defined, as 

, and existential restriction 

to a subset 
on 

to  a  binary relation 

shown in the third column of Table  1. 

A  terminology  (or  TBox  for  short)  is  a  finite  set  of con(cid:173)
cept  definitions  of the  form 
where  A  is  a concept 
name and  D  a concept description.  In  addition,  we require 
that  TBoxcs  do  not  contain  multiple  definitions,  i.e.,  there 
cannot be two distinct concept descriptions 
such 
that both 
belongs to the TBox.  Con(cid:173)
cept names occurring on the left-hand side of a definition are 
called defined concepts.  All  other concept names  occurring 
in  the  TBox  are  called primitive concepts.  Note  that we  al(cid:173)
low  for  cyclic  dependencies  between  the  defined  concepts, 
i.e.,  the  definition  of A  may  refer  (directly  or  indirectly)  to 
A  itself.  An  interpretation  I  is  a  model  of the  TBox  T  iff 
it  satisfies  all  its  concept definitions,  i.e., 
for  all 
definitions 

in  T. 

An ABox  is  a  finite  set of assertions  of the  form  A(a)  and 
r(a,b),  where  A  is  a  concept  name,  r  is  a  role name,  and 
a, b are  individual names  from a set 
Interpretations  of 
ABoxes must additionally map each individual name 
to an element 
ABox  A  iff it  satisfies  all  its  a s s e r t i o n s , f or  all 
concept  assertions  A(a)  in  A and  x 
for all  role 
in A. The interpretation I is a model of the 
assertions 
A Box A together with the 
iff it is a model of both T 
and A. 

.  An interpretation I is a model of the 

. 

320 

DESCRIPTION  LOGICS 

description  E  that  subsumes  both  C  and  D.  An  extensions 
of this  definition  to  the  level  of (possibly  cyclic)  TBoxes  is 
not completely trivial.  In  fact,  assume that  A1,A2  are con(cid:173)
cepts defined in the TBox T.  It should be obvious that taking 

The intended interpretation is similar to the one in Example 1, 
with  the  only  difference  that  now  nodes  may  have  colors, 
and  we  are  interested  in  blue  (red)  nodes  lying  on  an  infi(cid:173)
nite  path  consisting  of blue  (red)  nodes.  Intuitively,  the  les 
of Bluelnode  and  Redlnode  describes nodes lying on  an  in(cid:173)
finite path  (without  any  restriction  on  their  color),  i.e.,  the 
concept I node from Example 1 should be a definition of this 
les.  However, this cannot be expressed by a simple concept 
description.  It requires a new cyclic definition. 

In  the  case  of concept  descriptions,  the  les  is  unique  up 

TBoxes, this uniqueness property also holds (though its  for(cid:173)
mulation is more complicated). 

Proposition 5  Let T\  be an  £l-TBox  containing the defined 
concepts A, B.  Assume that  T2  and  T2  are conservative ex(cid:173)
tensions of T1 such that 

•  the defined concept E in T2 is a gfp-lcs of A, B in T\; 
•  the defined concept E' in T2 is a gfp-lcs of A, B in T\; 
•  the sets of newly defined concepts in respectively T2 and 

T2  are disjoint. 

The  notion  "most  specific  concept" can be  extended  in  a 
similar way from concept descriptions to concepts defined in 
a TBox. 

Uniqueness up to equivalence of the most specific concept 
can  be  formulated  and  shown  like  uniqueness  of the  least 
common subsumer. 

3  Characterizing subsumption 
In  this  section,  we  recall  the  characterizations  of subsump(cid:173)
tion  w.r.t.  gfp-semantics  developed  in  [.Baader,  2003a].  To 
this purpose,  we must represent TBoxes and primitive inter(cid:173)
pretations by description graphs, and introduce the notion of 
a simulation on description graphs. 

As shown in [Baader, 2003a], one can (without loss of gen(cid:173)
erality) restrict the attention to normalized TBox.  In the fol(cid:173)
lowing, we thus assume that all TBoxes are normalized. Nor(cid:173)
malized  £L-TBoxes  can be  viewed as graphs whose nodes 
are the defined concepts,  which are labeled by sets of prim(cid:173)
itive concepts, and whose edges are given by the existential 
restrictions.  For the rest of this section, we  fix  a normalized 

DESCRIPTION  LOGICS 

321 

2.  There is  a simulation  Z:  Gr  ~  GT  such  that  (B, A)  £ 

Z. 

The  theorem  together with  Proposition 9  shows  that sub-
sumption w.r.t.  gfp-semantics  in £C  is tractable.  The proof 
of the theorem given in [Baader, 2003a] depends on a charac(cid:173)
terization of when an individual of a gfp-model belongs to a 
defined concept in this model. 

This proposition  is  also  important in  the  proof of correct(cid:173)
ness  of our characterization  of the  instance  problem  (Theo(cid:173)
rem 17). 
4  Computing the Ics 

Conversely, every £L-description graph can be viewed as 
representing either an £C-T Box or a primitive interpretation. 
Simulations are binary relations between nodes of two £L-
description graphs that respect labels and edges in the sense 
defined below. 

It is easy to see that the set of all simulations from G\ to G2 
is closed under arbitrary unions.  Consequently, there always 
exists a greatest simulation from G1 to G2- If G1, G2 are finite, 
then this greatest simulation can be computed in polynomial 
time [Henzinger et al, 1995]. As an easy consequence of this 
fact, the following proposition is proved in [Baader, 2003a]. 
Proposition 9  Let  G1,  G2  be 
finite  EL-description 
graphs,  v1  a  node  of G\  and  V2  a  node  of  G2-  Then  we 
can decide  in polynomial time  whether there  is  a  simulation 

two 

Subsumption w.r.t. gfp-semantics corresponds to the exis(cid:173)
tence of a simulation relation such that the subsumee simu(cid:173)
lates the subsumer: 

Instance and most specific concepts 

5 
One motivation for considering cyclic terminologies in  £L  is 
the  fact  that  the  most  specific  concept of an  ABox  individ(cid:173)
ual  need  not exist  in £C  (without cyclic terminologies).  An 
example  is  the  simple  cyclic  ABox  A  :=  {r(b,b)},  where 
b  has  no  most  specific  concept,  i.e.,  there  is  no  least  £L-
concept description  D  such  that  b  is  an  instance  of D  w.r.t. 
A  [Kiisters  and  Molitor,  2001].  However,  if one  allows  for 
cyclic  TBoxes with gfp-semantics, then the defined concept 

322 

DESCRIPTION  LOGICS 

DESCRIPTION LOGICS 

323 

6  Conclusion 
In [Baader, 2003a] we have shown that subsumption in 
re(cid:173)
mains polynomial if one allows for cyclic terminologies with 
greatest  fixpoint  (gfp)  semantics.  In  Section  5.1  of this pa(cid:173)
per  we  have  complemented  this  result  by  showing  that  the 
instance problem in 
with cyclic terminologies interpreted 
with gfp-semantics is also polynomial. Thus, all the standard 
inferences in 
remain polynomial  if one  allows for cyclic 
terminologies  with  gfp-semantics.  Our main  motivation  for 
considering  cyclic  terminologies  with  gfp-semantics  in 
was that the most specific concept of an ABox-individual then 
always exists.  In fact, we have shown in this paper that both 
the least common subsumer (les) and the most specific con(cid:173)
cept (msc) can be computed in polynomial time in 
with 
cyclic  terminologies  interpreted  with  gfp-semantics.  Thus, 
also  two  of the  most  important  non-standard  inferences  in 
DLs [Kusters, 2001] remain polynomial in this context. 

It should be noted that there are indeed applications where 
the expressive power of the  small  DL 
appears to be suf(cid:173)
ficient.  In  fact,  SNOMED,  the  Systematized  Nomenclature 
of Medicine  [Cote  et  al,  1993]  uses 
[Spackman, 2000; 
2001]. 

Subsumption  [Baader,  2003a]  and  the  instance  problem 
[Baader,  2003b]  are  also  polynomial  w.r.t.  descriptive  se(cid:173)
mantics.  For the  les,  descriptive semantics is not that well-
behaved:  in  [Baader,  2003]  we  have  shown  that  w.r.t.  de(cid:173)
scriptive semantics the  les  need not exist  in 
with  cyclic 
terminologies.  In  addition,  we  could only give  a  sufficient 
condition  for  the  existence  of the  les. 
If this  condition  ap(cid:173)
plies,  then the les can be computed in polynomial time.  In 
[Baader,  2003b]  similar results are  shown  for the  msc  w.r.t. 
descriptive semantics. 

One problem left for future research is the question of how 
to  obtain  a  decidable characterization  of the  cases  in  which 
the les (msc) exists w.r.t. descriptive semantics, and to deter(cid:173)
mine  whether  in  these  cases  it  can  always  be  computed  in 
polynomial time. 

References 
[Baader, 2002]  F.  Baader.  Least common subsumers,  most 
specific  concepts,  and  role-value-maps  in  a  description 
logic  with  existential  restrictions  and  terminological  cy(cid:173)
cles. 
LTCS-Report  02-07,  TU  Dresden,  2002.  See 
http://lat.inf.tu-dresden.de/research/reports.html. 

[Baader, 2003]  F.  Baader.  Computing  the  least  common 
subsumer  in  the  description  logic  £L  w.r.t.  terminologi(cid:173)
cal  cycles  with  descriptive semantics.  In Proc.  ICCS'03, 
Springer LNAI, 2003. 

[Baader, 2003a]  F.  Baader.  Terminological  cycles  in  a de(cid:173)
In  Proc.  IJ-

scription  logic  with  existential  restrictions. 
CAl'03,2003. 

[Baader, 2003b]  Franz  Baader.  The  instance  problem  and 
the most specific concept in the description logic £C w.r.t. 
terminological cycles with descriptive semantics.  LTCS-
Report  03-01,  TU  Dresden,  2003.  See http://lat.inf.tu-
dresden.de/research/reports.html. 

[Baader and Kusters, 1998]  F. Baader and R. Kiisters.  Com(cid:173)
puting the  least common subsumer and the most specific 
concept in  the  presence of cyclic  ALN-concept  descrip(cid:173)
tions.  In Proc.  KI'98, Springer LNAI  1504,  1998. 

[Baader et al,  1999]  F.  Baader,  R.  Kusters,  and R.  Molitor. 
Computing least common subsumers in description logics 
with existential restrictions.  In Proc.  IJCAI'99,  1999. 

[Cote et al,  1993]  R. Cote, D. Rothwell, J. Palotay, R. Beck(cid:173)
ett, and L. Brochu. The systematized nomenclature of hu(cid:173)
man and veterinary medicine. Technical report, SNOMED 
International, Northfield, IL: College of American Pathol(cid:173)
ogists, 1993. 

[Henzinger et a/.,  1995]  M.  R.  Henzinger,  T.  A.  Henzinger, 
and  P.  W.  Kopke.  Computing  simulations on  finite  and 
infinite graphs. In 36th Annual Symposium on Foundations 
of Computer Science, 1995. IEEE Computer Society Press. 
[Kusters, 2001]  R. Kusters.  Non-standard Inferences in De-

scription Logics, Springer LNAI 2100, 2001. 

[Kusters and Molitor, 2001]  R. Kusters and R. Molitor.  Ap(cid:173)
proximating  most  specific  concepts  in  description  logics 
with  existential  restrictions. 
In  Proc.  KI 2001,  Springer 
LNAI 2174,2001. 

[Nebel, 1991]  B.  Nebel.  Terminological cycles:  Semantics 
and computational properties.  In J. F. Sowa, editor, Prin(cid:173)
ciples of Semantic Networks. Morgan Kaufmann, 1991. 

[Spackman, 2000]  K.  Spackman.  Managing clinical termi(cid:173)
nology  hierarchies  using  algorithmic  calculation  of sub(cid:173)
sumption: Experience with SNOMED-RT. J. of the Amer(cid:173)
ican  Medical Informatics Association,  2000.  Fall  Sympo(cid:173)
sium Special Issue. 

[Spackman, 2001]  K. Spackman.  Normal forms for descrip(cid:173)
tion  logic  expressions  of clinical  concepts  in  SNOMED 
RT.  J.  of the  American  Medical  Informatics  Association, 
2001. Symposium Supplement. 

[Tarski,  1955]  A. Tarski.  A lattice-theoretical  fixpoint  theo(cid:173)
rem  and  its  applications.  Pacific  Journal  of  Mathematics, 
5, 1955. 

324 

DESCRIPTION LOGICS 

