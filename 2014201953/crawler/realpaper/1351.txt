2.PAK: 

A  SNOBOL-BASED  PROGRAMMING  LANGUAGE  FOR 

ARTIFICIAL 

INTELLIGENCE  APPLICATIONS 

Session  25  Hardware  and  Software 
for  A r t i f i c i al 

Intelligence 

JOHN  MYLOPOULOS,  NORMAN  BADLER,  LUCIO  MELLI  AND  NICHOLAS  ROUSSOPOULOS 

DEPARTMENT  OF  COMPUTER  SCIENCE,  UNIVERSITY  OF  TORONTO 

Edge 

l a b e ls 

or  more  atoms  s e p a r a t ed  by  u n d e r s c o r e s. 
f i r st  atom 
w h i le  subsequent  atoms  are 

t he  a t t r i b u te  of 

i ts  modi  f i e r s. 

t he  p r o p e r t y, 

( p r o p e r t i e s)  c o n s i st  of  one 
The 

is 

I n f o r m a t i on  can  be 

data  base  by  m a t c h i ng 
a g a i n st 

i  t. 

r e t r i e v ed 

from 
( g r a p h)  p a t t e r ns 

t he 

P a t t e r ns  arc  s p e c i f i ed 

in 

quences  of  p a th  d e s c r i p t i o n s. 
t he  p a t t e rn 

terms  of  s e­
For  e x a m p l e, 

<$X,(LEFT_AARB?YJ,  (FAR).SW-

c o n t a i ns  one  p a th  d e s c r i p t i on  which  w i ll 
match  p a t hs 

t h at 

(a)  Begin  at 

t he  node  w h i ch 

is 

t he  v a l ue  of 

atom  X 

, 

(b)  Move  a l o ng  an  edge  whose 

l a b el  has  LEFT 

is 

f o l l o w ed  by  at 

l e a st  one 

as  a t t r i b u te  and 
m o d i f i e r, 

( c)  Move  a l o ng  an  edge  whose 

l a b el  has  FAR 

as  a t t r i b u t e, 

(d)  End  at  node  $W. 

If  such  a  p a th  c o n n e c ts  nodes 
f or  a  p a r t i c u l ar  d a ta  b a s e, 

$W 
match  succeeds  and 
Y 
a s s i g n ed 
, 
match 
d u r i ng 
P a t t e r ns  are  e v a l u a t ed  by 
t he 

the  m o d i f i er  of  LEFT 

r e t u r ns 
t he  m a t c h. 

f u n c t i on  SEARCH. 

and 
t he  p a t t e rn 
is 

l a st  node  v i ? i t ed 

,  w h i le 
t he 

t he  graph  p a t t e rn 

to  atom 

$W 

$X 

to 

AARB 
is  a 
will 
match  any 
o t h er  b u i I t - in 
s i m i l ar 
tho 
u s er  s p e ci  fy  c 
graph  p a t t e r ns 
is  e s s e n t i a l ly 
m a t c hi ng  and  c 
t he  s t r i ng  p at 
SNOBOL. 

l.pak  o f f e rs  s e v e r al 

s p e c i al  p r o p e r ty  p a t t e rn  w h i ch 
atom. 
p r o p e r ty  p a t t e r ns  and  o p e r a t o rs 
se  o f f e r ed  by  SNOBOL 
t he 
l a b e ls 
l a s s es  of  edge 

to  h e lp 
in  h is 

Thus 

( g r a p h)  p a t t e rn  m a t c h i ng 

d r i v en  by  p r o p e r ty  p a t t e rn 

an  be  e a s i ly 
t e rn  m a t c h i ng 

implemented  u s i ng 

f a c i l i t i es 

in 

Note 

t h at 
w h i ch  w i ll  mat 
e x a m p l e, 
t he  p 
SEARCH( 
c o u ld 
r e t u rn  n 
The  p a t t e rn  ma 
of 
two  nod 

t he 

t h e re  may  be  s e v e r al  p a t hs 

For 

t he  same  p a t t e r n. 

ch 
a t t e rn  match 
<$X,(LEFT),(ABOVE^FAR)>) 
ode 
nZ 
t ch  however  w i ll 
es  . 

In  F I G.  2. 
r e t u rn 

n1 

or 

j u st  one 

D e s c r i p t i ve  Terms: 
SNOBOL,  b a c k t r a c k i n g, 
a r t i f i c i al 

i n t e l l i g e n c e. 

Programming 

l a n g u a g e, 

r e l a t i o n al  d a ta  b a s e, 

A b s t r a ct 

age 
w h i ch  o f f e rs 

of 
be  s t o r ed 

T h is  paper  d e s c r i b es  a  programming 
f or  A r t i f i c i al 

I n t e l l i g e n ce  a p p l i c a t i o ns 

l a n g u­

(a)  a  d a ta  b a s e, 
f o rm  of  a  c o l l e c t i on 
l a b e l ed  d i r e c t ed  graphs  where  knowledge  can 

t he 

in 

(b)  p a t t e rn  d i r e c t ed 

and  p a t t e rn 

i n v o k ed 

i n f o r m a t i on 
f u n c t i on  c a l ls 

r e t r i e v al 

(c)  p r i m i t i ve  s t a t e m e n ts  w h i ch  e n a b le 

t he 
f l e x i b le  s e a r c h i ng  a l g o r-

to  c o n s t r u ct 

user 
i t h m s. 

The 

language 

is  an  e x t e n s i on  of  SNOBOL 

in 

i ts  d e s i gn  and 
SNOBOL's  s t r i ng  p a t t e rn  m a t c h i ng 
f or 

( g r a p h)  p a t t e rn  m a t c h i n g. 

i m p l e m e n t a t i on  and  uses 

i ts  own 

f a c i l i t i es 

d e s i g n ed 

1. 

I n t r o d u c t i on 
l.pak  was 
to 

f a c i l i t a te  AI 

o r d er 
It 
v e r s i ty  of  T o r o n t o. 
by  o t h er 
languages  d e si 
such  as  C0NNIVF.R[1,2]  , 
S A I L [ 5 , 6 ],  and  our  d e ci 
an  e x t e n s i on  of  SNOBOL 
( in 
i n e x p e n s i ve 
terms  o 
r e q u i r ed 
f or 
t he  e x e c ut 
T h is  paper  o n ly  di 
l.pak, 
of 
t he 
t u r es 
f e a t u r es  of 
r e l a t i on 
to 
f or  AI  ,  and 
t he  success 
m e n t a t i o n.  More  d e t a il 
a v a i l a b le  e l s e w h e re 
[ 7] 
t he 
r e a d er 
of  SNOBOL 

f a m i l i ar 

is 
[ 8 ]. 

how 

i n f l u e n c ed 
reasons 

it  as 
r e l a t i v e ly 

to 

implement 

f or  s i m i l ar 

i m p l e m e n t ed 

in 
t he  U n i-

and 
r e s e a r ch  at 
s  d e s i gn  was 
gned 
PLANNFR[3],  Q A 4 [ 4 ], 
si  on 
and  keep 
f 
i on  of  p r o g r a m s ). 
scusses 
t he  main 
y  can  be  u s e d, 
f e r ed  by  o t h er 
of 
t he  c u r r e nt 

t i me  and  space 

t he 

it 

i m p l c-
language  are 
t h at 

t he 
is  assumed 
t he  b a s ic 

f e a t u r es 

s  on 
It 
w i th 

f e a-
t h e ir 
l a n g u a g es 

2. 

The  Data  Base 

The  d a ta  base 
s i s ts  of  a  c o l l e c ti 
graphs 
( h e r e a f t er  g 
in  F I G.  1. 
l i st 
i n t r a n s i t i ve  edges 
n o d e,  w h i ch  d e f i ne 
o b j e ct 
r e p r e s e n t ed 
w h i ch  h o ld  b e t w e en 
of 
t he  same  g r a p h. 

A 

A 

l i n e ar  o r d er 
each  g r a ph  d e f i n ed 
NEXT. 

t r a n s i t i ve  a n d / or 

l.pak  p r o g r am  c o n-

l a b e l ed 
t h at  shown 

f or  each 
on  of  d i r e c t e d, 
r a p h s)  such  as 
of 
is  a s s o c i a t ed  w i th  each 
e i t h er  p r o p e r t i es  of 
by) 
t he  node  and  o t h er  e l e m e n ts 

( t he 
r e l a t i o ns 

t he  node  or 

e x i s ts 

f or 

by  s p e c i al  edges 

t he  nodes  of 
l a b e l ed 

TYPE  SUN 

F I G.  2. 

ABOVE 

ABOVE 

TYPE  HOUSE 

TYPE  TREE 

691 

We  w i ll  show 

l a t er  how 

to  g e n e r a te  a ll 

t he  m a t c h i ng  a l t e r n a t i v e s. 

I n f o r m a t i on  can  be  added 
t he  d a ta  base 

t h r o u gh 

f r om 
f u n c t i o ns  ADD  and  DEL. 

to  or  d e l e t ed 

t he  s p e c i al 

ADD's  main 

f u n c t i on 

is 

to  c r e a te  new 

i n­

f o r m a t i on  w i th  a  g r a ph  as  c o n t e x t. 
e x a m p l e, 

f u n c t i on  c a ll 

t he 

For 

A D D ( < $ X , ( L E F T ) , ( F A R ) , ? W >) 

to  make 

t he 
(node) 

In 

i ts  argument  a g a i n st 
t he  p r o c e s s,  a 

w i ll  c r e a te  enough  new  edges  and  nodes 
t he  p a t t e rn  match  of 
d a ta  base  s u c c e s s f u l. 
v a l ue  w i ll  be  a s s i g n ed 
p e r f o r in  a  s i m p le  c o n s i s t e n cy - r e d u n d a n cy 
f or  each  new  edge  a t t a c h ed 
r e s p e ct 
l i st  of 
an 
n ot  be  added 
t he  edge 
a l r e a dy  c o n t a i ns  an  edge 
TALL  because 

Thus 
l a b e l ed  TYPE  HOUSE  w i ll 
l i st  of  a  node  w h i ch 
l a b e l ed  TYPE_H0USE 

to  a  n o d e,  w i th 
t h at  n o d e. 

ADD  w i ll  a l so 
t e st 

i n t r a n s i t i ve  edge 

r e d u n d a n t. 

t he  edge 

to  W 

to 

to 

is 

it 

. 

An  example  of  a  DEL 

f u n c t i on  c a ll 
D E L ( < ? X , ( L E F T ) , - $ Y , ( R T G H T ) >) 

t he  s p e c i al  o p e r a t or 

' -' 

s p e c i f i es 

is 

t he  node  or  edge 

where 
t h at 
d e l e t e d. 
match 
t he  c a ll 
d e l e t ed  a l o ng  w i th  a ll 
or  away 

t h is 
t a k es  p l a ce 

f r om 

For 

i t. 

it  o p e r a t es  on  must  be 
f u n c t i on  c a l l,  a  p a t t e rn 
f i r s t,  and 

if  u n s u c c e s s f ul 

f a i l s;  o t h e r w i se 

t he  node 

$Y 

is 

t he  edges 

t h at  p o i n t, 

to 

l.pak  a l so  o f f e rs  SNOBOL 

t a b l es  and 

r e p r e s e n t i ng 

f or 

a r r a ys  as  means 
M o r e o v e r,  as 
h is  own  d a ta 
E x p l i c it 
u s i ng  CONS,  CAR  and  CDR  and 
p r o vi d e d. 

in  SNOBOL, 
t y p e s. 

Express i o ns  such  as 

in f o r m a t i o n. 

t he  u s er  can  d e f i ne 

l i st 

f a c i l i t i es 
l i st  n o t a t i on  are 

may  be  used 
is  a 
of 

L 

($A,  $B,  $C,  $D) 

$L  = 
to  c o n s t r u ct 
f o ur  e l e m e nt 

l i s t s;  h e re 
l i s t. 

t he  v a l ue 

to 

t h e ir 

t he  s t a t e m e nt 

DEL(<$X,  (LEFT)  ,  -  (R1GIITJVB0YE) >)  : S ( A ) F ( B) 
t he 

,  and  w i ll  a t t e m pt 

A 
l a b el  matched  R1GHT_AB0VE, 

to  d e l e te 

if 

3- 

Program  S t r u c t u re  and  C o n t r ol 
l.pak 
s i m i l ar 

s t a t e m e n ts 

are 

For  e x a m p l e, 

SNOBOL  c o u s i n s. 
A: 
is 
l a b e l ed 
edge  whose 
p a t t e rn  match 
a g a i n st 
t he  d a ta  base  s u c c e e d s. 
f u n ct i on  c a ll  s u c c e e d s,  c o n t r ol 
to 
s t a t e m e nt 
Each 

l a b e l ed  B 
l.pak 

,  o t h e r w i se  c o n t r ol 

s t a t e m e nt  w i ll 

of 

A 

. 

t he 
<$X,(LEFT),(R]CHT_ABOVE)> 
t he  DEL 

If 

is  passed  back 

is  p a s s ed 

to 

t he 

t h is  can  be  used 

f or  p r o g r am  c o n t r o l. 

and 
l e ss  o t h e r w i se  s p e c i f i e d,  c o n t r ol  w i ll  pass 
t he  n e xt  s t a t e m e nt  of  a 
b a c k t r a c k i ng  as  e n c o u n t e r ed 
is  o n ly  o f f e r ed  d u r i ng  graph  p a t t e rn  m a t c h i ng 
in 
w i ll  be  d i s c u s s ed 

k i nd  of  b a c k t r a c k i ng 

l.pak  p r o g r a m. 

A  d i f f e r e nt 

in  PLANNER  and  QA4 

l a t e r. 

l.pak. 

Thus 

succeed  or 

f a il 
Un-
to 

4 . 
4 . 1. 

F u n c t i on  Requesjts_ 

E x p l i c it 

f u n c t i on 

r e q u e s ts 

l.pak 
PDEFINE. 
PDEFINE(NEW(X:NODE]NULL,Y:PROPERTY|PATTERN,?  Z) 

can  be  d e f i n ed 
t he  s t a t e m e nt 

f u n c t i o ns 
For  e x a m p l e, 

t h r o u gh 

W_W1,NEW) 

f u n c t i on  named  NEW  w i th 

d e f i n es  a 
p a r a m e t e r s; 
have  as  v a l ue 
t y pe  PROPERTY  or  PATTERN,  w h i le 
c a l l ed  by 

f i r st  must  be  of 

t he  n u ll  s t r i n g, 

r e s u l t. 

Thus 

t he 

t he  s t a t e m e nt 

t y pe  NODE  or 

t he  second  of 
is 

t h i rd 

t he 

t h r ee 

f o r m al 

NEW($X1,$Y1,$Z1) 

f a il  even  b e f o re  NEW 
t h i rd  argument 

is  n ot  c a l l ed  by 

is  c a l l ed  because 
r e s u l t, 

w i ll 
t he 
w h i le 

NEW($X1,$Y1,?Z1) 

w i ll  p r o c e ed  w i th 
c a ll 
and 

$X1 

t he  e x e c u t i on  of 

t he 

f u n c t i on 

is  a  node  or 

is  a  p r o p e r ty  or  a 

if 
$Y1 
The  s p e c i f i c a t i on  of  a l l o w a b le 
f o r m al  p a r a m e t er  does  n ot  mean 

( g r a p h)  p a t t e r n. 
f or 

t y p es 
t h at 

t he 

t he  n u ll  s t r i n g, 

each 

t y pe  of 
f u n c t i on  c a l l; 
t he 

f u n c t i on 

f u n c t i on  arguments 

is 

it  o n ly  h e l ps 

r e q u e st  makes  s e n s e. 

f i x ed 

i n s i de  a 
to  check  w h e t h er 

The  same 

f u n c t i on  name  may  be  used 

i n s i de 

t h us  g i v i ng 

f u n c t i o n s. 

t he  same 
T h is 

s e v e r al  PDEFINE  c a l l s, 
name 
means 

to  s e v e r al  d i f f e r e nt 
t h at  a  s t a t e m e nt  such  as 
NEW($X1,$Y1,?Z) 

may  cause  s e v e r al 
f o u nd 
t h at  s u c c e e d s. 
name  s p e c i f i ed  by  a 
can  be  a  s t r i ng  p a t t e r n,  as 

In 
f a ct  , 
f u n c t i on 
in 

f u n c t i on  c a l ls  u n t i]  one 
f u n c t i on 

is 

t he 
r e q u e st 

in 

l.pak 

(T1I|AX)  ( $ X , $ Y , ? Z) 
t he  c a ll  of  any 

w h i ch  w i ll  cause 
t he  s t r i ng  p a t t e rn 
whose  name  matches 
( i . e .,  b e g i ns  w i th 
TH 
p a r a m e t er  d e s c r i p t i on 
ments  of 
f u n c t i on 
T h is 

is  matched  by 
r e q u e s t. 

t he 

or 

f u n c t i on 

(THJAX) 

AX)  and  whose 

t he  a r g u­

f e a t u re  o f f e rs 
f u n c t i on 
to 
theorem  p r o v e rs  where  each 

t he  u s er 
r e q u e st  s i m i l ar 

f l e x i b i l i ty 

in  s p e c i f y i ng  a 
t h at  o f f e r ed  by 
axiom  can  be  c o n s i d e r ed  as  a 
a  name 
to  be  c a l l ed  whenever 
it  may  be  of  u s e. 
t h at 
p i c i on 

f u n c t i on  w i t h o ut 
t h e re 

is  a  s u s­

U n l i ke  SNOBOL, 

t r e a ts 
n a t o rs  of  p r o g r a m m e r - d e f i n ed  d a ta 
r e f e r e n c es  and 
of  a 
w r i t es 

r e q u e s t. 

f u n c t i on 

T h u s, 

t a b le 

l.pak 

if 

l o o k u ps  as  s p e c i al  cases 

t he  u s er 

f i e ld  d e s i g­
t y p e s,  a r r ay 

CAR($X) 

1.pak  w i ll 
n a t o r, 
t a b le 
it  w i ll 
u n t il  one  of 

t ry 

to 

t r e at 

t h en  as  an  a r r ay 
l o o k u p,  and 
if  a ll 

t h is  as  a 
r e f e r e n c e, 
t h e se  a t t e m p ts 

f i e ld  d e s i g-
t h en  as  a 
f a i l, 

s t a rt  c a l l i ng 

f u n c t i o ns  named  CAR 

them  s u c c e e d s. 

r e q u e s ts 

t h at 

i n f o r m a t i on  n ot 

t he  d a ta  base 

in 
For  e x a m p l e,  a 
r e p r e s e nt  a  house  w h i ch  has  been 

is  a c t u a l ly 

t r ue 

4.2 

f u n c t i on 

t he  case 

is  o f t en 
in 

I m p l i c it 
It 
s t o r ed 
the  u n i v e r se  of  d i s c o u r s e. 
node  may 
r e c o g n i z ed  as  one  of 
in  a 
t h e re  e x i st  an  o b j e ct 
h o u s e ?"  may  be  a s k e d. 
answer 

l i ne  d r a w i n g,  and 

to 

t he  o b j e c ts 

r e p r e s e n t ed 

t he  q u e s t i on 
l e ft  of 

t he 

"Does 
t he 

The  u s er  may  a t t e m pt 

to 

it  by  w r i t i ng 
SEARCH (<-$X,  (LEFT_*  FCN)  ,?Y>  ) 

t he 
to  be 

If 

X 

in 

to 

t he 

l i ke 

*,FCN 

l a t e r. 

f a i l s, 

p o i n ts 

it  e x i s ts 

r e q u e s ts  ■ 

t h e re 
is  n ot 

r e p r e s e n t i ng 

t he  p a t t e rn  match 

t h e se 
i n t r o d u c ed 

is 
t he  v a l ue  of 

t he  n o t i on  of 
I n f o r m a l l y,  such 

imbedded.  We  w o u ld 
t he  p a t t e rn  match 

t he  node 
a rc  s p e c i al  m o d i f i e rs 

is  no  such  o b j e c t,  or 
r e p r e s e n t ed  by  a  node 
$X 

i n d e­
two  p o s s i b i l i t i es  and  have 
i m p ! i c it 

where 
h o u s e,  and 
d i s c u s s ed 
e i t h er 
b ut 
it 
graph  where 
to  keep 
pendent  of 
t h e r e f o re 
f u n ct i on 
r e q u e s ts  w i ll  be 
a t t e m pt 
t he  s u c c e s s f ul  e v a l u a t i on  of  a  p a t t e rn  match 
whenever 
t he  s p e c i al  m o d i f i er 
t he  end  of  a  p r o p e r ty  p a t t e r n. 
s p e c i al  m o d i f i er  w h i ch  s p e c i f i es 
t h at 
by 
p r e v i o us  e x a m p l e, 
edges  w h i ch 
l e a ve 
LEFT 
named"  LEFT  w i th 
f or  one 

t r e a t ed  d i f f e r e n t ly 
t he 
f o u nd  no 
(not 
f u n c t i o ns 
$X 

t h at  p r e c e de 
i t. 
t he  s y s t em  has 

i n f o r m a t i on  needed 

i m p l i c it  argument 

t h at  s u c c e e d s. 

t h e r e f o re  c a ll 

it  s h o u ld  be 

to  c o n s t r u ct 

t h an  atoms 

i n v o k ed  by 

t he  s y s t em 

and  match 

is  a l so  a 

in  an 
f or 

* F C N ), 

it  w i ll 

f o l l ow 

if 
$X 

LEFT 

l.pak 

FCN 

In 

* 

, 

f u n c t i on 

appears  at 

t h at  m o d i f i e rs 

l o o k i ng 

Thus 

t he  p a t t e rn  match 

SEARCH(<$X,(DIMENSIONS  AARB?Y  AARB?Z  AARB?W 

*  FCN)>) 

w i ll  e i t h er  match  an  edge 
p e r ty  p a t t e rn 

l a b el 

to 

t he  p r o­

DJMENS10NS_AARB?Y  AARB?Z  AARB?W 

r e s u l t,  w h i ch  w i ll  a t t e m pt 

t h r o u gh  Y,  2 

f u n c t i on  named 
f o r m al  p a r a m e t e r s, 

to 
t h is  case 
f or  w h i ch  we  are 

In 

. 

t he 

i ts  m o d i f i e rs 

it  w i ll  c a ll  a 
t h r ee 

r e t u rn 
,  or 

t he  d i m e n s i o ns  of 

and  w i ll 
and  W 
DIMENSIONS  w h i ch  has 
a ll  c a l l ed  by 
f i nd 
m o d i f i e rs  of 
t r y i ng 
ments  of 
a t t r i b u te  was  used  as  a 
example 

t he 

t he  p r o p e r ty 

$X 

to  e s t a b l i sh  an  edge  were  used  as  a r g u­
t he 
t he 

f u n c t i on  c a l l,  w h i le 
In 

f u n c t i on  name. 

i m p l i c it 

SEARCH(<$X,  (TYPE_HOUSE_TALL_VKRY_*__FCN)>) 

to  e s t a b l i sh 

( i n t r a n s i t i v e)  edge 

t he  o t h er  h a n d,  we  may  want 

f u n c t i on  TYPE  w i th  o n ly  argument 
, 

on 
t he  e x i s t e n ce  of  an 
l a b e l ed  TYPEJIOUSE_TALL_VERY  by 
t he 
$X 
$X 
f i n a l ly  VERY. 
e s t a b l i sh  an  edge 
s e v e r al 

t he  o u t p ut  of  TYPE, 

f u n c t i on  c a l l s. 

t h en  TALL  and 
In  o t h er  w o r d s,  an  a t t e m pt 

to 
t he  d a ta  base  may  cause 

f u n c t i on  HOUSE  w i th  arguments 

f i r st  c a l l i ng 
t he  node 

t h en 

and 

t he 

in 

5. 

G e n e r a t or  C a l ls 
G e n e r a t o rs  were 

and  used  e x t e n s i v e ly  by  CONNIVER  where 
p r o v i de  one  of 
c o n s t r u c t s. 
of  g e n e r a t i ng  a l t e r n a t i v e s. 

l.pak  o f f e rs 

i m p o r t a nt 

t he  most 

them 

language 

i n t r o d u c ed  by  PLANNER 
t h ey 

t o o,  as  a  method 

A  g e n e r a t or 
is  a s s i g n ed  a  name. 

and 

is  d e f i n ed  by  a  p i e ce  of  code 

For  e x a m p l e, 

GEN.INT, 

INTEGER; 
$INT  =  $ I N T + 1; 
$DOMAIN  =  C0NS($]NT,$D0MA1N) 

:  ( E X I T ); 

i n t e g er  g e n e r a t or  named 

INT. 

T h is 

in 

i ts  DOMAIN 

END.INT; 
d e f i n es  an 
g e n e r a t or  s i m p ly  c o n s i d e rs 
s t o r ed 
l i st 
CONNTVER's  p o s s i b i l i t i es 
by  1,  s t o r es 
it  as  v a l u e. 
t h is  g e n e r a t or  c a ll 
DOMAIN 
c a l l s. 

r e s u lt 

t he 

EXIT  s p e c i f i es 

t he 

f i r st  element 

(which 
l i s t ), 

is  s i m i l ar 
i n c r e m e n ts 

to 
it 
in  DOMAIN,  and  r e t u r ns 
t h at  e x e c u t i on  of 

l i st  s h o u ld  be  k e pt  a c t i ve 

is  c o m p l e te  and 

t h at 

i ts 
f u t u re 

f or 

A  g e n e r a t or  can  be  used  once 
to  an  atom. 

Thus 

bound 

it  has  been 

$X  <= 

I N T ( 5) 

to 

INT 

l i st 

X<  > 

to 
( 5 ). 

i ts  DOMAIN 

t he  g e n e r a t or 

X 
i n i t i a l­
Now  whenever  we 
INT  g e n e r a t or  w i ll  be  e v a l u­

a s s i g ns 
i z es 
w r i te 
a t ed 
Note 
t h e re  can  be  s e v e r al  a c t i ve  c o p i es  of 
g e n e r a t o r,  each  bound 
For  e x a m p l e, 

to  a  d i f f e r e nt  atom. 

r e t u r n i ng  a n o t h er 

t h at 
t he  same 

i n t e g e r. 

and 

t he 

, 

I N T ( 5 1; 
I N T ( 7 ); 

$X  <- 
$Y  <« 
$OUTPUT  =  X<  >  +  Y<  >; 
LT($OUTPUT,100) 
: S ( A ); 

A: 

t he  g e n e r a t or 

( 5 ). 

Y 

X 

to 

i n i t i a l i z ed 

t he  g e n e r a t or 

to 
i n i t i a l i z ed 

w i ll  a s s i gn 
l i st 
DOMAIN 
to 
a s s i gn 
DOMAIN 
( 7 ). 
l i st 
t h en  be  e v a l u a t ed  and  a s s i g n ed 
in  SNOBOL,  any  s t r i ng  a s s i g n ed 
a u t o m a t i c a l ly  p r i n t e d. 
w h e t h er 
and 
if  so 
7+9,  8+10 

t he  v a l ue  of  OUTPUT 

to 

is 

is 

It 

i ts 
INT  w i th 
It  w i ll  a l so 

INT  w i th 

i ts 

5+7  w i ll 
to  OUTPUT. 
to  OUTPUT 

As 

is 

t h en  checked 

l e ss 

t h an  100 

is  added  and  p r i n t e d, 

t h en 

argument 
g e n e r a t or  c a l l. 

to  be  used 

f or 

t h at  p a r t i c u l ar 

There  are  s e v e r al  b u i l t - in  g e n e r a t o r s. 

For  e x a m p l e,  NODES  w i ll  g e n e r a te  a ll 
t h at 
g i v en  graph  p a t t e r n. 

t he  end  of  a  p a th  w h i ch  matches  a 

if  we  w r i te 

t he  nodes 

l ie  at 

Thus 

$Z  <=  NODES(<$X,(LEFT),(ABOVE_FAR)>) 
f i r st 
is  e n c o u n t e r ed  w i th 

t i me  Z<  > 

t he  graph  shown 

in  FIG.  2, 

n] 

, 

t he  second 

is  c a l l ed  a g a in 

it  w i ll 

f a i l. 

it  w i ll 
t i me  node 

t he 
background 
r e t u r n,  s a y,  node 
n2 

,  and 

if 

it 

6.  More  on  B a c k t r a c k i ng 

t he  program  s t a te 

In  some  cases  b a c k t r a c k i ng 
in  case  of 
in  o t h e rs 

of 
not  be  n e c e s s a r y,  but 
t he  programmer  c o n s i d e r a b le  e f f o r t. 
a l l o ws  a 
f e a t u re  of  d e c l a r i ng  v a r i a b l es 
f u n c t i on  or  a  g e n e r a t or 

1.pak 
form  of  b a c k t r a c k i ng  by  e x t e n d i ng 

( i . e ., 
r e s et 
f a i l u r e)  w i ll 
it  w i ll  save 

l o c al 

to  a 

(a)  A ll  v a r i a b l es  w h i ch  appear 

in  s e v e r al  d i r e c t i o n s: 
f u n c t i on 

in  a 

t he 

t he 

l o c al 

f or  a 
f u n c t i on  or  g e n e r a t or  c a ll  by  u s i ng 
f u n c t i on  d e f i n­

or  g e n e r a t or  body  can  be  d e c l a r ed 
p a r t i c u l ar 
t he  keyword  VLOCAL  d u r i ng 
i t i on  or  g e n e r a t or  d e f i n i t i on  or  b i n d i n g. 
LOCALness  may  be  s p e c i f i ed  as  dependent  on 
success  of 
c a ll  by  u s i ng  SVLOCAL  or  FVLOCAE 
VLOCAL. 
s i t u a t i on 
r e s et 
program  v a r i a b l es  o n ly 
g e n e r a t or 

Thus  FVLOCAL  d e f i n es  a  b a c k t r a c k i ng 
f or 
( i . e ., 

f u n c t i on  or  g e n e r a t or 

f a i l u r e) 
f u n c t i on  or 

is  a s s o c i a t ed  w i t h. 

in  case  of 
f or  "the 

f a i l u re  of  a 

i n s t e ad  of 

it 

(b)  Changes  made 

to 

t he  d a ta  base  can  a l so 

the 

l o c al  by  u s i ng  SDLOCAL,  FDLOCAL  or 

be  d e c l a r ed 
DLOCAL. 
If 

the  user  wants  a 

r e s et  of  v a r i a b l es 
the  data  base  s t a t e,  he  can  use  SLOCAL, 

and 
FLOCAL  or  LOCAL. 
b i l i ty 
h is  program  he  c o n s i d e rs 
what,  c o n d i t i o ns  . 

in  s p e c i f y i ng  e x a c t ly  w h i ch  changes 

This  way  he  has  some 

f l e x i­
in 
r e v e r s i b le  and  under 

7. 

Examples 
T h is  s e c t i on  d e s c r i b e? 

programs  w h i ch  d e m o n s t r a te 
ready  d i s c u s s ed  and  p o i nt 
i m p o r t a n t. 
t h at  arc  not  as 
t h at  we  want 

Suppose 

t h r ee  s i m p le 
t he 

f e a t u r es  a l­
few  o t h e rs 

out  a 

l.pak 

to  d e f i ne  a  c o l l e c­

These 
to  a 

( g e o m e t r i c a l l y ). 
r e s p e ct 

f u n c t i o ns  named  LEFT  w h i ch  somehow 

t i on  of 
e x p r e ss  a d e q u a t e ly  our  own  n o t i on  of  what  LEFT 
means 
be  d e f i n ed  w i th 
o b j e c ts  and 
e x i s ts  a 
f a i ls  depending  on  w h e t h er 
sented  by 
t he  o b j e ct 

f u n c t i on  REL.LEFT  w h i ch  succeeds  or 

i ts  second  a r g u m e n t. 
F i r st  we  g i ve  a  d e f i n i t i on  of  LEFT  w h i ch 

i ts 
r e p r e s e n t ed  by 

t he  o b j e ct 
t he 

it  w i ll  be  assumed 

l i s t,  $ L I S T,  of 

f i r st  argument 

f u n c t i o ns  w i ll 

r e p r e­
l e ft  of 

t h e re 

t h at 

to 

is 

p o s t u l a t es 

i ts 

t r a n s i t i v i ty 

PDEFINE(LEFT(TA1L:NODE,HEAD:NODE)Z_AUX, 

LEFT,DLOCAL); 

BEGIN.LEFT; 

$Z  <-  N O D E S ( < $ T A I L , ( L E F T ) > ); 
$AUX  =  Z<  > 
ADIH<$AUX,(TRIED)>) 
I DENT($AUX,$HEAD) 
$AUX  -  Z<(<$AUX,(LEFT)>)> 

:F(FRETURN); 

: F ( B ); 
:S(RETURN); 

A: 

B; 
END.LEFT; 

:S(A)F(FRETURN); 

6+8 
e t c. 
In  g e n e r a l, 
a n g le  b r a c k e ts  a 
appended 
each 

t i me  he  c a l ls 

to 

t he  u s er  can  pass  w i t h in 
l i st  of  e x p r e s s i o ns 
to  be 
l i st  of  a  g e n e r a t or 
He  can  a l so  pass  an 

i t. 

t he 

t he  DOMAIN 

T h is 

f u n c t i on  w i ll  be  e v a l u a t ed  as 

f o l l o ws 

f or  g i v en  $TAIL  and  $HEAD: 

(a)  Z 

is  bound 

to 

t he  NODES  g e n e r a t or  des­

c r i b ed 

in  s e c t i on  S  w i th 

i ts  DOMAIN 

l i st 

i n i t i a l i z ed 
Thus 
to 

t he 

to 

t he  p a t t e rn 

f i r st  c a ll  of 

Z  w i ll 

t he  LEFT  of  $TA1L  w h i ch 
(b)  Each  node  a s s i g n ed 

< $ T A I L,  (LF.FT)> 

. 
r e t u rn  a  node 

is  a s s i g n ed 

to  AUX. 

to  AUX 

is 

l a b e l ed 

TRIED  by  ADD. 
i t i ve  edge 
it  c a n n ot  change 
node 
( c) 

to 
It 

to  $HEAD,  and 

If  $AUX  a l r e a dy  has  an 

i n t r a n s-

l a b e l ed  TRIED,  ADD 

f a i ls 

(because 

t he  d a ta  base)  and  a n o t h er 

the  LEFT  of  $TAIL 
is  checked  w h e t h er  $AUX 

is  a s s i g n ed 

to  AUX. 
I D E N T i c al 
f u n c t i on  c a ll  RETURNS; 

if  so 

t he 

is 

(d)  O t h e r w i s e,  a n o t h er  node 
to  AUX  and 

is  a s s i g n ed 

to 

t he  LEFT  of 

t he  new  g r a ph 
t he 

is  appended 

to 

$TAIL 
p a t t e rn 
DOMAIN 

<$AUX,  (LF.FT)> 

Z 

. 

l i st  of 
When  a ll 

t he  nodes 

t he  LEFT  of  $TAIL 

to 
Z  w i ll  S t a rt  g e n e r(cid:173)

t he  LEFT 
r e p e a t ed  u n t il  a ll 

to 

to 

t he  LEFT  of  nodes 
t h is  w i ll  be 

have  been  c o n s i d e r e d, 
a t i ng  nodes 
to 
of  $ T A I L,  and 
t he  nodes 
of  $TAIL  have  been 
Because  of 
argument  of  PDEFlNE,  a ll  changes  made 
d a ta  base  w i ll  be  e r a s ed  when 
t he  c a ll 
is  c o m p l e t e,  a l so  AUX,  Z  w i ll  be 
v a l u es 

t he  LEFT  of  n o d e s . .. 

t h ey  had  b e f o re 

t r i e d. 

t he 

to 

f u n c t i on  c a l l. 

t he  LEFT 

t h i rd 
t he 

t he 
to 
to  LEFT 
t he 

to 

r e s et 

Thus 

t h is  d e f i n i t i on  of  LEFT  d e f i n es  a 

t he  graph  where  $TAIL 

in  an  a t t e m pt 
f o r m u l a t ed  by  u s i ng 

b r e a d t h - f i r st  s e a r ch  of 
is 
imbedded 
it  has  been 
f e a t u r e. 
it 
t he 
l a t es 
r e l y i ng  on  g r a ph  p a t t e rn  m a t c h i ng  and 
f u n c t i on 

f i nd  $HEAD,  and 
t he  g e n e r a t or 
it  w i th 
f u n c t i on  w h i ch  a l so  p o s t u(cid:173)

t r a n s i t i v i ty  p r o p e r ly  of  LEFT,  by 

i n t e r e s t i ng 

to  compare 

f o l l o w i ng 

r e q u e s t s: 

i m p l i c it 

l.pak 

t he 

to 

is 

PDEFlNE (LEFT ( T A I L: NODE ,1IEAI): NODE), 

is 
,  such 

Here 

it 

is 

f i r st  checked  w h e t h er 

t h e re 

is 

if 

nl 

to 

it 
nl 

t h e re 

,  and 

t h is 
t h e re 

t he  c a s e, 

is  n ot 
is  a  n o d e,  say 

is  an  edge  w i th  a t t r i b u te  LEFT  c o n(cid:173)
and  $HEAD  can 

an  edge  w i th  a t t r i b u te  LEFT  c o n n e c t i ng  $TAIL 
to  $HEAD,  and 
c h e c k ed  w h e t h er 
t h at 
n e c t i ng  $TA1L 
be  c o n n e c t ed  w i th  an  edge 
c h e c k i ng 
has  s p e c i f i ed 
i n v o l v i ng  LEFT-named 
T h is 
f or  LEFT 
i t hm 
an 
f or  graphs 
m e t r i c a l ly  s t r a n ge  w o r l d s. 

is  d e p t h - f i r st  and  may  e n t er 
r e p r e s e n t i ng  geo(cid:173)

t r a n s i t i v i ty 
The  s e a r c h i ng  a l g o r-

r e c u r s i ve  d e f i n i t i on  of 

f u n c t i o ns  are  a l l o w e d. 

l a t t er  c o n d i t i o n, 

In 
t he  u s er 

in  o t h er  w o r d s. 

l a b e l ed  LEFT. 

it  d e f i n es 

r e q u e s ts 

f u n c t i on 

i n f i n i te 

i m p l i c it 

is  a 

l o op 

t h at 

t he 

f or 

nl 

The  second  d e f i n i t i on  of  LEFT  a c c e p ts 

two 

nodes  as  arguments  and  succeeds  or 
p e n d i ng  on  w h e t h er 
t he 
f i r st  node 
r e p r e s e n t ed  by 

is 
t he  second 

t he  LEFT  of 

t he  o b j e ct 

to 

f a i ls  de(cid:173)
r e p r e s e n t ed  by 

t he  o b j e ct 

PDEFlNE[LEFT(TAIL:NODE,HEAD:NODE)A  B, 

T LEFT)7 

The  g r a ph  p a t t e rn  match  e x e c u t ed  by 

f i n ds 

SEARCH 
t he  atoms  w h i ch  m o d i fy  REPR  on 
i n t r a n s i t i ve  edges  a s s o c i a t ed  w i th  $TAJL  and 
$HEAD  and  a s s i g ns 
r e s p e c(cid:173)
t i v e l y. 
d e s c r i p t i on  and 

to  A 
t he  end  of  one  p a th 

t he  b e g i n n i ng  of  a n o t h e r. 

them 
s p e c i f i es 

and 

' :' 

B 

The 

two  atoms  a s s i g n ed 

t he 

v a l u es  of 
are 
and  $HEAD 
f o u n d,  REL.LEFT  can  be 

t he  e l e m e n ts  of  $L1ST 
( F I G.  3 ).  Once 

A 

to 

B 
r e p r e s e n t ed  by  $TAIL 
t h e se  atoms  a re 

and 

c a l l ed  w i th  arguments 
o b j e c t,  j, 
r e p r e s e n t ed 

t he  o b j e c ts  o b j e c t . i, 
in  some  way. 

A 

t h i rd  p o s s i b le  d e f i n i t i on  of  LEFT  as  a 
r e p r e s e n t i ng  o b j e c ts 

r e t u r ns  nodes 

g e n e r a t or 
to 
passed  as  message 
a l so  a  g l o b al  v a r i a b l e: 

t he  LEFT  of  a  g i v en  node  $TAIL  w h i ch 
t he  g e n e r a t o r,  and 

is 
is 

to 

$Lt-ir 

<= 

L l i F T D E F ( # $ r A I Lj 

l i st 

to  LEFT 

i ts  DOMAIN 

i n i t i a l i z ed 

t he  g e n e r a t or 

T h is  s t a t e m e nt  a s s i g ns 
LEFTDEF  w i th 
the  u n e v a l u a t ed  e x p r e s s i on  $TAI1. 
it 
i ts  o p e r a nd  u n e v a l u a t ed  u n t il 
e r ed  at  e x e c u t i on 
t h e r e f o re 
s i m i l ar 
Below  we  d e f i ne  LEFTDEF. 
GEN.LEFTDEF,  NODE; 
GA:  SLEFTDEF  =  SEARCH (--  $LEFTDEF ,  (NEXT)>  )  ; 

to 
('W'  keeps 
is  e n c o u n t-

t he  SNOB0L,  u n a ry  o p e r a t or 

t i m e,  and 

'  * '  )  -

to 

is 

I  DENTf$LEFTDEF,$TAIL) 
SEARL'H(<$TAIL,  (LEFT_*_FCN)  ,$LEFTDEF>) 

:S(FRETURN)  ; 

$D0MA1N  =  ($LEFTDEF) 

:F(GA>; 

:  (EXl'I'")  ; 

END.LEFTDEF; 
Whenever 

t h is  g e n e r a t or 

is  e x e c u t e d, 

It 

is 

is 

t he 

it  h e re 

f i r st  a s s i g n ed 

is 
in  o r d er 

i m b e d d e d, 
to 

f o u nd  and  a s s i g n ed 

t he  g r a ph  where  STAIL 

t r a v e r se 
is 
t h at  we 

to  $ T A I L,  w h i ch  w o u ld  mean 

is  checked  w h e t h er  SLEFTDEF 

t he  s t a r t i ng  node  and 
t he  LEFT  of  $ T A I L; 
to 

is  done  a u t o m a t i c a l ly  by 
t he  NEXT  node 

t he  v a l ue  of  TAIL 
t he  s y s t e m ). 
to 

LEFTDEF 
( t h is 
Then 
LEFTDEF;  NEXT  d e f i n es  a  c i r c u l ar  o r d er  on 
nodes  of 
and  we  are  u s i ng 
t he  g r a p h. 
I D E N T i c al 
are  back  at 
more  nodes 
checked  w h e t h er 
is 
r e q u e s ts  are  a l l o w ed 
answer 
s t a t e m e nt 
a s s i g n ed 
of  LEFTDEF 
is  s et 
l i s t,  and  we  E X I T. 
LEFTDEF 
NEXT  node 
u n t il 

t he  c u r r e nt  v a l ue  of  LEFTDEF 
function 
If 
t he 
t he 
is 
t he  DOMAIN 

l a b e l ed  GA 
to  LEFTDEF',  o t h e r w i se 

t i me 
is  c a l l e d,  s e a r ch  w i ll 

t he  LEFT  of  $TA1L. 
f or 

l i st 
($LEFTDEE),  a  o n e - e l e m e nt 
Next 

t h ey  have  a ll  been  c o n s i d e r e d. 

t h e re  are  no 
is 
if  n o t, 

t h is  copy  of 
resume  w i th 

t he  g r a ph  where  $TAIL 

is  n e g a t i v e,  c o n t r ol 

t h is  c h e c k. 
r e t u r ns 

and  a n o t h er  node 

t he 
imbedded 

Implicit 

to 

to 

to 

in 

is 

it 

The  u s er  can  now  w r i te 
SEARCH(<$X,(LEFT 
*  FCN),$Y>) 
SEARCH(<$X,(LEFT~*_GEN),?Y>) 

or 
and  e x p e ct 
n e c e s s a ry 
c a ll 
( d e p e n d i ng  on  w h e t h er 

t he  s y s t em 
i n f o r m a t i on 

t he  a p p r o p r i a te 

f i nd 

t he 

to  e i t h er 
in 

t he  d a ta  base  or 

to 
f u n c t i o ns  or  g e n e r a t o rs 
is 

t he  s p e c i al  m o d i f i er 

694 

10.  Palme,  J.  Making  computers  understand 

language. 

n a t u r al 
I n t e l l i g e n ce  and  H e u r i s t ic  Programming, 
F i n d l er  N."  and  M e l t z e r,  B. 
Edinburgh  U n i v e r s i ty  Press,  1971. 

In  A r t i f i c i al 

(Eds . ). 

1 1.  Rumelhart,  D,,  Lindsay,  P.H.,  Norman,  D.A. 

f or  long-term  memory. 
A  process  model 
In  Organization  of  Memory,  T u l v i n g,  E. 
and  'Donaldson,  W. 
Press,  1972. 

(Eds . ),  Academic 

696 

