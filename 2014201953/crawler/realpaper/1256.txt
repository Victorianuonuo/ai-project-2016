A  CONTEXTUAL  RECOGNITION  SYSTEM  FOR  FORMAL  LANGUAGES* 

Stephen C 
The  University  of 
A u s t i n, 

.  Darden 
Texas  at  Austin 
Texas 

I n t r o d u c t i on 

This  paper  describes  work  in  progress  aimed 

the 

The 

to  process 

text  of  hand-

to  produce  h i g h - q u a l i ty  f i n al  output. 

at  obtaining  a  p r a c t i c al  recognition  system  by  f i l­
t e r i ng  the  noisy  output  of  an  inexpensive  charac­
ter  c l a s s i f i er 
through  m u l t i p le  stages  of  context 
analysis 
system  is  designed 
p r i n t ed  formal  languages,  such  as  programming  l a n­
guages  and  mathematical  n o t a t i o n.  The  system  is 
syntax-directed 
a  p a r t i c u l ar  language  is  constructed  by  a  one-time, 
algorithmic  analysis  of  the  language  grammar. 
The 
r e s u l t i ng  analysis  engine  massages 
output  by  successive  vocabulary  matching,  name-
space''"  c l u s t e r i n g,  and  syntactic  analysis  to  pro­
duce  as  output  a  s y n t a c t i c a l ly  v a l id  i n t e r p r e t a t i on 
of  the  t e x t,  w i th  as  many  errors  corrected  as  pos­
s i b l e.  A  more  complete  description  of  the  system 
can  be  found  in  Darden. 

that  a  contextual  processor 

the  c l a s s i f i er 

f or 

in 

the  language  that  is 

Figure  1  depicts  the  process  by  which  the  sys­
to  be  recognized. 

tem  " l e a r n s" 
This  knowledge  comprises  a  convenient  representa­
t i on  of 
the  grammar  and  a  dictionary  of  basic  sym­
bols  which  occur  in  the  grammar  ( e . g .,  DIMENSION, 
CONTINUE,  . . . ). 

Figure  2  depicts 
input 

the  r e s u l t i ng  analysis  engine, 
the  output  of  a  s i n g l e-

which  accepts  as 
character  c l a s s i f i e r, 
of  a l t e r n a t i v es 
is  designed 
types  of  redundancy 
exhibited  by  the  class  of  languages  under  study: 

the  form  of  a  l i st  of  lists 
This  system 

f or  each  character. 

to  e x p l o it 

three 

in 

vocabulary  redundancy  r e s u l ts 

from  the  grammatical 

s p e c i f i c a t i on  of  a  set  of  s t r i n gs 
bols)  which  have  a  high  a  p r i o ri  p r o b a b i l i ty  of 
of  occurrence; 

(basic  sym­

s t a t i s t i c al  redundancy  r e s u l ts  from  the  high  proba­
the 

b i l i ty  of  m u l t i p le  occurrence  of  members  of 
name-space  of  such  languages; 

This  work  was  supported  in  part  by  a  grant 

from  Texas  Instruments  Incorporated  and  in  part  by 
Public  Health  Services  Grant  GM15769  (NIH). 

The  c o l l e c t i on  of  names,  occurring  in  the 

t e x t,  which  are  supplied  by  the  author  of  the  t e x t, 
i . e ., 

i d e n t i f i e r s. 

* 

2 

Following  Duda  and  Hart,  we  r e f er  to  t h is 

the  a l t e r n a t i ve 

data  s t r u c t u re  as  a  " P - l i s t "; 
l i s ts  are  c a l l ed  " L - l i s t s ."  Each  a l t e r n a t i ve  l i st 
is  a 
is  composed  of  a  l i st  of  p a i rs 
character  and  c 
to 
the  logarithm  of  the  p r o b a b i l i ty  that  £ 
f a c t, 

( l . c)  where  i 
is  a  confidence  proportional 
in 

the  c o r r e ct  character. 

i s, 

s t r u c t u r al  redundancy  results 

from  the  grammati­

cal  constraints  on  concatenation  of  well-formed 
s t r i n g s. 

to 

three 

types  of  redundancy  are  necessary 
A ll 
successfully  clean-up  garbled  t e x t. 
Indeed, 
there  are  c e r t a in  errors  (such  as  recognizing 
XMAX  as  YMAX) 
that  can  only  be  detected  by  con­
sidering  semantic  redundancy  ( r e s u l t i ng  from  the 
property  of 
that  only  a  f r a c t i on 
the  s y n t a c t i c a l ly  v a l id  strings  are  meaningful, 
of 
e i t h er  a_  p r i o ri  or  in  context) . 
It  is  hoped  that 
uncorrected-error  rates  on  the  order  of  1%  can  be 
achieved  without 
p l e x i t i es  of  semantic  analysis. 

introducing  the  staggering  com­

these  languages 

Related  Work 

A  l u c id  discussion  of  past  approaches 

use  of  contextual  post-processors 
performance  of  pattern  c l a s s i f i e rs 
in  the  recent  paper  by  Duda  and  Hart.**  We  s h a ll 
not  duplicate 

t h e ir  e f f o r ts  here. 

to 
to  improve 
is  contained 

the 
the 

The  use  of  an  e r r o r - c o r r e c t i ng  parser  as  a 
f i r st  suggested  by 

the  u t i l i z a t i on  of  context  and  have  shown 
the  a p p l i c a t i on  of  syntax  analysis  does  not 

contextual  post-processor  was 
I r o n s .*  The  FORTRAN  context  analyzer  of  Duda  and 
Hart  is  a  specialized  instance  of  such  a  processor 
which  has  proven  the  soundness  of  the  idea.  They 
have  developed  a  formal  decision-theoretic  solu­
t i on  to 
that 
do  violence  to  the  formal  approach.  Our  own  work 
in  t h is  area  was  w e ll  underway  before  we  became 
f a m i l i ar  w i th  t h e ir 
n a t u r a l ly  been  influenced  by 
and  have  noted  the  points  in  the  body  of 
port  where  our  development  has  p r o f i t ed  from 
t h e ir  e f f o r t s. 

t h e ir  contributions 
t h is  r e­

i n v e s t i g a t i o n .2 ,3  We  have 

The  unbounded-context  parsing  system  described 

is  a  major  departure  from  c l a s s i­

in  t h is  report 
cal  parsers  such  as  that  described  by  I r o n s,  which 
do  not  take  i n to  consideration  s u f f i c i e nt  context 
to  make  r e l i a b le  e r r o r - c o r r e c t i on  decisions.  The 
parsing  system  most  s i m i l ar 
by  Unger. 
discuss  possible  extensions 
context  parser  which  derive  from  the  quick-checks 
used  by  Unger. 

In  the  f i n al  chapter  of  t h is  paper  we 

to  the  unbounded-

is  reported 

to  ours 

A  Normal  Form  f or  Context-free  Languages 

This  section  describes  a  p a r t i c u l ar  represen­

t a t i on  f or  context-free  (CF)  grammars 
been  developed  to  s a t i s fy  the  needs  of  an  e r r o r-
c o r r e c t i ng  parser. 

that  has 

When  a  human  context-analyzer  is  given  the 

task  of  c o r r e c t i ng  a  sample  of  garbled  t e xt 

Our  parser  requires 

in  general,  CF-grammars  may  contain  non-

that  every  basic  symbol 
of  a  RODEN-form  grammar  must  be  admissible.  How­
ever, 
admissible  symbols. 
mars  in  common  use, 
basic  symbols  in  FORTRAN  and  LISP  are  admissible. 
In  ALGOL, 
f o r, 
:■  do  are  inadmissible  due  to  the  construction 
which  permits 

Furtunately, 
t h is  is  not  a  problem.  A ll 

the  set  of  symbols  jLf, 

f or  the  CF-gram­

then,  e l s e, 

i f - t h e n - e l se  f o r- 
In  actual  p r a c t i c e, 
appears. 
the  problem  has  been 
eliminated  by  providing  c o n d i t i o n al  statements  with 
a  closing  basic  symbol: 

:«  -  do  JLf  - 
t h is  construction  almost  never 

i f - t h e n - e l s e - f i. 

in  ALGOL-68, 

then-else 

Indeed, 

. .. 

In  summary, 

the  RODEN  t r a n s l a t or  transforms  a 

in  the 

is  compiled. 

to  RODEN-form; 

t h e ir  corresponding 

l i s ts  of  basic  symbols  occurring 

broad  class  of  CF-languages 
process,  basic  symbols  are  examined  f or  admissi­
b i l i ty  and 
l i s ts  of  minimal 
covers  are  associated  w i th  the  proper  genatrices. 
A d d i t i o n a l l y, 
in 
the  f i n al 
form  of  the  handle  are  associated  w i th 
the  corresponding  g e n a t r i x,  and  a  d i c t i o n a ry  of 
a ll  basic  symbols 
This  d i c t i o n a ry 
then  analyzed  f or  any  entries  which  can  be  "ex­
tended"  (hence  the  term  extended  d i c t i o n a r y ).  That 
i s,  each  word  is  examined 
rence  of  t h is  word, 
contained  in  some  larger  unique  context. 
ample, 
ment, 
(fun)  by  ( ( f u n ),  of  a ll  FORTRAN  verbs  (verb)  by 
: ( v e r b ),  of  FORMAT  by  FORMAT(,  e t c. 
a  column  7 
cessing  FORTRAN). 

ignoring  spaces, 
in  the  d i c t i o n a r y,  of  a ll  LISP  functions 

if  every  occur­
in  s t r i n gs  of  the  language, 

is  used  as 
is  an  end  of  l i ne  in  pro­

is 
For  ex­
the  replace­

t h is  leads  to 

i n d i c a t o r, 

to  see 

is 

(: 

; 

I I I. 

Simulation  of  a  Single-character  C l a s s i f i er 

IV.  Context  Analysla 

The  f i r st 

two  phases  of  the  context  analysis 

system  are  aimed  at  reducing  the  combinatorial 
complexity  of  the  task  to  be  performed  by  the  syn­
tax  analysis  phase.  Since, 
cept  name-space  errors  can  be  corrected  by  syntax 
analysis,  care 
tionary  matching  and  c l u s t e r i ng  do  not  Introduce 
e r r o r s;  however,  neither 

taken  to  ensure  that 

In  p r i n c i p l e,  a ll  ex­

f o o l p r o o f. 

the  d i c­

is 

is 

4 .1  Extended-dictionary  Matching 

The  strategy  of  extended-dictionary  matching 

the 

f i r st  entry 

is  s i m i l ar  to  the  table  look-up 

(box  1,  Figure  2) 
method  used  by  Vossler  and  Branston.®  Spaces 
are  treated  as  e r r o r - f r ee  characters,  and  each 
substring  of  length  n  delimited  by  spaces 
is  pro­
cessed  in  t u r n.  The  substring  is  matched  against 
a ll  possible  d i c t i o n a ry  e n t r i es  of  length  n,  n - 1, 
. . .,  k  u n t il 
closer  than  a  f i x ed  minimum  distance  to  a  (possi­
b ly  proper)  substring  of 
l i s t. 
The  lower  l i m i t,  k,  on  the  length  of  entries 
to  be  matched  is  established  experimentally.  Pre­
s e n t l y,  w i th  up  to  35%  noise  and  50%  consistency 
(see  Section  I I I) 
in  the  simulated  data,  a  value 
of  k  =  2  has  been  found  to  introduce  no  erroneous 
matches 
FORTRAN  t e x t s. 

in  the  processing  of  LISP,  ALGOL,  and 

the  current  object  P-

found  which 

is 

is 

Data  f or 

t e s t i ng 

the  context  analysis  system 

are  provided  by  a  computer-simulated  character 
recognizer. 
free  t e xt  from  the  language 
The  garbled  output 
is 
the  context  analyzer. 

the  simulator  is  e r r o r-
to  be  i n v e s t i g a t e d. 

form  of  a  P - l i st 

The  input 

the 

f or 

to 

in 

the  simulator 

The  operation  of 

is  c o n t r o l l ed 
by  a  confusion  matrix  (constructed  bo  approximate 
the  e r r or  maps  reported  by  Duda  and  Munson^  f or 
t h e ir  TOPO  2  program),  a  noise  f a c t o r,  and  a  "con­
sistency" 

f a c t o r. 

that 

On  the  assumption  that  c l a s s i f i e rs  can  be  con­
the  correct  character  w i ll  almost 

structed  so 
always  appear  among  the  f i r st  few  e n t r i es  of  the 
output  a l t e r n a t i ve  l i s t, 
the  confusion  matrix  has 
about  s ix  non-zero  e n t r i es 

f or  each  character. 

The  noise  f a c t or  controls  the  undetected  -error 
The  consistency 
r a te  of  the  simulated  c l a s s i f i e r. 
f a c t or  is  a  measure  of  the  p r o b a b i l i ty 
t h a t,  given 
two  a l t e r n a t i ve  vectors  f or  the  same  character,  a 
character  which  occurs 
in  the  other  vector. 
i n t e r-
s t r i ng  distance  measure  (see  4 . 2 ),  used  by  the  sys­
tem, 
n a t i ve  vectors 

improves  as  the  mutual  consistency  of  a l t e r­

in  one  vector  w i ll  appear 

The  r e l i a b i l i ty  of 

increases. 

the 

-600-

t o t al 

Thirty-one  out  of  f o r t y - t h r ee 
a ll  names  were  i d e n t i f i e d, 
instance  of  every  name.  A f t er  syntax  analysis 
two  instances  of  the  name 
'I'  were  i n c o r r e c t ly 
i d e n t i f i ed  as 
' J ';  a ll  other  instances  of  names 
were  c o r r e c t ly  recognized. 

including  at  least  one 

instances  of 

4.2.1  Sample  c o l l e c t i o n.  The  c l u s t e r i ng 

text 

the  e n t i re 

algorithm  processes 
f or  "name-like" 
substrings,  constructing  as  many  groups  as  needed 
of  i d e n t i c al  length  samples.  Presently,  a  P - l i st 
is 

treated  as  a  possible  name  if 
it  contains  no  spaces, 
it  contains  no  characters  c l a s s i f i ed  as 
delimiters 
along  w i th  the  RODEN-form  grammar)  whose 
confidence  exceeds  a  f i x ed  value, 

information 

(a) 
(b) 

input 

( t h is 

is 

(c)  a  l e t t er  is  among  the  a l t e r n a t i v es  f or 

the 
(d)  no 

f i r st  p o s i t i o n, 
longer  P - l i st  s a t i s f y i ng  ( a ) - ( c)  con­

tains 

i t. 

It 

into 

is  b u i lt 
that 

t h is  sampling  procedure 

t h is  d e f i n i t i on 
is  clear 

languages  define  names  in  t h is 
the  c l u s t e r i ng 

Since  most  formal 
way, 
program. 
w i ll  c o l l e ct  a  number  of  s t r i n gs  which  are  not 
names  at  a l l,  but  substrings  of  names,  composites 
of  names  and  other  symbols,  etc.  The  assumption 
is 
generate  singleton  clusters  of  t h e ir  own  and  w i ll 
be  ignored  in  the  u n i f i c a t i on  step  at 
the  end  of 
t h is  procedure. 
Table  1,  six  such  s t r i n gs  were  collected  by  the 
sampling  procedure;  a ll 
and  were  discarded. 

these  undesirable  strings  w i ll 

In  the  example  described  by 

formed  degenerate  clusters 

form  de­

that 

for 

in  t u r n. 

the  representative  samples 

4.2.2  Clustering.  The  c l u s t e r i ng  procedure 
is  applied  to  each  group  of  i d e n t i c al  length  sam­
ples 
F i r s t,  a  set  of  "representatives" 
is  selected  from  the  sample.  The  procedure  for 
locating 
to 
is  similar 
that  used  by  Casey  and  Nagy9  to  select  an  i n i t i al 
the  c l u s t e r i ng  stage  of  t h e ir 
set  of  centers 
recognition  system. 
The  f i r st  sample  is  chosen 
as  the  f i r st  representative.  The  sample  having 
maximum  separation  (defined  below) 
from  the  f i r st 
is  taken  as  the  second  representative.  S i m i l a r l y, 
the  remaining  representatives  are  chosen  to  be 
those  w i th  the  maximum  minimum  separation  from 
those  already  selected. 
i t e r a­
ted  u n t il  a  sample  is  selected  whose  separation 
is  less  than  a  f i x ed  minimum  distance. 
is  as­
sumed  that  at  t h is  point  an  instance  of  each  name 
of  length  n  has  been  located. 

This  procedure  is 

It 

The  success  of  t h is  procedure 

is 

in  large 

measure  dependent  on  the  performance  of  the  d i s­
tance  f u n c t i o n,  defined  f or  two  P - l i s ts  U  and  V 
where 

where  the  associated  confidences  are  suppressed 
f or  c l a r i t y. 

4.2  Name-space  Clustering 

The  c l u s t e r i ng  procedure  (box  2,  Figure  2)  em­

the  requirements  of  handling 

ployed  by  the  system  is  related  to  the  methods  em­
ployed  by  Duda  and  Hart-3,  but  necessarily  d i f f e rs 
in  several  ways  due  to 
a  v a r i e ty  of  languages. 
The  strategy  is  based  on 
the  assumption  that  a  s u f f i c i e n t ly  sensitive  c l u s­
t e r i ng  method  can  discriminate  names  without  a 
p r i o ri  knowledge  of 
l i k e ly 
on  both  the  length  and  average  number  of  occur­
rences  of  names 
f or 
the  algorithm  to 
of  a ll  of  the  names 
currences  of  each  name. 
are  overlooked  w i ll  very  l i k e ly  be  found  by  the 
pattern  associating  routines  which  use  the  diction­
ary  of  known  names  compiled  during  t h is  pass. 

i d e n t i fy  at  least  one 
than  to  locate  a ll  of  the  oc­

in  which  names  are 
This  assumption  obviously  depends 

Those  occurrences  which 

important 
instance 

the  context 

It  is  more 

to  occur. 

in  the 

t e x t. 

Typical  performance  of 

the  method  is 

indicated 

by  the  r e s u l ts  of  c l u s t e r i ng  analysis  on  a  272-
character  ALGOL  program.  The  output  of  the  simu­
l a t ed  character  c l a s s i f i er  exhibited  an  uncorrected 
error  rate  of  33.1%  and  a  consistency  factor  of 
48.8%.  The  r e s u l ts  are  given  in  Table  1. 

descended  from  an  a u x i l i a ry  pointer  on  the  L - l i s t. 
This  a u x i l i a ry  l i st 
is  used  to  restore  the  o r i g i n al 
s t r u c t u re  if 
be  i n v a l id  and  has  the  s t r u c t u re 

the  selected  entry 

found 

l a t er 

to 

is 

I 

the 

where  L1.  is 
decision 
made.  We  s h a ll  r e f er  to  t h is  operation  as  the  sup­
press  operation. 

i n t e g e r - l e v el  number  at  which 
the  associated  L - l i st  was 

to  suppress 

the 

-601 

The  e n t r i es  relevant  to  e r r or  recovery 

l e f t-  and  r i g h t - e x t e n s i b i l i ty  i n d i c a t o r s, 

brackets. 
are: 
l e f t-  and  r i g h t - t r u n c a t i on  i n d i c a t o r s,  and  an  en­
t ry  which  r e f l e c ts 
covering  bracket  assignment. 

the  detection  of  an  I n v a l id 

4.4  Syntactic  Analysis 

the  current  object  P - l i st 

inexpensively  and  is  able  to  correct  many 

the  d e t a i l ed  structure  of 
the  parser  associates 

is  nearly  free  of 
Through  h i e r a r c h i c al  consistency 
the  parser  is  able  to  discard  f r u i t l e ss 

By  combining  the  unbounded-context  parser  and 
a  p a r t i c u l ar  RODEN-form  grammar  we  obtain  an  error-
c o r r e c t i ng  parsing  system  which 
back-tracking. 
checking, 
paths 
errors  before  exploring 
the  t e x t.  At  each  l e v el 
w i th 
the  current  pattern 
sponding  basic  symbols.  The  method  employed 
causes  the  p a t t e rn  to  be  s e l f - p o s i t i o n i n g. 
property, 
that  a ll  basic 
symbols  of  the  p a t t e rn  have  been  mapped  w i th  a 
improves 
high  average  confidence 
the  parser's  p r o b a b i l i ty  of  success 
in  selecting 
the  correct  recovery  steps  when  errors  are  de­
tected. 

(p)  on  the  basis  of  corre­

(a)  an  instance  of 

together  w i th 

the  P - l i s t, 

This 

fact 

the 

to 

4.4  1. 

The  basic  strategy  of  parsing. 

In 

to  the  current  subgoal  G. 

the  parser  is  considered  to  be  ana­

the  f o l l o w i n g, 
l y z i ng  a  w i th  respect 
G  may  be  a  phrase  (a  single  non-terminal),  a 
basic  symbol,  or  a  s k e l e t al 
assigned  by  a  h i g h e r - l e v el  goal. 
tern  ( p ), 
cover  l i s t s,  and  basic  symbol 

then  M  and  S  are  the  associated  minimal 
l i s t s,  r e s p e c t i v e l y. 

instance  of  a  pattern 

If  G  is  a  pat­

If  G 

is  a  basic  symbol, 

matched  to  the  t e xt  at  a  higher  l e v el 
s o c i a t i on  procedure),  so 
the  value  of 
that  match. 

it  has  already  been 
(by  the  as­

the  parser  simply  reports 

If  G 

is 

the  phrase 

( i d e n t i f i e r ), 

the  parser 

invokes  a  special  process  which  attempts 
p l o it 
occurrence  of 

the  r e l a t i v e ly  high  a  p r i o ri  p r o b a b i l i ty  of 

i d e n t i f i er  d i c t i o n a ry  e n t r i e s. 

to  ex­

If  G 

is  any  other  phrase, 

the  parser  r e t r i e v es 
the  p a t t e r n,  p,  associated  w i th  G,  and  matches  the 
p a t t e rn  to 
three  steps  of  covering, 
association,  and  r e s o l u t i o n,  described  below. 

in  the 

text 

the 

i t s e lf 
In  the  case 

If  G 

is  a  p a t t e r n, 

the  parser  applies 

to 

the  parser  returns 

the  parser  to 
the 

the 
to  achieve  a  s a t i s f a c t o ry  match. 

r e c u r s i v e ly  to  each  subpattern  of  p. 
of  d i s j u n c t i ve  p a t t e r n s, 
f i r st  d i s j u n ct 
f a i l u re  of  a 
In  the  case  of  conjunctive  p a t t e r n s, 
invoke  the  recov­
subpattern  causes 
ery  procedure  appropriate 
type  of  f a i l u r e. 
The  d e t a i ls  of  f a i l u re  recovery  are  discussed  be-
low.  On  exhausting  a ll  subpatterns  of  p, 
parser  invokes  a  scoring  procedure  to  evaluate  the 
success  of  the  analysis 
been  detected  in  d i s j u n c t i ve  structures  are  r e­
ported  to  the  parent  goal  at 
j u n c t i ve  p a t t e r n s,  comparison  of 
substructure  to  the  bounds  of  G  reveals  the  pre­
sence  of  L-drop  and  R-drop  errors  (see  Error  Re­
covery  and  Correction  below). 

f or  G.  Errors  which  have 

the  bounds  of 

t h is  p o i n t. 

In  con­

the 

the 

. 

two  characters  correspond, 
If  in  any  p o s i t i on  no 
then  d(U,V)  ■ 
in  general, 
two  a l t e r n a t i ve 
I f, 
vectors  f or  the  same  character  have  a  reasonable 
high  consistency, 
then  t h is  should  be  a  r i c h er  dis­
tance  measure  than  a  simple  sum  of  the  highest  con-
fidence  corresponding  characters. 

The  f i n al  stage  of  the  c l u s t e r i ng  procedure 

is  very  simple: 
to 

the  c l u s t er  w i th 

each  remaining  sample  is  assigned 

the  closest  representative. 

4.2.3  U n i f i c a t i o n.  When  a ll  c l u s t e rs  of  a 

given  length  have  been  established,  a  u n i f i c a t i on 
procedure  is  applied 
to  a ll  but  singleton  c l u s t e rs 
to  select  the  highest  confidence  common  s p e l l i ng 
f or  each.  Then,  as  in  the  d i c t i o n a ry  matching, 
each  c l u s t er  member 
by  t h is  common  s p e l l i n g. 
are  suppressed  at  l e v el  zero. 

The  deleted  L - l i st  entries 

is  replaced 

t e xt  P - l i st 

the 

in 

While 

there  are  c e r t a i n ly  many  refinements 

is 

the  greatest 

in  the  syntactic 

to  l i e,  and  t h is 

to  apply  e f f o rt  where 

The  only  improvements  c u r r e n t ly 

which  can  be  incorporated  i n to  t h is  procedure,  our 
philosophy  is 
returns  appear 
analysis  phase. 
planned  f or  the  c l u s t e r i ng  phase  are  (a)  a  r e f i n ed 
distance  measure  which  w i ll  attempt 
presence  of  p r e f i x es  ( s u f f i x e s) 
and  give  r e l a t i v e ly  more  weight 
of  the  p r e f ix  ( s u f f i x) 
dynamic  computation  of  the  center  of  a  c l u s t er  as 
new  members  are  added. 

the 
( e . g .,  xmax,  ymax) 
the  c o n t r i b u t i on 
to 
the 

to  the  distance;  and  (b) 

to  detect 

4.3  The  Parse  Graph 

in  mind 

The  o v e r a ll  structure  of 

to  f o l l ow  the  next  section  on  syntac­
it 

In  order 
to  have 
the 
t ic  a n a l y s i s, 
is  necessary 
the  current  state  of 
parse  graph  which  represents 
that  analysis. 
the  parse 
graph  i s,  n a t u r a l l y,  a  t r e e.  The  nodes  of  the  tree 
have  a  branching  s t r u c t u re  which  corresponds 
to  the 
RODEN-form  meta-operator  at  the  node  (thus 
are  c o n j u n c t i v e,  d i s j u n c t i v e, 
t i ve  nodes). 
( e . g. 
Associated  w i th  each  node  are  a  number  of  i n d i c a-
t o rs  which  describe  the  state  of  the  parse  repre­
sented  by  the  subgraph  descended  from  the  node. 
Among  the  possible  e n t r i es  are  those  which  give 
value  of  the  basic  symbol  match, 
acters 
and  the  l e v el  number  of  the  parent  cover  f or  covering 

(statement))  and  terminal  nodes  ( e . g .,  begin). 

in  basic  symbols  which  selected  t h is  node, 

the 
the  number  of  char­

there  are  phrase  nodes 

i t e r a t i v e,  and  selec­

In  a d d i t i o n, 

there 

-602-

(strings  with  equal  numbers  of  brackets  are  ordered 
by  descending  total  confidence),  a ll  possible 
strings,  taking  the  f i r st  well-formed  nest. 

If  a  well-formed  nest  is  found,  the  portions 

of  the  P-list  bounded  by  each  bracket  pair  are 
suppressed  one  level  by  combining  that  portion  of 
the  P-list  with  the  new  operator,  *cover*. 

For  example,  consider  processing  the  P-list 

for  the  covers  associated  with  (arithmetic  expres­
sion)  in  ALGOL,  where  M  contains  the  bracket  pairs 
(  )  and  [  ].  We  have  the  B-list 

The  algorithm  selects  the  correct  nest 
and  transforms  the  P-list  to 

4.4.2  Analysis  of  the  (identifier)  phrase. 
The  special  processing  of  identifiers  serves  to 
compensate  for  the  lack  of  structure  of  this  phrase 
type,  as  defined  for  most  languages.  Otherwise, 
virtually  any  text  segment  would  satisfy  the  syn­
tax  of  (identifier). 
It  is  assumed  that  the  iden­
t i f i er  dictionary  contains  an  instance  of  every 
identifier. 

First,  o  is  matched  to  a ll  identifier  dic­

tionary  entries  of  the  same  length. 
If  a  s u f f i­
ciently  good  match  is  found,  the  parser  reports 
the  value  of  the  match.  This  f a i l i n g,  the  process 
attempts  to  determine  if  a  is  a  head,  t a i l,  or 
proper  substring  of  a  valid  identifier  occurring 
in  the  text  P-list  which  includes  a. 
If  an  identi­
fier  is  found  which  matches  the  P-list  in  a  neigh­
borhood  of  a,  the  parser  reports  the  appropriate 
type  of  add  or  drop  error. 

4.4.3  Matching  patterns  to  the  text.  As  in­
dicated  above,  when  the  parser  begins  analysis  of 
a  new  subgoal,  which  is  a  phrase,  the  matching  of 
the  pattern  associated  with  that  subgoal  proceeds 
in  three  successively  more  expensive  steps,  cover-
ing,  association,  and  resolution.  Each  step  must 
be  successful  before  entering  the  next,  and  each 
has  i ts  own  error  detection  and  correction  tactics. 

4.4.3.1  Covering.  The  l i s t,  M,  of  minimal 
covers  associated  with  p,  is  retrieved. 
If  M  is 
empty,  the  algorithm  proceeds  to  the  association 
step.  The  covering  process  accepts  the  text  P-list, 
the  bounds  of  G  which  delimit  the  portion  of  the 
P-list  to  be  considered,  and  the  cover  l i st  M  of 
the  form 

of  n  distinct  pairs  of  covering  brackets.  The 
covering  procedure  is  given  the  task  of  finding 
the  highest  confidence  well-formed  nest  of  these 
brackets. 

The  procedure  presently  under  investigation 

abstracts  from  the  text  P-list  a  l i st  (called  a 
B-list)  which  has  an  L-list  for  each  possible  oc­
currence  of  any  of  the  brackets.  Each  such  L-list 
the  bracket  together  with  i ts 
has  the  entries: 
confidence, 
,  and  a  null  character,  0,  repre­
senting  selection  of  a  symbol  other  than  the  bra­
cket,  together  with  a  confidence  which  represents 
the  effect  of  suppressing  the  bracket, 
the  example  below). 
the  original  L - l i s t,  there  are  
new  L - l i s t.  For  single-character  brackets,  the 
non-bracket  confidence,  V,  is  simply  that  of  the 
highest  confidence  non-bracket  character  on  the 
original  L - l i s t.  For  multiple-character  brackets 
V  it  the  average  of  the  highest-confidence  non-
bracket  characters.  This  latter  measure  has  not 
been  tested,  since  the  extended  dictionary-matching 
procedure  has  never  failed  to  correctly  classify  a 
multiple-character  basic  symbol  which  was  also  * 
covering  bracket. 

If  there  are  K  brackets  on 

(note 

entries  on  the 

The  cover  procedure  selects  a  nest  from  the  B-
l i st  by  generating,  by  descending  number  of  brackets 

-603-

ordered  l i st  of  p r i n c i p al  basic  symbols,  and  an  ab­
s t r a ct  representation  of  the  global  s t r u c t u re 
be  assigned  to  the  t e x t,  a  RODEN-form  p a t t e r n. 

to 

The  success  of  the  method  depends  on  the  a b i l­

in 

to 

the 

the 

in  order 

i d e n t i fy 

to  "spread 

in  patterns 

the  occurrence  of 

the  e x p l i c it  s t r u c t u re  of 

large  number  of  characters 

the  need  f or  e l i m i n a t i ng  recursion  and  adja­
to  b r i ng 
the  p r i n c i p al  basic  symbols  which 
that  p a t t e rn 

i ty  of  the  association  procedure 
r i s k"  of  selecting  a  p a r t i c u l ar  p a t t e rn  over  a  suf­
f i c i e n t ly 
t e x t , --
thus 
cent  non-terminals 
to  the  surface 
serve 
( f or  example,  note 
in  example  G2  of  Section  I I ).  Another  important 
property  of  the  method  is 
the  p a t t e rn  is  auto­
m a t i c a l ly  positioned  w i th  respect  to  a.  Thus,  miss­
ing  d e l i m i t e r s,  which  cause  the  bounds  on  a  phrase 
to  be  set  i n c o r r e c t l y,  are  detected  by  noting  that 
the  p a t t e rn  was  successful 
i or  of  the  bounded  t e x t. 
l i m i t e rs  are  detected  by  noting 
that  the  p a t t e rn 
has  been  truncated  on  one  or  both  ends  by  an  i n­
c o r r e c t ly  positioned  bound. 
l a t t e r,  consider 
ment)  of  F i g.  3: 
context  a n a l y s i s, 

the  processing  of 
a f t er 
the  P - l i st  might  have 

i n t e r­
S i m i l a r l y,  erroneous  de­

For  an  example  of  the 
(for  s t a t e­

two  phases  of 

in  matching 

the  form 

f i r st 

that 

the 

the 

the 

(aexp) 

Figure  4 

i n to  two 

The  erroneous  " ;"  has  caused  a  h i g h e r - l e v el  goal 
to  p a r t i t i on  the  s t r i ng 
The  high  confidence  head  match  of 
to  FOR 
ure  to  immediately  report  an  "R-add" 
a  d e l i m i t er  is  hypothesized  to  have  been  "added" 
j u st  beyond  the  r i g ht  end  of  a ). 

( f or  statement) 
the  association  proced­
f a i l u re  ( i . e ., 

(statement)'s. 

w i ll  cause 

:* 

The 

task  of 

process 
produce  a  s k e l e t al 

the  bounded  segment,  a,  of 

the  association  procedure 

to 
to 
instance  (N)  of  the  p a t t e rn  p. 

is 
the  P - l i st 

F i r s t,  a  process 

is 

invoked  to  construct  from 

f or  p; 

i . e .,  W 

these  basic  symbols. 

the  basic  symbol  l i st  (W) 

0  and  B, 
is  a  l i st  of  occurrences  of 
The  elements  of  W  are  t r i p l e ts  ( ( s y m b o l ) , ( v a l u e ), 
( p o i n t e r ))  where 
(value) 
the  average  confidence 
that  the  s t r i ng  found  at 
f a c t, 
the  head  and  t a il  of  a  are  tagged  w i th  s p e c i a l * -, 
-4  i n d i c a t o rs  so  t h at  patterns  which  require  head 
and/or  t a ll  symbols  can  d i s t i n g u i sh  them. 

(symbol).  Symbols  found  at 

is 
( p o i n t e r) 

the  basic  symbol 

in  a  i s, 

in 

A ll  possible  occurrences  of  basic  symbols  of 

more  than  one  character  w i ll  be  found  on  W.  An 
unpleasant  problem  is  encountered 
single-character  symbols  are  also 
may  be  introduced  which  w i ll  not  be  detected  by 
the  subsequent  c o n t e x t - f r ee  a n a l y s i s. 

if  a ll  possible 
included:  errors 

For  example, 

-604-

That 

the  symbol  which  would 

If  a  +  appears  as  the  lowest  confidence  en­
f or  *, 
then  the  expression  w i ll 
and  the  e r r or  w i ll  never  be  de­

in  any  algebraic  language, 
be  selected  from  the  a l t e r n a t i ve  l i st  f or  some 
operator,  such  as  *,  w i ll  be 
the  f i r st  operator 
in  the  hierarchy  which  occurs  on  the  l i s t. 
i s, 
t ry  on  an  L - l i st 
parse  as  
tected.  The  f o l l o w i ng  approach  seems 
vent  the  d i f f i c u l t y:  when  processing  a  s i n g l e-
character  basic  symbol,  which  is  c l a s s i f i ed  as  a 
d e l i m i t e r,  an  L - l i st 
d e l i m i t er  has  higher  confidence 
than  any  other 
d e l i m i t er  which  may  appear  on  the  L - l i s t.  De­
l i m i t e rs  which  are  missed  w i th 
detected  as  drop  errors 
in  subsequent  syntactic 
analysis  and  corrected  by  the  recovery  procedure. 

is  selected  only 

to  circum­

t h is  procedure  are 

that 

if 

that 

i n d i c a t or 

in  the  event 

I t e r a t i ve  and  s e l e c t i ve  pat­
if  not  selected,  are  appended  w i th  an  X 

The  second  step  in  the  association  process 
the  task  of  selecting  and  expanding  elements 
The  match  is  c o n t r o l l ed  by  the 
B r i e f l y, 

has 
of  the  p a t t e rn  p. 
l i st  W,  of  occurrences  of  basic  symbols. 
the  association  procedure  sequences  through  W, 
from  l e ft  to  r i g h t.  The  elements  of  W  serve  to 
select  a  subpattern  of  p  if  a  correspondence  can 
be  established  between  the  basic  symbols  of  each. 
Selected  subpatterns  are  appended  to 
the  growing 
s k e l e t al  node,  N. 
t e r n s, 
they  may 
(unexpended) 
be  needed  in  subsequent  drop  recovery. 
In  rare 
cases,  on  exhausting  the  p a t t e r n,  a  s t r i ng  erron­
eously  recognized  as  a  basic  symbol  may  r e s u lt 
in 
a  p a r t i a l ly  s a t i s f i ed  conjunctive  p a t t e rn  accom­
panied  by  unused  symbols  on  W. 
( E . g .,  an  erron­
eous  do  in  processing  a  ( f or  statement)  in  ALGOL 
could  lead  to  an  u n s a t i s f i ed 
:-  and 
the  correct 
cases  are  corrected  by  sequencing  through  the 
p a t t e rn  (the  match  is  now  c o n t r o l l ed  by  the  pat­
tern)  and  W  from  r i g ht  to  l e f t,  searching  W  for 
an  instance  of  each  u n s a t i s f i ed  symbol 
p a t t e r n. 
If  a ll  of  these  can  be  s a t i s f i e d,  and 
W  is  s t i ll  not  empty,  we  examine  the  remaining 
e n t r i es  on  W  f or  symbols  which  are  both  in  the 
proper  order  ( p o s i t i on  in  0)  and  have  higher  con­
If  such 
fidence  than  a  symbol  already  selected. 
an  instance  is  found, 
is  r e­
placed. 

: =,  w i th  the 
instance  of  the  jio  l e ft  on  W.) 

the  o r i g i n al  symbol 

in  the 

These 

If 

that 

(L-add) 

the  node. 

in  a  conjunctive  p a t t e rn  a  head  or 

t a il 
then  the  r i g h t - e x t e n s i b i l i ty 

the  associated 

l e f t - e x t e n s i b i l i ty 

i n d i c a t o r s, 
The  R-add  i n­

is  s a t i s f i ed  w i th  the  p o r t i on  of 

match  is  obtained, 
(R-add)  or 
r e s p e c t i v e l y,  are  set  at 
d i c a t or  at  a  node  s p e c i f i es 
p a t t e rn 
l i st  bounded  by  G  but 
p a t t e rn  can  only  be  s a t i s f i ed  by  matching  more  of 
the  P - l i st  to 
the  r i g h t. 
in  f a c t,  been  detected, 
it  must  be  an  erroneously 
recognized  basic  symbol  (an  " a d d " ),  which  caused 
the  r i g ht  bound  of  G  to  be  i n c o r r e c t ly  p o s i t i o n e d. 
S i m i l a r l y, 
s i b le 

the  P-
that  the  remainder  of  the 

the  L-add  i n d i c a t or  s p e c i f i es  a  pos­

if  an  e r r or  has, 

l e ft  bound. 

I n c o r r e ct 

Thus, 

4.4.3-3  Resolution. 

If 

the  association 

process  was  not  able 
r o r s, 

the  parser  reports 

to  correct  a ll  detected  er­

the 

f a i l u re 

to 

the  parent 

Then  the  parser  is  applied  recur­
If  the  recursive  c a ll  reports  an  er­
i n v o l v i ng  a  covering  bracket  assigned  at  the 

node.  Otherwise,  a  procedure  is  invoked,  given  N 
and  the  bounds  of  G, 
to  set  the  bounds  f or  the  sub-
phrases  of  N. 
s i v e ly  to  N. 
ror 
current  l e v e l, 
c i a t e, 
nest 
in 

resolve  process  w i th  the  next  v a l id  cover 
the  sequence 

(see  "cover  c o n f l i c t s"  below). 

the  parser  r e s t a r ts 

the  cover,  asso­

4.4.4  Error  recovery  and  c o r r e c t i o n .*  The 
( s y n t a c t i c a l l y - c o r r e c t a b l e)  errors  which  r e­

only 
main  to  be  considered  are  those  which  cause  the 
i n c o r r e ct  p o s i t i o n i ng  or  p o s i t i ng  of  subgoals. 
When  the  parser  reports  a  f a i l u re  in  the  analysis 
of  a  subpattern, 
indicated  f a i l u re  is  of  four 
main  types,  c o v e r - c o n f l i c t,  a d d - f a i l u r et  drop-
f a i l u r e,  or 

f a i l u r e. 

t o t al 

the 

The 

i . e ., 

treatment  of  f a i l u r es 
the  context  of  the 

i s,  of  course,  de­
type  of  pattern  in 
In  d i s j u n c t i ve  pat­

incorrect  p o s i t i ng  of  a  subgoal. 

the  f a i l u re  may  simply  indicate  a  syntactic 

termined  by 
which  the  e r r or  is  detected. 
t e r n s, 
dead-end, 
Therefore,  e r r or  processing  is  postponed  u n t il 
e n t i re  d i s j u n c t i ve  p a t t e rn  Is  scored  in  hopes 
a  subsequent  d i s j u n ct  w i ll  succeed. 
proves 
terns 
matched 

the 
that 
This  strategy 
the  most  d i f f i c u lt  pat­

to  be  r e l i a b le  since 
to  s a t i s f y, 

the  most  redundant,  are 

f i r s t. 

i . e ., 

4 . 4 . 4 .1  A d d - f a l l u r e s.  An  add-fallure  occurs 

when  a  substring  has  been  erroneously  recognized 
as  a  basic  symbol,  at  the  current  or  higher  l e v e l, 
r e s u l t i ng  in  the  assignment  of  a  phrase 
to  a  sub­
s t r i ng  which  has  been  truncated  at  one  or  both  ends. 

The  strategy  of  a d d - f a i l u re  correction 

back  the  f a i l u re  up  the  parse  graph  u n t il 

is 

to 

(a)  a  conjunctive  branch  point 

is  encountered 

where  an  adjacent 
i t e r a t i ve  or  selective 
node  can  be  removed  along  w i th  the  basic 
symbol  which  is  presumed  to  be  the  source 
of 

the  d i f f i c u l t y;  or 

(b)  a  d i s j u n c t i ve  branch  point 

is  encountered 

where  the  parser  can  postpone 
recovery  (the  e f f o rt  could  be  wasted  on  a 
syntactic  dead-end). 

the  error 

4 . 4 . 4 .2  D r o p - f a i l u r e s.  When  a  basic  symbol 
is  missed  by  the  association  process  ( i . e .,  a  drop 
e r r o r ), 
goal. 
the  subgoal  is  analyzed,  as  a  l e f t - d r op  (L-drop) 
or  r i g h t - d r op  (R-drop). 
The  stragegy  of  drop  r e­
covery  is  to  back  up 

the  r e s u lt  is  an  improperly  bounded  sub-
The  e r r or  is  detected  at  a  lower  l e v e l,  when 

the  parse  graph  u n t il 

(a)  a  context  is  encountered  which  permits 

i n t r o d u c t i on  of  a  new  I t e r a t i ve  phrase 

the 
to  cover  the  unrecognized  t e x t;  or 

(b)  basic  symbol  which  delimited  the  subgraph 

containing  the  drop  is  encountered,  per­
m i t t i ng 
stance  of 
in  the  unrecognized  p o r t i on  of 

the  symbol  w i th  another  instance 
t e x t ; or 

the  parser  to  replace  t h is 

the 

i n­

For  examples,  see  Darden. 

-605-

(c)  a  selective  node  is  encountered,  allow­
ing  the  parser  to  abandon  the  recovery 
e f f o r t,  or 

(d)  a  d i s j u n c t i ve  branch  point 

is  encountered, 

allowing  the  parser  to  postpone  e r r or  r e­
covery. 

4.4.4.3  C o v e r - c o n f i c t s.  Since  the  cover 
generation  algorithm  produces  covers  ordered  by 
descending  t o t al  number  of  brackets,  cover  errors 
are  detected  during  an  attempt  to  suppress  a  basic 
symbol  which  is  also  a  bracket  belonging  to  a 
cover  established  at  l e v el  K.  When  t h is  condition 
is  detected, 
the  "request  recover 
indicator"  at  the  current  node.  As  w i th  the  other 
t h is 
error  i n d i c a t o r s, 
the  parse  graph  u n t il 
to 
another  successful  analysis  path  at  a  d i s j u n c t i ve 
node  or  reaches  the  phrase  node  at  l e v el  K  where 
the  c u l p r it  nest  was  assigned.  At  t h is  point 
the 
the  cover,  associate,  resolve  pro­
parser  r e s t a r ts 
cess  w i th  the  next  v a l id  nest  in  the  sequence. 

information  is  backed  up 
the  parser  either  s h i f ts 

the  parser  sets 

The 

4.4.4.4  Total  f a i l u r e.  A  t o t al 

i n d i c a t i on  of  an  add-error. 
t o t a l - f a i l u re  recovery  is 

to  back  up 
i n d i c a t i on  u n t il  e i t h er  a  d i s j u n c t i ve 
is  encountered,  permitting  the  par­

f a i l u re  is 
usually  an  i n d i c a t i on  of  a  syntactic  dead-end  or 
is 
the  f i r st 
strategy  of 
the  error 
branch  point 
ser  to  t ry  another  analysis  path,  or  a  conjunc­
t i ve  branch  point  is  encountered. 
case, 
t i e s: 
an  erroneously  expanded  i t e r a t i ve  phrase;  second, 
that  one  or  more  basic  symbols,  which  d e l i m it 
the 
conjunct,  are  mispositioned  ( i . e .,  a  combined 
if  the 
add/drop  error  has  occurred);  and  t h i r d, 
t a il 
conjunct  which  f a i l ed  occurs  at  the  head  or 
of  the  p a t t e r n, 
then  a  h i g h e r - l e v el  L-add  or  R-
add  is  assumed  and  reported  to  the  parent  node. 

l a t t er 
three  p o s s i b i l i­
the  u n s a t i s f i ed  conjunct  was 

the  recovery  investigates 
f i r s t, 

In  the 

that 

In  the  f i r st  case,  we  must  have  a  pattern 

fragment 
. . a b y . . .,  w i th  possibly  one  of  a,y  n u ll 
and  p  an  i t e r a t i ve  subpattem.  The  basic  symbols 
which  selected  p  are  suppressed  at 
the  current 
l e v el  and  the  text  segment  reanalyzed  as  an  aY. 

to  succeed, 

If  the  recovery  is 

In  the  second  case,  we  must  have  a  pattern 
fragment  of  the  form 
. . a t b . ..  where  only  one  of 
a,p  f a i l e d.  Since  we  have  symmetry,  assume  that 
p  f a i l e d. 
t  must 
be  an  add-error  and  must  have  been  dropped  in  the 
text  bounded  by  p.  Therefore,  we  suppress  t  and 
search  f or  the  highest  confidence  occurrence  of 
If  found,  we  r e­
a  t  in  the  t e xt  bounded  by  
the  text  segment  w i th  the  new  assignment. 
analyze 
there  are  no  more 
The  process 
If 
t 's 
errors  s t i ll  remain,  which  are  only  head  or  t a il 
e r r o r s, 
t h i rd  case 
holds,  and  the  appropriate  error  is  reported. 

to  t ry  or  a  successful  parse  is  obtained. 

is  assumed  that  the 

is  continued  u n t il 

then  it 

4.4.5  Scoring  the  complete  node.  When  the 

the  analysis  of  a  p a r t i c u l ar 

parser  completes 
node, 
uate  the  success  of  the  analysis. 
ing  of  a  d i s j u n c t i ve  node  w i ll  not  reach  t h is 

the  scoring  procedure  is  invoked  to  e v a l­
The  process­

In  t h is  case  the  parser  attempts 

the  d l s j u n c ts  reported  some  type 
to  se­
the  most  promising  path  f or  e r r or  recovery  by 

stage  unless  a ll 
of  e r r o r. 
l e ct 
replacing  the  d i s j u n c t i ve  node  by  the  subnode  r e­
p o r t i ng  the  highest  basic  symbol  match  score  ( t i es 
are  broken  by  taking  the  subnode  w i th  the  l a r g e st 
If  a ll  subnodes 
number  of  selecting  characters). 
reported  t o t al 
f a i l u re  is 
dicated  f or  the  node. 

then  t o t al 

f a i l u r e, 

i n­

The  scoring  of  conjunctive  nodes 

is  s t r a i g h t-
forward.  The  basic  symbol  match  score  has  already 
been  recorded  by  the  association  process.  The 
complete  node  score  is  simply 
of  the  scores  of  a ll 
s e l e c t i ve  nodes  are  simply  given  the  score  of 
t h e ir  respective  subnodes. 

the  l o g i c al  product 
I t e r a t i ve  and 

the  subnodes. 

Summary  of  Context  Analysis 

The  context  analysis  system  comprises  three 

the 

in  the 

t e xt  which 

to  basic  symbols 

The  f i r st  phase  (extended-dictionary 
replaces  substrings  of 

phases. 
matching) 
are  s u f f i c i e n t ly  close 
d i c t i o n a r y.  The  second  phase  (Name-space  c l u s t e r­
ing)  attempts 
to  discriminate  an  instance  of  every 
name  in  the  t e xt  and  to  assign  a  common  s p e l l i ng 
to  a ll  occurrences  of  the  same  name. 
The  t h i rd 
phase  (Syntactic  Analysis)  applies  a  strategy  of 
unbounded-context  parsing  and  h i e r a r c h i c al  consis­
tency  checking 
to  achieve  r e l i a b le  p a r t i t i o n i ng  of 
the  e n t i re  t e xt  i n to  simpler  subproblems. 
path  through  the  parser  accomplishes 
of  patterns 
a s s o c i a t i o n,  and  r e s o l u t i on  processes. 
are  given  special 
treatment.  Error  detection  and 
recovery  is  based  on  the  discovery  of  e i t h er  par­
t i al  matches  ( e . g .,  head  or  t a il  matches)  or 
matches  which  are  properly  contained  w i t h in  the 
bounds  assigned  to  a  subgoal. 

t e xt  by  successive  covering, 

the  matching 

the 

to 

The  main 

I d e n t i f i e rs 

V.  Discussion 

This  paper  has  been  concerned  w i th  the  methods 

f or 

employed  in  a  syntax-directed  contextual  post-pro­
cessor 
the  detection  and  c o r r e c t i on  of  charac­
t er  r e c o g n i t i on  e r r o r s.  We  conclude  w i th  a  few 
observations  about  these  methods  and  about  possible 
d i r e c t i o ns 

f u t u re  work. 

f or 

The  high  r e l i a b i l i ty  of 

the  extended-diction­

ary  matching  process  follows  from  the 
f a ct 
d i c t i o n a ry  e n t r i es  of  the  same  length 
are  gener­
a l ly  q u i te  d i s t a nt  from  one  another  ( in  the  sense 
of  a  Hamming-distance)  and  from  a r b i t r a ry  s t r i n gs 
which  may  occur  in  the  object  language. 

that 

If  one 

is  s a t i s f i ed  w i th 

the  assignment  of  a 

Even  if 

the  name-space  c l u s t e r i ng  performs  s a t i s f a c­

t h is  s p e l l i ng 
intended  by  the  author  of 

common  s p e l l i ng  to  a ll  occurrences  of  the  same 
name, 
t o r i l y. 
t h at 
name  is  l o c al 
s u l t i ng  program  is  semanticaliy  equivalent 
o r i g i n a l.  However, 
dismayed 
able  MIN  has  been  changed  to  MOM. 

then  the  r e­
the 
the  author  of  the  t e xt  may  be 
to  f i nd  that  every  occurrence  of  h is  v a r i­

is  d i f f e r e nt 
the 
if 

to  the  processed  t e x t, 

from 
the 

t e x t, 

to 

It 

is  clear 

that 

if 

the  present  strategy  and 

to  achieve  our  goal  of 
that  there  are  a  large 

t a c t i cs  prove  inadequate 
a  1%  o v e r a ll  e r r or  r a t e, 
number  of  extensions  which  can  be  expected 
f u r t h er  enhance  i ts  performance. 
involve 
l o c al  context, 
that 
the  parser  has  a  f i rm  g r ip  on  global  syntactic 
s t r u c t u r e. 

f or  we  are  f a i r ly  confident 

in  the  parser's  handling  of 

improvements 

These  generally 

to 

involve 

The  p r i n c i p al 

techniques  c u r r e n t ly  employed 
in  h i e r a r c h i c al  consistency  checking 
the 
parenthesis-counting  of  minimal  cover  nests  and 
the  association  pro­
the  basic-symbol  matching  of 
cess.  Many  a d d i t i o n al  checks  are  possible: 
f or 
example,  constraints  on  the  minimum  and  maximum 
(where  maxima  e x i t ), 
checks  f or  v a l id  prefixes  and  suffixes  and  for 
substrings  which  cannot  appear 
assigned  subgoal.  4,6 

lengths  of  substrings, 

t e n t a t i v e ly 

the 

in 

it 

in 

to 

i d e n t i f i e r s. 

i n t r i n s ic  nature  of  c l u s t e r i ng  methods 

There  are  two  extensions  which  we  are  p a r t i­
(a)  The  de­

is 
is 
l i k e ly 
instances  of 
instances  of 
the  distance 

c u l a r ly  interested  in  i n v e s t i g a t i n g: 
t e c t i on  of  p r e f i x es  or  s u f f i x es 
The 
group  very  s i m i l ar  samples. 
Thus 
that  a  method  which  associates  a ll 
BUFFER  w i ll  also  group 
together  a ll 
both  BUFFERI  and  BUFFERl.  However, 
measure  should  be  able  to  recognize  the  cases 
where  two  s t r i n gs  have 
(head)  substrings 
which  are  quite  d i s t a nt  r e l a t i ve  to 
s t r i ng  and  give  p r o p o r t i o n a t e ly  more  weight 
the  t a il 
(b)  The  concept  of  a  name  needs  to  be  extended  to 
Include  names  (such  as  arrays  or  functions)  which 
nearly  always  occur  w i th  some  accompanying  s t r u c­
tures  ( e . g .,  MATRIX 
The  r e c o g n i t i on  of 
in  discovering  instances  of 
r e c t i ng  errors 
t u r e. 

t h is  s t r u c t u re  w i ll  help  both 
the  name  and  in  cor­
in  the  accompanying  bracket  s t r u c­

(head)  c o n t r i b u t i on  to 

[ . . . , . . .]  or  FUN  ( 

the  distance. 

the  root  sub­

t a il 

to 

, . . . ) )• 

f or 

that 

A  f i n al  observation  is 

the  unbounded-
context  parser's  grasp  of  global  s t r u c t u re  may 
w e ll  prove  s u f f i c i e nt 
the  language  membership  of  a  piece  of  garbled 
t e x t. 
grammars  f or  ALGOL,  FORTRAN,  LISP,  and  SNOBOL,  the 
parser  could  determine  which  grammar  to  apply, 
based  on  an  i n i t i al  analysis  of  the  t e xt  by  each 
grammar, 

taking  the  most  redundant  grammars  f i r s t. 

if  the  system  contains  RODEN-form 

the  system  to  discover 

That 

i s, 

Acknowledgements 

The  author  wishes 

thank  h is  colleagues  at 
The  U n i v e r s i ty  of  Texas  at  A u s t i n,  and  especially 
Dr.  Woodrow  W.  Bledsoe  and  Dr.  E.  M.  Greenawalt. 

to 

References 

1.  Darden,  S.  C,  "A  Contextual  Recognition  Sys­

tem  f or  Hand-printed  Formal  Languages,"  TSN-1, 
Computation  Center,  The  U n i v e r s i ty  of  Texas 
at  Austin  (January  1969). 

2.  Duda,  R.  0 .,  P.  E.  Hart,  and  J.  H.  Munson, 

"Graphical-Data-Processing  Research  Study  and 

-606-

Experimental 
I n v e s t i g a t i o n ,"  Fourth  Quarterly 
Report,  Contract  DA  28-043  AMC-01901(E),  SRI 
Project  ESU  5864,  Stanford  Research  I n s t i t u t e, 
Menlo  Park,  C a l i f o r n ia  (March  1967). 

3.  Duda,  R.  0 .,  and  J.  H.  Munson,  "Graphical-Data-
Processing  Research  Study  and  Experimental  I n­
v e s t i g a t i o n ,"  F i f th  Quarterly  Report,  Contract 
DA  28-043  AMC-01901(E),  SRI  Project  ESU  5864, 
Stanford  Research  I n s t i t u t e,  Menlo  Park,  C a l i­
f o r n ia  (June  1967). 

4.  Duda,  R.  0 .,  and  P.  E.  Hart,  "Experiments  in 

Part  II 

the  Recognition  of  Hand-printed  Text: 
-  Context  Analysis,"  AFIPS  Conf.  P r o c,  F a ll 
J o i nt  Computer  Conference 

(1968). 

5. 

I r o n s,  E.  T .,  "An  E r r o r - c o r r e c t i ng  Parse  Algo­
r i t h m ,"  Comm.  ACM  6,  1 1,  pp.  669-673  (November 
1963). 

6.  Unger,  S.  H.,  "A  Global  Parser  f or  Context-free 
Phrase  Structure  Languages,"  Comm.  ACM  1 1,  4, 
pp.  240-247  ( A p r il  1968). 

7.  Floyd,  R.  W.,  "The  Syntax  of  Programming  Lan­

guages  -  A  Survey,"  IEEE  Trans.  EC-13,  4 
(August  1964). 

8.  Vossler,  C.  M.,  and  N.  M.  Branston,  "The  Use 

of  Context 
f or  Correcting  Garbled  English  Text," 
Proc.  ACM  19th  National  Conference,  paper  D2.4-1, 
D2.4-13 

(1964). 

9.  Casey,  R.  G.,  and  G.  Nagy,  "An  Autonomous  Read­

ing  Machine,"  IEEE  Trans.  EC-17,  5,  pp.  492-
503  (May  1968). 

-607-

