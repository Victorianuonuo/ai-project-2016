Logic Programs for Consistently Querying Data Integration Systems 

Loreto Bravo 

Pontificia Universidad Catolica de Chile 
Departamento de Ciencia de Computation 

Santiago, Chile. 
lbravo@ing.puc.cl 

Abstract 

We  solve  the  problem  of  obtaining  answers  to 
queries posed to a mediated integration system un­
der  the  local-as-view  paradigm  that  are  consistent 
wrt to certain global  integrity constraints.  For this, 
the query program is combined with logic program­
ming specifications under the stable model seman­
tics of the class of minimal global instances, and of 
the class of their repairs. 

Introduction 

1 
For several  reasons a database may become  inconsistent wrt 
certain  integrity constraints (ICs).  In such a situation, possi­
bly most of the data is still consistent.  In [Arenas et  al.,  1999] 
consistent data in a single relational database is characterized 
as the data that is invariant under all minimal  restorations of 
consistency,  i.e.  true  in  all  repaired  versions  of the original 
instance (the  repairs).  In that paper and others  [Arenas et al, 
2000; Greco etal, 2001], some mechanisms have been devel­
oped for retrieving consistent answer when queries are posed 
to such an inconsistent database. 

When independent data sources are integrated, inconsisten­
cies wrt to global  ICs are likely to occur,  specially when the 
sources  are  virtually  integrated  by  means  of a mediator,  be­
cause the data sources are kept completely independent.  The 
mediator provides a global schema as an interface, and is re­
sponsible for generating query plans to answer global queries 
by retrieving data sets from the sources and combining them 
into a final answer set for the user. 

"Local-as-view" (LAV) is a common paradigm for data in­
tegration that describes each data source as a set of views over 
the  global  schema.  Another  one,  "global-as-view"  (GAV), 
defines every global relation as a view of the set of relations 
in  the  sources  ([Lenzerini,  2002]  is  a good survey).  Query 
answering is harder in LAV  [Abiteboul et al.,  1998].  On the 
other  side,  the  LAV  approach  allows  more  flexibility  when 
new sources are integrated into an existing system. However, 
the  flexibility  to add new sources, without having to consider 
the  other  sources  in  the  system,  makes  inconsistencies  wrt 
global ICs more likely. 
Example 1  Consider the  LAV based global  integration  sys(cid:173)
tem  G1  with  a global relation  R(X, Y)  and two source  rela(cid:173)
tions  v1  =  {Vi(a,6),  V1(c,d)}  and v2  =  {V2{a,c),V2{d,e)} 

Leopoldo Bertossi 
Carleton University 

School  of Computer Science 

Ottawa, Canada 

bertossi ©scs.carleton.ca 

answers 

{Ans(a,b),Ans(c,d),Ans(a, 

that are described by the view definitions  V\ (X, Y)  <—  R(X, 
Y);  V2{X,Y) 
-  R{X,Y).  The  global  functional  depen(cid:173)
dency (FD)  R:  X  —>  Y  is  violated through  the pair of tuples 
{(a,b),(a,c)}. 
□ 
In a virtual integration system, the mediator should solve po­
tential  inconsistencies  when  the query plan  is generated.  In 
[Bertossi et a/., 2002], under the LAV approach, a methodol­
ogy for generating query plans to compute answers to limited 
forms of queries that are consistent wrt an also restricted class 
of universal ICs was presented.  The limitation comes from a 
first  step  where  a  query  transformation  for  consistent  query 
answering  (CQA) is performed  [Arenas et  al,  1999].  Next, 
query  plans  are  generated  for  the  transformed  query.  How­
ever,  [Bertossi  et  al,  2002]  provides  the right semantics  for 
CQA in mediated integrated systems (see Section 2). 
Example 2  (example  I  continued)  If we pose  to  the  global 
system  the  query  Q  :  Ans(X,Y)  <—  R(X,Y),  we  obtain 
the 
c),Ans(d,c)}. 
However,  only  the  tuples  Ans(c, d), Ans(d, e)  should be  re-
turned as consistent answers wrt the FD  R:  X  —>  Y. 
D 
In  this  paper,  under the  LAV  approach  and  assuming  that 
sources arc open (or incomplete)  [Abiteboul et al,  1998], we 
solve  the  problem  of retrieving  consistent  answers  to  global 
queries.  We consider arbitrary  universal  ICs  and  referential 
ICs,  in  consequence  all  the  ICs  that  are  used  in  database 
praxis [Abiteboul et  al,  1995].  View definitions are conjunc­
tive queries, and global queries are expressed in Datalog and 
its extensions with negation.  The methodology can be sum­
marized  as  follows.  First,  in  Section  3,  the  minimal  legal 
global instances of a mediated system are specified by means 
of logic programs with a stable model, or answer sets, seman­
tics.  Next, in Section 4, the repairs of the minimal global in­
stances are specified as the stable models of disjunctive logic 
programs. Those programs contain annotation constants, like 
those used to specify repairs of single relational databases for 
CQA  [Barcelo et ai,  2002].  Finally,  in  Section  5, consistent 
answers to queries are obtained by running a query program 
in combination with the previous two specification programs. 

2  Preliminaries 
2.1  Global schemas and view definitions 
A  global  schema  R  is  modeled  by  a  finite  set  of  relations 
...,Rn}  over a  fixed  domain U.  With  these relation 
{R1,R2, 

10 

AI AND DATA INTEGRATION 

Al AND DATA INTEGRATION 

11 

12 

Al AND DATA INTEGRATION 

a  propagation  of  changes  is  triggered  (rule  2. 
The 
annotations  t **  and  f**  are  just  used  to  read  off  the  literals 
that  are  inside  (resp.  outside)  a  repair.  This  is  achieved  by 
means  of rules  6.  below,  that  are  used  to  interpret  the  models 
as  database  repairs.  The following 

is  the  program: 

below). 

Only  rules  2.  depend on  the  ICs.  They  say  how  to  repair  them 
when  violations  are  found. 
contain  the  database 
atoms.  Rules  4.  capture  the  CWA.  Rules  5.  are  denial  pro-
gram  constraints  to  discard  models  that  contain  an  atom  an(cid:173)
notated  with  both 
two  stable 

The  program  has 

Rules  3. 

ta  and  fa. 

The  next definition  combines  into  one  program  the  specifica­
tion  of the  minimal  legal  instances  and  their  repairs. 

where  X 
is  the 
atoms  in  the  rule. 

tuple  of all  variables  appearing 

in  database 

4  Specification of Repairs of a Global System 
In  [Barcelo  etal,  2002]  repairs  of  single  relational  databases 
are  specified  using  disjunctive  logic  programs  with  stable 
model  semantics.  The  approach  works  for  arbitrary  universal 
and referential  ICs  in  the sense that the repairs  of the database 
correspond  to  the  stable  models  of the  program.  We  briefly 
explain  these  programs,  because  they  will  be  used  to  specify 
repairs  of integration  systems. 

First,  the  database  predicates  in  the  program  are  expanded 

with an extra argument to be  filled with one of a set of new an­
notation  constants.  An  atom  in  (outside) the original database 
is  annotated  with  ta  (fd).  Annotations  ta  and  fa  are  consid­
ered  advisory  values,  to  solve  conflicts  between  the  database 
If  an  atom  gets  the  derived  annotation  fa,  it 
and  the  ICs. 
means  an  advise  to  make  it  false,  i.e. 
to  delete  it  from  the 
database.  Similarly,  an  atom  that  gets  the  annotation  ta  must 
be  inserted  into  the database. 

r  = 

constraint  
instance 

inconsistent  database 

the  effect  of  repairing 

logic  program  should  have 

I —> 
Example  11  Consider  the  integrity 
{P(a)}. 
R(x)),  and  the 
the 
The 
database.  Single, 
local  repair  steps  are  obtained  by  deriv(cid:173)
ing  the  annotations  ta  or  fa.  This  is  done  when  each  IC  is 
considered  in  isolation,  but  there  may  be  interacting  ICs,  and 
the  repair  process  may  take  several  steps  and  should  stabilize 
at  some  point. 
In  order  to  achieve  this,  we  use  annotations  t*, 
f  *.  The  latter,  for  example,  groups  together  the  annotations 
fd  and  fa for  the  same  atom  (rules  1  and  4.  below).  These 
derived  annotations  are  used  to  give  a feedback  to  the  bodies 
of the  rules  that  produce  the  local,  single  repair  steps,  so  that 

Al AND DATA INTEGRATION 

13 

Rules 6.  repair referential ICs by deletion of tuples or inser­
tion of null  values  that are not propagated through other ICs 
(.Barcelo et al,  2003].  For this purpose,  we consider that the 

Definition 11  The instance associated to a choice model M. 

5  Consistent Answers 

ements of the global schema  R.  Each positive occurrence of 
those predicates, say  P(t),  is replaced by P(t, t**); and each 
negative  occurrence,  say  not  P(t),  by  P(i, f**).  This  pro­
gram has  a query predicate  Ans that collects the answers to 
Q. In particular, first order queries can be expressed as strati-

then to the certain answers if Q is monotone.  If we are inter­
ested  in just the minimal  answers  to  Q,  without considering 
consistency issues, then they can be computed as above, but 

6  Conclusions 
We have presented the most general approach so far to spec­
ifying,  by  means  of disjunctive  logic  programs  with  a  sta­
ble model  semantics,  the database repairs of a mediated in­
tegration system with open sources under the LAV approach. 
Then,  consistent answers  to queries  posed to such a system 
are computed by running a query program together with the 
specification  of database  repairs  under the  skeptical  or cau­
tious stable model semantics.  The specification of the repairs 
is achieved by first specifying the class of minimal global le­
gal  instances  of the  integration  system.  To  the  best  of our 
knowledge, this is also the first specification, under the LAV 
paradigm,  of such  global  instances  in  a  logic  programming 
formalism.  This specification is inspired by the inverse rules 
algorithms,  where auxiliary  functions are replaced by  auxil­
iary  predicates  that are  forced  to  be  functional  by  means  of 
the non deterministic choice operator. 

The  methodology  works  for conjunctive  view  definitions, 
but  can  be  extended  to  disjunctive  views  using  the  corre­
sponding extension  of the  inverse  rules algorithm  [Duschka, 
1997].  Wrt the  ICs  and queries  it  can  handle,  the approach 
works  for  arbitrary  universal  and  referential  integrity  con­
strains  and  queries  expressed  as  Datalognot  programs. 
In 
consequence,  the  current  approach  to  consistent  query  an­
swering (CQA) subsumes and extends the methodologies pre­
sented  in  [Bertossi  et al,  2002]  for integration  systems,  and 
the  one  in  [Barcelo  et  al.,  2002]  for  stand  alone  relational 
databases. 

in 

For  reasons  of  space,  we  just  mention  a  few  optimiza­
tions of the specification programs  and  their execution.  The 
materialization  of  the  CWA  present 
can  be 
avoided  by  program  transformation.  Classes  of  common 
ICs  can  be  identified  for  which 
becomes 
head-cycle-free,  and  in  consequence,  can  be  transformed 
into  a  non  disjunctive  program  [Ben-Eliyahu  et  al.,  1994; 
Barcelo et al., 2003]. The program for CQA can be split [Lif-
schitz  et  al.,  1994]  into  the  program  that  specifies  minimal 
legal  instances,  the  program  that  specifies  their  repairs  and 
the query program.  The  first  is non stratified, but its models 
can  be  computed  bottom-up  as  fixpoints  of an  iterative  op­
erator [Giannotti  et al.,  2001];  and the second one is  locally 
stratified [Przymusinski,  1991].  Finally, if the query program 
is stratified,  e.g.  if the original  query  is  first-order,  then  the 
consistent answers can be eventually computed by a bottom-
up evaluation mechanism. 

For  CQA  we  have  successfully  experimented  with  DLV 
[Eiter et al.,  2000].  The current implementations  of the dis­
junctive stable models semantics would be much more effec­
tive  in  database  applications  if  it  were  possible  to  evaluate 
open queries in a form that is guided by the query rather than 
based on, first, massive grounding of the whole program and, 
second, considering what can be found in every (completely 
constructed) stable model of the program. 

14 

Al AND  DATA INTEGRATION 

Wrt related papers, query answering in mediated integra(cid:173)
tion systems under the assumption that certain global ICs 
hold has been treated in [Gryz,  1999; Duschka et al, 2000; 
Grant et al,  2002;  Cali  et al,  2002].  However,  in  CQA, 
we do not assume that global ICs hold.  Logic programming 
specifications  of repairs  of single  relational  databases  have 
been presented in  [Arenas et al,  2000; Greco et al,  2001; 
Barcelo et al, 2002]. 

[Lembo et al, 2002] considers integration systems under 
the GAV approach that do not satisfy global key dependen(cid:173)
cies.  There, legal instances are allowed to be more flexible, 
allowing their computed views to accommodate the satisfac(cid:173)
tion of the ICs.  In this sense, the notion of repair is implicit; 
and the legal instances are the repairs we have considered 
here. View definitions are expressed as Datalog queries; and 
the queries to the global system are conjunctive.  The "re(cid:173)
pairs" of the global system are specified by normal programs 
under stable model semantics. 

In  [Bertossi  et al,  2002],  CQA  in  possibly  inconsistent 
integration systems under the LAV approach is considered. 
There, the notion of repair of a minimal legal instance is in(cid:173)
troduced. The algorithm for CQA is based on a query trans(cid:173)
formation mechanism I Arenas et al, 1999] applied to first-
order queries. The resulting query may contain negation, and 
is run on top of an extension of the inverse algorithm to the 
case of stratified Datalognot queries. This approach is limited 
by the restrictions of the query transformation methodology. 
Acknowledgments 
Work funded by DIPUC, MECESUP, CONICYT, Carleton 
University Start-Up Grant 9364-01, NSERC Grant 250279-
02.  L. Bertossi is Faculty Fellow of the IBM Center for Ad(cid:173)
vanced Studies, Toronto Lab.  We are grateful to Pablo Bar(cid:173)
celo, Alvaro Cortes, Ariel Fuxman, Nicola Leone, and Al(cid:173)
berto Mendelzon for useful conversations. 
References 
[Abiteboul et al,  1995]  Abiteboul, S.; Hull, R. and Vianu, V. 

Foundations of Databases. Addison-Wesley, 1995. 

[Abiteboul et al, 1998]  Abiteboul,  A.  and  Duschka,  O. 
Complexity  of  Answering  Queries  Using  Materialized 
Views. In Proc. ACM PODS, 1998, pp. 254-263. 

[Arenas et al, 1999]  Arenas, M., Bertossi, L. and Chomicki, 
J.  Consistent Query Answers in Inconsistent Databases. 
In Proc. ACM PODS, 1999, pp. 68-79. 

[Arenas et al, 2000]  Arenas, M.; Bertossi, L. and Chomicki, 
J.  Specifying  and  Querying  Database  Repairs  Using 
Logic Programs with Exceptions. In Flexible Query An(cid:173)
swering Systems. Recent Developments. H. Larsen et al. 
(eds.), Springer, 2000, pp. 27-41. 

[Barcelo et al., 2002]  Barcelo, P. and Bertossi, L. Repairing 
Databases with Annotated Predicate Logic. In Proc. In(cid:173)
ternational Workshop on Non-Monotonic Reasoning. S. 
Benferhat and E. Giunchiglia (eds.), 2002, pp. 160-170. 
[Barcelo et al, 2003]  Barcelo, P., Bertossi, L. and Bravo, L. 
Characterizing and Computing Semantically Correct An(cid:173)
swers from Databases with Annotated Logic and Answer 

Sets. In 'Semantics of Databases', Springer LNCS 2582, 
2003, pp. 1-27. 

[Ben-Eliyahu et al., 1994]  Ben-Eliyahu, R. and Dechter, R. 
Propositional Semantics for Disjunctive Logic Programs. 
Annals of Mathematics in Artificial Intelligence, 1994, 
12:53-87. 

[Bertossi et al., 2002]  Bertossi, L., Chomicki, J., Cortes, A. 
and Gutierrez, C.  Consistent Answers from Integrated 
Data Sources. 
In  Flexible Query  Answering Systems, 
Springer LNAI 2522, 2002, pp. 71-85. 

[Cali et al, 2002]  Cali, A.; Calvanese, D.; De Giacomo, G. 
and Lenzcrini, M. Data integration Under Integrity Con(cid:173)
straints. In Proc. CAISE, Springer LNCS 2348, 2002, pp. 
262-279. 

[Duschka, 1997]  Duschka, O.  Query Planning and Opti(cid:173)
mization in Information Integration. PhD Thesis, Stan(cid:173)
ford University, December 1997. 

[Duschka et al., 2000]  Duschka,  O.,  Genesereth,  M.  and 
Levy, A.  Recursive Query Plans for Data Integration. J. 
Logic Programming, 2000, 43(1 ):49-73. 

[Eiter  al, 2000]  Eiter,  T,  Faber,  W.;  Leone,  N.  and 
Pfeifer,  G. 
Declarative  Problem-Solving  in  DLV. 
In Logic-Based Artificial Intelligence. J. Minker (ed.), 
Kluwer,2000, pp. 79-103. 

[Giannotti et al., 1991]  Giannotti,  F;  Pedreschi,  D.;  Sacca, 
D.  and  Zaniolo,  C.  Non-Determinism  in  Deductive 
Databases. In Proc. DOOD, Springer LNCS 566, 1991, 
pp. 129-146. 

[Giannotti et al, 2001]  Giannotti, F; Pedreschi, D. and Zan(cid:173)
iolo, C.  Semantics and Expressive Power of Nondeter-
ministic Constructs in Deductive Databases../. Computer 
and System Sciences, 62( 1): 15-42, 2001. 

[Grant et al, 2002]  Grant, J. and Minker, M. A Logic-based 
Approach to Data Integration.  Theory and Practice of 
Logic Programming, 2002, 2(3):323-368. 

[Greco et al, 2001]  Greco, G., Greco, S. and Zumpano, E. 
A Logic Programming Approach to the Integration, Re(cid:173)
pairing and Querying of Inconsistent Databases. In Proc. 
ICLP, Springer LNCS 2237, 2001, pp. 348-364. 

[Gryz, 1999]  Gryz, J.  Query Rewriting Using Views in the 
Presence of Functional and Inclusion Dependencies.  In(cid:173)
formation Systems, 1999, 24(7):597-612. 

[Lembo et al, 2002]  Lembo, D.; Lenzerini, M. and Rosati, 
R.  Source Inconsistency and Incompleteness in Data In(cid:173)
tegration. In Proc. KRDB, 2002. 

[Lenzerini, 2002]  Lenzerini, M.  Data Integration:  A Theo(cid:173)
retical Perspective. In Proc. ACM PODS, 2002, pp. 233-
246. 

[Lifschitz et al, 1994]  Lifschitz, V. and Turner, H.  Splitting 
a Logic Program.  In Proc. ICLP. The MIT Press, 1994, 
pp. 23-37. 

[Przymusinski,  1991]  Przymusinski,  T  Stable  Semantics 
for Disjunctive Programs. New Generation Computing, 
9(3/4):401-424,  1991. 

Al AND DATA INTEGRATION 

15 

