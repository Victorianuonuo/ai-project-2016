Counting Complexity of Propositional Abduction

Miki Hermann

LIX (CNRS, UMR 7161)

´Ecole Polytechnique

91128 Palaiseau, France

Reinhard Pichler

Institut f¨ur Informationssysteme

Technische Universit¨at Wien

Favoritenstrasse 9-11, A-1040 Wien

Abstract

Abduction is an important method of non-mo-
notonic reasoning with many applications in AI
and related topics.
In this paper, we concentrate
on propositional abduction, where the background
knowledge is given by a propositional formula. De-
cision problems of great interest are the existence
and the relevance problems. The complexity of
these decision problems has been systematically
studied while the counting complexity of proposi-
tional abduction has remained obscure. The goal of
this work is to provide a comprehensive analysis of
the counting complexity of propositional abduction
in various classes of theories.

1 Introduction

Abduction is a method of non-monotonic reasoning which
has taken a fundamental importance in artiﬁcial intelligence
and related topics. It is widely used to produce explanations
for observed symptoms and manifestations, therefore it has
an important application ﬁeld in diagnosis – notably in the
medical domain (see [12]). Other important applications of
abduction can be found in planning, database updates, data-
mining and many more areas (see e.g. [9; 10; 11]).

Logic-based abduction can be formally described as fol-
lows. Given a logical theory T formalizing an application,
a set M of manifestations, and a set H of hypotheses, ﬁnd
an explanation S for M , i.e., a suitable set S ⊆ H such that
T ∪ S is consistent and logically entails M . In this paper, we
consider propositional abduction problems (PAPs, for short),
where the theory T is represented by a propositional formula
over a Boolean algebra ({0, 1}; ∨, ∧, ¬, →, ≡) or a Boolean
ﬁeld Z2 = ({0, 1}; +, ∧), and the sets of hypotheses H to-
gether with the manifestations M consist of variables.

Example 1 Consider the following football knowledge base.

T = { weak defense ∨ weak attack → match lost,
match lost → manager sad ∧ press angry
star injured → manager sad ∧ press sad }

Moreover, let the set of observed manifestations be

M = { manager sad, press angry }

Finally, let the set of hypotheses be given as

H = { weak defense, weak attack, star injured }

This PAP has six abductive explanations (= “solutions”).

S1 = { weak defense }
S2 = { weak attack }
S3 = { weak defense, weak attack }
S4 = { weak attack, star injured }
S5 = { weak defense, star injured }
S6 = { weak defense, weak attack, star injured }

Obviously, in the above example, not all solutions are
equally intuitive. Indeed, for many applications, one is not
interested in all solutions of a given PAP P but only in all ac-
ceptable solutions of P. Acceptable in this context means
minimal w.r.t. some preorder (cid:8) on the powerset 2H
. The
most natural preorder is subset-minimality ⊆. This criterion
can be further reﬁned by a hierarchical organization of our
hypotheses according to some priorities (cf. [7]). In this con-
text, priorities can be considered as a qualitative version of
probability. The resulting preorder is denoted by ⊆P . On
the other hand, if indeed all solutions are acceptable, then the
corresponding preorder is the syntactic equality =.

In Example 1, only the solutions S1 and S2 are subset-
minimal. Moreover, suppose that for some reason we know
that (for a speciﬁc team) weak defense is much less likely
to occur than weak attack. This judgment can be formalized
by assigning lower priority to the former. Thus, only S2 is
considered as ⊆P -minimal w.r.t. these priorities.

The usually observed algorithmic problem in logic-based
abduction is the existence problem, i.e. deciding whether at
least one solution S exists for a given abduction problem P.
Another well-studied decision problem is the so-called rele-
vance problem, i.e. Given a PAP P and a hypothesis h ∈ H,
is h part of at least one acceptable solution? However, this
approach is not always satisfactory. Especially in database
applications, in diagnosis, and in data-mining there exist situ-
ations where we need to know all acceptable solutions of the
abduction problem or at least an important part of them. Con-
sequently, the enumeration problem (i.e., the computation of
all acceptable solutions) has received much interest (see e.g.
[5; 6]). Another natural question is concerned with the to-
tal number of solutions to the considered problem. The lat-
ter problem refers to the counting complexity of abduction.

IJCAI-07

417

#-Abduction

General case

T is Horn

T is deﬁnite Horn

T is dual Horn
T is bijunctive

T is afﬁne

#P
#P
#P
#P
FP

=

⊆

⊆P

#·coNP #·coNP #·Π2P
#·coNP

#P
#P
#P
#P
#P

#P
#P

#·coNP

#P

Table 1: Counting complexity of propositional abduction

Clearly, the counting complexity provides a lower bound
for the complexity of the enumeration problem. Moreover,
counting the number of abductive explanations can be useful
for probabilistic abduction problems (see e.g. [13]). Indeed,
in order to compute the probability of failure of a given com-
ponent in a diagnosis problem (under the assumption that all
preferred explanations are equiprobable), we need to count
the number of preferred explanations as well as the number
of preferred explanations that contain a given hypothesis.

The counting complexity has been started by Valiant [15;
16] and is now a well-established part of the complexity the-
ory, where the most known class is #P. Many counting vari-
ants of decision problems have been proved #P-complete.
Higher counting complexity classes do exist, but they are not
commonly known. A counting equivalent of the polynomial
hierarchy was deﬁned by Hemaspaandra and Vollmer [8],
whereas generic complete problems for these counting hier-
archy classes were presented in [3].

Results. The goal of this work is to provide a comprehen-
sive analysis of the counting complexity of propositional ab-
duction in various settings. An overview of our results is
given in Table 1. The columns of this table correspond to
the three preorders on 2H
considered here for deﬁning the
notion of acceptable solutions, namely equality =, subset-
minimality ⊆, and subset-minimality with priorities ⊆P .

Apart from the general case where the theory T is an arbi-
trary propositional formula, we also consider the subclasses
of Horn, deﬁnite Horn, dual Horn, bijunctive, and afﬁne the-
ories T . The aforementioned classes enjoy several favorable
properties. For instance, they are closed under conjunction
and existential quantiﬁcation, i.e., a conjunction of two for-
mulas from C belongs to the class C and a formula from C
with an existentially quantiﬁed variable is logically equiva-
lent to another formula from C. Moreover, they represent the
most studied formulas in logic, complexity, constraint satis-
faction problems, and artiﬁcial intelligence. This is mainly
due to Schaefer’s famous result that the satisﬁability problem
for them is polynomial as opposed to the NP-completeness
of the general case (see [14]).

Structure of the Paper. The paper is organized as follows.
After recalling some basic deﬁnitions and results in Section 2,
we analyze the counting complexity of propositional abduc-
tion for general theories (Section 3), for Horn, deﬁnite Horn,

dual Horn and bijunctive theories (Section 4) and ﬁnally for
afﬁne theories (Section 5). We conclude with Section 6.

2 Preliminaries

2.1 Propositional Abduction
A propositional abduction problem (PAP) P consists of a tu-
ple (cid:10)V, H, M, T (cid:11), where V is a ﬁnite set of variables, H ⊆ V
is the set of hypotheses, M ⊆ V is the set of manifestations,
and T is a consistent theory in the form of a propositional
formula. A set S ⊆ H is a solution (also called explana-
tion) to P if T ∪ S is consistent and T ∪ S |= M holds.
Priorities P = (cid:10)H1, . . . , HK(cid:11) are a stratiﬁcation of the hy-
potheses H = H1 ∪ · · · ∪ HK into a ﬁxed number of disjoint
sets. The subset-minimality with priorities relation A ⊆P B
holds if A = B or there exists an i ∈ {1, . . . , K} such that
A ∩ Hj = B ∩ Hj for all j < i and A ∩ Hi (cid:2) B ∩ Hi.

In this paper, we follow the formalism of Eiter and Gott-
lob [4], allowing only positive literals in the solutions, except
for the afﬁne case. In contrast, Creignou and Zanuttini [1]
also allow negative literals in the solutions S. We apply the
latter to afﬁne PAPs, where we need the possibility in the al-
gebraic setting to assign a variable to 0.

Together with the general case where T can be an arbi-
trary propositional formula, we consider the special cases
where T is Horn, deﬁnite Horn, dual Horn, bijunctive, and
afﬁne. Due to Schaefer’s famous dichotomy result (see [14]),
these are the most frequently studied sub-cases of proposi-
tional formulas. A propositional clause C is said to be Horn,
deﬁnite Horn, dual Horn, or bijunctive if it has at most one
positive literal, exactly one positive literal, at most one neg-
ative literal, or at most two literals, respectively. A clause C
is afﬁne if it can be written in the form of a linear equation
x1 + · · · + xk = b over the Boolean ﬁeld Z2. A theory T
is Horn, deﬁnite Horn, dual Horn, bijunctive, or afﬁne if it is
a conjunction (or, equivalently, a set) of Horn, deﬁnite Horn,
dual Horn, bijunctive, or afﬁne clauses, respectively.

2.2 Counting Complexity
The #-abduction problem is the problem of counting the num-
ber of solutions of a PAP P. The #-⊆-abduction problem
counts the subset-minimal solutions of P, whereas #-⊆P -
abduction counts the minimal solutions w.r.t. priorities P .

Formally, a counting problem is presented using a witness
function which for every input x returns a set of witnesses
for x. A witness function is a function w : Σ∗ → P <ω(Γ∗),
where Σ and Γ are two alphabets, and P <ω(Γ∗) is the collec-
tion of all ﬁnite subsets of Γ∗
. Every such witness function
gives rise to the following counting problem: given a string
x ∈ Σ∗
, ﬁnd the cardinality |w(x)| of the witness set w(x).
According to [8], if C is a complexity class of decision prob-
lems, we deﬁne #·C to be the class of all counting problems
whose witness function w satisﬁes the following conditions.
1. There is a polynomial p(n) such that for every x ∈ Σ∗

and every y ∈ w(x) we have |y| ≤ p(|x|);

2. The problem “given x and y, is y ∈ w(x)?” is in C.

It is easy to verify that #P = #·P. The counting hierarchy
is ordered by linear inclusion [8]. In particular, we have that

IJCAI-07

418

#P ⊆ #·coNP ⊆ #·Π2P ⊆ #·Π3P, etc. Note that one can,
of course, also consider the classes #·NP, #·Σ2P, #·Σ3P,
etc. However, they play no role in this work.

The prototypical #·ΠkP-complete problem for k ∈ N is

#ΠkSAT [3], deﬁned as follows. Given a formula

ψ(X) = ∀Y1∃Y2 · · · QkYk ϕ(X, Y1, . . . , Yk),

where ϕ is a Boolean formula and X, Y1, . . . , Yk are sets
of propositional variables, count the number of truth assign-
ments to the variables in X that satisfy ψ.

Completeness of counting problems in #P is usually
proved by means of Turing reductions. However, these reduc-
tions do not preserve the counting classes #·ΠkP. It is there-
fore better to use subtractive reductions [3] which preserve
the aforementioned counting classes. We write #·R to de-
note the following counting problem: given a string x ∈ Σ∗
,
ﬁnd the cardinality |R(x)| of the witness set R(x) associated
with x. The counting problem #·A reduces to #·B via a
strong subtractive reduction if there exist two polynomial-
time computable functions f and g such that for each x ∈ Σ∗
:
B(f (x)) ⊆ B(g(x)) and |A(x)| = |B(g(x))| − |B(f (x))|
A strong subtractive reduction with B(f (x)) = ∅ is called
parsimonious. A subtractive reduction is a transitive closure
of strong subtractive reductions.

3 General Propositional Theories

The decidability problem of propositional abduction was
shown to be Σ2P-complete in [4]. The hardness part was
proved via a reduction from QSAT2. A modiﬁcation of this
reduction yields the following counting complexity result.

Theorem 2 The #-abduction problem and the #-⊆-abduction
problem are #·coNP-complete.

Proof: The #·coNP-membership is clear by the fact that it is
in Δ2P to test whether a subset S ⊆ H is a solution (resp. a
subset-minimal solution) of a given PAP (see [4], Proposition
2.1.5). The #·coNP-hardness is shown via the following par-
simonious reduction from #Π1SAT. Let an instance of the
#Π1SAT problem be given by a formula

ψ(X) = ∀Y ϕ(X, Y )

with X = {x1, . . . , xk} and Y = {y1, . . . , yl}. Moreover, let
(cid:3)
(cid:3)
k, r1, . . . , rk, t denote fresh, pairwise distinct vari-
1, . . . , x
x
(cid:3)
(cid:3)
(cid:3) = {x
k} and R = {r1, . . . , rk}. We
1, . . . , x
ables and let X
deﬁne the PAP P = (cid:10)V, H, M, T (cid:11) as follows.

(cid:3) ∪ Y ∪ R ∪ {t}
(cid:3)

V = X ∪ X
H = X ∪ X
M = R ∪ {t}
(cid:3)
(cid:3)
T = {¬xi ∨ ¬x
i, xi → ri, x
i → ri | 1 ≤ i ≤ k}

∪ {ϕ(X, Y ) → t}

Obviously, this reduction is feasible in polynomial time. We
now show that the reduction is indeed parsimonious.

The manifestations R together with the formulas xi → ri,
(cid:3)
i → ri in T enforce that in every solution S of the PAP,
x

(cid:3)
we have to select at least one of xi and x
i. The additional
(cid:3)
formula ¬xi ∨ ¬x
i enforces that we have to select at most
(cid:3)
(cid:3)
i. By these two conditions, the value of x
one of xi and x
i is
(cid:3)
fully determined by xi, namely x
i is the dual of xi.

Moreover, it is easy to check that there is a one-to-one rela-
tionship between the solutions S ⊆ X of P and the models of
∀Y ϕ(X, Y ). Hence, this reduction is indeed parsimonious.
The complementarity of X and X
enforces each solution to
be incomparable with the others and, therefore, to be subset-
minimal.
2

(cid:3)

According to the above theorem, #-abduction and #-⊆-
abduction have the same counting complexity.
Intuitively,
this is due to the following equivalence (cf. [4]): S is a ⊆-
minimal solution of the PAP P, if and only if S is a solution
of P and for every h ∈ S, S (cid:3) {h} is not a solution. Hence,
taking the ⊆-minimality into account makes things only poly-
nomially harder. In contrast, as soon as there are at least 2 pri-
ority levels, the following effect may occur. Suppose that S
is a solution of the PAP and that S (cid:3) {h} is not a solution for
every h ∈ S. Then it might well happen that, for some h ∈ S,
(cid:3) = (S (cid:3) {h}) ∪ X is a solution, where
some set of the form S
all hypotheses in X have higher priority than h. Checking if
(and, in particular, if such a set X) exists comes
such a set S
down to yet another non-deterministic guess. Formally, we
thus get the following complexity result.

(cid:3)

Theorem 3 The #-⊆P -abduction problem is #·Π2P-com-
plete via subtractive reductions.
Proof: The ⊆P -minimal solutions of a PAP can obviously
be computed by a non-deterministic polynomial-time Turing
machine that generates all subsets S ⊆ H and (i) checks
whether S is a solution of the PAP and (ii) if so, checks
whether S is ⊆P -minimal. The latter test – which is the most
expensive part – can be done by a Π2P-oracle. Indeed, the
problem of testing that S is not ⊆P -minimal can be done by
(cid:3)
(cid:3) ⊆ H s.t. S
the following Σ2P-algorithm: guess a subset S
is ⊆P -smaller than S and check that S
is a solution of the
PAP. Hence, the #-⊆P -abduction problem is in #·Π2P.

The #·Π2P-hardness is shown by the following (strong)
subtractive reduction from #Π2SAT. Let an instance of the
#Π2SAT problem be given by a formula

(cid:3)

ψ(X) = ∀Y ∃Z ϕ(X, Y, Z)

with the variables X = {x1, . . . , xk}, Y = {y1, . . . , yl}, and
(cid:3)
(cid:3)
Z = {z1, . . . , zm}. Moreover, let x
1, . . . , x
k, p1, . . . , pk,
(cid:3)
(cid:3)
l, q1, . . . , ql, r, t be fresh, pairwise distinct vari-
1, . . . , y
y
(cid:3) =
ables and X
(cid:3)
l}, and Q = {q1, . . . , ql}. Then we deﬁne two
{y
PAPs P1 and P2 as follows.
(cid:3) ∪ Y ∪ Y
(cid:3) ∪ Y ∪ Y

(cid:3) ∪ Z ∪ P ∪ Q ∪ {r, t}
(cid:3) ∪ {r}

(cid:3)
(cid:3)
(cid:3) = {x
k}, P = {p1, . . . , pk}, Y
1, . . . , x

V = X ∪ X
H = X ∪ X

(cid:3)
1, . . . , y

with priorities H1 = H (cid:3) Y

(cid:3)

and H2 = Y

(cid:3)

M = P ∪ Q ∪ {t}
(cid:3)
(cid:3)
i → pi | 1 ≤ i ≤ k}
T1 = {¬xi ∨ ¬x
i, xi → pi, x
(cid:3)
i → qi | 1 ≤ i ≤ l}

(cid:3)
i, yi → qi, y

∪ {¬yi ∨ ¬y
∪ {¬ϕ(X, Y, Z) → t}

T2 = T1 ∪ {r ∧ y1 ∧ · · · ∧ yl → t}

IJCAI-07

419

Finally we set P1 = (cid:10)V, H, M, T1(cid:11) and P2 = (cid:10)V, H, M, T2(cid:11).
Obviously, this reduction is feasible in polynomial time.
Now let A(ψ) denote the set of all satisfying assignments of
a #Π2SAT-formula ψ and let B(P) denote the set of ⊆P -
minimal solutions of a PAP P. We claim that the above deﬁ-
nition of the PAPs P1 and P2 is indeed a (strong) subtractive
reduction, i.e. that
B(P1) ⊆ B(P2)

|A(ψ)| = |B(P2)| − |B(P1)|

and

Due to lack of space, the proof of this claim is omitted.

2

4 Horn, Dual Horn, and Bijunctive Theories

In this section, we consider the special case where the the-
ory T is a set of (arbitrary or deﬁnite) Horn, dual Horn, or
bijunctive clauses. If no minimality criterion is applied to the
solutions then we get the following result.

Theorem 4 The #-abduction problem of Horn, deﬁnite Horn,
dual Horn, or bijunctive clauses is #P-complete.

Proof: The #P-membership is easily seen by the fact that
it can be checked in polynomial time whether some subset
S ⊆ H is a solution, since the satisﬁability and also the un-
satisﬁability of a set of (dual) Horn or bijunctive clauses can
be checked in polynomial time.

For the #P-hardness, we reduce the #POSITIVE-2SAT
problem (which is known to be #P-complete by [16]) to it
and show that this reduction is parsimonious. Let an arbitrary
instance of #POSITIVE-2SAT be given as a 2CNF-formula

ψ = (p1 ∨ q1) ∧ · · · ∧ (pn ∨ qn),

where the pi’s and qi’s are propositional variables from the set
X = {x1, . . . , xk}. Moreover, let g1, . . . , gn denote fresh,
pairwise distinct variables and let G = {g1, . . . , gn}. Then
we deﬁne the PAP P = (cid:10)V, H, M, T (cid:11) as follows.

V = X ∪ G
H = X
M = G
T = {pi → gi | 1 ≤ i ≤ n} ∪ {qi → gi | 1 ≤ i ≤ n}

Obviously,
this reduction is feasible in polynomial time.
Moreover, it is easy to check that there is a one-to-one re-
lationship between the solutions S ⊆ X of P and the models
of ψ. Note that the clauses in T are at the same time deﬁnite
Horn, bijunctive, and dual Horn.
2

Analogously to the case of general theories, the counting
complexity remains unchanged when we restrict our attention
to subset-minimal solutions.

Theorem 5 The #-⊆-abduction problem of Horn, deﬁnite
Horn, dual Horn, or bijunctive clauses is #P-complete.

Proof: The #P-membership holds analogously to the case of
abduction without subset-minimality. This is due to following
property (see [4], Proposition 2.1.5). S ⊆ H is a subset-
minimal solution of P, if and only if S is a solution and for
all h ∈ S, the set S (cid:3) {h} is not a solution of P.

For the #P-hardness, we modify the reduction from the
#POSITIVE-2SAT problem in Theorem 4. Let ψ, X, and G
(cid:3)
(cid:3)
(cid:3) = {x
k} and
1, . . . , x
be deﬁned as before. Moreover, let X
R = {r1, . . . , rk} be fresh, pairwise distinct variables. Then
we deﬁne P = (cid:10)V, H, M, T (cid:11) as follows.

(cid:3) ∪ G ∪ R
(cid:3)

V = X ∪ X
H = X ∪ X
M = R ∪ G
T = {pi → gi, qi → gi | 1 ≤ i ≤ n}

(cid:3)
(cid:3)
∪ {¬xi ∨ ¬x
i, xi → ri, x
i → ri | 1 ≤ i ≤ k}

(cid:3)

The idea of the variables X
tions G is exactly the same as in the proof of Theorem 2.

and the additional manifesta-

(cid:3)
Actually, the formula ¬xi ∨ ¬x
i can even be omitted. This
(cid:3)
i ∈
is due to the fact that, whenever a subset S ⊆ H with xi, x
(cid:3)
(cid:3)
i} is also a solution since x
S is a solution of P, then S (cid:3) {x
i
is useless as soon as xi is present (note that the only use of
(cid:3)
x
i is to derive ri in the absence of xi). Therefore in a subset-
minimal solution of the PAP P, we will never select both xi
(cid:3)
(cid:3)
i even without the formula ¬xi ∨ ¬x
and x
i. The remaining
formulas are indeed deﬁnite Horn and dual Horn.
2

Below we consider PAPs with ⊆P -minimality. It turns out
that for deﬁnite Horn and dual Horn clauses, the priorities
leave the counting complexity unchanged. In all other cases,
the counting complexity increases.

Theorem 6 The #-⊆P -abduction problem of deﬁnite Horn
and of dual Horn clauses is #P-complete.

Proof: The #P-hardness is clear, since it holds even without
priorities. The #P-membership for deﬁnite Horn clauses is
proved as follows. Let P = (cid:10)V, H, M, T (cid:11) where T consists
only of Horn clauses. According to [4], Theorem 5.3.3, for
any S ⊆ H, we can check in polynomial time whether S
is a ⊆P -minimal solution. The #P-membership for deﬁnite
Horn clauses is thus proved.

Now suppose that T is dual Horn, i.e. the clauses in T are
either of the form ¬p or ¬p ∨ q1 ∨ · · · ∨ qm, or q1 ∨ · · · ∨ qm
(for p, q1, . . . , qm ∈ V and m ≥ 1). Moreover, let N denote
the propositional variables occurring in negative unit clauses
in T , i.e. N = {p | ¬p ∈ T }. Then for every solution S
of P we have S ⊆ H (cid:3) N , since otherwise T ∪ S would be
(cid:3) ⊆ H (cid:3) N ,
inconsistent. Moreover, for any S
is also a solution of P, since (by the special form of
the set S
(cid:3) ∪ T is also consistent and (by the monotonicity
dual Horn) S
of |=) S

(cid:3) ∪ T also implies M .

with S ⊆ S

(cid:3)

(cid:3)

Let H1, . . . , HK denote the priorities of H. Now S is a
⊆P -minimal solution of P if and only if S is a solution of P
and for all i ∈ {1, . . . , k} and for all x ∈ (S ∩ Hi) the set
(cid:3) = (S (cid:3) {x}) ∪ (Hi+1 ∩ N ) ∪ · · · ∪ (HK ∩ N )

S

is not a solution of P. The latter test is clearly feasible in
polynomial time in the dual Horn case.

2

Recall from our remark preceding Theorem 3 that the ef-
fect of at least 2 priority levels is as follows. In order to check
that some solution S is not ⊆P -minimal, we have to test that
(cid:3) = (S (cid:3) {h}) ∪ X,
there exists some solution of the form S

IJCAI-07

420

(cid:3)

where all hypotheses in X have higher priority than h.
In
general, the difﬁculty of determining if such a set X exists is
the following one. If we choose X too small, then S
might
not entail the manifestations M .
If we choose X too big,
(cid:3) ∪ T might be inconsistent. The intuition underly-
then S
ing Theorem 6 is that the problem of choosing X too big
disappears for deﬁnite Horn and dual Horn clauses. For def-
inite Horn, the only candidate X that has to be checked is
X = Hi+1 ∪ · · · ∪ HK . For dual Horn, the only candidate X
is X = (Hi+1 ∪ · · · ∪ HK) ∩ N , where N takes care that if
the theory T contains a negative unit clause ¬p, then p must
not be included in any solution.

(cid:3)

Theorem 7 The #-⊆P -abduction problem of Horn or bijunc-
tive clauses is #·coNP-complete.
Proof: The #·coNP-membership is established as follows:
Given a set of variables S, we have to (i) check whether S is
a solution of the PAP and (ii) if so, check whether S is ⊆P -
minimal. The latter test, which dominates the overall com-
plexity, can be done by a coNP-oracle. Indeed, the problem
of testing that S is not ⊆P -minimal can be done by the fol-
is ⊆P -
lowing NP-algorithm: guess a subset S
smaller than S and check (in polynomial time for a Horn or
bijunctive theory), that S
is a solution of the PAP. Hence, in
this case, #-⊆P -abduction in #·coNP.

(cid:3) ⊆ H s.t. S

The #·coNP-hardness is shown by a (strong) subtractive
reduction from #Π1SAT. Let an instance of the #Π1SAT
problem be given by a formula ψ(X) = ∀Y ϕ(X, Y ) with
X = {x1, . . . , xk} and Y = {y1, . . . , yl}. W.l.o.g.
(see
[17]), we may assume that ϕ(X, Y ) is in 3DNF, i.e., it is of
the form C1 ∨ · · · ∨ Cn where each Ci is of the form Ci =
li1 ∧li2 ∧li3 and the lij’s are propositional literals over X ∪Y .
(cid:3)
l, q1, . . . , ql, g1, . . . ,
gn, r, t denote fresh, pairwise distinct variables and let
(cid:3)
l}, P = {p1, . . . , pk},
X
Q = {q1, . . . , ql} and G = {g1, . . . , gn}. Then we deﬁne
two PAPs P1 and P2 as follows.

(cid:3)
(cid:3)
1, . . . , x
k, p1, . . . , pk, y
Let x

(cid:3)
(cid:3)
(cid:3) = {x
k}, Y
1, . . . , x

(cid:3)
1, . . . , y

(cid:3)
1, . . . , y

(cid:3) = {y

(cid:3)

Due to lack of space, the proof of this claim is omitted.

2

5 Afﬁne Theories

In this section, we consider the special case where the the-
ory T is a set of afﬁne clauses. Recall that such a set can be
written as a linear system AX = b over the Boolean ﬁeld Z2.
We change to the Creignou and Zanuttini approach [1] in this
case, since we need the possibility to set a variable to 0. If
no minimality criterion is applied to the solutions then we get
the following result.

Theorem 8 The #-abduction of afﬁne clauses is in FP.
Proof: Given an afﬁne PAP P = (cid:10)V, H, M, T (cid:11) where T is an
afﬁne system AX = b, we reduce it to the problem of count-
ing the satisfying assignments of linear systems over Z2. Re-
call that T ∪ S |= M means that x = 1 for each x ∈ S and
x = 0 for each x ∈ H (cid:3) (S ∪ M ) entails y = 1 for each
y ∈ M in the system T . First we check whether T ∪ S |= M
can hold. If V (cid:3)(H ∪M ) is nonempty then P has no solution,
since we cannot force all y ∈ M to y = 1. Otherwise trans-
form the system AX = b to EY = b + F Z, where Y ⊆ M
and Z ∩ M = ∅, such that EY + F Z = AX. Transform
EY by Gaussian elimination to Smith normal form giving
E
has a row with more than one variable, say
yi1 + · · · + yil for l ≥ 2, then either P has no solution, or
each solution S compatible with yi1 = · · · = yil = 1 is also
(cid:3)
compatible with yij = 0 for some j ∈ {1, . . . , l}. If E
Y
has only rows with one variable, then add to AX = b the
equations y = 1 for each y ∈ M , resulting in the new system
(cid:3)
A
. Check whether the last system is satisﬁable and
transform it by Gaussian elimination into the Smith normal
form (I B)X = b
. Each truth assignment I of the variables
H (cid:3) M satisfying the linear system determines a solution S
of P, i.e., S = {y ∈ H | I(y) = 1} ∪ {¬y | I(y) = 0}. Let
the linear system (I B)X = b
have k rows. Then there are
2|H(cid:2)M|−k
2

different solutions of P.

X = b

. If E

Y

Y

(cid:3)(cid:3)

(cid:3)(cid:3)

(cid:3)

(cid:3)

(cid:3)

(cid:3)

(cid:3)

(cid:3)

V = X ∪ X
H = X ∪ X

(cid:3) ∪ Y ∪ Y
(cid:3) ∪ Y ∪ Y

(cid:3) ∪ P ∪ Q ∪ G ∪ {r}
(cid:3) ∪ {r}

with priorities H1 = H (cid:3) Y

(cid:3)

and H2 = Y

(cid:3)

M = P ∪ Q ∪ G
(cid:3)
(cid:3)
T1 = {¬xi ∨ ¬x
i, xi → pi, x
i → pi | 1 ≤ i ≤ k}
(cid:3)
i → qi | 1 ≤ i ≤ l}

∪ {¬yi ∨ ¬y
∪ {zij → gi | 1 ≤ i ≤ n and 1 ≤ j ≤ 3}

(cid:3)
i, yi → qi, y

(cid:3)
(cid:3)
where zij is either of the form xk, x
k, yl, or y
l depending on
whether the literal lij in Ci is of the form ¬xk, xk, ¬yl, or yl,
respectively. In other words, zij encodes the dual of lij.
T2 = T1 ∪ {r → gi | 1 ≤ i ≤ n} ∪ {r → yj | 1 ≤ j ≤ l}
Finally, we set P1 = (cid:10)V, H, M, T1(cid:11) and P2 = (cid:10)V, H, M, T2(cid:11).
Obviously, this reduction is feasible in polynomial time.
Now let A(ψ) denote the set of all satisfying assignments of
a #Π1SAT-formula ψ and let B(P ) denote the set of ⊆P -
minimal solutions of a PAP P . We claim that P1 and P2 have
the following property.

B(P1) ⊆ B(P2)

and

|A(ψ)| = |B(P2)| − |B(P1)|

Theorem 9 The #-⊆-abduction problem of afﬁne clauses is
#P-complete.

Proof: The #P-membership is clear from the fact that it
can be checked in polynomial time whether a set S ⊆ H
is a subset-minimal solution of an afﬁne system according
to Proposition 1 in [2]. The problem of minimal afﬁne ex-
tension, namely that given an afﬁne system AX = b and a
partial assignment s to the variables X, count the number
of extensions s which are minimal solutions of AX = b, is
proved to be #P-complete in [2] even if the partial assign-
ment contains no 0. There is a parsimonious reduction to an
afﬁne PAP P = (cid:10)V, H, M, T (cid:11) as follows. Let V = H = X,
M = {xi ∈ X | s(xi) = 1}, and T = {AX = b}. Let
Y ⊆ X be the variables not assigned by s and let ¯s be an
extension of s satisfying the afﬁne system. Then the set of
variables S = {xi ∈ Y | ¯s(xi) = 1} is a subset-minimal
solution of P if and only if the extension ¯s is minimal.

2

Theorem 10 The #-⊆P -abduction problem of afﬁne clauses
is #P-complete.

IJCAI-07

421

Proof: The #P-hardness is clear, since it holds without pri-
orities. The #P-membership for afﬁne clauses is proved as
follows. Let P = (cid:10)V, H, M, T (cid:11) where T is a linear system
AX = b over Z2. Let H1, . . . , HK denote the priorities of H.
Now S is a ⊆P -minimal solution of P if and only if S is a so-
lution of P, there exists an i ∈ {1, . . . , k} such that S ∩ Hi is
(cid:3)
subset-minimal , and for each j < i and all other solutions S
(cid:3) ∩ Hj. We can decide in polyno-
of P we have S ∩ Hj = S
mial time if S ∩ Hi is a subset minimal solution of an afﬁne
system. The second condition is tested in polynomial time as
follows. For each j < i we set the variables H (cid:3) Hj in the
(cid:3)
(cid:3)
jYj = b
system AX = b equal to 0, resulting in a system A
j.
(cid:3) ∩ Hj holds if and only if the
Then the identity S ∩ Hj = S
(cid:3)
(cid:3)
jYj = b
resulting system A
j has at most one solution, what
can be tested in polynomial time. Hence the overall test can
be performed in polynomial time.
2

6 Conclusion
Eiter and Gottlob proved in [4] a plethora of complexity
results for propositional abduction. Their results were ex-
tended to a trichotomy of PAPs without minimality-criterion
by Creignou and Zanuttini [1]. The use of complexity re-
sults is usually twofold. Theoretically, they give us a better
understanding of the nature of the considered problem class.
Practically, they give us a hint as to which subclass of the
problem we should aim at, provided that the application in
mind admits such a restriction. In this sense, the counting
complexity results shown here are important in complement-
ing the already known decision complexity results. Note that
our results reveal signiﬁcant differences between the count-
ing complexity behavior of PAPs and the decision complex-
ity. For instance, deﬁnite Horn abduction and bijunctive ab-
duction were shown to be tractable in [1]. In contrast, by our
Theorem 4, the corresponding counting problems are #P-
complete. This is one more example of the often observed
“easy to decide, hard to count” phenomenon.

From a complexity theoretic point of view, there is another
interesting aspect to the counting complexity results shown
here. The class #P has been studied intensively and many
completeness results for this class can be found in the litera-
ture. In contrast, for the higher counting complexity classes
#·ΠkP (with k ≥ 1), very few complete problems are known
apart from the generic problems #ΠkSAT. In fact, to the best
of our knowledge, our #·Π2P-completeness result in Theo-
rem 3 is the ﬁrst one apart from #Π2SAT.

In this work, we have considered the complexity of deter-
mining the number of all (cid:8)-minimal explanations of a propo-
sitional abduction problem, where (cid:8) ∈ {=, ⊆, ⊆P }. Note
that in [4], complexity problems related to abduction with fur-
ther notions of minimality were analyzed, namely “minimal
cardinality” with or without priorities and “minimal weight”.
Abduction with “minimal weight” can also be considered as
cost-based abduction. We are planning to extend our counting
complexity analysis to these notions of minimality.

References
[1] N. Creignou and B. Zanuttini. A complete classiﬁcation
of the complexity of propositional abduction. Submit-

ted, 2004.

[2] A. Durand and M. Hermann. The inference problem
for propositional circumscription of afﬁne formulas is
coNP-complete.
In 20th STACS, LNCS 2607, pages
451–462, 2003.

[3] A. Durand, M. Hermann, and P. G. Kolaitis. Sub-
tractive reductions and complete problems for count-
ing complexity classes. Theoretical Computer Science,
340(3):496–513, 2005.

[4] T. Eiter and G. Gottlob. The complexity of logic-based
abduction. Journal of the Association for Computing
Machinery, 42(1):3–42, 1995.

[5] T. Eiter and K. Makino. On computing all abductive
explanations. In Proc. AAAI/IAAI 2002, pages 62–67,
2002.

[6] T. Eiter and K. Makino. Generating all abductive expla-
nations for queries on propositional Horn theories. In
Proc. CSL 2003, LNCS 2803, pages 197–211, 2003.

[7] R. Fagin, J. D. Ullman, and M. Y. Vardi. On the se-
mantics of updates in databases. In 2nd PODS, pages
352–365, 1983.

[8] L. A. Hemaspaandra and H. Vollmer. The satanic no-
tations: Counting classes beyond #P and other deﬁni-
tional adventures. SIGACT News, Complexity Theory
Column 8, 26(1):2–13, 1995.

[9] A. Herzig, J. Lang, P. Marquis, and T. Polacsek. Up-
dates, actions, and planning. In 17th IJCAI, pages 119–
124, 2001.

[10] A. C. Kakas and P. Mancarella. Database updates
In 16th VLDB, pages 650–661,

through abduction.
1990.

[11] I. Papatheodorou, A. C. Kakas, and M. J. Sergot. In-
ference of gene relations from microarray data by ab-
duction. In 8th LPNMR, LNCS 3662, pages 389–393,
2005.

[12] Y. Peng and J. A. Reggia. Abductive inference models
for diagnostic problem solving. Springer-Verlag, 1990.

[13] D. Poole. Probabilistic Horn abduction and Bayesian

networks. Artiﬁcial Intelligence, 64(1):81–129, 1993.

[14] T. J. Schaefer. The complexity of satisﬁability problems.

In 10th STOC, pages 216–226, 1978.

[15] L. G. Valiant. The complexity of computing the per-
manent. Theoretical Computer Science, 8(2):189–201,
1979.

[16] L. G. Valiant. The complexity of enumeration and
SIAM Journal on Computing,

reliability problems.
8(3):410–421, 1979.

[17] C. Wrathall. Complete sets and the polynomial-time
hierarchy. Theoretical Computer Science, 3(1):23–33,
1976.

IJCAI-07

422

