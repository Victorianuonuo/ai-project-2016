Modelling Well-structured Argumentation Lines

Diego C. Mart´ınez and Alejandro J. Garc´ıa and Guillermo R. Simari

Artiﬁcial Intelligence Research and Development Laboratory,

Department of Computer Science and Engineering, Universidad Nacional del Sur

{dcm,ajg,grs}@cs.uns.edu.ar

Abstract

Abstract argumentation systems are formalisms for
defeasible reasoning where some components re-
main unspeciﬁed, the structure of arguments be-
ing the main abstraction. In the dialectical process
carried out to identify accepted arguments in the
system some controversial situations may appear.
These relate to the reintroduction of arguments into
the process which cause the onset of circularity.
This must be avoided in order to prevent an inﬁnite
analysis. Some systems apply the sole restriction
of not allowing the introduction of previously con-
sidered arguments in an argumentation line. How-
ever, repeating an argument is not the only possible
cause for the risk mentioned, as subarguments must
be taken into account. In this work, we introduce an
extended argumentation framework and a deﬁnition
for progressive defeat path. A credulous extension
is also presented.

1 Introduction
Different formal systems of defeasible argumentation have
been deﬁned as forms of representing interesting character-
istics of practical or common sense reasoning. The central
idea in these systems is that a proposition will be accepted if
there exists an argument that supports it, and this argument is
regarded as acceptable with respect to an analysis performed
considering all the available counterarguments. Therefore,
in the set of arguments of the system, some of them will be
acceptable or justiﬁed or warranted arguments, while others
will be not. In this manner, defeasible argumentation allows
reasoning with incomplete and uncertain information and is
suitable to handle inconsistency in knowledge-based systems.
Abstract argumentation systems [Dung, 1993; Jakobovits,
1999; Vreeswijk, 1997; Kowalski and Toni, 1996; Bench-
Capon, 2002] are formalisms for defeasible reasoning where
some components remain unspeciﬁed, being the structure of
arguments the main abstraction. In this type of systems, the
emphasis is put on elucidating semantic questions, such as
ﬁnding the set of accepted arguments. Most of them are based
on the single abstract notion of attack represented as a rela-
tion among the set of available arguments. If (A, B) are in
the attack relation then in order to accept B it is necessary to

ﬁnd out if A is accepted or not, but not the other way around.
From that relation, several argument extensions are deﬁned
as sets of possible accepted arguments. This primitive no-
tion of defeat between arguments is the basis of the study of
argumentation semantic, but a more detailed model will be
useful to capture speciﬁc behaviour of concrete systems and
to model well-structured argumentation processes.

Defeat between arguments must be deﬁned over two ba-
sic elements: a notion of conﬂict and a comparison crite-
rion for arguments. Finding a preferred argument is essen-
tial to determine a defeat relation [Simari and Loui, 1992;
Prakken and Sartor, 1996; Amgoud, 1998; Stolzenburg et al.,
2003]. However, the task of comparing arguments to estab-
lish a preference is not always successful. In this case, the
classic abstract attack relation is no longer useful as a mod-
elling tool.

In the dialectical process carried out to identify accepted
arguments in the system, some controversial situations may
be found. These situations are related to the reintroduction of
arguments in this process, causing a circularity that must be
avoided in order to prevent an inﬁnite analysis. Consider for
example three arguments A, B and C such that A is a defeater
of B, B is a defeater of C and C is a defeater of A. In order
to decide the acceptance of A, the acceptance of its defeaters
must be analyzed ﬁrst, including A itself.

An argumentation line is a sequence of defeating argu-
ments, such as [A, B] or [A, B, C, A]. Whenever an argu-
ment A is encountered while analyzing arguments for and
against A, a circularity occurs. Some systems apply a sin-
gle restriction to argumentation lines: no previously consid-
ered argument is reintroduced in the process. In [Simari et
al., 1994], the relation between circularity in argumentation
and the comparison criteria used in the system is established.
Arguments in such situations are called fallacious arguments
and the circularity itself is called a fallacy. In somes systems
such as [Jakobovits, 1999; Jakobovits and Vermeir, 1999],
these arguments are classiﬁed as undecided arguments: they
are not accepted nor rejected.

In this work, we show that a more speciﬁc restriction needs
to be applied, other than to the prohibit reintroduction of pre-
vious arguments in argumentation lines. In the next section,
we deﬁne the extended abstract framework, where conﬂicts
and preference between arguments are considered, in order to
characterize progressive argumentation lines.

IJCAI-07

465

2 Abstract Argumentation Framework
Our argumentation framework is formed by four elements:
a set of arguments, and three basic relations between argu-
ments.

Deﬁnition 1 An abstract argumentation framework (AF) is
a quartet (cid:2)AR, (cid:3), C, R(cid:4), where AR is a ﬁnite set of ar-
guments, (cid:3) is the subargument relation, C is a symmetric
and anti-reﬂexive binary conﬂict relation between arguments,
C ⊆ AR × AR, and R is a preference relation among argu-
ments.

Here, arguments are abstract entities [Dung, 1993] that will
be denoted using calligraphic uppercase letters. No reference
to the underlying logic is needed since we are abstracting the
structure of the arguments. The symbol (cid:3) denotes subargu-
ment relation: A (cid:3) B means “A is a subargument of B”.
Any argument A is considered a superargument and a subar-
gument of itself. Any subargument B (cid:3) A such that B (cid:6)= A
is said to be a non-trivial subargument, denoted by symbol (cid:2).
The following notation will be also used: given an argument
A then A−
will
represent a superargument of A. When no confusion may
arise, subscript index will be used for distinguishing different
subarguments or superarguments of A.

will represent a subargument of A, and A+

The conﬂict relation between two arguments A and B de-
notes the fact that these arguments cannot be accepted simul-
taneously since they contradict each other. For example, two
arguments A and B that support complementary conclusions
l and ¬l cannot be accepted together. The set of all pairs of
arguments in conﬂict on the AF is denoted by C. Given a set
of arguments S, an argument A ∈ S is said to be in conﬂict
in S if there is an argument B ∈ S such that (A, B) ∈ C.
The set Conf (A) is the set of all arguments X ∈ AR such
that (A, X ) ∈ C.

As stated by the following axiom, conﬂict relations have to

be propagated to superarguments.
Axiom 1 (Conﬂict inheritance) Let Φ =(cid:2)AR, (cid:3), C, R(cid:4) be
an AF, and let A and B be two arguments in AR. If (A, B) ∈
C, then (A, B+) ∈ C, (A+, B) ∈ C, and (A+, B+) ∈ C,
for any superargument A+

of A and B+

of B.

The constraints imposed by the conﬂict relation lead to sev-
eral sets of possible accepted arguments. For example, if
AR = {A, B} and (A, B) ∈ C, then {A} is a set of pos-
sible accepted arguments, and so is {B}. Therefore, some
way of deciding among all the possible outcomes must be
devised. In order to accomplish this task, the relation R is
introduced in the framework and it will be used to evaluate
arguments, modelling a preference criterion based on a mea-
sure of strength.
Deﬁnition 2 Given a set of arguments AR, an argument
comparison criterion R is a binary relation on AR. If ARB
but not BRA then A is preferred to B, denoted A (cid:8) B. If
ARB and BRA then A and B are arguments with equal rel-
ative preference, denoted A ≡ B. If neither ARB or BRA
then A and B are incomparable arguments, denoted A (cid:2)(cid:3) B.

tablish additional rationality requirements for decision mak-
ing.
Example 1 Φ = (cid:2)AR, (cid:3), C, R(cid:4) where AR = {A, B,
C, D, E}, C = {{A, B}, {B, C}, {C, D}}, {C, E}}1 and
A (cid:8) B, B (cid:8) C, E (cid:2)(cid:3) C and C ≡ D is an AF according to
deﬁnition 1.

For two arguments A and B in AR, such that the pair
(A, B) belongs to C the relation R is considered. If a con-
crete preference is made (A (cid:8) B or B (cid:8) A), then a defeat
relation is established. It is said that the preferred argument is
a proper defeater of the non-preferred argument. If the argu-
ments are indifferent according to R, then they have the same
relative conclusive force. For example, if the preference cri-
terion establishes that smaller arguments are preferred, then
two arguments of the same size are indifferent. On the other
hand, arguments may be incomparable. For example, if the
preference criterion states that argument A is preferred to B
whenever the premises of A are included in the premises of B,
then arguments with disjoint sets of premises are incompara-
ble. This situation must be understood as a natural behaviour.
When two conﬂictive arguments are indifferent or incom-
parable according to R, the conﬂict between these two ar-
guments remains unresolved. Due to this situation and to
the fact that the conﬂict relation is a symmetric relation,
each of the arguments is blocking the other one and it is
said that both of them are blocking defeaters [Pollock, 1987;
Simari and Loui, 1992]. An argument B is said to be a de-
feater of an argument A if B is a blocking or a proper de-
feater of A. In example 1, argument A is a proper defeater
of argument B, while C is a blocking defeater of D and vice
versa, D is a blocking defeater of C.

Abstract frameworks can be depicted as graphs, with dif-
• ) to denote the
ferent types of arcs. We use the arc (
) is used to denote
subargument relation. An arrow (
) con-
proper defeaters and a double-pointed arrow (
nects blocking defeaters. In ﬁgure 1, a simple framework is
shown. Argument C is a subargument of A. Argument B is
a proper defeater of C and D is a blocking defeater of B and
viceversa.

A (cid:3)

•

C (cid:3)

(cid:3)

woooooo

B
fLLLLL

(cid:3)

D

Figure 1: Defeat graph

Some authors leave the preference criteria unspeciﬁed,
even when it is one of the most important components in the
system. However, in many cases it is sufﬁcient to establish
a set of properties that the criteria must exhibit. A very rea-
sonable one states that an argument is as strong as its weakest
subargument [Vreeswijk, 1997]. We formalize this idea in the
next deﬁnition.

Deﬁnition 3 (Monotonic preference relation) A preference
relation R is said to be monotonic if, given A (cid:8) B, then
A (cid:8) C, for any argument B (cid:3) C.

As the comparison criterion is treated abstractly, we do not
assume any property of R. Any concrete framework may es-

1When describing elements of C, we write {A, B} as an abbre-

viation for {(A, B), (B, A)}, for any arguments A and B in AR.

IJCAI-07

466

/
/
o
o
/
/
w
&
&
f
We will assume from now on that the criterion R included
in the AF is monotonic. This is important because any ar-
gument A defeated by another argument B should also be
. In ﬁgure 1, argument B
defeated by another argument B+
defeats C, but it should also be a defeater of A, because C is
its subargument.

3 Defeat Paths

In [Dung, 1993], several semantic notions are deﬁned. Other
forms of clasifying arguments as accepted or rejected can be
found in [Jakobovits, 1999; Jakobovits and Vermeir, 1999].

From a procedural point of view, when evaluating the ac-
ceptance of an argument, a set of conﬂict-related arguments
are considered. An important structure of this process is cap-
tured in the following deﬁnition.

Deﬁnition 4 (Defeat path) A defeat path λ of an argumen-
tation framework (cid:2)AR, (cid:3), C, R(cid:4) is a ﬁnite sequence of ar-
guments [A1, A2, . . . , An] such that argument Ai+1 is a de-
feater of argument Ai for any 0 < i < n. A defeat path for
an argument A is any defeat path starting with A.

A defeat path is a sequence of defeating arguments. A
maximal defeat path is a path that is not included in other path
as a subsequence. The length of the defeat path is important
for acceptance purposes, because an argument A defeated by
an argument B may be reinstated by another argument C. In
this case, it is said that argument C defends A against B. If
the length of a defeat path for argument A is odd, then the
last argument in the sequence is playing a supporting or de-
fender role. If the length is even, then the last argument is
playing an interfering or attacker role [Simari et al., 1994;
Garc´ıa and Simari, 2004]. A partner of an argument Ai in
the path λ is any argument Aj playing the same role in λ.

The notion of defeat path is very simple and only requires
that any argument in the sequence must defeat the previous
one. Under this unique constraint, which is the basis of argu-
mentation processes, it is possible to obtain some controver-
sial structures, as shown in the next examples.
Example 2 Let Φ = (cid:2)AR, (cid:3), C, R(cid:4) an argumenta-
−},
tion framework where AR = {A, B, C A1
C={{A1
and
B (cid:8) A, C (cid:8) B, A2

−, B}, {B, C}, {A2

− (cid:2)(cid:3) C, A (cid:2)(cid:3) C.

−, C}, {A1

−, C} . . .}

−, A2

By Axiom 1 if (A1

same is true for (A, C), due the inclusion of (A1

−, B) ∈ C then also (A, B) ∈ C. The
−, C) in C.
The sequence λ1 = [A, B, C, A] is a defeat path in Φ, be-
cause B is a proper defeater of A, C is a proper defeater of
B and A and C are blocking defeaters of each other. The ar-
gument A appears twice in the sequence, as the ﬁrst and last
argument. Note that in order to analyze the acceptance of A,
it is necessary to analyze the acceptance of every argument
in λ, including A. This is a circular defeat path for A.

The sequence λ2 = [A, B, C, A1

−] is also a defeat path,
because A1
and C are blocking defeaters of each other.
Note that even when no argument is repeated in the sequence,
the subargument A1
was already taken into account in the
path, as argument B is its defeater. This sequence may be
considered another circular defeat path for A.

−

−

−

The sequence λ3 = [A, B, C, A2

−] is a defeat path in Φ,
and C are blocking defeaters of each other. In
of A appears in the defeat path

because A2
this case, a subargument A2
for A. However, this is not a controversial situation, as A2
was not involved in any previous conﬂict in the sequence. Ar-
−, B) ∈ C, and is
gument B is defeating A just because (A1
not related to A2

. Defeat path λ3 is correctly structured.

−

−

−

The initial idea of restricting the inclusion of arguments
previously considered in the sequence is not enough. Even
more, example 2 show that forbidding the inclusion of sub-
arguments is not accurate, because valid argumentation lines
(as path λ3) are thrown apart. Two main problematic situa-
tions must be taken into account, as shown in ﬁgures 2(a) and
2(b). The marked argument is reinserted in the defeat path. In
the ﬁrst case, it appears again as a defeater of C. In the second
case, Ai is indirectly reinserted by including a superargument
in the sequence.

(a)

(b)

(cid:3)
A

(cid:3)
Ai

(cid:3)
B

(cid:3)
B

· · ·

(cid:3)o
C

· · ·

A(cid:3)

•

_ _

(cid:3)
Ai
_ _

_ _
(cid:3)
A
_ _

(cid:10)

B

Figure 2: (a) Direct reinsertion and (b) indirect reinsertion

Both situations are controversial and some well-formed
In the next section we explore

structure must be devised.
these ideas.

4 Progressive Defeat Paths
In this section, we present the concept of progressive defeat
paths, a notion related to acceptable argumentation lines de-
ﬁned for a particulary concrete system in [Garc´ıa and Simari,
2004]. First, we formalize the consequences of removing an
argument from a set of arguments. This is needed because it
is important to identify the set of arguments available for use
in evolving defeat paths.

Suppose S is a set of available arguments used to con-
If an argument A in S is going to
struct a defeat path λ.
be discarded in that process (i. e., its information content is
not taken into account), then every argument that includes A
as a subargument should be discarded too. Let S be a set of
arguments and A an argument in S. The operator (cid:2) is de-
ﬁned as S (cid:2) A = S − Sp(A) where Sp(A) is the set of all
superarguments of A.

As stated in Axiom 1, conﬂict relations are propagated
through superarguments: if A and B are in conﬂict, then A+
and B are also conﬂictive arguments. On the other hand,
whenever two arguments are in conﬂict, it is always possi-
ble to identify conﬂictive subarguments. This notion can be
extended to defeat relations. Let A and B be two arguments
such that B is a defeater of A. Then both arguments are in
conﬂict and A (cid:6)(cid:8) B. By axiom 1, there may exist a subar-
gument Ai (cid:2) A such that (B, Ai) ∈ C. It is clear, as R is

IJCAI-07

467

o
o
o
o
o





o
o
o
o
o
o
o
o






o
o
monotonic, that Ai (cid:6)(cid:8) B, and therefore B is also a defeater of
Ai. Thus, for any pair of conﬂictive arguments (A, B) there
is always a pair of conﬂictive arguments (C, D) where C (cid:3) A
and D (cid:3) B. Note that possibly C or D are trivial subargu-
ments, that is the reason for the existence of the pair to be
assured.
Deﬁnition 5 (Core conﬂict) Let A and B be two arguments
such that B is a defeater of A. A core conﬂict of A and B
is a pair of arguments (Ai, B) where (i) Ai (cid:3) A, (ii) B is a
defeater of Ai and (iii) there is no other argument Aj (cid:2) Ai
such that Aj is defeated by B.

The core conﬂict is the underlying cause of a conﬂict rela-
tion between two arguments, due to the inheritance property.
Observe that the core conﬂict is not necessarily unique.

It is possible to identify the real disputed subargument,
which is causing other arguments to fall in conﬂict. In ﬁg-
ure 1, argument B defeats A because it is defeating one of its
subarguments C. The core conﬂict of A and B is C. In this
case the defeat arc between the superarguments may not be
drawn.
Deﬁnition 6 (Disputed subargument) Let A and B be two
arguments such that B is a defeater of A. A subargument
Ai (cid:3) A is said to be a disputed subargument of A with re-
spect to B if Ai is a core conﬂict of A and B.

The notion of disputed subargument is very important in
the construction of defeat paths in dialectical processes. Sup-
pose argument B is a defeater of argument A. It is possible to
construct a defeat path λ = [A, B]. If there is a defeater of B,
say C, then [A, B, C] is also a defeat path. However, C should
not be a disputed argument of A with respect to B, as circu-
larity is introduced in the path. Even more, C should not be
an argument that includes that disputed argument, because
that path can always be extended by adding B again.

The set of arguments available to be used in the construc-
tion of a defeat path is formalized in the following deﬁnition.
Deﬁnition 7 (Defeat domain) Let Φ = (cid:2)AR, (cid:3), C, R(cid:4) be
an AF and let λ = [A1, A2, . . . , An] be a defeat path in Φ.
The function Di(λ) is deﬁned as

• D1(λ) = AR
• Dk(λ) = Dk−1(λ) (cid:2) Bn, where Bn is the disputed sub-
argument of Ak−1 with respect to Ak in the sequence,
with 2 ≤ k ≤ n.

The defeat domain discards controversial arguments for a
given path. The function Dk(λ) denotes the set of arguments
that can be used to extend the defeat path λ at stage k, i. e., to
defeat the argument Ak. Choosing an argument from Dk(λ)
avoids the introduction of previous disputed arguments in the
sequence. It is important to remark that if an argument in-
cluding a previous disputed subargument is reintroduced in
the defeat path, it is always possible to reintroduce its origi-
nal defeater.

Therefore, in order to avoid controversial situations, any
argument Ai of a defeat path λ should be in Di−1(λ). Select-
ing an argument outside this set implies the repetition of pre-
viously disputed information. The following deﬁnition char-
acterizes well structured sequences of arguments, called pro-
gressive defeat paths.

Deﬁnition 8 (Progressive defeat path) Let (cid:2)AR, (cid:3), C, R(cid:4)
be an argumentation framework. A progressive defeat path
is deﬁned recursively in the following way:

• [A] is a progressive defeat path, for any A ∈ AR.
• If λ = [A1, A2, . . . , An], n ≥ 1 is a progressive de-
feat path, then for any defeater B of An such that
B ∈Dn(λ), and B is not defeated by a partner in λ,
λ(cid:3) = [A1, A2, . . . , An, B] is a progressive defeat path.
Progressive defeat paths are free of circular situations and
guarantees progressive argumentation, as desired on every di-
alectical process. Note that it is possible to include a subar-
gument of previous arguments in the sequence, as long as it
is not a disputed subargument.

A1 (cid:3)

•

A− (cid:3)

wooooooo

(cid:3)
•

(cid:3)

B−

•

A2 (cid:3)

•

C

C −

B (cid:3)
xrrrrrr
?

(cid:3)

Figure 3: Controversial Situation

In ﬁgure 3 a controversial abstract framework is shown.
For space reasons we do not provide the formal speciﬁcation,
although it can be deduced from the graph. There are seven
arguments A1, A2, A−, B, B−, C, C−
. There exists an inﬁ-
nite defeat path [A1, B, C, A2, B, C..] which is not progres-
sive. Lets construct a progressive defeat path λ for argument
A1. We start with λ = [A1]. The pool of arguments used to
select a defeater of A1 is D1(λ) = {A2, A−, B, B−, C, C −}.
The only defeater belonging to D1(λ) is B, with disputed
subargument A−
, so we add it to λ. Now λ = [A1, B] and
the pool of available arguments is D2(λ) = {B, B−, C, C −},
where A−
and its superarguments were removed. C ∈ D2(λ)
is a defeater of B so we add it to the path and now λ =
[A1, B, C]. The potential defeater arguments are now in
D3(λ) = {C, C −}. As there are no defeaters of C in D3(λ),
then the path can not be extended. Thus, the resulting se-
quence [A1, B, C] is a progressive defeat path.

5 Progressively acceptable arguments
In Dung’s approach [Dung, 1993] several semantic notions
are deﬁned as argument extensions. The set of accepted ar-
guments is characterized using the concept of acceptability.
An argument A ∈ AR is acceptable with respect to a set of
arguments S if and only if every argument B attacking A is
attacked by an argument in S. It is also said that S is de-
fending A against its attackers, and this is a central notion on
argumentation. A set R of arguments is a complete extension
if R defends every argument in R. A set of arguments G is a
grounded extension if and only if it is the least (with respect
to set inclusion) complete extension. The grounded extension
is also the least ﬁxpoint of a simple monotonic function:

FAF (S) = {A : A is acceptable wrt S}.

The framework of ﬁgure 3 may be completed with inher-
ited defeat relations. For example, an arc from B to A1 can be

IJCAI-07

468

w
x
?
drawn, as shown in ﬁgure 4 (argument positions are relocated
in order to simplify the graph). A cycle is produced involving
arguments B, C and A2. According to a skeptical point of
view, the grounded extension of the completed framework is
the empty set, and no argument is accepted. Other notions as
stable or preferred extensions may be applied to this frame-
work. However, as a non-conﬂictive relation is present, a new
premise must be stated: if an argument is accepted, then all
of its subarguments are accepted. Therefore, any extension
including, for example, argument A1 should also include ar-
gument A−

.

When considering subarguments, new semantic extensions
can be introduced in order to capture sets of possible accepted
arguments.

A1
(cid:3)

B
(cid:3)o
    

C

555

(cid:3)

D			

(cid:3)
A−

(cid:3)
A2

B−
/ (cid:3)

/ (cid:3)
C−

Figure 4: Completed framework

We will focus here in the impact of progressive defeat paths

in the acceptance of arguments.
Deﬁnition 9 (Dialectical space) Let (cid:2)AR, (cid:3), C, R(cid:4) be an
AF. The dialectical space of an argument A ∈ AR is the
set SPA = {λ|λ is a defeat path for A}.

The dialectical space for a given argument is formed by all

of the defeat paths for that argument.

Example 3 In the simple argumentation framework of ﬁgure
5, SPA = {[A, B], [A, C, D, E]} and SPB = {[B]}.

A (cid:3)

(cid:3)

B

C (cid:3)

(cid:3)

(cid:3)

E

~||||
D

Figure 5: Simple framework

argument. Maximality of paths is important because all pos-
sible arguments must be taken into account.
Deﬁnition 10 (Progressive dialectical space) Let A be an
argument. The progressive reduction of SPA, denoted SP R
A ,
is the set of all maximal progressive defeat paths for A.

A notion of acceptability analogous to [Dung, 1993] may
be deﬁned, using a progressive dialectical space. As usual,
an argument A is said to be defended by a set of arguments
S if every defeater of A is defeated by an element of S. The
defense of A by S occurs in a path λ = [A1, . . . , An] if A =
Ai, 1 ≤ i ≤ n and the defender argument Ai+2 is in S.
Deﬁnition 11 (Defense) Given an argument A, a set P of
defeat paths and a set of arguments S, A is said to be accept-
able with respect to S in P if for every defeater B of A, S
defends A against B in at least one element of P .

If A is defended against B in at least one defeat path in P
then argument B is no longer a threat for A, no matter what
is the situation in other defeat paths.
In the framework of
ﬁgure 5, argument C is defended by {E} in the defeat path
[A, C, D, E] and therefore C is acceptable with respect to {E}
in P = {[A, C, D, E]}. This fact cannot be changed adding
new defeaters for D. Argument A, however, is not acceptable
in SP R
Deﬁnition 12 (Grounded extension) Let P be a set of de-
feat paths. The grounded extension of P is the least ﬁxpoint
of the function FP (S) = {A : A is acceptable wrt S in P }.

A , because it cannot be defended in [A, B].

The grounded extension for a set of defeat paths is anal-
ogous to the Dung’s grounded extension for basic argumen-
tation frameworks. In the framework of ﬁgure 3, SP R
=
{[A1, B, C]}. In this set, F (∅) = {C}, F ({C}) = {C, A1}
and F ({C, A1}) = {C, A1}. Then, the grounded extension
of SP R
Deﬁnition 13 (Warranted extension) Let Φ = (cid:2)AR, (cid:3), C,
R(cid:4) be an argumentation framework. A set of arguments S ⊆
AR is said to be a warranted extension, if every argument
X in S belongs to the grounded extension of SP R
X . Every
argument of S is said to be warranted in Φ.

A1 is {C, A1}.

A1

The dialectical space may be inﬁnite, if cycles are present.
In ﬁgure 3 every argument has an inﬁnite set of defeat
paths. Consider the path [B, C, A2]. Because of the cycle,
[B, C, A2, B] is also a defeat path. Therefore, defeat paths
of any lenght may be constructed. In fact, every dialectical
space in this framework is inﬁnite.

Cycles of defeaters are very common in argumentation,
usually called fallacies. The status of fallacious arguments
cannot be determined, although they are not considered ac-
cepted as they are controversial in the framework. In many
cases, using skeptical semantic concepts [Dung, 1993], an ar-
gument that is not taking part of a cycle cannot be accepted
due to a fallacy. This is the case of argument A1 in ﬁgure 4. A
credulous semantic may be deﬁned using progressive defeat
paths.

Several deﬁnitions are needed. We consider only progres-
sive argumentation in order to evaluate the acceptance of an

In the framework of ﬁgure 3, {A1, A−, B−, C −} is the
warranted extension, as all of those arguments are in the
grounded extension of its own progressive dialectical space.

6 Related Work
Since the introduction of Dung’s seminal work [Dung, 1993]
on the semantics of argumentation this area has been ex-
tremely active. This approach begins by deﬁning an abstract
framework in order to characterize the set of accepted argu-
ments independently of the underlying logic. We followed
this line in this work. In Dung’s presentation no explicit pref-
erence relation is included, and the basic interaction between
arguments is the binary, non-symmetric, attack relation. This
style of argument attack is used in a number of different ab-
stract frameworks, but none of them separates the notion of
preference criteria from the conﬂict relation, as it is usually
done in concrete systems. The classic attack relation allows

IJCAI-07

469

o


o
o
/
D
/
o
o
~
O
O
o
o
the deﬁnition of mutual defeaters: two arguments attacking
each other. This is not very realistic, as there is not an attack
situation (in the sense of being conﬂictive and preferred to the
opponent) but a controversial situation due to the lack of de-
cision in the system. In our framework, this leads to blocking
defeaters.

Several frameworks do include a preference relation.
Vreeswijk, in [Vreeswijk, 1997], deﬁnes a popular abstract
framework, making important considerations on comparison
criterions. Other frameworks that consider the issue of pref-
erence relations are introduced in [Amgoud, 1998], [Amgoud
and Cayrol, 1998] and in [Amgoud and Perrussel, 2000]. In
these frameworks the basic interaction between agents is the
classic attack relation, and the preference order is used as
a defense against conﬂictive arguments. The defeat relation
arises when the preferences agree with the attack. A similar
situation occurs in [Bench-Capon, 2002], where a framework
that includes a way to compare arguments is deﬁned. A set of
values related to arguments is deﬁned in the framework. The
defeat occurs when the value promoted by the attacked argu-
ment is not preferred to the value promoted by the attacker.
Again, the preference order is used to check if the attacker
argument is preferred, not to elucidate symmetric conﬂicts as
it is used in our framework.

None of these proposals consider the subargument relation.

7 Conclusions
Abstract argumentation systems are formalisms for argumen-
tation, where some components remains unspeciﬁed, usually
the structure of arguments. In the dialectical process carried
out to identify accepted arguments in the system, some con-
troversial situations may be found, related to the reintroduc-
tion of arguments in this process, causing a circularity that
must be treated in order to avoid an inﬁnite analysis pro-
cess. Some systems apply a single restriction to argumenta-
tion lines: no previously considered argument is reintroduced
in the process. In this work, we have shown that a more spe-
ciﬁc restriction needs to be applied, taking subarguments into
account in the context of an extended argumentation frame-
work. We introduced an extended argumentation framework
and a new deﬁnition of progressive defeat path, based on the
concept of defeat domain, where superarguments of previ-
ously disputed arguments are discarded. We ﬁnally deﬁned a
credulous semantic for the proposed framework.

8 Acknowledgments
This paper was partially supported by the Dept. of Computer
Science and Engineering, SECYT, U.N.Sur, the CONICET,
Agencia Nacional de Promoci´on Cient´ıﬁca y Tecnol´ogica
(PICT 13096, PICT 15043 and PAV076), Argentina.

References
[Amgoud and Cayrol, 1998] Leila Amgoud and Claudette
Cayrol. On the acceptability of arguments in preference-
based argumentation. In 14th Conference on Uncertainty
in Artiﬁcial Intelligence (UAI’98) , Madison, Wisconsin,
pages 1–7, San Francisco,California, juillet 1998. Morgan
Kaufmann.

[Amgoud and Perrussel, 2000] Leila Amgoud and Laurent
In
,

Perrussel. Arguments and Contextual Preferences.
Computational Dialectics-Ecai workshop (CD2000)
Berlin, August 2000.

[Amgoud, 1998] Leila Amgoud. Using preferences to select
acceptable arguments. In Proc. of European Conference in
Artiﬁcial Intelligence (ECAI’98) , Brighton, pages 43–44,
New-York, August 1998. John Wiley & sons.

[Bench-Capon, 2002] T.J.M. Bench-Capon. Value-based ar-
gumentation frameworks. In Proc. of Nonmonotonic Rea-
soning, pages 444–453, 2002.

[Dung, 1993] Phan M. Dung. On the Acceptability of Argu-
ments and its Fundamental Role in Nomonotonic Reason-
ing and Logic Programming. In Proc. of the 13th. Interna-
tional Joint Conference in Artiﬁcial Intelligence (IJCAI),
Chamb´ery, Francia, pages 852–857, 1993.

[Garc´ıa and Simari, 2004] Alejandro

and
Guillermo R. Simari. Defeasible logic programming: An
argumentative approach. Theory and Practice of Logic
Programming, 4(1):95–138, 2004.

Garc´ıa

J.

[Jakobovits and Vermeir, 1999] Hadassa

and
Dirk Vermeir. Dialectic semantics for argumentation
frameworks. In ICAIL, pages 53–62, 1999.

Jakobovits

[Jakobovits, 1999] Hadassa Jakobovits. Robust semantics
for argumentation frameworks. Journal of Logic and Com-
putation, 9(2):215–261, 1999.

[Kowalski and Toni, 1996] Robert A. Kowalski

Francesca Toni.
Abstract argumentation.
Intelligence and Law, 4(3-4):275–296, 1996.

and
Artiﬁcial

[Pollock, 1987] John Pollock. Defeasible Reasoning. Cog-

nitive Science, 11:481–518, 1987.

[Prakken and Sartor, 1996] Henry Prakken and Giovanni
Sartor. A system for defeasible argumentation, with de-
feasible priorities.
In Dov M. Gabbay and Hans J¨urgen
Ohlbach, editors, Proc. of the International Conference on
Formal and Applied Practical Reasoning (FAPR-96), vol-
ume 1085 of LNAI, pages 510–524, Berlin, June 3–7 1996.
Springer.

[Simari and Loui, 1992] Guillermo R. Simari and Ronald P.
Loui. A Mathematical Treatment of Defeasible Reasoning
and its Implementation. Artiﬁcial Intelligence, 53:125–
157, 1992.

[Simari et al., 1994] Guillermo R.

I.
Ches˜nevar, and Alejandro J. Garc´ıa. The role of di-
alectics in defeasible argumentation. In XIV International
Conference of the Chilenean Computer Science Society,
pages 111–121, November 1994.

Simari, Carlos

[Stolzenburg et al., 2003] Frieder Stolzenburg, Alejandro J.
Garc´ıa, Carlos I. Ches˜nevar, and Guillermo R. Simari.
Computing generalized speciﬁcity. Journal of Aplied Non-
Classical Logics, 13(1):87–113, January 2003.

[Vreeswijk, 1997] Gerard A. W. Vreeswijk. Abstract argu-
mentation systems. Artiﬁcial Intelligence, 90(1–2):225–
279, 1997.

IJCAI-07

470

