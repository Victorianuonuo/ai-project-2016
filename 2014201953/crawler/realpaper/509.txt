Spaces of Theories with Ideal Refinement Operators 

Nicola Fanizzi, Stefano Ferilli, Nicola Di Mauro, Teresa M.A. Basile 

Dipartimento di Informatica, Universita di Bari 

Campus, Via Orabona 4, 70125 Bari, Italy 

{fanizzi,ferilli,nicodimauro,basile}@di.uniba.it 

Abstract 

Refinement  operators  for theories  avoid  the  prob(cid:173)
lems related to the myopia of many relational learn(cid:173)
ing  algorithms  based  on  the  operators  that  refine 
single clauses.  However, the non-existence of ideal 
refinement operators has been proven for the stan(cid:173)
dard clausal search spaces based on 0-subsumption 
or logical implication, which scales up to the spaces 
of theories.  By  adopting  different  generalization 
models  constrained  by  the  assumption  of  object 
identity, we extend the theoretical results on the ex(cid:173)
istence  of ideal  refinement  operators  for  spaces  of 
clauses to the case of spaces of theories. 

1  Motivation 
In  the  investigation of the  algorithms  for relational  learning, 
regarding induction as a refinement process allows to decou(cid:173)
ple search from  heuristics.  Therefore, the choice of the gen(cid:173)
eralization model for a search space plays a key role since it 
affects both its algebraic structure and the definition of refine(cid:173)
ment operators for that space. 

Logical  implication  and  0-subsumption  are  the  relation(cid:173)
ships  that  are  commonly  employed  for  inducing  generaliza(cid:173)
tion  models  in  relational  learning  (the  latter  turning  out  to 
be more tractable with respect to the former).  Yet,  they are 
not  fully  satisfactory  because  of the  complexity  issues  that 
the resulting search spaces present, although subspaces have 
been found where the generalization model is more manage(cid:173)
able.  Indeed,  the effectiveness and efficiency of learning  as 
a  refinement  process  strongly  depends  on  the  properties  of 
the search space and, as a consequence, of the operators.  In 
some cases the important property to be required to operators 
is  flexibility  [Badea,  2001],  meaning that they should be ca(cid:173)
pable of focussing dynamically on certain zones of the search 
space that may be more promising.  Conversely, the property 
of ideality [Nienhuys-Cheng and de Wolf, 1997] has been rec(cid:173)
ognized as particularly  important  for the  efficiency  of incre(cid:173)
mental  algorithms  in  search spaces with dense solutions.  It 
is also possible to derive non-redundant operators from ideal 
ones, the former being more suitable for spaces with rare so(cid:173)
lutions [Badea and Stanciu, 1999]. 

Most  algorithms  for  relational  learning,  such  as  those 
employed  in  FOIL  [Quinlan,  1990]  and  PROGOL  [Mug-

gleton,  1995],  adopt  iterative  covering  strategies,  separate-
and-conquer  [Fiirnkranz,  1999],  based  on  the  refinement 
of clauses.  Alternative  methods  are  based  on  divide-and-
conquer  strategies  [Bostrom  and  Asker,  1999].  Although 
these  refinements  may  turn  out  to  be  optimal  with  respect 
to a single clause,  the result of assembling them  in a theory 
is  not guaranteed to be  globally  effective,  since the  interde(cid:173)
pendence of the clauses with respect to covering may lead to 
better theories made up of locally non-optimal  clauses.  Only 
some  systems,  e.g.  MPL  [Dc  Raedt et ai,  1993]  or HYPER 
[Bratko,  1999], cope with the problem of learning whole the(cid:173)
ories rather than constructing them clause by clause. 

This  urges  more  complex  refinement  operators  to  be 
adopted  in  algorithms  obeying  to  a  different  strategy  that  is 
able  to  take  into  account  the  possible  interactions  between 
the  single  clausal  refinements.  Hence,  the  new  problem  is 
defining operators that refine whole theories rather than single 
clauses [Midelfart,  1999; Badea, 2001].  ALEPH is a system 
where ideas on theory-level induction has been rudimentarily 
implemented [Srinivasan, 2002].  Of course, heuristics are re(cid:173)
quired to cope with the combinatorial complexity of the prob(cid:173)
lem.  The resulting extended setting would also take into ac(cid:173)
count background knowledge that may be available, and then 
it  is  also  comparable  to  generalized  and  relative  subsump-
tion [Plotkin,  1971; Buntine,  1988] or implication [Nienhuys-
Cheng and de Wolf,  1997]. 

Weakening implication by assuming object identity, an ex(cid:173)
tension  of the  unique  names  assumption  [Reiter,  1980],  as 
a  semantic  bias  has  led  to  the  definition  of  6o1subsumption 
and  Ol-implication  [Esposito  et al,  2001b],  clausal  relation(cid:173)
ships which induce more manageable search spaces.  The ex(cid:173)
istence  of ideal  refinement  operators  in  these  generalization 
models  is  possible  [Esposito  et  ai,  2001a],  while  this  does 
not hold in clausal spaces ordered by 0-subsumption or impli(cid:173)
cation iNienhuys-Cheng and de  Wolf,  1997].  The objective 
of this  work  is  to  extend  the  results  obtained  for  spaces  of 
clauses and prove the existence of ideal  refinement operators 
for spaces of theories in those generalization models. 

This paper is organized as follows.  In Section 2, we recall 
semantics and proof-theory  adopted  in the framework.  Sec(cid:173)
tion  3  deals  with  refinement  operators  and  their properties. 
Then, in Section 4, the operators for the search space consid(cid:173)
ered are defined and proven to be ideal. Section 5 summarizes 
the paper outlining possible developments. 

LEARNING 

527 

2  Generalization Models and Object Identity 
The representation  language adopted in the proposed frame-
work  concerns  logic  theories  (whose  space  is  denoted  2C) 
made up of clauses (space C).  The background notions about 
clausal  representations  in  Inductive  Logic  Programming can 
be found in [Nienhuys-Cheng and de Wolf,  1997]. 

The framework relies essentially on the following bias pro(cid:173)

posed in [Esposito et a/., 2001b]: 
Assumption  (Object  Identity)  In  a  clause,  terms  denoted 
with different symbols must he distinct, i.e.  they represent dif(cid:173)
ferent entities of the domain. 
The  intuition  is  the  following:  in  spaces  based on  general(cid:173)
ization  models  induced  by  _ -subsumption (or implication), 
considered  the  two  clauses  C  =  q(x)  <—  p(X,X)  and 
D  =  q{x)  <-  p(X,X),p{X,Y),p(Y,Z),P(Z,X), 
turn 
out  to  be  equivalent  (in  fact  C  is  the  reduced clause  of D): 
this  is not so natural  as  it may  appear,  since  more  elements 
of the  domain  can  be  accounted  for  in  D  than  in  C  (indeed 
in this  framework C is more general than D).  The expressive 
power  is  not  diminished  by  this  bias,  since  it  is  still  possi(cid:173)
ble  to  convey  the  same  meaning  of a  clause,  although  em(cid:173)
ploying more  clauses,  e.g.  when  object identity  is  assumed, 
q(X)  <—  p(X, Y)  is  equivalent  to  the  pair  of clauses  (a  thc-
oiy) 

{(q(X)<-p{X,X)), 

(q{X)<-p{X,Y))} 

they 

. 

Now it has to be specified how this bias affects the seman(cid:173)

tics and proof theory of a clausal representation. 

Proof Theory and  Semantics 

2.1 
Starting from substitutions, we recall the specification of the 
proof theory  under object  identity.  Since  a  substitution  can 
be regarded as a mapping from the variables to the terms of 
a  language,  we  require  these  functions  to  satisfy  additional 
properties to avoid the identification of terms: 

Definition 2.1  Given  a  set  of terms  T  (omitted  when  ob(cid:173)
vious),  a  substitution  a  is  an  OI-substitution  w.r.t.  T  iff 

Based on OI-substitutions, it is possible to define related no(cid:173)
tions  such  as  ground  and  renaming  Ol-substitutions,  their 
composition and also unification: 
Definition 2.2 Given a finite set of clauses S, we say that 
is an  O l
is an OI-substitution w.r.t.  terms 
An  Ol-unifier 
for S is a most general  Ol-unifier/or S  iff for 
each  Ol-unifier o  of S  there  exists  an  OI-substitution  r  such 
that 

.  This is denoted with 

c
i. 

nd 

ra

u

n

-

f

i

i

The  following  notions represent resolution  and derivation 

when exclusively Ol-unifiers are used. 
Definition 2.3  Given the clauses C and D that are supposed 
standardized apart,  a  clause  R  is  an  OI-resolvent  of C  and 
D  iff there  exist 
unifiable through the 

> such that 

and 

and 

__ 

is the set of the OI-resolvents ofC and D. 

An  OI-derivation  is  obtained  by  successively  chaining  01-
resolutions. 

With  respect  to  the  model  theory  under  object  identity, 

more specific models are needed: 
Definition 2.5  Given  a  non-empty  domain  V,  a  pre-
interpretation  J  of the  language C  assigns  each  constant  to 
a different element of D and each n-ary function symbol f to 
a  mapping from  Vn  to  V. 
An Ol-interpretation I based on J is a set of ground instances 
of atoms with arguments mapped in D through J. 
Given a ground  OI-substitution  mapping  vars(C)  to  V,  an 
instance  <  of  an  atom  A  is  true  in  I  iff. 
otherwise  it 
is false in I.  A  negative  literal 
is true in 1 iff A^ is not. 
otherwise it is  false in  I. 
I  is  an  Ol-model  for  the  clause  C  iff for  all  ground  OI-
substitutions 
that is true 
in I,  otherwise the clause is false in  I. 
Hence, the form of implication that is compliant with this se(cid:173)
mantics  has  been  defined  [Esposito  et ai,  2001b]  which,  in 
turn, induces a quasi-order on spaces of clauses and theories. 
Definition 2.6  Let  C, D  be two clauses.  C  implies  D  under 
object identity  (and then C is more general than  D  w.r.t.  OI-
implication)  iff all  Ol-models for  C  are  also  OI-modcls for 
D.  This relationship is denoted with 
Analogously  a  theory T  implies  C  under object  identity,  de(cid:173)
noted with 
models for T are also OI-models 
for C.  Finally,  a  theory  T  is  more  general  than  a  theory  T' 
w. r. t. Ol-implication 

there exists at least a literal in 

OI-implication is a constrained form of logical implication 
biased by the object identity assumption, as shown in the fol(cid:173)
lowing example: 

The proof-procedure was proven sound in [Esposito et at., 
2001b],  thus  bridging  the  gap  from  the  proof-theory  to  the 
model-theoretic  definition  of Ol-implication. 
2.2 
A simpler syntactic relationship, that is  -subsumption biased 
by the object identity assumption, has been defined based the 
notion  of OI-substitution. 
Definition 2.7  Given two clauses C and  D, 
D  iff there  exists  an  OI-substitution  a  w.r.t. 
that 

terms(C)  such 
In this case,  C is more general  than  D w.r.t. 
then they 

are 
Analogously, given the theories T, T',  T is more general than 
V  w.r.t. 
denoted  ___ 

-subsumption  iff 

-subsumption,  denoted 
w. 

equivalent 

If  also 
.denoted 

r.t. 

528 

LEARNING 

This  quasi-order is  weaker than  OI-implication  as proven 

such that 

by the following result [Esposito et al., 2001b]: 
Theorem 2.1  Given  a  theory  T  and  a  non-tautological 
clause 
This  result  bridges  the  gap  from  model-theory  to  proof-
theory.  It also suggests the way to decompose OI-implication 
that is exploited for defining complete refinement operators. 
Similarly  to  standard  implication,  it  is  nearly  straightfor(cid:173)
ward  to  demonstrate  some  consequences  of  Theorem  2.1 
originally  due to Gottlob  [1987].  Given a clause  C,  let C1+ 
and C~  denote, respectively, the sets of its positive and neg(cid:173)
ative literals. Then, it holds: 
Proposition 2.1  Let C and D be clauses.  If 

-subsumes 
Since  OI-substitutions  map  different  literals  of  the  sub(cid:173)
suming clause onto different literals of the subsumed clause, 
-subsumption have the same num(cid:173)
equivalent clauses under 
ber of literals.  Thus,  a  space  ordered  by 
is 
made up of non-redundant clauses.  Indeed, it holds: 
Proposition 2.2  Let  C  and  D  be  two  clauses. 
subsumes D then 
alphabetic  variants. 

, Moreover, 

iff they are 

If  C 

As  a  consequence  of the  propositions  above,  it  is  possi(cid:173)
ble to prove the following results giving lower bounds for the 
depth  and  cardinality  of clauses  in  the  generalization  model 
based on OI-implication [Fanizzi and Ferilli, 2002]. 
Definition 2.8  The depth  of a  term  t  is  1  when  1  is a  vari(cid:173)
able  or a  constant. 
then  dcpth(t)  — 
.  The  depth  of  a  clause  C,  denoted 

If 

depth\C),  is the maximum depth among its terms. 
Proposition 2.3  Given the clauses C and D, 
it holds that  depth 

then 

3  Theory Refinement and Object Identity 
A learning problem can be cast as a search problem [Mitchell, 
1982]  where  theory  refinement  is  triggered  when  new  evi(cid:173)
dence made available is to be assimilated.  The canonical in(cid:173)
ductive paradigm  requires the  fulfillment of the properties of 
completeness and consistency for the synthesized theory with 
respect to a set of input examples.  When an inconsistent (re(cid:173)
spectively,  incomplete)  hypothesis  is  detected,  a specializa(cid:173)
tion  (resp.,  generalization)  of the  hypothesis  is  required  in 
order to restore this property of the theory.  In the former case 
the  refinement  operators  must  search  the  space  looking  for 
more specific theories (downward refinements);  in the latter, 
more general theories (upward refinements) arc required. 

The  formal  definition  of  the  refinement  operators  for 
generic  search  spaces,  is based on the  algebraic  notion  of a 
quasi-ordered set  S  that  is  a  set  endowed  with  an  ordering 
relationship 
Definition 3.1  Given  a  quasi-ordered set 
ment operator is a mapping from S to 2s such that: 

that is reflexive and transitive. 

,  a  refine(cid:173)

(downward refinement operator) 

(upward refinement operator) 

A  notion  of closure  upon  refinement  operators  is required 

when proving the completeness of the operators. 

Ultimately, refinement operators should construct chains of 
of elements  of 5 
going from the starting 

refinements, i.e. a sequence 
such that 
elements to target ones. 

3.1  Properties  of the  Refinement  Operators 
As mentioned  above, the properties of the  refinement opera(cid:173)
tors depend on the algebraic structure of the search space.  A 
refinement operator traverses a refinement graph in the search 
space, that is a directed graph containing an edge from T to 
T'  in S in case the operator r  is such that 

A major source of inefficiency may come from refinements 
that  turn  out to  be  equivalent to the  starting  ones.  Depend(cid:173)
ing on the search algorithm adopted,  computing refinements 
that are equivalent to some element that has been already dis(cid:173)
carded may introduce a lot of useless computation.  As to the 
effectiveness  of the  search,  a  refinement  operator should  be 
able to  find  a path between any two comparable elements of 
the search space (or their equivalent representatives).  It is de(cid:173)
sirable that at least one path in the graph can lead to target el(cid:173)
ements.  This means that a complete refinement operator can 
derive  any  comparable  clement  in  a  finite  number  of steps. 
The  following properties formally define these concepts: 
Definition 3.3  In  a  quasi-ordered  set 
operator  r  is  locally  finite  iff 
computable. 
A  downward  (resp.  upward)  refinement  operator  p (resp. 
is proper  iff' 

a refinement 
is  finite  and 

implies 

' (resp. 

" 

A  downward  (resp.  upward)  refinement operator 
is complete  iff 

Let  us  observe  that  local  finiteness  and  completeness  en(cid:173)
sure the existence of a computable refinement chain to a tar(cid:173)
get  element,  and  properness  ensure  a  more  efficient  refine(cid:173)
ment  process,  by  avoiding  the  search  of equivalent  clauses. 
Then,  the  combination  of these  properties  confers  more  ef(cid:173)
fectiveness and efficiency to an operator: 
Definition 3.4  In  a  quasi-ordered set 
operator is ideal iff it is locally finite, proper and complete. 
As mentioned in  the  introduction, other important proper(cid:173)
ties  of refinement  operators  have  been  defined,  yet  they  go 
beyond the scope of this paper which focusses on ideality. 

a refinement 

3.2  M i n i m al  Refinements  of Clauses 
The existence of maximal specializations and minimal gener(cid:173)
alizations of clauses was proven for both the ^,-subsumption 

LEARNING 

529 

and  the  01-implication  generalization  model  [Fanizzi  and 
Ferilli, 2002].  These results arc briefly recalled here for be(cid:173)
ing used in the construction of ideal refinement operators pre(cid:173)
sented in the following section. 

As  a  consequence  of Theorem  2.1,  some  limitations  are 
provable as concerns depth  and  cardinality  for a clause that 
implies (subsumes) another clause under object identity.  This 
yields a bound to the proliferation of possible generalizations: 
Proposition 3.1 Let C and D be two clauses. The set of gen(cid:173)
eralizations  ofC  and D  w.r.t.  01-implication  is  finite. 
The proof is straightforward since the depths and cardinalities 
of the generalizations are limited as a consequence of Propo(cid:173)
sition 2.3.  Now, given two clauses C and D, let G be the set 
w.r.t.  OI-implication.  Observe 
of generalizations  of 
Proposition  3.1  yields  that  G  is 
that 
finite.  Thus,  since the test of Ol-implication between clauses 
is decidable [Fanizzi and Ferilli, 2002], it is theoretically pos(cid:173)
sible  to determine  the minimal  elements of G by  comparing 
the clauses in G and eliminating those that are overly general. 
For computing  theories  that  are  proper generalizations  of 
the starting ones,  an operator for inverting Ol-resolutions  is 
needed which is similar to the  V-operator for the inversion of 
resolution [Muggleton,  1995]: 
Definition 3.5  Given  a  theory T,  the operator for the  inver(cid:173)
sion of the Ol-resolution is defined: 

, 

Note that there is a lot of indeterminacy in this definition.  Yet 
it  suffices  for  our  theoretical  purposes.  In  fact,  the  specifi(cid:173)
cation of an actual  operator to be  implemented in a learning 
system should consider also other information (such as exam(cid:173)
ples,  background  knowledge,  etc.),  to define the  underlying 
heuristic  component. 

With  respect to  maximal  specializations,  the  major  diffi(cid:173)
culty  comes  from  the  fact  that  under  standard  implication, 
C U D  is a clause that preserves the models of either clause, 
hence turning out to be a maximal specialization.  In this set(cid:173)
ting, as expected, more clauses are needed than a single one; 
indeed the following operator has been defined: 
Definition 3.6  Let  C1  and  C2  be  two  clauses such  that  C\ 
and C2 are standardized apart and K a set of new constants 
such  t
defined 
where 
C\  and  C2  with  K as their term set1. 

are  Skolem  substitutions for,  respectively, 

:A  new  set  of clauses  is 

and 

h

a

t

It  is  easy  to  see that,  clauses 

equivalent to those  in 
clauses in 

preserve the OI-models of C and D: 

are 
Besides, the 

Proposition 3.2  Let C, D and E be clauses such that C and 
D  are standardized apart. 
then VF  € 

If 

This result implies that 
contains maximal special(cid:173)
izations of the two clauses w.r.t. Ol-implication. For the proof 
of ideality given in the next section, it is important to point out 
that this set of specializations is finite.  Moreover, the defini(cid:173)
tion  of u01 and  also  Proposition  3.2  can  be  extended  to  the 
case of multiple clauses [Fanizzi and Ferilli, 2002]. 

Ideal Operators for Theories 

4 
Nonexistence  conditions  for  ideal  refinement  operators  for 
generic  spaces  are  given  in  [Nienhuys-Cheng  and  de  Wolf, 
1997]. A close relationship has been recognized between ide(cid:173)
ality and the covers of elements in 
, a downward cover 
of C  being  a  D  such that 
(resp. 
for the upward case). 
A necessary condition for the ideality of refinement operators 
is that they return supersets of the sets of covers. 
Theorem 4.1  In  the  quasi-ordered space2 
refinement operator does not exist. 

an  ideal 

and 

and 

The non-existence of ideal  refinement operators for spaces 
of clauses ordered by implication can be proven as a conse(cid:173)
quence  of this  result  [Nienhuys-Cheng  and  de  Wolf,  1997], 
since 0-subsumption is weaker than logical  implication.  Be(cid:173)
sides,  this  can  be  extended,  proving  the  non-existence  of 
refinement  operators  for  search  spaces  of theories  endowed 
with  the  ordering  relationship  induced  by  0-subsumption 
[Midelfart,  1999] and the one induced by logical  implication 
[Nienhuys-Cheng and de Wolf, 1997]. Conversely, within the 
framework we present,  it is possible to exploit the definition 
of the refinement operators for clausal spaces for demonstrat(cid:173)
ing the existence of ideal operators on spaces of theories. 

Ideal  Operators  for  00 isubsumption 

4.1 
With  respect  to  the  spaces  of clauses  in  the  generalization 
model  induced by ^rsubsumption, we exploit the ideality of 
the operators for clausal spaces  [Esposito et al, 2001a]. 
given a 
Definition 4.1  In  the quasi-ordered space 
theory T,  let 
be a non redundant theory equivalent to  T 
The downward refinement operator pot, is defined as follows: 

The upward refinement operator 

is  defined as follows: 

The ideality of these operators is proven as follows: 

Theorem 4.2  In  the  search space 
operators poi and §01 are ideal. 
Proof: 

the refinement 

lThe term set of a set of clauses T by the Skolem substitution 

is the set of all terms occurring in 

denotes the order induced by 0-subsumption and the 

language is supposed to contain at least a binary predicate. 

530 

LEARNING 

poi  (locally  finite)  obvious. 

(proper)  by the properness of poi for clauses, 
(complete) Suppose 

The theories can be 
supposed to  be non  redundant,  otherwise  the reduced 
equivalent theory can be computed by removing clauses 
by means of the second item of the operator. 
By  definition 

means  that 

i  G 

for clauses,  it 

By  the  completeness  of the  operator , 
holds that 
Starting from  T1  =  T,  the  first  component  of the  op(cid:173)
a  refinement 
erator  is  iterated,  obtaining for  each 
by  choosing  Sj  as  the subset  of  made up of 
the  clauses  that  are  not  in  the  target  theory  T'  while 
being strictly  more general  than  clauses  in  t1,  that  is 

Eventually  it  holds  that 

for  some  k  < 

Tk  vnay be larger than T'.  Thus the second component 
of Poi for theories can be employed for deleting the ex(cid:173)
ceeding clauses from TK yielding T'. 
Finally we have that 

:  Analogously. 

Ideal Operators for O.l-implication 

4.2 
These operators above will be embedded in the definition of 
the refinement operators for spaces of theories in the stronger 
order induced  by  Ol-implication.  Besides,  notions  and  re(cid:173)
sults  given  in  Section  3.2  are  also  exploited.  In  particular, 
these operators should be able to compute specializations and 
generalizations that are able to reach those clauses  involved 
in OI-resolution steps (and their inverse). 

Definition 4.2  In  the  quasi-ordered  space 
,  the 
downward refinement operator fa is defined as follows, given 
any 

where 
operator for clauses wrt 

and  fa'  denotes the downward refinement 

• 

where  fa"  denotes  the  downward refinement operator 
for  theories  wrt 

The upward refinement operator S. is defined as follows: 

i 

where 
operator for clauses wrt 

and 

denotes the upward refinement 

• 

where  Soi'  denotes  the  upward refinement operator for 
theories wrt 

The  ideality  of these  operators  is  stated  by  the  following 

result (Figure 1 depicts the related refinement graph): 

Figure 1: The Refinement Graph 

Theorem 4.3  In  the search space 
operators 
Proof: 
Poi • (locally finite) by definition of the various operators and 

, the refinement 

are ideal. 

the finiteness of the theories. 
(proper)  by  the properness  of the  refinement operators 
employed in the various items. 
(complete) Suppose 

with n  — 
Since  redundancy  can  be  eliminated  by  remov(cid:173)
ing redundant clauses (and tautologies) through the last 
item of the operator, we will consider the theories as non 
redundant. 

Observe that, by using the first item of the refinement op(cid:173)
erator,  it is possible to produce the theory TS containing 
the  maximal  specializations  of the  clauses  in 
employed  in  the  Ol-derivation  the  of  Di  's  (by  the  ex(cid:173)
tension  of Lemma  3.2  to  the  case  of multiple  clauses 
where each maximal specialization  is more general wrt 
Ol-implication  than  an  Ol-resolvent  ~ 
Observe that 
Now,  it  is possible 
to  iterate  (at  most  n  times for  the  Dt  that  are properly 
by some F) the second item of the operator,  in order to 
compute the theory 
thus we 
can  write: 
,  then  we 
By  construction 
can  exploit 
ideal  operator  for  theories  wrt  0oi 
the 
subsumption (third item of the operator for theories wrt 
OI~implication)  writing: 
Finally,  by  chaining  these  steps,  it  is possible  to  con(cid:173)
clude that:  T' 
In  the  same  hypotheses  the previous proof  it  is possi(cid:173)
ble  to  invert  the 
using 
the last item of the definition of S01 for theories wrt OI-
implication: 
Then,  a number of Ol-resolutions are to be inverted by-
using the  first  item  of 
This number is finite due to 
Proposition 2.3 and then can be done tentatively in afi-

of 

LEARNING 

531 

nite number of steps. 
Finally,  by  chaining  these  steps,  it  is possible  to  con-
clude  that: 

Differently from the standard generalization models, in this 
framework the number of OI-resolution steps  is bounded be(cid:173)
cause,  during  OI-implication  or 
steps,  the 
sizes  of the  clauses  increase  (decrease)  monotonically,  as  a 
consequence of Propositions 2.2 and 2.3. 

5  Conclusions 
In this  work  the  existence  of ideal  refinement  operators  was 
proved  in  the  search  space  of theories  ordered  by  general(cid:173)
ization models based on object identity.  Coupled with some 
heuristics, this allows for the definition of efficient refinement 
algorithms that avoid the myopia of the  traditional relational 
learning approaches. 

We focussed on the effectiveness of the refinement opera(cid:173)
tors,  that  is related to their static properties.  In general  this 
is not sufficient for defining a learning algorithm:  efficiency 
plays a key role when dealing with first order logics. The suc(cid:173)
cessive step is to investigate the dynamic properties of these 
operators when they are to be guided by means of heuristics 
based on the available examples and/or other criteria. 

We have also mentioned that in spaces with rare solutions it 
is more suitable to have an operator that is non redundant, be(cid:173)
cause almost all of the paths that could be constructed would 
not lead to a target theory.  It should be  investigated how to 
define non redundant operators in this framework. 

The object identity framework is currently implemented in 
the system 1NTHELEX [Esposito et ai, 2000], with a totally 
incremental strategy based on clause-level induction. We plan 
to investigate how to upgrade the system to theory-level, ex(cid:173)
ploiting the  theoretical  operators presented  in  this paper to(cid:173)
gether with suitable evaluation functions to mitigate the com(cid:173)
binatorial  complexity of the problem. 

References 
[Badea and Stanciu,  1999]  L. Badea and M. Stanciu. Refine(cid:173)
ment  operators  can  be  (weakly)  perfect. 
In  S.  Dzeroski 
and P. Flach, editors, Proceedings of the 9th International 
Workshop on Inductive Logic Programming,  volume  1634 
of LNAI, pages 21-32. Springer, 1999. 

[Badea, 2001]  L. Badea.  A refinement operator for theories. 
In C. Rouveirol and M. Sebag, editors, Proceedings of the 
I lth  International  Workshop  on  Inductive Logic Program(cid:173)
ming, volume 2157 of LNAI, pages  1-14.  Springer, 2001. 
[Bostrom and Asker,  1999]  H. Bostrom and L. Asker.  Com(cid:173)
bining  divide-and-conquer  and  separate-and-conquer  for 
efficient and effective rule induction.  In  S.  Dzeroski and 
P.  Flach,  editors,  Proceedings  of the  9th  International 
Workshop on Inductive Logic Programming, volume  1634 
of LNAI, pages 33-43.  Springer,  1999. 

[Bratko,  1999]  1.  Bratko.  Refining complete hypotheses in 
ILP.  In S. Dzeroski and P. Flach, editors, Proceedings of 
the  9th  International  Workshop  on  Inductive  Logic  Pro(cid:173)
gramming,  volume  1634  of LNAI, pages 44-55.  Springer, 
1999. 

[Buntine,  1988]  W.  Buntine.  Generalized subsumption and 
its  application  to  induction  and  redundancy.  Artificial In(cid:173)
telligence, 36(2): 149-176, 1988. 

[De Raedt et  al,  1993]  L.  De  Raedt,  N.  Lavrac,  and 
S.  Dzeroski.  Multiple predicate  learning. 
In  R.  Bajcsy, 
editor,  Proceedings  of the  13th  International  Joint  Con(cid:173)
ference  on  Artificial  Intelligence,  volume  2,  pages  1037-
1043. Morgan Kaufmann, 1993. 

[Esposito et ai, 2000]  F. Esposito, G.  Semeraro, N. Fanizzi, 
and  S.  Ferilli.  Multistrategy  theory  revision: 
Induc(cid:173)
tion  and  abduction  in  INTHELEX.  Machine  Learning, 
38(1/2): 133-156, 2000. 

[Esposito et ai, 2001a]  F.  Esposito,  N.  Fanizzi,  S.  Ferilli, 
and G.  Semeraro.  A  generalization model  based  on  OI-
implication  for ideal  theory  refinement.  Fundamenta  In-
formaticae,  47:15-33,  2001. 

[Esposito etal, 2001b]  F.  Esposito,  N.  Fanizzi,  S.  Ferilli, 
and G.  Semeraro.  OI-implication:  Soundness  and  refu(cid:173)
tation completeness.  In  B.  Nebel,  editor,  Proceedings of 
the  17th  International Joint  Conference  on  Artificial Intel(cid:173)
ligence, pages 847-852, 2001. 

[Fanizzi and Ferilli, 2002]  N.  Fanizzi  and  S.  Ferilli.  Mini(cid:173)
mal generalizations under OI-implication.  In M.-S. Hacid, 
Z. Ras, D. Zighed, and Y. Kodratoff, editors, Proceedings 
of the 13 th International Symposium on Methodologies for 
Intelligent Systems, volume 2366 of LNAL  Springer, 2002. 
[Furnkranz,  1999]  J.  Fiirnkranz.  Separate-and-conquer rule 

learning.  Artificial Intelligence,  13(1):3—54,  1999. 

[Gottlob,  1987]  G.  Gottlob.  Subsumption  and  implication. 

Information Processing Letters, 24(2): 109-111,  1987. 

[Midelfart,  1999]  H.  Midelfart.  A  bounded  search  space  of 
clausal theories.  In S. Dzeroski and P. Flach, editors, Pro(cid:173)
ceedings  of the  9th  International  Workshop  on  Inductive 
Logic  Programming,  volume  1634  of LNAI,  pages  210-
221. Springer, 1999. 

[Mitchell, 1982]  T.M.  Mitchell.  Generalization  as  search. 

Artificial  Intelligence,  18:203-226,  1982. 

[Muggleton,  1995]  S.H. Muggleton.  Inverse entailment and 

[Nienhuys-Cheng and de Wolf,  1997]  S.-H. 

Progol.  New Generation Computing,  13:245-286,  1995. 
Nienhuys-
Cheng  and  R.  de  Wolf.  Foundations  of Inductive  Logic 
Programming,  volume  1228  of LNAI.  Springer,  1997. 

[Plotkin,  1971]  G.D.  Plotkin.  A  fiirther  note  on  inductive 

generalization.  Machine Intelligence, 6:101-121,  1971. 

[Quinlan,  1990]  J.R.  Quinlan.  Learning  logical  definitions 

from relations.  Machine Learning,  5:239-266,  1990. 

[Reiter,  1980]  R. Reiter.  Equality and domain closure in first 

order databases. Journal of ACM, 27:235-249, 1980. 

[Srinivasan, 2002]  A. Srinivasan.  The Aleph manual.  Tech(cid:173)
nical  report,  Oxford  University  Computing  Laboratory, 
2002. 
http://www.comlab.ox.ac.uk/oucl/research/areas 
/machlearn/Aleph. 

532 

LEARNING 

