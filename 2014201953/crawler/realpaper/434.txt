Query rewriting and answering under constraints in data integration systems 

Andrea Call 

Domenico Lembo 

Riccardo Rosati 

Dipartimento di Informatica e Sistemistica 

Universita di Roma "La Sapienza" 
Via Salaria 113,1-00198 Roma, Italy 

{cali,lembo,  r o s a t i } @ d i s . u n i r o m a l . it 

Abstract 

In this paper we address the problem of query an(cid:173)
swering and rewriting in global-as-view data inte(cid:173)
gration systems, when key and inclusion dependen(cid:173)
cies are expressed on the global integration schema. 
In the case of sound views, we provide sound and 
complete rewriting techniques for a maximal class 
of constraints for which decidability holds.  Then, 
we introduce a semantics which is able to cope with 
violations of constraints, and present a sound and 
complete rewriting technique for the same dec id-
able class of constraints.  Finally, we consider the 
decision problem of query answering and give de(cid:173)
cidability and complexity results. 

Introduction 

1 
The task of a data integration system is to combine data resid(cid:173)
ing at different sources, providing the user with a unified view 
of them, called global schema. User queries are formulated 
over the global schema, and the system suitably queries the 
sources, providing an answer to the user, who is not obliged to 
have any information about the sources. The problem of data 
integration is a crucial issue in  many application domains, 
e.g., re-engineering legacy systems, data warehousing, data 
mining, data exchange. 

A central aspect of query processing is the specification of 
the relationship between the global schema and the sources; 
such a specification is given in the form of a so-called map(cid:173)
ping.  There are basically two approaches for specifying the 
mapping.  The first approach, called global-as-view (GAV), 
requires that a view over the sources is associated with ev(cid:173)
ery element of the global schema.  Conversely, the second 
approach, called local-as-view (LAV), requires the sources to 
be defined as views over the global schema [Lenzerini, 2002; 
Duschka and Levy, 1997]. 

The global schema is a representation of the domain of in(cid:173)
terest of the data integration system: integrity constraints are 
expressed on such a schema to enhance its expressiveness, 
thus improving its capability of representing the real world. 
Since sources are in  general autonomous,  the data pro(cid:173)
vided by the sources are likely not to satisfy the constraints 
on the global schema.  Integrity constraints have to be taken 
into account during query processing; otherwise, the system 

may return incorrect answers to the user iFagin et al., 2003; 
Call et al, 2002]. 

Another significant issue is that the sources may not pro(cid:173)
vide exactly the data that satisfy the corresponding portion of 
the global schema; in particular, they may provide either a 
subset or a superset of the data satisfying the mentioned por(cid:173)
tion, and the mapping is to be considered sound or complete 
respectively. Mappings that are both sound and complete are 
called exact. 

In this paper, we restrict our analysis to the GAV approach, 
which is the most used in the context of data integration.  In 
particular, we study a relational data integration framework in 
which key dependencies (KDs) and inclusion dependencies 
(IDs) are expressed on the global schema, and the mapping 
is considered sound. The main contributions of this paper are 
the following: 

1. After showing that query answering in the general case 
in undecidable, we provide a sound and complete query 
rewriting technique first for the case of IDs alone, and 
then for the case of KDs together with the maximal class 
of IDs for which the problem is decidable, called non-
key-conflicting IDs, or simply NKCIDs (Section 3). 

2.  Since  it  is  likely  that  data  retrieved  at  different,  au(cid:173)
tonomous sources violate the KDs, we introduce a novel 
semantics that is a "relaxation" of the sound semantics, 
and that allows minimal repairs of the data (Section 4). 
We then present a sound and complete query rewriting 
technique in the case where KDs and NKCIDs are ex(cid:173)
pressed on the global schema (Section 5). 

3.  Finally, we present decidability and complexity results 
of the (decision) problem of query answering in the dif(cid:173)
ferent cases (Section 6). 

2  Formal framework for data integration 
In this section we define a logical framework for data integra(cid:173)
tion, based on the relational model with integrity constraints. 
Syntax We consider to have an infinite, fixed alphabet T of 
constants (also called values) representing real world objects, 
and will take into account only databases having T as domain. 
We adopt the so-called unique name assumption, i.e., we as(cid:173)
sume that different constants denote different objects. 

Formally, a data integration system I is a triple (G, S, M), 

where: 

16 

Al AND DATA INTEGRATION 

1.  G  is  the  global  schema  expressed  in  the  relational 
In  particular,  G  = 

model  with  integrity  constraints. 

I  =  (G,S, M),  the 
mally,  given  a  source  database  P  for 
semantics of I  wrt P,  denoted  sern(l,D), 
is  a  set of global 
databases  for  I,  where  a  global  database  B  is  in  sem(l,V) 
if: 

assume,  without loss of generality, that the attributes in 
A  are  the  first  n  attributes  of r.  Moreover,  we  assume 
that at most one KD is specified for each relation. 

2.  S  is  the source schema,  constituted by  the  schemas  of 
the  various sources that  are part  of the  data  integration 
system.  We assume that the sources are relational, and 
that  integrity  constraints  expressed  on  S  are  satisfied 
data  at  the  sources.  Hence,  we do not take such con­
straints into account in our framework. 

3.  M  is  the  mapping  between  the  global  and  the  source 
schema.  In our framework the mapping is defined in the 

a view,  i.e.,  a query, over the sources.  We indicate the 
mapping as a set of assertions of the form (r, V), where r 
is a relation and V is the associated view over the source 
schema.  We  assume  that the  language used to express 
queries in the mapping is positive Datalog [Abiteboul et 
al,  1995],  over  the  alphabet  of the  relation  symbols  in 
S.  A  Datalog query  (or program) q of arity  n  is  a col-

Finally, a query over the global schema q is a formula that 
is  intended  to  extract  a  set  of tuples  of elements  of  T.  The 
language used to express queries over G is union of conjunc(cid:173)
tive  queries  (UCQ)  [Abiteboul  et  al,  1995],  i.e.,  a  Datalog 
program such that each rule head uses the same predicate of 
the same arity, and only relation symbols of G occur in each 
rule bodv. 

By  simply  evaluating each  view  over the  source  database 
P,  we  obtain  a  global  database,  called  retrieved  global 
database  ret  (l,d),  that actually satisfies the sound mapping 
(but that is not necessarily consistent with G). 

In this paper, we address the query answering problem, that 
is  the  problem  of computing  the  set  ans(q,l,D).  To  this 
aim, we make use of query rewriting techniques, i.e., we ex­
ploit the mapping M  to reformulate the query q into another 

In order to specify the semantics of a data integration sys­
tem I,  we  start  by  considering  a source database  for I,  i.e., 
a database P for the source schema S.  Based on P,  we now 
specify which is the information content of the global schema 
G.  We  call  global database  for I  any  database  for  G.  For-

The  source  schema  So  consists  of  the  schemas  of  three 
sources  comprising  the  relation  s1  of arity  4,  and  the  rela­
tions s2  and ,s3, both of arity 3.  Finally, the mapping  M0  is 
defined by the two assertions 

Al AND DATA INTEGRATION 

17 

Below we define the algorithm  ID-rewrite to compute the 
perfect rewriting of a  union of conjunctive queries  Q.  Infor­
mally, the algorithm computes the closure of the set of con­
junctive queries Q with respect to the following two rules: 

3  Query rewriting 
In this section  we present algorithms for computing the per­
fect  rewriting  of a  UCQ  query  in  GAV  integration  systems 
with KDs and IDs.  We first study the case in which only IDs 
are expressed on  the  global  schema,  then  we  deal  with  the 
simultaneous presence of both IDs and  KDs. 

Query  rewriting  under  IDs  only  We  start  by  studying 
query  rewriting  when  only  IDs  are  expressed on  the  global 
schema. To this aim, we need some preliminary definitions. 
Given a conjunctive query q,  we say  that a variable A"  is 
unbound in  q  if it  occurs  only  once  in  q,  otherwise  we  say 
that X  is  bound in  q.  Notice that variables occurring in  the 
head of the query are necessarily bound,  since each of them 
must also occur in  the query body.  A bound term is either a 
bound variable or a constant. 

Roughly speaking, an inclusion / is applicable to an atom 
g if the relation symbol of g corresponds to the symbol in the 
right-hand side  of /  and if all  the  attributes  for which bound 
terms appear in g are propagated by the inclusion 1.  When I 
is applicable to g, gr(g, I)  denotes the atom obtained from g 
by using / as a rewriting rule whose direction is right-to-left. 

Termination of the algorithm is immediately implied by the 
fact that the number of conjunctions that can be generated by 
the  algorithm  is finite,  since  the maximum  length  of a gen­
erated conjunction is equal to the maximum length of a con­
junction in the body of the initial query (Q, and the number of 
different atoms  that can  be  generated  by  the  algorithm  is fi­
nite, since the alphabet of relation symbols used is finite (and 
corresponds  to  the  relation  symbols  occurring  in  Q  and  in 

18 

Al AND DATA INTEGRATION 

Query rewriting under KDs and IDs  Now we address the 
problem of query rewriting in the case where KDs and IDs are 
defined on  the global  schema.  Unfortunately,  KDs and  IDs 
interact  reciprocally  so  that  the  (decision)  problem  of query 
answering in  this setting becomes undecidable.  The follow­
ing theorem is a consequence of a similar property proved in 
[Call et ai, 2003]  in the context of a single database. 

Undecidability of calculating the certain answers to a query 
immediately  implies undecidability of calculating the perfect 
rewriting [Call et a/., 20031. The problem of query answering 
becomes decidable if we restrict the IDs to be in a particular 
class, so that they do not interact with KDs. 

We now go back to query rewriting.  In the case of a NKC 
data integration system, we can apply the same technique de­
veloped for IDs alone, provided that we take into account the 
KDs with suitable rules.  Indeed, observe that if  ret(I,  V)  vi-

with regard to this issue, we first introduce a unary global re­
lation  val:  the  idea  is  that  val  stores  all  values occurring in 

4  Semantics for inconsistent data sources 
In  the  sound  semantics,  violations  of IDs  are  treated  "auto-
matically"because of the nature of the semantics; instead, the 

We  call  maximal  w.r.t.  (J, V)  a  global  database  B  for 
that  there  exists  no  global 
I  consistent  with  G,  such 
>>(I,D) 
database  B'  consistent  with  G  such 
loosely-
B. 
sound  semantics  sera/  as 
= 
{B  |  B is consistent with G and B is maximal w.r.t.  ( I, V)}. 
Finally,  we  denote  with  ans1{q,I,D) 
the  set  of answers  to 
queries under the loosely-sound semantics. 

this  notion,  we  define 

that  B' 
the 

Based  on 

follows: 

semi(I,D) 

Al AND DATA INTEGRATION 

19 

5  Query rewriting in loosely-sound semantics 
We now address the problem of computing answers to a query 
under the  loosely-sound semantics.  Specifically,  we present 
a rewriting technique to compute answers to queries posed to 
NKC systems under the loosely-sound semantics. 

6  Summary of complexity results 
Strictly-sound semantics.  Query answering  is  undecidable 
even if we allow a slightly more general class of IDs than the 
NKCIDs;  let  us  define  a  1-key-conflicting  (1KC)  data  inte-

Theorem 6.1  The problem  of query answering  in  1KC inte(cid:173)
gration systems,  under the strictly-sound semantics,  is unde-
cidable. 

In the strictly-sound semantics, the complexity of the deci­
sion problem of query answering is immediately derived from 
the rewriting of Section 3. 
Theorem 6.2  The  problem  of query  answering  in  NKC  in(cid:173)
tegration  systems,  under  the  strictly-sound semantics,  is  in 
PTIME in  data  complexity. 

incide,  it  is  easy  to  see  that  the  above  properties  of query 
answering  under the  strictly-sound  semantics  can  be  easily 
generalized. 
Theorem 6.3  The problem  of query answering  in  1KC inte(cid:173)
gration systems,  under the loosely-sound semantics, is unde(cid:173)
cidable. 

We now characterize the problem of query answering un­

der the loosely-sound semantics in NKC systems. 
Theorem 6.4  The problem  of query answering  in  NKC inte(cid:173)
gration systems, under the loosely-sound semantics, is coNP-
complete in data complexity. 

Proof (sketch).  Membership in  coNP follows from Theo­
rem 5.1, and from the fact that query answering in Datalog-
is  coNP-complete  in  data complexity,  while  coNP-hardness 
can be easily proved by a reduction of the 3-COLORABILITY 
problem to our problem. 
□ 
The  summary of the results  we  have obtained  is  reported 
in  the  table  in  Figure  1,  which  presents  the  complexity  of 
query answering for both the strictly-sound and the loosely-
sound semantics.  Each row corresponds to a different class 
of dependencies  (specified  in  the  first  two  columns),  while 
each  cell of the table reports data complexity and combined 
complexity1  of query  answering  for  UCQs:  for each  decid-
able case, the complexity of the problem is complete w.r.t. the 
class reported.  In the second column of the table, FK stands 
for "foreign  key  dependencies"  (a well-known  class  of IDs) 
while GEN stands for "general IDs".  We have marked with 

results or to results immediately implied by known results. 

1The results for combined complexity, which we cannot present 
in detail due to space limitations, hold under the assumption that the 
mapping is expressed in terms of UCQs. 

20 

Al AND  DATA INTEGRATION 

is different from the ones considered in the present paper. 
Acknowledgments This research has been supported by the 
Projects INFOMIX (IST-2001-33570) and  SEWASIE (IST-
2001-34825)  funded  by  the  EU,  and  by  the  Project  D2I 
funded by MIUR (Ministero per  I'lstruzione,  I'Universita  e 
la Ricerca). We thank Maurizio Lenzerini and Jarek Gryz for 
precious discussions about this material. 
References 
[Abiteboul et al., 1995]  Serge Abiteboul, Richard Hull, and 
Victor Vianu. Foundations of Databases. Addison Wesley 
Publ. Co., Reading, Massachusetts, 1995. 

[Arenas et al., 1999]  Marcelo Arenas, Leopoldo E. Bertossi, 
and Jan Chomicki. Consistent query answers in inconsis(cid:173)
tent databases. In Proc. of PODS' 99, pages 68-79,1999. 
[Call et al., 2002]  Andrea Call, Diego Calvanese, Giuseppe 
De Giacomo, and Maurizio Lenzerini.  Data integration 
under integrity constraints. In Proc. of CAiSE 2002, vol(cid:173)
ume 2348 of LNCS, pages 262-279. Springer, 2002. 

[Cali et al, 2003]  Andrea Call, Domenico Lembo, and Ric-
cardo Rosati. On the decidability and complexity of query 
answering over inconsistent and incomplete databases.  In 
Proc. of PODS 2003, 2003. To Appear. 

[Duschka and Genesereth, 1997]  Oliver  M.  Duschka  and 
Michael R. Genesereth. Answering recursive queries using 
views. In Proc. of PODS' 97, pages 109-116, 1997. 

[Duschka and Levy, 1997]  Oliver M. Duschka and Alon Y. 
Levy. Recursive plans for information gathering. In Proc. 
of IJCAI '97, pages 778-784, 1997. 

[Fagin et al, 1983]  Ronald  Fagin,  Jeffrey  D.  Ullman,  and 
Moshe Y. Vardi. On the semantics of updates in databases. 
In Proc. of PODS' 83, pages 352-365,1983. 

[Fagin et al., 2003]  Ronald  Fagin,  Phokion  G.  Kolaitis, 
Renee J. Miller, and Lucian Popa. Data exchange: Seman(cid:173)
tics and query answering. In Proc. of ICDT 2003, pages 
207-224, 2003. 

[Greco et al., 2001 ] Gianluigi Greco, Sergio Greco, and Es(cid:173)
ter Zumpano.  A logic programming approach to the inte(cid:173)
gration, repairing and querying of inconsistent databases. 
In Proc. of ICLP'01, volume 2237 of LNAI, pages 348-
364. Springer, 2001. 

[Gryz, 1999]  Jarek Gryz. Query rewriting using views in the 
presence of functional and inclusion dependencies. Infor(cid:173)
mation Systems, 24(7):597-612,1999. 

[Johnson and Klug, 1984] David S. Johnson and Anthony C. 
Klug.  Testing containment of conjunctive queries under 
functional and inclusion dependencies. J. of Computer and 
System Sciences, 28(1): 167-189,1984. 

[Kolaitis and Papadimitriou, 1991]  Phokion G. Kolaitis and 
Christos H. Papadimitriou. Why not negation by fixpoint? 
J. of Computer and System Sciences, 43(1): 125-144,1991. 

[Lenzerini, 2002]  Maurizio Lenzerini.  Data integration:  A 
theoretical perspective.  In Proc. of PODS 2002, pages 
233-246,2002. 

[Lin and Mendelzon, 1998]  Jinxin  Lin  and  Alberto  O. 
Mendelzon.  Merging databases under constraints.  Int. J. 
of Cooperative Information Systems, 7(l):55-76,1998. 

7  Discussion and related work 
In this paper we have presented techniques for query rewrit(cid:173)
ing in data integration systems with integrity constraints, and 
analyzed the complexity of query answering. To this aim, we 
have exploited formalisms and methods both from the tradi(cid:173)
tional database theory and from computational logic. 

Several works in the literature address the problem of data 
integration under constraints on the global schema.  In this 
respect, query rewriting under integrity constraints has been 
first studied in the LAV setting.  In particular, [Duschka and 
Genesereth, 1997] presents a method for query rewriting un(cid:173)
der functional dependencies in LAV systems, which is able to 
compute the perfect rewriting in the case of queries and map(cid:173)
ping expressed through conjunctive queries, and "maximally 
contained" rewritings in the case of recursive mappings. 

Then, [Gryz, 1999] analyzes query rewriting under inclu(cid:173)
sion dependencies in LAV systems, and presents a method 
which is  able  to deal  simultaneously with  acyclic  IDs and 
functional dependencies, based on an algorithm for comput(cid:173)
ing the rewriting of a conjunctive query in a database with 
inclusion dependencies. The algorithm is based on a very in(cid:173)
teresting idea:  obtaining query rewriting by computing the 
rewriting of each atom in a way "almost independent" of the 
other atoms.  This can  be obtained  if the  body of the  ini(cid:173)
tial query q is preliminarly "minimized".  However, we have 
found out that Gryz's algorithm does not actually compute 
the perfect rewriting, in the sense that some conjunctions of 
the perfect rewriting are missing.  Our algorithm ID-rewrite 
presented in Section 3 is certainly inspired by Gryz's main in(cid:173)
tuitions, but overcomes the above mentioned incompleteness 
through a new technique for generating the rewriting. 

Complexity of query answering in GAV  under IDs alone 
is immediately derived by the results in [Johnson and Klug, 
1984];  in this work,  the same problem is solved for a re(cid:173)
stricted class of KDs and IDs, which, however, is significantly 
less general than the one treated in this paper. More recently, 
integration under constraints in GAV systems has been ad(cid:173)
dressed in [Call et al, 20021, which presents a method for 
query rewriting in the presence of KDs and foreign key de(cid:173)
pendencies, under a semantics analogous to our strictly-sound 
semantics. Thus, the method does not deal with data incon(cid:173)
sistencies w.r.t. KDs. Moreover, [Fagin et al, 2003] presents 
an approach for dealing with integrity constraints in a GLAV 
setting (a generalization of LAV and GAV). 

In single database settings, [Arenas et al,  1999; Greco et 
al., 2001] propose methods for consistent query answering in 
inconsistent databases, which are able to deal with universally 
quantified constraints. The semantics adopted in these works 

Al AND DATA INTEGRATION 

21 

