Language  Access  to  D i s t r i b u t ed  Data  with  Error  Recovery 

Earl  D.  Sacerdoti 

A r t i f i c i al 
Stanford  Research  I n s t i t u te 

I n t e l l i g e n ce  Center 

the  a p p l i c a t i on  of  a r t i f i c i al 

This  paper  discusses  an  e f f o rt  in 

the  access  of 
data  from  a  l a r g e,  d i s t r i b u t ed  data  base  over  a  computer  network.  A  running  system  is  described 
that  provides  real-time  access  over  the  ARPANET  to  a  data  base  d i s t r i b u t ed  over  several  machines. 
The  system  accepts  a  rather  wide  range  of  natural 
sequence  of  appropriate  queries  to  the  data  base  management  system  to  answer  the  question, 
determines  on  which  machine(s) 
the  ARPANET,  monitors  the  prosecution  of  the  queries  and  recovers  from  certain  errors  in  execution, 
and  prepares  a  relevant  answer. 
system,  more  sophisticated  f u n c t i o n a l ly  equivalent  components  are  discussed  and  proposed. 

In  a d d i t i on  to  the  components  that  make  up  the  demonstration 

the  queries,  establishes  l i n ks 

language  questions  about 

to  those  machines  over 

the  data,  plans  a 

i n t e l l i g e n ce 

to  carry  out 

to 

The  work  described  in  t h is  paper  represents  the  j o i nt  e f f o r ts  of  an 

integrated,  energetic  group 
at  SRI.  Members  of  t h is  group  include  Rich  Fikes  (now  at  Xerox  PARC),  Koichi  Furukawa  (now  at  ETL). 
Gary  Hendrix,  Paul  Morris  (now  at  UC  I r v i n e ),  Nils  Nilsson,  B i ll  Paxton,  Jane  Robinsonr  Daniel 
Sagalowicz,  Jonathan  Slocum,  and  Mike  Wilber. 
development  of  the  LIFER  system,  was  supported  by  the  Advanced  Research  Projects  Agency  of  the 
Department  of  Defense  under  contract  DAAG29-76-C-0012  with  the  U.  S.  Army  Research  O f f i c e. 

The  research  reported  herein,  other  than  the 

A. 

the 

Although 

INTRODUCTION 
Man's  use  of  tools  shapes  his  environment. 
Man's  use  of  tools  also  shapes  his  behavior.  As 
technology  evolves  more  complex  t o o l s, 
impositions  these  tools  make  on  t h e ir  users  become 
more  s t r i n g e n t. 
reproduce  s t r i n gs  of  ten  d i g i t s,  we  learn  to  do  it 
w e l l,  because  the  interface  to  the  telephone  system 
demands 
fast  (the  standard  keyboard  was  o r i g i n a l ly  designed 
to  allow  enough  time  between  keystrokes  to  keep 
early  typewriters  from  jamming),  we  t r a in  ourselves 
to  use  a  suboptimal  --indeed,  subaverage-
arrangement  of  keys,  because 
i n t e r f a ce 
keyboard  systems  demands  i t. 

is  d i f f i c u lt 

is  d i f f i c u lt 

type  very 

Although 

the 

i t. 

to 

to 

to 

it 

it 

the 

As  the  amount  of  information  moving  across  the 
impositions  of 

man-machine  i n t e r f a ce  increases, 
machines  on  our  behavior  also  increase.  Since 
computers  exchange  large  amounts  of  information 
with 
Impositions  on  us.  A  goal  of  research  in  A r t i f i c al 
I n t e l l i g e n ce 
impositions, 
use  more  widely  a v a i l a b l e. 

is 
thus  making  the  benefits  of  computer 

the  extent  of  these 

t h e ir  human  users 

they  place  great 

to  reduce 

One  example  of  the  imposition  set  by  the 

the  area  of  management 

computer  arises  in 
Imagine  that  a  user  in  a 
information  systems. 
decision-making  role  knows 
that  his  data  base 
contains  some  information  that  pertains  to  a 
decision  he  must  make.  The  user  wishes  to  extract 
that  information  from  the  data  base  and 
r e s t r u c t u r e,  summarize,  or  analyze  it 
I d e a l l y, 
the  computer  in  his  own 
request  for  the  information  he  desired.  But 
today's  computer  systems 
f o l l o w i ng  a  very  s t i l t e d, 
i n t e r a c t i o n.  Even  then, 
to  obtain  c e r t a in  preprogrammed  r e p o r t s,  and  t h is 
is  hardly  what 
t y p i c al  decision 
maker  in  his  r o le  of  managing  by  exception. 

the  user  would  be  able  to  i n t e r a ct  w i th 
terminology  and  issue  a 

t y p i c a l ly  require 
formal  mode  of 
the  user  w i ll  only  be  able 

in  some  way. 

is  needed 

for  the 

If  the  decision  maker  wants  a  new  perspective 

on  the  information  in  the  data  base,  he  must  c a ll 
in  a  programmer  who  works  w i th  the  data  base  on  a 

in 

for 

from 

terms 

information 

information. 

that  must  be  used 

into  the  terms  of  the 

t r a n s l a te  the  request 

that  is  a c t u a l ly  stored 

is  able  to  convert  the  request  for  data 

The  programmer  carries  in  his  head 
in  order 
F i r s t,  he  knows 

regular  basis. 
four  kinds  of  knowledge 
to  gather  the  desired 
how  to 
the  decision  maker's 
data 
Second,  he 
from  the  o v e r a ll  data  base  i n to  a  series  of 
requests 
from 
p a r t i c u l ar  f i l e s. 
the  p a r t i c u l ar  requests  i n to  programs  or  c a l ls  on 
the  data  base  management  system's  p r i m i t i v es 
order 
computation.  Fourth,  he  knows  how  to  monitor  the 
execution  of  his  request 
expected  data 

Third,  he  knows  how  to  t r a n s l a te 

is  being  obtained. 

the  appropriate 

the  data  base. 

for  p a r t i c u l ar 

items  of  data 

to  a c t u a l ly 

to  ensure 

i n i t i a te 

that 

the 

in 

For  the  past  year,  a  group  at  SRI  has  been 

working  on  automating  the  a c t i v i t i es  carried  out  by 
our  hypothetical  data  base  expert. 
The  following 
section  presents  an  overview  of  a  running  system 
that  performs  at 
functions  both  r e l i a b ly  and  e f f i c i e n t l y.  Our 
current  progress  on  representing  and  using  each  of 
the  four  kinds  of  knowledge  described  above  w i ll  be 
detailed 

least  some  of  the  e x p e r t 's 

the  subsequent  sections. 

in 

B. 

Overview  of  the_  LADDER  system 
Our  running  demonstration  system,  called 

techniques 

represents  an  a p p l i c a t i on  of 

LADDER  ( f or  Language  Access  to  D i s t r i b u t ed  Data 
with  Error  Recovery) 
s t a t e - o f - t h e - a rt 
in  a  r e a l - t i me  performance 
a r t i f i c i al 
system.  Because 
it  consists  of  a  number  of  rather 
independent,  modular  components,  new  c a p a b i l i t i es 
can  be  incorporated  e a s i ly  as  we  learn  how  to  make 
them  run  e f f i c i e n t l y. 

i n t e l l i g e n ce 

from  the 

f i e ld  of 

LADDER  has  been  developed  as  a  management  aid 
to  Navy  decision  makers,  so  the  examples  presented 
throughout  t h is  paper  are  drawn 
from  the  domain  of 
Navy  command  and  c o n t r o l.  Applications  of  t h is 
work  to  other  decision  making  and  data  access 
problems  should  be  obvious. 

The  LADDER  system  consists  of  three  major 

f u n c t i o n al  components,  as  displayed  in  Figure  1, 

Knowledge  R e p r . - l:  S a c e r d o ti 

196 

LADDER  employs 

from  a 

l e v e ls  of  b u f f e r i ng  of  the  user 

that  provide 
data  base  management  system  (DBMS). 
the  DBMS  to  r e t r i e ve  s p e c i f ic  f i e ld  values 
s p e c i f ic  f i l es  j u st  as  a  programmer  might,  so  that 
the  user  of  LADDER  need  not  be  aware  of  the  names 
of  s p e c i f ic 
they  are  structured  i n to  f i l e s,  or  even  where  the 
f i l es  are  p h y s i c a l ly  located. 
Thus  the  user  can 
think  he  is  r e t r i e v i ng  information 
information  base"  rather 
items  of  data 
data  base 

from  a  "general 
than  r e t r i e v i ng  s p e c i f ic 
t r a d i t i o n al 

f i e l d s,  how  they  are  formatted,  how 

from  a  highly  formatted 

from 

LADDER'S 

f i r st  component  accepts  queries  in  a 

language. 

r e s t r i c t ed  subset  of  natural 
component,  c a l l ed  INLAND  (for  Informal  Natural 
Language  Access  to  Navy  Data)  produces  a  query  or 
queries  to  the  data  base  as  a  whole. 
The  queries 
to  the  data  base  r e f er  to  s p e c i f ic  f i e l d s,  but  make 
no  mention  of  how  the  information  in  the  data  base 
is  broken  down 

i n to  f i l e s. 

This 

For  example,  suppose  a  user  types 

in  "What 

the  length  of  the  Kennedy?" 
Kennedy's  length  "  or  even  "Type 
INLAND  would 

t r a n s l a te  t h is  i n to  the  query: 

(or  "Give  me  the 

length  Kennedy"). 

is 

((?  LGH)  (NAM  EQ  'JOHN//F. KENNEDY')) . 

where  LGH  is  the  name  of  the  length  f i e ld  NAM  the 
name  of  the  ship  name  f i e l d,  and 
' J0HN//F. KENNEDY' 
the  value  of  the  NAM  f i e ld 
with  the  Kennedy. 
to  the  second  component  of  the  system. 

for  the  record  concerned 
This  query  is  then  passed  along 

The  queries  from  INLAND  to  the  data  base  are 

the  way  the 

The  second 
IDA 

is  broken  up  i n to  f i l e s. 
called 

specified  without  any  presumption  about 
data 
f u n c t i o n al  component 
Data  Access)  breaks  down  the  query  against  the 
e n t i re  data  base  i n to  a  sequence  of  queries  against 
various 
structure  of  the  data  base  to  perform 
operation,  preserving  the  linkages  among  the 
records  r e t r i e v ed  so 
the  o v e r a ll  query  may  be  returned 

IDA  employs  a  model  of  the 
t h is 

that  an  appropriate  answer  to 

to  the  user 

I n t e l l i g e nt 

f i l e s. 

( f or 

For  example 

suppose 

the  data  base  consists  of 

a  single  f i le  whose  records  contain 
(NAM  CLASS  LGH). 

the 

f i e l ds 

to  answer  the  data  base  query  issued  above, 

Then, 
IDA  can  simply  create  one 
says, 
equal 
f i e ld  "  Suppose,  however, 
structured  in  two 

in  essence,  "For  the  ship  record  with  NAM 
' J0HN//F. KENNEDY ',  return  the  value  of  the  LGH 

f i le  r e t r i e v al  query 

that 

that  the  data  base  is 

f i l e s,  as  f o l l o w s: 

SHIP:  (NAM  CLASS  . . .) 
CLASS:  (CLASSNAME  LGH  ..  ) 

the  Kennedy's 

t h is  case  the  single  query  about 

for  the  SHIP  record  with  NAM  equal 

f i r s t,  "Obtain  the  value  of  the  CLASS 

In 
length  must  be  broken  i n to  two  f i le  queries. 
would  say, 
f i e ld 
»JOHN#F.KENNEDY'."  Then.  "Find  the  corresponding 
CLASS  record,  and  return  the  value  of  the  LGH  f i e ld 
IDA  would  compose  an 
from  that  r e c o r d ."  F i n a l l y, 
answer 
that  is  relevant  to  the  user  s  query  ( i . e. 
it  w i ll  return  NAM  and  LGH  data,  supressing  the 
CLASS-to-CLASSNAME 

These 

l i n k) 

In  a d d i t i on 

to  planning  the  correct  sequence 
IDA  must  a c t u a l ly  compose 
those 

of  f i le  queries 
queries  in  the  language  of  the  DBMS.  Our  current 
system  accesses,  on  a  number  of  d i f f e r e nt  machines, 

IDA  creates 

[ 2 ],  whose 

is  called  Datalanguage. 

in  question  is  d i s t r i b u t ed  over 

a  DBMS  called  the  Datacoraputer  [ 1] 
input  language 
the  relevant  Datalanguage  by  i n s e r t i ng  f i e ld  and 
f i le  names  i n to  pre  stored  templates.  However, 
since  the  data  base 
several  d i f f e r e nt  machines, 
IDA  produces  does  not  refer 
s p e c i f ic  d i r e c t o r i es  on  s p e c i f ic  machines. 
f i l es  containing  a 
r e f e rs  instead  to  generic 
the  queries 
s p e c i f ic  kind  of  record 
f i le  rather 
discussed  above  might  r e f er  to  the  SHIP 
than  f i le  SHIP.ACTIVE  in  directory  NAVY  on  machine 
DBMS  3. 
component  of  LADDER 
generic  f i l es  and  manage  the  access  to  them. 

is  the  function  of  the  t h i rd  major 

the  Datalanguage 
to  s p e c i f ic 

f i l es 
For  example, 

the  l o c a t i on  of  the 

f i l es  in 

that 

f i nd 

to 

It 

It 

To  carry  out 

t h is  function 

the  t h i rd 

It 

for 

(or 

f i le 

f i l e s) 

l o c a t i on  of  the 

the  d i s t r i b u t ed  data 

it  searches  i ts  model 

then  establishes  connections  over 

component,  called  FAM  ( f or  F i le  Access  Manager) 
r e l i es  on  a  l o c a l ly  stored  model  showing  where 
f i l es  are  located  throughout 
base.  When  it  receives  a  query  expressed  in 
generic  Datalanguage, 
primary 
r e f e r s. 
ARPANET  to  the  appropriate  computers 
opens  the  f i l e s,  and 
query,  amended 
If  at  any  time, 
are  being  accessed. 
computer  crashes 
f i le  becomes  inaccessible,  or 
the  network  connection  f a i l s,  FAM  can  recover  and, 
if  a  backup 
f i le 
f i le  l o c a t i o n s, 
backup  s i te  and  retransmit 

is  mentioned 
it  can  establish  a  connection  to  a 

logs  i n, 
transmits  the  Datalanguage 

the 
to  which  it 
the 

in  FAM's  model  of 

to  the  s p e c i f ic 

the  remote 

f i l es  that 

to  r e f er 

the  query. 
The  e x i s t i ng  system,  w r i t t en  in 

INTERLISP 
[ 3 ],  can  process  a 
f a i r ly  wide  range  of  queries 
against  a  data  base  consisting  of  some  14  f i l es 
containing  about  100  f i e l d s.  Processing  a  t y p i c al 
question  takes  a  very  few  seconds  of  cpu  time  on  a 
DEC  KA-10  computer.  An  annotated  t r a n s c r i pt  of  a 
session  with 
Appendix 

the  system  is  provided 

the 

the 

in 

Thus  LADDER  provides  at  least  some  of  the 

functions  of  the  hypothetical  data  base  expert  in 
each  area  of  expertise  mentioned 
the  previous 
section. 
detailed  views  of  the  demonstration  programs  and 
ongoing  research  e f f o r ts 
in  each  of  these  areas. 

f o l l o w i ng  sections  w i ll  provide  more 

The 

in 

C 

iiS-Lyxsi.  Language  interface 
The  task  of  providing  access  to  the  data  base 

in  the  decision  maker's  terms  is  served  by  a 
functional  component  that  accepts  typed  English 
text  as  input  and  produces  formal  queries  to  the 
IDA  component  as  output. 
natural  access, 
to  expand 
i d i o s y n c r a t ic 

In  order  to  provide  t r u ly 
t h is  component  must  allow  each  user 

the  language  d e f i n i t i on  with  his  own 

language  use. 

We  are  developing  a  family  of  language 

interface  components  w i th  increasing  g e n e r a l i ty  and 
true  "understanding"  of  the 
t h is  section 
we  describe  our  i n i t i al  performance  system. 

input. 

In 

*  In  the  i n t r o d u c t i on  we  described  four  a c t i v i t i es 
that  our  system  would  carry  out  and  here  we  are 
describing  only 
is  because 
the 
p a r t i c u l ar  queries 
p a r t i c u l ar  DBMS's, 

i n to 
is  shared  between  IDA  and  FAM. 

three  functional  components. 
t h i rd  a c t i v i t y, 

the  p r i m i t i v es  of 

t r a n s l a t i ng 

This 

Knowledge  Repr . -1  : 

197 

S a c e r d ot  i 

FIGURE  1  OVERVIEW  OF  THE  LADDER  SYSTEM 

Our 

i n i t i al  system 

is  b u i lt  around  a  package 

(LIFER) 

language  d e f i n i t i on  and  parsing 
I n t e r f a ce  F a c i l i ty  w i th  E l l i p s is 
LIFER  consists  of  a 

of  programs 
for 
c a l l ed  Language 
and  Recursion 
parser  and  a  set  of 
s p e c i f y i ng  a 
access  of  an  e x i s t i ng  computer  system. 
language 
of  productions  of  the 

is  d e f i n ed  by  what  may  be  viewed  as  a  set 

fragment  o r i e n t ed 

towards 
The 

i n t e r a c t i ve 

functions 

language 

form 

for 

[ 4] 

meta-symbol  = >  p a t t e r n,  e x p r e s s i o n, 

is  a  meta-symbol 

in 

the 

language, 

l i st  of  meta-symbols  and  symbols 

in 

is  a 

where  meta  -symbol 
p a t t e rn 
the 
language,  and  expression 
whose  v a l u e,  when  computed, 
value  of  the  meta  symbol. 

is  a  LISP  expression 
is  assigned  as  the 

i n p u ts 

t r e e s, 

the 

input 

is  used  by  LIFER  to 

The  set  of  productions 
i n t e r n al  s t r u c t u r e s,  c a l l ed 

top-down, 

t r a n s i t i on 

The  response 

is  simply  the 

to  parse  user 

t o p - l e v el  p a t t e rn 

t r e es  a re  then  used 

l e f t - t o - r i g ht  o r d e r. 

language  d e f i n e d .*  The 

to  a  u s e rs 
the  response  expression  a s s o c i a t ed 

b u i ld 
t h at  r e p r e s e nt  the 
t r a n s i t i on 
in  a 
of  the  system 
e v a l u a t i on  of 
w i th 
together  w i th  a ll 
expressions  associated  w i th  meta-symbols  contained 
in 
expansion  of  a  h i g h e r - l e v el  meta-symbol. 
f e a t u re  of  LIFER 

from 
point  of  view  of  developing  a  r i ch  and  usable 
language  d e f i n i t i on 
grammar  can  be  updated  and  the  consequent  changes 
t e s t e d. 
is  such 

the 
. 
the  ease  w i th  which  the 

The  ease  of  a l t e r i ng  the  grammar 

t o p - l e v el  p a t t e rn  or  any 

the  s u b s i d i a ry  response 

the  expansion  of  the 

t h at  matches  the 

important 

The  most 

i n p u t, 

is 

T r a n s i t i on 

t r e es  a re  a  s i m p l i f i c a t i on  of  Woods' 

augmented 

t r a n s i t i on  networks 

[ 5 ]. 

t h at  LIFER  provides  a 
add  paraphrases  to  the 
E n g l i s h. 
For  example 

f a c i l i ty  f or  casual  users  to 
language  d e f i n i t i o n, 
the  user  might  type 

in 

DEFINE  (?  LENGTH  KENNEDY)  TO  BE  LIKE 
(WHAT  IS  THE  LENGTH  OF  THE  KENNEDY). 

Subsequently, 

the  system  w i ll  accept 

?  COMMANDER  KITTY  HAWK 

and 

and 
12 

?  SPEED  AND  CURRENT  POSITION  SUBS  WITHIN 
400  MILES  OF  GIBRALTAR 
i n t e r p r et  them  c o r r e c t l y.  Questions  8 
in  the  Appendix  provide 

f u r t h er  examples. 

through 

The  LIFER  parser  has  a  very  powerful  mechanism 
i n p u t s,  as  e x e m p l i f i ed  by 

for  processing  e l l i p t i c al 
questions  2  and  15. 
r e f e r e n c e,  such  as  t h at  shown 
handled  w i t h in  the 

Simple  kinds  of  anaphoric 

in  question  4*  are 

language  d e f i n i t i o n. 

The  nature  of  the  LIFER  parser 

imposes  a 

language 

to  words 

l e f t - t o - r i g ht 

language  d e f i n i t i on  t h at 

the  developer  of  the 
For  parsing  to  operate  e f f i c i e n t l y, 
the  number  of 
in  a  sentence,  and 
the 

d i s c i p l i ne  on 
d e f i n i t i o n. 
the  grammar  must  s e v e r e ly  r e s t r i ct 
acceptable  words  at  each  p o i nt 
the  t e s ts  a p p l i ed 
in 
scan  must  be  as  cheap  as  p o s s i b l e. 
best  s a t i s f i ed  w i th  a 
d i r e c t ly  encodes 
r e s t r i c t i o ns 
domain. 
"noun  p h r a s e ," 
e n t i t l es 
p h r a s e ,"  and  " p a ir  of  p o s i t i o n s ."  Questions  14  and 
15  give  examples  of  a  small 
INLAND 
grammar. 
s e m a n t i o a l l y - o r i e n t ed  syntax 
used  by  Brown  and  Burton  [ 6] 

This  approach  of  producing  a 
is  s i m i l ar 
t h at 
[ 7]  and  Waltz  [ 8 ]. 

i n to  the  syntax  most  of  the 
the  semantics  of  the 

l i ke  "ship  s p e c i f i c a t i o n ,"  " c a r r y - v e rb 

Rather  than  c o n t a in  meta  symbols 

fragment  of  the 

INLAND  grammar 

is  composed  of 

These  goals  a re 

imposed  by 

l i ke 

the 

to 

K n o w l e d ge R e p r . - l: 

1 98 

S a c e r d ot  i 

Using  LIFER'S 

i n t e r a c t i ve  language  d e f i n i t i on 
f a c i l i t i es  we  have  developed  a  language  d e f i n i t i on 
that  we  believe  is  one  of  the  most  extensive  that 
has  been  incorporated  i n to  a  computer  system. 
It 
accepts  a  wide  range  of  queries  about  the 
information  in  the  data  base  as  w e ll  as  queries 
about 
the  grammar 

the  d e f i n i t i o ns  of  data  base  f i e l ds  and  about 

i t s e l f. 

D 

I n t e l l i g e nt  Data  Access 
A  casual  user  would  l i ke  to  be  able  to  access 
a  data  base  as  if  it  were  an  unstructured  mass  of 
i n f o r m a t i o n.  Unfortunately,  a  data  base  is  in 
r e a l i ty  a  c o l l e c t i on  of  f i l e s,  often  with  very 
complex  linkages  among  them.  Even  worse,  a 
d i s t r i b u t ed  data  base  may  consist  of  d i f f e r e nt 
f i l es  on  d i f f e r e nt  machines,  possibly  handled  by 
d i f f e r e nt  DBMSs.  An  operation  amounting  to 
automatic  problem  solving  is  required  to  decide  how 
to  l i nk  up  the  f i l es 
and  aggregate  the  information  requested  in  a  given 
query.  An  example  of  t h is  s i t u a t i on  is  presented 
in  question  6  in  the  Appendix,  where  a  single 
question 
four  queries  of  three  f i l es  to  develop  an  answer. 

from  the  user  s  point  of  view  requires 

in  the  data  base  to  extract 

Our 

i n i t i al  e f f o r ts 

in  t h is  area  have 

[ 9 ].  The  knowledge  necessary  to  decide  how 

concentrated  on  access  planning  for  c o l l e c t i o ns  of 
data  bases  supporting  a  r e l a t i o n al  model  of  the 
data 
to  l i nk  among  r e l a t i o ns  is  contained  in  what  we 
c a ll  a  s t r u c t u r al  schema.  The  s t r u c t u r al  schema 
for  each  r e l a t i on  describing 
contains  information 
how  it  can  be  linked 
to  other  r e l a t i o n s. 
a d d i t i on 
counterparts 
special-case 

in  other  r e l a t i o ns  and  c e r t a in 
information. 

it  contains  information  about  each  f i e ld  s 

In 

We  have  taken  two  approaches  to  the  process  of 

IDA 

The 

The  f i r s t,  embodied  in  a 
uses  a  h e u r i s t ic  approach 

is  embodied  in  a 
[11]  with  i n d i v i d u al 

i n t e l l i g e nt  data  access. 
program  called 
[10] 
to  the  problem  of  l i n k i ng  among  f i l e s. 
s t r u c t u r al  schema 
representation 
for  each  f i e ld  and  each  f i l e. 
generates  a  s i n g le  query  at  a  time,  examines  the 
r e s u l t s,  and  then  determines  the  next  query  to  be 
asked. 
sequences  of  f i le  accesses  or  can  even 
answer  an  answerable  question,  but  it 
shortcomings 
for  rapid  execution  and 
straightforward  e x t e n s i b i l i t y. 

This  approach  can  lead  to  suboptimal 

frame-like 
frames  defined 

f a il  to 
trades  these 

The  program 

Our  second  approach,  embodied  in  a  design  f or 

theorem-proving 

[ 1 2 ],  uses  a  formal, 

the  f i e l d s,  and  the  f i l e s. 

The  s t r u c t u r al  schema  is  represented  as 

a  program  called  DBAP  ( f or  Data  Base  Access 
Planner) 
approach. 
a  set  of  axioms  about  the  elements  in  the  query 
language, 
These  axioms 
are  encoded  as  QLISP  [131  procedures.  The  program 
builds  a  complete  sequence  of  queries  to  the  data 
base  before  beginning  the  actual 
i n t e r a c t i o ns  w i th 
i t. 
it  can  plan  an  optimal  sequence  of  f i le 
accesses,  given  a  s u f f i c i e n t ly  d e t a i l ed  model  of 
the  data  base 
that 
magnitude  slower  than  IDA. 
t h is  expenditure  of  planning 
be  repaid  by  faster  data  base  r e t r i e v a l. 

For  very  large  f i l es 
time  would  undoubtedly 

t h is  approach  is  e s s e n t i a l ly  an  order  of 

A  p a r t i al  implementation  indicates 

Thus, 

E 

Ells.  Access  Management 
The  t h i rd  major  component  of  LADDER,  c a l l ed 

[ 1 4 ], 

locates 

f i l es  w i t h in 

FAM  ( f or  F i le  Access  Manager) 
the  d i s t r i b u t ed  data  base, 
p a r t i c u l ar 
establishes  connections  to  them,  and  transmits  to 
and  monitors  the  responses  from  the  remote 
computers  where  the  f i l es  are  located.  FAM  can 
recover  from  a  range  of  expected  types  of  errors  by 
establishing  l i n ks 
r e t r a n s m i t t i ng  the 

to  backup 
f a i l ed  query. 

f i l es  and 

FAM  accepts  as  input  Datalanguage  commands 

f i l es  on  s p e c i f ic 

f i l es 
the  commands. 

that  r e f er  not  to  s p e c i f ic 
machines,  but  to  generic  f i l e s,  as  defined  in 
Section  B.  Based  on  a  l o c a l ly  stored  model  of  the 
d i s t r i b u t ed  f i le  system,  FAM  selects  the 
appropriate  s p e c i f ic 
mentioned  in 
machines  where  the  f i l es  reside  do  not  yet  e x i s t, 
they  are  established 
not  yet  open 
modified 
transmitted  to 
If  c e r t a in 

the  remote  machine. 
types  of  errors  occur  during 

If  the 
they  are  opened 
to  s p e c i f ic 

in  question  are 
the  query, 
is 

F i n a l l y, 
f i le  names, 

If  network  l i n ks 

the  generic 

to  r e f er 

f i l es 

f i l es 

to  the 

the 

for 

The 

f i r st  is  a 

prosecution  of  the  query,  FAM  w i ll  attempt 
FAM  c u r r e n t ly  handles  two  types  of  error 
recover. 
conditions. 
f a i l u re  of  the  network 
connection  which  is  usually  noticed  by  the  TENEX 
lack  of  i n t e r a c t i on  over  the 
operating  system  as  a 
network  for  a  given  i n t e r v al  of  time. 
In  t h is  case 
FAM  attempts 
locations  for  the 
f i l es  referenced  in  the  query,  establishes  l i n ks 
to 
them,  and  retransmits  the  query.  The  second  type 
of  error  is  an  e x p l i c it  complaint 
Datacomputer. 
when  FAM's  model  is  inaccurate,  and  a  f i le  that  was 
expected  to  be  in  a  p a r t i c u l ar  l o c a t i on  in  f a ct  was 
not. 
attempts  to  recover  as  before. 

In  t h is  case,  FAM  updates  i ts  model  and 

to  f i nd  a l t e r n a t i ve 

t h is  usually  arises 

In  p r a c t i c e, 

from 

the 

to 

FAM  is  implemented  by  making  strong  use  of  the 
features  of  INTERLISP  that  support  m u l t i p le  c o n t r ol 
and  access  environments  [ 3]  [ 1 5 ].  When  FAM  opens 
a  connection  to  a  p a r t i c u l ar  machine, 
it  builds  a 
piece  of  pushdown  stack  that  contains  as  l o c a l ly 
bound  variables  the  appropriate  information  about 
that  connection,  and  whose  c o n t r ol  environment  is 
poised  to  i n t e r a ct  with  the  remote  machine.  An 
i n t e r a c t i on  with  a  p a r t i c u l ar  remote  machine  can 
thus  be  invoked  via  a  generator  f u n c t i o n. 

F. 

It  accepts  a  rather  wide  range  of  queries 

Directions  for  Further  Work 
As  of  March  1977,  the  LADDER  system  has  been 
brought  to  a  stage  of  development  where  it  can  be 
used  with  some  success  and  enjoyment  by  casual 
users. 
against  a  simple  data  base,  and  is  quite  robust. 
This  has  been  achieved  by  making  many  s i m p l i f y i ng 
assumptions.  The  language  component  does  not 
understand 
sense; 
IDA  w i th  the 
appropriate  arguments.  The  data  access  component 
assumes  that  a ll  queries  can  be  answered  by  Joining 
records  from  various  f i l e s.  Both  systems  make 
strong  assumptions  that  the  user  knows 
the  kinds  of 
information  that  are  in  the  data  base  and  is  asking 
relevant  questions.  Now  that  an  i n i t i al  system  has 
been  developed  and  demonstrated,  we  can  concentrate 

the  user's  queries  in  any  fundamental 

it  r e f l e x i v e ly  invokes 

r a t h e r, 

Knowledge  R e p r . - l:  SacerdotI 

199 

on  e f f o r ts 
and  coverage  of 

to 

i m p r o ve 

i ts 

r o b u s t n e ss 

g e n e r a l i t y, 

U n t il 

t r a d e­

language  systems 
t h at  r an  r e l i a b ly 

t i me  b ut  had  v e ry  meagre  s e m a n t ic 

l a n g u a g e. 
t h e re  e x i s t ed  a  c l e ar 
two  k i n ds  of 
t he  one  h a n d,  systems  e x i s t ed 
r e al 

t he 
r e c e n t l y, 
o ff  between  b u i l d i ng 
On 
in 
u n d e r p i n n i n g s,  whose  e x t e n s i b i l i ty  was  c l e a r ly 
l i m i t e d,  and  w h i ch  d id  n ot 
them, 
to 
t h at 
in 
i n t e r n al 
r e p r e s e n t a t i on  of 
o t h er  hand 
language  much  more 
l i n g u i s t i c a l l y,  and  d e v e l o p ed  a 
what 
t he 
r e al 
t i m e. 
i n t e g r a te 
a p p r o a c h e s: 
language  d e f i n t i t i on  systems  were 

t h e re  was  no  c l e ar  way 

t he  e f f o r ts  b e i ng  put 

t h e re  were  systems 

t h at  c o u ld  n ot  r un 

i n p u ts  meant,  b ut 

t r u ly  u n d e r s t a nd 
i n p u ts 
t h ey  d id  n ot  compose  an 
t he 
t h e ir  m e a n i n g s. 

t he  u n d e r l y i ng  c o n t r ol  s t r u c t u r es  and 

r e p r e s e n t a t i on  of 

i n c o m p a t i b l e. 

t h at  c o v e r ed 

Even  w o r s e, 

t he  sense 

On 
t he 

t h o r o u g h l y,  were  b e t t er  grounded 

i n to 

two 

t he 

to 

in 

A f t er  e v a l u a t i ng 

t he  b e n e f i ts  of 

t he  LIFER 

t he 

r e e x a m i n i ng 

t he  more  s e m a n t i c a l ly  based  s y s t e m s,  we 

r e q u i r e m e n ts  and 

a p p r o a ch  and 
b e h a v i or  of 
have  d e v e l o p ed  a 
t h at 
c a p a b le  of  s u p p o r t i ng  b o th  a p p r o a c h e s,  and  of 
s u p p o r t i ng  systems  at 
t r a d e o ff  between 
l i n g u i s t ic  g r o u n d i n g. 

r e a l - t i me  p e r f o r m a n ce  and 

language  s y s t e m" 

i n t e r m e d i a te  p o s i t i o ns  on 

" c o re 

t he 

is 

It  a c c e p ts 

t h at  used  by 

language  d e f i n i t i o n, 

language  d e f i n i t i o ns  at 

r a n ge  of  s t y l es 
t he 

The  c o re  system  a c c e p ts  a  wide 
from 
t he 

of 
r a n g i ng 
s e m a n t i c a l ly  o r i e n t ed  s y n t ax  of 
INLAND  grammar 
to  an  amalgam  of  m u l t i p le  knowledge  s o u r c es  s i m i l ar 
to 
t he  SRI  speech  u n d e r s t a n d i ng  system 
[ 1 6 ]. 
i n t e r m e d i a te  p o i n ts  w i t h in 
it  s h o u ld 
more 
s t y l es  of 
s t a g ed 
t h at  s h o u ld  e n a b le  us 
i s s u es 
w h i le  a u g m e n t i ng 
l i n g u i s t ic 

in  a 
f a s h i o n.  We  a re  d e v e l o p i ng  a  r e s e a r ch  p l an 
t he 

l i n g u i s t i c a l ly  and  s e m a n t i c a l ly  o r i e n t ed 
i n to  a c t u al  use 

in 
t he  power,  c o v e r a g e,  and 

to  s i m u l t a n e o u s ly  e x p l o re 
l a n g u a ge  u n d e r s t a n d i ng 

t h us  c o n s t i t u te  a  v e h i c le 

t he  d e m o n s t r a t i on  s y s t e m. 

t h at  r a n ge  as  w e l l,  and 

language  p r o c e s s i ng 

r e l e v a n ce  of 

f or  b r i n g i ng 

i n v o l v ed 

t r ue 

Our  p l a ns 

f or  d a ta  access 

t he 

i n p ut 

language  of 

T h is  w i ll  e n a b le 

to 
q u e r i e s. 
d i s t i n g u i sh  between  such  q u e r i es  as 
l a st 
r e p o r t ed  p o s i t i on  of  each  s u b ?" 
l a st 
t he 

r e p o r t ed  p o s i t i on  of  any  sub?" 

t he  system 

IDA 

to 

i n c l u de  e x t e n s i o ns 
to  p e r m it  q u a n t i f i ed 

"What 
and 

t he 

is 
"What 

is 

We  w i ll  a t t e m pt 

to  d e m o n s t r a te 

t he  g e n e r a l i ty 

to  d a ta  base  access  p l a n n i ng  by 

of  our  a p p r o a ch 
i n t e r f a c i ng 
to  a  d i s t r i b u t ed  d a ta  base  s t o r ed 
p a r t i a l ly  on  a  DBMS  s u p p o r t i ng  a  CODASYL-type 
model  and  p a r t i a l ly  on 
a 

[ 1 7] 
t he  Datacomputer  s u p p o r t i ng 

r e l a t i o n al  m o d e l. 

language  u n d e r s t a n d i ng  and 

In  a d d i t i on 
i m p r o ve  our  p e r f o r m a n ce  s y s t e m,  we  a re 
r a n ge 

t h e se  e f f o r t s,  w h i ch  we  e x p e ct 

l o n g er 

to 

in  o ur 

i n t e g r a t ed 

is  b e i ng  d e s i g n e d. 

to  p r o g r e ss 
An 

w i ll 
c o n t i n u i ng 
r e s e a r c h. 
access  p l a n n i ng  system  b u i lt  around 
r e p r e s e n t a t i on  of  knowledge 
f o rm 
w i ll  b e n e f it 
p e r f o r m a n c e - o r i e n t ed  w o r k. 
p e r f o r m a n ce  system 
r e s u l ts  and  problems  e n c o u n t e r ed 
The  e a r ly  successes  of 
r e s e a r c h. 
p r o v i d ed  an 
i n i t i al  d e m o n s t r a t i on  of 

l o n g er 
t o o l - b u i l d i ng 

f r om 

t he 

The 

in  s e m a n t ic  n e t w o rk 
t e rm  e f f o r ts 
i n v o l v ed 
Development  of 

in 
t he 
is  g u i d ed  and  p r i o r i t i z ed  by 

t he 
in  o ur 
t e rm 
t h is  program  have 

l o n g er 

t he  b e n e f i ts 

t he 

t he 

of  s i m u l t a n e o u s ly  p u r s u i ng 
r e s e a r ch 
aimed  at  c o s t - e f f e c t i ve  p e r f o r m a n ce  and  h i g h er 
r e s e a r ch  aimed  at  a d v a n c i ng 

t he  s t a te  of 

lower 

r i sk 

t he  a r t. 

r i sk 

REFERENCES 

1. 

2. 

3. 

4. 

5. 

6. 

7. 

8. 

9. 

5 th 

(August  1 9 7 7 ). 

-  A  Network  Data 

"The  Datacomputer 

" T r a n s i t i on  Network  Grammars 

"INTERLISP  R e f e r e n ce  M a n u a l ," 
(December  1 9 7 5 ). 
f or  A p p l i ed 
I J C AI 

J.  F a r r e l l, 
U t i l i t y ,"  P r o c.  B e r k e l ey  Workshop  on 
D i s t r i b u t ed  Data  Management  and  Computer 
N e t w o r k s.  B e r k e l e y,  C a .,  p p.  352-364 
(May 
1 9 7 6 ), 
Computer  C o r p o r a t i on  of  A m e r i c a, 
" D a t a c o m p u t er 
V e r s i on  1  User  M a n u a l ,"  CCA,  Cambridge,  Mass. 
(August  1 9 7 5 ). 
W.  T e i t e l m a n, 
Xerox  PARC,  P a lo  A l t o,  Ca. 
G.  G.  H e n d r i x, 
"Human  E n g i n e e r i ng 
N a t u r al  Language  P r o c e s s i n g ,"  Proc 
Cambridge,  Mass. 
W.  A.  Woods, 
N a t u r al  Language  A n a l y s i s ,"  CACM.  V o l.  13,  No. 
10,  p p.  591-606 
J.  S.  Brown  and  R.  R.  B u r t o n, 
R e p r e s e n t a t i o ns  of  Knowledge 
R e a s o n i n g ,"  p p.  311-349,  D.  G.  Bobrow  and  A. 
C o l l i n s,  e d s .,  R e p r e s e n t a t i on  and 
U n d e r s t a n d i ng 
1 9 7 5 ). 
R.  R.  B u r t o n. 
E n g i n e e r i ng  Technique 
Language  U n d e r s t a n d i ng  S y s t e m s ,"  BBN  R e p o rt 
No.  3453,  B o s t o n,  Mass. 
D.  W a l t z, 
Data  Base 
I J C A I.  T b i l i s i,  USSR,  p p.  868  872 
1975)*. 
E . F.  Codd. 
Large  Shared  Data  B a n k s ."  CACM,  V o l.  13  No.  6, 
p p.  377-397 

an  E n g i n e e r i ng  A p p r o a c h ,"  P r o c.  4 th 

"A  R e l a t i o n al  Model  of  Data 

(Academic  P r e s s,  New  Y o r k, 

" N a t u r al  Language  Access 

" M u l t i p le 
f or  T u t o r i al 

f or  C o n s t r u c t i ng  N a t u r al 

"Semantic  Grammar:  An 

(December  1 9 7 6 ). 

( O c t o b er  1 9 7 0 ). 

to  a  Large 

(September 

f or 

f or 

(June  1 9 7 0 ). 
" I D A:  An 

10.  D.  S a g a l o w i c z, 

Access  P r o g r a m ,"  s u b m i t t ed 
C o n f e r e n c e,  T o k y o,  Japan 

1 1.  M.  M i n s k y, 

"A  Framework 

I n t e l l i g e nt  Data 

to  3rd  VLDB 
( O c t o b er  1977) 
f or  R e p r e s e n t i ng 

K n o w l e d g e ,"  A r t i f i c i al 
306.  MIT,  Cambridge,  Mass. 

I n t e l l i g e n ce  Memo  No. 

(June  1 9 7 4 ). 

12.  K.  Furukawa, 

"A  D e d u c t i ve  Q u e s t i on  A n s w e r i ng 

System  on  R e l a t i o n al  Data  B a s e s ,"  P r o c.  5 th 
I J C A I.  Cambridge,  Mass. 

(August  1 9 7 7 ). 

13.  B.  M.  W i l b e r, 

"A  QLISP  R e f e r e n ce  M a n u a l ." 

14. 

(March  1976). 

I n s t i t u t e,  Menlo 

I n t e l l i g e n ce  Center  T e c h n i c al  Note 

A r t i f i c i al 
No.  118,  S t a n f o rd  Research 
P a r k,  Ca. 
P.  M o r r is  and  D.  S a g a l o w i c z, 
Access 
Second  B e r k e l ey  Workshop  Q&  D i s t r i b u t ed  Data 
Management  andl  Computer  N e t w o r k s.  B e r k e l e y, 
Ca. 

to  a  D i s t r i b u t ed  Data  B a s e ,"  P r o c. 

(May  1977). 

"Managing  Network 

15.  D.  G.  Bobrow  and  B.  W e g b r e i t, 

"A  Model 

f or 

C o n t r ol  S t r u c t u r es 
f or  A r t i f i c i al 
Programming  L a n g u a g e s ,"  P r o c.  3rd 
S t a n f o r d,  C a .,  p p.  246-253 

I n t e l l i g e n ce 
I J C A I. 
(August  1973). 

16.  D.  Walker  et  a l ., 

"An  Overview  of  Speech 

U n d e r s t a n d i ng  Research  at  S R I ."  P r o c.  5 th 
I J C A I.  Cambridge,  Mass. 

(August  1977) 

17.  CODASYL  Data  Base  Task  Group,  A p r il  1971 

Report 

(ACM,  New  Y o r k,  1 9 7 1 ). 

K n o w l e d ge 

R e p r . - l: 

2 00 

S a c e r d ot 

