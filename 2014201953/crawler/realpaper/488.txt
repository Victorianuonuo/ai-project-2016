Automated Qualitative Domain Abstraction 

Martin Sachenbacher 

MIT Artificial Intelligence Laboratory 

Cambridge, MA 02139, USA 

sachenba@mit.edu 

Peter Struss 

TU Miinchen, Fakultat fur Informatik 

85748 Garching, Germany 

struss@in.tum.de 

Abstract 

Automated problem-solving for engineered devices 
is  based  on  models  that capture the essential  as(cid:173)
pects of their behavior.  In this paper, we deal with 
the problem of automatically abstracting behavior 
models  such  that  their  level  of  granularity  is  as 
coarse as possible, but still sufficiently detailed to 
carry out a given behavioral prediction or diagnos(cid:173)
tic task.  A task is described by a behavior model, 
as composed from a library, a specified granularity 
of the possible observations, and a specified gran(cid:173)
ularity of the  desired  results.  The  goal  is  to de(cid:173)
termine partitions for the domains of the variables 
(termed qualitative values) that are both necessary 
and  sufficient  for the task at  hand.  We present  a 
formalization of the problem within a common re(cid:173)
lational  (constraint-based) framework,  present  re(cid:173)
sults regarding  solutions to  task-dependent quali(cid:173)
tative domain abstraction, and devise methods for 
automatically  determining qualitative values  for a 
device model. 

Introduction 

1 
Model-based systems (lHamscher et a/.,  1992; Weld and de 
Kleer, 1990]) represent knowledge about the structure and be(cid:173)
havior of a  physical  system  in  terms  of a behavior  model, 
and use it to support engineering tasks such as behavior pre(cid:173)
diction, diagnosis, planning and testing.  When constructing 
model-based systems, one of the most difficult parts is mod(cid:173)
eling the device. A fundamental idea to support and facilitate 
modeling is to compose models from model fragments, that 
is, re-usable elements of knowledge about a device that can 
be organized in a library ([Falkenhainer and Forbus,  1991]). 
This  requires  that model  fragments  have  to  be  formulated, 
as far as possible, in a generic way and independent of their 
specific application context.  However, it also means that in(cid:173)
formation about the task a model will be used for cannot be 
anticipated in the model fragments. 

But a  model  needs  to  be  suited  for the problem-solving 
task  at  hand  in  order  to  provide  an  effective  and  efficient 
solution  to  it.  Using  always  the  most  accurate  and  most 
detailed model available may make the respective problem-
solving task intractable, or at least unnecessarily complex and 

resource-consuming.  For instance, for the task of diagnosing 
a device in an on-board environment, it is crucial to have a 
model that focuses only on those aspects that are essential to 
the goal of discriminating between its normal and faulty be(cid:173)
havior.  Any unnecessary details that are not relevant to this 
task impair its ability to meet the stringent time and space re(cid:173)
quirements of this application. In general, models straightfor(cid:173)
wardly composed from a library tend to be either inefficient, 
because they are overly detailed (that is, too fine-grained), or 
ineffective, because they are not detailed enough (that is, too 
coarse-grained) for the task they will be used for. 

The approach  pursued  in this paper  is  therefore to  auto(cid:173)
matically  re-formulate  a  behavior  model,  after  it  has  been 
composed,  to a level  of abstraction  that is adequate  for the 
specified task. We focus on the abstraction of the domains of 
variables, that is, the problem of deriving sets of meaningful 
qualitative values. Although some work has been carried out 
on finding qualitative values within a specific context, such as 
simulation ([Kuipers,  1986]), the general problem of charac(cid:173)
terizing and systematically deriving qualitative values for an 
arbitrary relational (constraint-based) behavior model is a rel(cid:173)
atively unexplored area. However, much of the work in quali(cid:173)
tative reasoning about physical systems ([Weld and de Kleer, 
1990]) relies on this type of abstraction.  The resolution of a 
behavior model's domains has a strong effect on the size of 
the  model,  the efficiency  of reasoning  with the model,  and 
the size of the solutions. Furthermore, within an on-board or 
real-time setting, the number of qualitative values determines 
how many of the observations will be qualitatively different, 
and therefore it influences the frequency at which reasoning 
has to be initiated at all. 
1.1  Example 
Consider, for example, the system depicted in figure 1.  The 
device is a simplified version of a pedal position sensor used 
in a passenger car. Its purpose is to deliver information about 
the position of the accelerator pedal to the electronic control 
unit (ECU) of the engine management system. The ECU uses 
this information to calculate the amount of fuel that will be 
delivered to the car engine. 

The pedal position is sensed in two ways, via the poten(cid:173)
and via the idle switch as 
The idle switch changes its state at a 
of the mechanically transferred 

tiometer as an analogue signal, 
a binary signal, 
particular value 

382 

DIAGNOSIS 

together those domain  values whose distinction is  irrelevant 
for the task at hand. 

The  core  idea  of distinctions between  domain  values  be(cid:173)
ing redundant is captured by the concept  of interchangeabil-
ity,  first proposed by Freuder ([Freuder,  1991]).  For a con(cid:173)
straint satisfaction problem that consists of a set of variables, 
domains  and  constraints on  these  variables,  two values  val[, 
val2  of a variable v  are said to be fully interchangeable, if for 
any  solution where v  =  vel1,  substituting v =  val2  produces 
another solution, and vice versa.  That is, solutions involving 
val1  (val2)  are  identical  to  solutions  involving  val2  (val\) 
except  for the  value  val\  (val2)  itself. 

Interchangeable  values  define  equivalence  classes  on  the 
domains of the variables,  and grouping them together corre(cid:173)
sponds to an abstraction of the constraint satisfaction problem 
that  exactly  preserves  the  set  of its  solutions.  Freuder  and 
Sabin  ([Freuder,  1991],  [Freuder  and  Sabin,  1995]) already 
observe  that  interchangcability  is  related  to  abstraction  and 
the  formation  of  "semantic  groupings"  within  the  domains 
of variables.  However,  it is also  known that  in  practice,  in-
terchangeability  of domain  values  does  not  occur  very  fre(cid:173)
quently. 

A  model-based  problem solving  task,  such  as  behavioral 
prediction or diagnosis, can be cast as an instance of a con(cid:173)
straint satisfaction problem.  However,  it is particular in  two 
respects: 
(1)  the input consists  not only of the model,  but also of the 
observations that it is confronted with, such as measure(cid:173)
ments,  hypothetical situations, etc.  Typically, observa(cid:173)
tions are restricted because not all of the variables in the 
device model are observable, or because domain values 
cannot be observed beyond a certain granularity. 

(2)  the  output  involves  not  all  feasible  assignments  of do(cid:173)
main values to variables, but only certain aspects of the 
solutions are required. Typically, we might be interested 
in  knowing  whether  values  remain  below  or  exceed  a 
certain  threshold, or what the values of mode  variables 
of components are (for a diagnostic task), etc. 

The idea pursued in this paper is to generalize the basic prin(cid:173)
ciple of interchangeability, leveraging on this specific context 
of a model-based problem solving task.  The notion of a task 
is  captured  as  (1)  observable  distinctions that  express  what 
inputs to the problem solving process (for example, observa(cid:173)
tions) can occur, and (2) target distinctions that express what 
aspects of the outcome we are after. They can be exploited to 
obtain  so-called  induced abstractions â€” domain  abstractions 
that  go  beyond  the  low,  generic  level  of interchangeability, 
but are still adequate for the given task. 

We  pursue  the  approach  in  the  context  of  general,  rela(cid:173)
tional models that are not limited to restricted cases such as 
linear relationships or monotonic functions.  A  relational  (or 
constraint-based) behavior model is a subset 

that restricts the possible combinations of values for the vari(cid:173)
ables  v  =  (v1,  v2,. . .,  vn),  where  DOM(vi)  denotes  the do(cid:173)
main of a variable  vi,.  We use join 
selection 

as operators on relations. 

, projection (11), and 

pedal  position.  The  reason  for the redundant  sensing  of the 
pedal  position is that the signals 
are cross-
checked  against each other by the on-board control  software 
of the ECU. This plausibility check is a safety  feature of the 
system, in order to avoid cases where a wrong amount of fuel 
injected evokes dangerous driving situations. 

; and 

and 

Assume we want to perform the plausibility check between 
the  electrical  signals 
automatically  by  the 
means of a behavior model of the system.  For the potentiome(cid:173)
ter model fragment, this requires a distinction in the domain 
of 
of the switch.  This is the only distinction in this domain that 
is required for the purpose at hand. 

that corresponds to the switching  point 

The problem is that this particular distinction cannot be an(cid:173)
ticipated  in  a  generic  model  fragment  of the  potentiometer 
component,  because  it  would  not  make  any  sense  in  a  dif(cid:173)
ferent  structure. 
It  is  only  the  specific  combination  of  the 
potentiometer and  the switch  together with the pursued  task 
that requires this distinction.  In contrast, other tasks such as 
control  or  design  might require  more  detailed  domains  that 
would allow to relate  the position of the switch to particular 
potentiometer voltages. 

The  problem  is  important,  because  it  impairs  the  idea  of 
using a model of the pedal position sensor as a common basis 
for different tasks.  For engineered  systems,  it is  typical that 
several  tasks  along  the  product's  life cycle  â€”  such  as  fail(cid:173)
ure  modes  and  effects  analysis  (FMEA),  on-board  diagnos(cid:173)
tics  development,  generation  of repair manuals  or workshop 
diagnosis â€”  share  a  significant  amount  of common  knowl(cid:173)
edge  about  the  behavior  of the  system  under consideration. 
It  would  be  inacceptable  having  to  manually create  models 
from scratch that are tailored to each of these tasks. 

2  Task-dependent Distinctions 
The example above has confronted us with the problem that 
simply picking model fragments from a library and compos(cid:173)
ing the model is not enough. It is infeasible, in general, to an(cid:173)
ticipate the required granularity in  the domains of variables. 
Therefore,  the  ability  to  transform  the  domains  to  the  right 
level  of  abstraction  after  composing  the  constraints  of  the 
model  is a  highly practical  requirement.  It  means  grouping 

DIAGNOSIS 

383 

Consider again the device shown in figure  1.  Assume that 

the domain is 

{[0V,2V), [2V,4V), [4V,6V), [6V,8V), [8V,10V)} 

for variables involving voltage and 

{0%, 20%, 40%, 60%, 80%, 100%} 

for variables  involving position, and  that the only parameter 
in the system, poss w i t c h i n g, equals 40%. Then the device can 
be modeled by a relation R that consists of 10 tuples: 

Observable distinctions reflect the  measurement  granular(cid:173)
ity  or  incomplete  observability of variables.  An  observable 
distinction for a variable is expressed as a partition of its do(cid:173)
main: 
Definition 1  (Observable Distinction)  An  observable  dis-
tinction for a  variable  Vi,  denoted 
,  is  a partition of its 
domain  DOM(v{). 
A  variable  vi,  is  not  observable  at  all  if 
is  equal  to 
the trivial domain partition 
.  For in(cid:173)
stance, the fact that for the pedal position sensor, the control 
unit  observes  the signal 
can be 
expressed by the observable distinction 

and  the signal 

can  be straightforwardly extended from single values to sets 
of values,  by taking the  union of the resulting sets.  For two 
abstractions r,  and 

is a refinement of 

if 

Two abstractions  T,,  ti,'  are comparable,  if Ti is a refinement 
of  TI  or  Ti 
is  a  refinement  of  Ti.  We  apply  the  notion  of 
refinement and comparability equally to abstractions and do(cid:173)
mains.  A vector of domain abstractions is denoted 

A  domain abstraction  t  is a refinement of  t',  if every  r,  is a 
refinement  of  Ti.  Two abstractions  T,  T'  are piecewise  com(cid:173)
parable,  if every  Tit  is  comparable  with  Ti.  If a join  opera(cid:173)
tion combines two relations that are defined on different, but 
piecewise comparable domains,  we define,  for convenience, 
that the result is a relation over the finer domains. 

3  Qualitative Abstraction Problems 
Given  this representational  apparatus,  we can  now formally 
define the problem of task-dependent qualitative abstraction. 
Definition 3 (Qualitative Abstraction Problem)  ixt  R  be 
a  relational  behavior model,  OBS  a  set  of external  restric(cid:173)
tions, Tobs a domain abstraction defined by observable dis(cid:173)
tinctions,  and Ttarg  a domain  abstraction defined by target 
distinctions.  The  qualitative abstraction problem  consists  of 
finding  an  induced domain abstraction Tlnd such  that: 

whereas  all  other variables  receive  the  trivial  domain  parti(cid:173)
tion. 

Target  distinctions  reflect  the  granularity  of  solutions  we 
are after.  Analogously to observable distinctions, target dis(cid:173)
tinctions are expressed as domain partitions: 
Definition 2  (Target Distinction)  A  target  distinction for  a 
variable  Vi,  denoted  ntargi. 
is  a  partition  of  its  domain 
DOM(vi). 
A  variable  vi  is  said  to  have  no  target  partition,  if  ntarg,i 
is equal  to the trivial  partition.  For instance,  the target dis(cid:173)
tinctions for the pedal  position sensor are determined by the 
goal to distinguish between the domain values for the variable 
Vswitch (the plausibility check itself is not represented in the 
model): 

2.1  Domain Abstractions 
A domain  partition 7r,  can  also  be understood as  a domain 
abstraction 

that maps elements  val  from a base domain  DOM(vi) 
to a 
transformed  domain  DOM'(vi)  that consists  of sets  of values 
.  Abstractions 
from the base domain such that 

(2) (Simplicity) If Tind is a refinement of a domain abstrac-

tionTind'  and Tind' fulfills (I),  then Tind  =  Tind'. 

The  first  condition  (adequacy)  states  that  the  abstracted 
model  Tin(i(R)  derives  a  solution  on  the  level  of target  dis(cid:173)
tinctions, if and only if the original model R derives the same 
solution  on  the  level  of target distinctions.  We  require  this 
to hold for all the possible external restrictions (actual obser(cid:173)
vations,  design  specifications,  etc.)  on  the  level  of observ(cid:173)
able  distinctions.  This  guarantees  that  for  any  external  re(cid:173)
striction  that can  occur,  the  abstracted  model  will  yield  the 
same results as the original model. That is, if we apply rind 
before carrying out our problem-solving task,  it won't affect 
the result because this abstraction incorporates all the distinc(cid:173)
tions that are necessary  for this task.  As a consequence,  we 
can  substitute  the  abstracted  model  Tind{R)  for  the  original 
model  R in problem solving. 

In general, there may be many domain abstractions that ful(cid:173)
fill the adequacy criterion.  In particular, the identical domain 
abstraction  Tid  that retains  all  the  distinctions in  the  model 
is an adequate abstraction according to the definition.  How(cid:173)
ever,  among  all  adequate  abstractions,  we  prefer  those  that 
are  the  "simplest"  ones.  Simplicity of an  adequate  abstrac(cid:173)
tion  is  defined  in  the  second condition of definition  3.  The 
approach  taken  is to select the abstractions that are coarsest 
in the sense that there exits no other adequate abstraction of 

384 

DIAGNOSIS 

which  they  would  be  a  strict  refinement  (an  abstraction  that 
would further merge  at  least  two of the qualitative values).  A 
domain  abstraction  that  is both adequate  and  simple  incorpo(cid:173)
rates  only  distinctions  that  are  both  necessary  and  sufficient 
according  to  the  target  and  observable  distinctions. 
It  rep(cid:173)
resents  a  level  of  abstraction  that  neither  makes  any  unnec(cid:173)
essary  distinctions,  nor  abstracts  away  any  distinctions  that 
are  crucial  to  solve  the  problem.  Definition  3  thus  formal(cid:173)
izes  the  problem of  finding  qualitative values  for the domains 
of  variables.  Compared  to  interchangeability,  which  is  con(cid:173)
cerned  with  possibilities for abstraction  within a  single  prob(cid:173)
lem  instance  only,  a  qualitative  abstraction  problem  (QAP) 
describes  a  whole  class  of  instances  defined  by  a  model  re(cid:173)
lation,  a  set  of external  restrictions,  and  the  task-dependent 
distinctions. 
Interchangeability  enforces  that  the  set  of  so(cid:173)
lutions  remains  the  same  as  for  the  original  model.  A  QAP 
generalizes  (or relaxes)  this  basic  principle and  demands  that 
the  set  of solutions remains  the  same  but  only  on  the  level  of 
target  distinctions, and  only  for inputs on  the  level  of observ(cid:173)
able  distinctions. 

Obs-completeness  means  that  all  the possible  observations 
on  the  level  of  observable  distinctions  can  actually  occur  or 
have  to  be  considered  during problem-solving (consequently, 
induced  abstractions can  be  derived  without knowing the  ex(cid:173)
act  set  DBS).  Sol-completeness  means  that  all  the  possible 
solutions defined  by  the target distinctions can  indeed  be dis(cid:173)
tinguished based on the model and the external restrictions.  In 
addition, we  demand  that  
are  pieccwise  com(cid:173)
parable.  Note that this  is  not actually a restriction, because  it 
can  be  established  for  any  QAP  by  possibly  introducing  ad(cid:173)
ditional  variables  that  separate  the  target  and  observable  dis(cid:173)
tinctions. 

and 

Intuitively, under these  conditions, we  expect  that  we  have 
to  keep  all  the  target  distinctions,  because  we  need  them  to 
distinguish  the  solutions,  but  we  can  eliminate  the  distinc(cid:173)
tions  between  observations that would  lead  to  the same  set of 
are  given 
solutions.  If QAP  is  obs-complete,  the 
by 
F
tuple 

the  possible  subsets  o

or  each 

f

( D O A / ( v ) ),   define 

to be the solu(cid:173)

tion  it derives  on  the  level  of target  distinctions: 

Figure  2  shows  the  resulting  partition  
for 
the  pedal  position  sensor  example,  given  the  observable  and 
target  distinctions  stated  in  Sec.  2  (all  variables  except 
and  vswitch  have  no  distinction and  have  been  omitted  from 
the  figure;  values  [2V,4V),  [4V,6V)  and  [6V,8V)  for 
do  not  appear  in  R  and  have  been  omitted  from  its domain). 

Figure  2:  Partition  
sensor  example.  The  partition consists  of four elements  num(cid:173)
bered  1, 2 , . . .,  4.  Applying theorem  1  yields the distinctions 
for Vpot shown  on  the  left-hand  side  of the  figure. 

for  the  pedal  position 

Theorem  1  (Solution  to  Q A P)  Let  QAP be  a  qualitative ab(cid:173)
straction  problem 
TF1,A,t 
terchangeable  values  of  a 

that  is  obs-complete  and  sol-complete.  Let 
in(cid:173)
two  values 

the  domain  abstraction 

that  aggregates 

relation  A, 

be 

the 

that 

is, 

are  combined  if 

Then 
Ttargi,i 

the  simplest  domain  abstraction  that  is  a  refinement  of 

and  every  domain  abstraction 

is  an 

induced  abstraction for  QAP. 

For the pedal  position sensor example,  Theorem  1  derives 

three  qualitative values  for  

(see Fig. 2): 

corresponds 
The  first  qualitative  value 
to  situations  where  
equals  ground  voltage,  the  third 
qualitative  value  |[6V,8V),[8V,10V)}  corresponds  to  situa(cid:173)
tions  where 
equals  battery  voltage,  and  the  second 
qualitative  value  {[4V,6V)}  corresponds  to  situations  where 
the  position  of the  switch  and,  hence,  the  voltage  of 
is  ambiguous. 

Theorem  1  shows that the basic concept of interchangeabil(cid:173)
ity  plays  a  central  role  in  the  determination  of solutions  to  a 
qualitative abstraction  problem.  In  particular,  the  problem of 
finding  interchangeable  values  in  a  relation  can  be  recast  as 
a  special  case  of a  QAP,  where  one  distinguishes only empty 
from  non-empty  solutions: 

DIAGNOSIS 

385 

Consider again the device shown in figure  1.  Assume that 

the domain is 

{[0V.2V), [2V.4V), [4V.6V), [6V,8V), [8V,10V)} 

for variables involving voltage and 

{0%, 20%, 40%, 60%, 80%, 100%} 

for variables  involving position, and that the only parameter 
in the system, 
equals 40%. Then the device can 
be modeled by a relation R that consists of 10 tuples: 

Observable distinctions reflect  the  measurement  granular(cid:173)
ity  or  incomplete  observability  of variables.  An  observable 
distinction for a variable is expressed as a partition of its do(cid:173)
main: 
Definition 1 (Observable Distinction)  An  observable  dis(cid:173)
tinction for a  variable  vi,  denoted 
is  a  partition  of its 
domain  DOM(vi). 
is  equal  to 
A  variable vi,- is  not  observable  at  all  if 
the trivial domain partition 
.  For in(cid:173)
stance, the fact that for the pedal position sensor, the control 
unit observes  the signal vpot  and  the  signal  vswitch  can  be 
expressed by the observable distinction 

whereas  all  other  variables  receive  the  trivial  domain  parti(cid:173)
tion. 

Target  distinctions  reflect  the  granularity  of  solutions  we 
are after.  Analogously to observable distinctions, target dis(cid:173)
tinctions are expressed as domain partitions: 
Definition  2  (Target Distinction)  A  target  distinction for  a 
variable  Vi,  denoted 
is  a  partition  of  its  domain 
DOM(vi). 
A  variable  Vi  is  said  to  have  no  target  partition,  if 
targ, 
is equal  to the trivial  partition.  For instance,  the target dis(cid:173)
tinctions for the pedal position sensor are determined by the 
goal to distinguish between the domain values for the variable 
vs w i t ch  (the plausibility check itself is not represented  in the 
model): 

2.1  Domain Abstractions 
A  domain  partition 
abstraction 

can  also be understood as  a domain 

that  maps  elements  val  from  a  base  domain  DOM(vi)  to  a 
transformed  domain  DOM'(vi)  that consists of sets  of values 
from the base domain such that  val 
.  Abstractions 

can  be straightforwardly extended from single values to sets 
of values,  by  taking the union of the resulting sets.  For two 
abstractions 

is a refinement  o f if 

and 

are comparable,  if ri, is a refinement 
Two abstractions 
of 
is  a  refinement  of  ri-.  We  apply  the  notion  of 
refinement and comparability equally to abstractions and do(cid:173)
mains.  A vector of domain abstractions is denoted 

.  Two abstractions 

A  domain abstraction  r  is  a  refinement  of r',  if every  r,  is a 
are piecewise com(cid:173)
refinement  of 
parable,  if every  r,  is  comparable  with  r/. 
If a join  opera(cid:173)
tion combines two relations that are defined on different, but 
piecewise comparable domains,  we  define,  for convenience, 
that the result is a relation over the finer domains. 

3  Qualitative Abstraction Problems 
Given  this representational  apparatus,  we can  now formally 
define the problem of task-dependent qualitative abstraction. 
Definition 3 (Qualitative Abstraction Problem)  Let  R  be 
a  relational  behavior  model,  OBS  a  set  of external  restric(cid:173)
tions, T0bs a domain abstraction defined by observable dis(cid:173)
tinctions,  and Ttarg  a domain  abstraction  defined by  target 
distinctions.  The  qualitative abstraction  problem  consists  of 
finding  an  induced domain abstraction  Tind  such  that: 
(1)  (Adequacy)  For  all  external  restrictions 

(2)  (Simplicity) If Tind is a refinement of a domain abstrac(cid:173)

tion  Tind'  and 

fulfills(1), 

then 

The  first  condition  (adequacy)  states  that  the  abstracted 
model  Tind(R)  derives  a  solution  on  the  level  of target  dis(cid:173)
tinctions, if and only if the original model  R derives the same 
solution on  the  level  of target  distinctions.  We  require  this 
to hold for all the possible external restrictions (actual obser(cid:173)
vations,  design  specifications,  etc.)  on  the  level  of observ(cid:173)
able  distinctions.  This  guarantees  that  for  any  external  re(cid:173)
striction that can  occur,  the  abstracted  model  will  yield  the 
same results as the original model.  That is, if we apply rind 
before carrying out our problem-solving task,  it won't affect 
the result because this abstraction incorporates all the distinc(cid:173)
tions that are necessary  for this task.  As a consequence,  we 
can  substitute the abstracted model 
for the  original 
model  R in problem solving. 

In general, there may be many domain abstractions that ful(cid:173)
fill the adequacy criterion.  In particular, the identical domain 
abstraction  rid  that retains  all  the  distinctions in  the  model 
is an adequate abstraction according to the definition.  How(cid:173)
ever,  among  all  adequate  abstractions,  we  prefer  those  that 
are  the  "simplest"  ones.  Simplicity of an  adequate  abstrac(cid:173)
tion  is  defined  in  the  second  condition of definition  3.  The 
approach  taken  is to select  the abstractions that are coarsest 
in the sense that there exits no other adequate abstraction of 

384 

DIAGNOSIS 

Figure 2 shows the resulting partition 
for 
the pedal position sensor example,  given the observable and 
target distinctions stated  in  Sec.  2  (all  variables except 
and 
the  figure;  values  [2V.4V),  14V,6V) and  [6V,8V)  for 
do not appear in R and have been omitted from its domain). 

have no distinction and have been omitted from 

which they  would be a strict refinement (an  abstraction that 
would further merge at least two of the qualitative values).  A 
domain abstraction that is both adequate and simple incorpo(cid:173)
rates  only distinctions that are  both necessary  and sufficient 
according  to  the  target  and  observable  distinctions.  It  rep-
resents  a  level  of abstraction  that  neither makes  any  unnec(cid:173)
essary  distinctions,  nor abstracts  away  any  distinctions that 
are  crucial  to solve  the problem.  Definition  3  thus  formal(cid:173)
izes the problem of finding qualitative values for the domains 
of variables.  Compared to interchangeability, which  is con(cid:173)
cerned with possibilities for abstraction within a single prob(cid:173)
lem  instance  only,  a  qualitative abstraction  problem  (QAP) 
describes  a whole class  of instances defined  by  a  model  re(cid:173)
lation,  a set of external  restrictions,  and  the task-dependent 
distinctions. 
Interchangeability  enforces  that  the  set  of  so(cid:173)
lutions remains  the same  as for the original model.  A QAP 
generalizes (or relaxes) this basic principle and demands that 
the set of solutions remains the same  but only on the level of 
target distinctions, and only for inputs on the level of observ(cid:173)
able distinctions. 

Obs-completeness means that all the possible observations 
on  the  level  of observable  distinctions can  actually occur or 
have to be considered during problem-solving (consequently, 
induced abstractions can be derived without knowing the ex(cid:173)
act  set  DBS).  Sol-completeness  means  that  all  the possible 
solutions defined by the target distinctions can indeed be dis(cid:173)
tinguished based on the model and the external restrictions. In 
addition, we demand that 
are piece wise com(cid:173)
parable.  Note that this is not actually a restriction, because it 
can  be established for any  QAP by possibly introducing ad(cid:173)
ditional variables that separate the target and observable dis(cid:173)
tinctions. 

Intuitively, under these conditions, we expect that we have 
to keep all  the  target distinctions, because  we  need them  to 
distinguish  the  solutions,  but  we  can  eliminate  the  distinc(cid:173)
tions between observations that would lead to the same set of 
are given 
solutions.  If QAP is obs-complete, the 
by  the  possible subsets  of 
For each  tuple 
to be the solu(cid:173)

tion it derives on the level of target distinctions: 

Let 
solution, i.e. those for which 

denote  the  sets  of 

" 

that  obtain  the  same 
is equal: 

Then  the 

form 

the  elements  of  a  partition  of 

Figure  2:  Partition D(R, r,,/,.,, Ttarg)  for the  pedal  position 
sensor example.  The partition consists of four elements num(cid:173)
bered 1, 2 , . . ., 4. Applying theorem 1 yields the distinctions 
for vpot shown on the left-hand side of the figure. 

Theorem  1 (Solution lo QAP)  Let QAP be a qualitative ab(cid:173)
straction problem that is obs-complete and sol-complete.  Let 
TFIA 
be  the  domain  abstraction  that  aggregates  the  in(cid:173)
terchangeable  values  of a  relation  A,  that  is,  two  values 

are  combined if 

Then the simplest domain abstraction that is a refinement of 
T targi,t  and every domain abstraction 

is an  induced abstraction for QAP. 

For the pedal position sensor example, Theorem  1  derives 

three qualitative values for 

(see Fig. 2): 

{{[0V,2V),[2V,4V)},  {[4V,6V)j,  {[6V,8V),[8V,10V)}}. 

The  first  qualitative  value  {10V,2V),[2V,4V)|  corresponds 
to  situations where 
equals ground voltage,  the third 
qualitative  value  {[6V,8V),[8VJ0V)}  corresponds  to  situa(cid:173)
tions  where 
equals  battery  voltage,  and  the  second 
qualitative  value  {[4V,6V)}  corresponds  to  situations where 
the position of the switch and, hence, the voltage of vswitch 
is ambiguous. 

Theorem 1 shows that the basic concept of interchangeabil(cid:173)
ity plays a central  role in the determination of solutions to a 
qualitative abstraction problem.  In particular, the problem of 
finding interchangeable values  in a relation can  be  recast as 
a special case of a QAP, where one distinguishes only empty 
from non-empty solutions: 

DIAGNOSIS 

385 

Corollary  1 (Interchangeability as QAP)  Let  QAP 

= 
be  an  obs-complete  qualitative  abstraction 
is 

Then 

problem such  that 
an  induced abstraction for QAP. 

In  general,  however,  the  granularity  of  induced  abstrac(cid:173)
tions is different from  the granularity of interchangeable val(cid:173)
can be either more coarse or more  fine-grained  than 
ues, 
The latter case  occurs if target distinctions are speci(cid:173)
fied between domain values that are interchangeable with re(cid:173)
spect to the model relation. 

Theorem  1 constitutes also a starting point for finding use(cid:173)
ful  approximations  of qualitative  values.  One  approach  is 
to  use  only  necessary  conditions  for  interchangeability. 
In 
order  for  two  domain  values  to  be  aggregated  by  TFIA, 
it  is  necessary  that  they  appear  in  the  same  elements  of 

Proposition  1  (Approximate Solution to QAP)  Let  QAP 
be a  qualitative abstraction problem that is obs-complete and 
sol-complete.be 
abstraction 
that is a refinement of 

and every  domain abstraction 

simplest 

domain 

the 

Then the induced abstractions are a refinement of 

The  approximation 

considers  only  the  projection  of 
each  A on the individual variables.  This yields a granularity 
that is simpler than or equal  to the induced abstractions.  For 
the pedal position sensor example, the distinctions derived by 
are identical to those derived by Theorem  1. Obtaining 
is  easier  than  determining  Tindi,  because  it  involves 
only the projection and intersection of sets  and  does  not re(cid:173)
quire to determine the interchangeable values in A.  However, 
because  it considers only restrictions for individual variables, 
the approximation 
is not adequate.  In general, a restric(cid:173)
tion  might  lead  to a  different  solution only  if it is  combined 
with additional restrictions for the other variables. 

4  AQUA: A Prototypic System for 

Task-dependent Domain Abstraction 

The  computation  of  induced  abstractions  for  a  QAP  in(cid:173)
volves,  based  on  the  results  above,  the  subproblems  of 
constructing  the  model  relation  R,  computing  the  partition 
and  determining  interchangeable  values 

within the elements of this partition. 

Our prototypic system AQUA (Automated Qualitative Ab(cid:173)
straction)  ([Sachenbacher,  2001])  determines  the  relation  R 
through  structural  decomposition  of  the  constraint  network 
that  is  defined  by  the  set  of  model  fragments  it  is  com(cid:173)
posed  of.  The  basic  principle  of  structural  decomposition 
([Gottlob et a/.,  2000])  is  to transform a constraint network 
into an  equivalent acyclic  (tree-structured) instance.  AQUA 
then  iterates  over  the  partition  elements  of  the  observable 
and  target  distinctions  and  labels  the  tuples  of  the  relation 
R  that  are  consistent  with  the respective  partition elements. 
Since  directional  arc  consistency  is  sufficient  for  establish(cid:173)
ing  consistency  in  a  tree-structured  network  (iDechter  and 
Pearl,  1988]),  this  step  can  be  performed  efficiently  by  lo(cid:173)
cal  constraint  propagation.  This  step  yields  the  partition 

Interchangeable values in the partition el(cid:173)
ements of 
can then be found using the ba(cid:173)
sic algorithm described in  [Freuder,  1991].  Alternatively, the 
partition elements can be projected on the individual variables 
to obtain the approximate solution. AQUA also performs fur(cid:173)
ther optimizations in  that it can  automatically remove  redun(cid:173)
dant  values  (domain  values  that  do  not  appear  in  any  con(cid:173)
straint) and eliminate variables that have no distinction at all. 
The  decomposition step  is  independent of the particular task 
in  terms of observable and  target distinctions;  hence,  the re(cid:173)
sulting tree can  be  re-used  for different combinations of ob(cid:173)
servable or target distinctions. 

AQUA  builds  on  components  of an  existing  model-based 
reasoning  framework  that  consists  of a  development  system 
for  composing  a  device  model  from  of  a  library  of  model 
fragments,  and  a  runtime  system  for performing  behavioral 
prediction  and  diagnosis  based  on  actual  measurements  for 
the  device.  Using  AQUA,  several  tasks  can  be  supported 
in  the  context  of building  model-based  systems  that  arc  of(cid:173)
ten  carried  out manually or solved on  an  ad  hoc-basis.  The 
common  theoretical  basis  is to  find  suitable domains for the 
variables in a model.  However,  in different contexts this ba(cid:173)
sic task can have different interpretations, depending on what 
the terms variable and domain refer to, including magnitudes, 
modes  of components,  and deviations from reference  behav(cid:173)
iors (ISachenbacher,  2001]). 

In a larger, real-world application taken from the automo(cid:173)
tive  domain  ISachenbacher  et  al,  2000],  AQUA  was  used 
to  obtain  abstractions  of  behavior  models  of  a  turbo  con(cid:173)
trol  subsystem  that involved  several  hundred  (initially,  real-
valued)  variables.  The  qualitative level  of abstraction  of the 
derived  model  was  instrumental  to  meet  real-time  require(cid:173)
ments,  and allowed for keeping up with the rate of the mea(cid:173)
surements in an on-board diagnostic context.  In this context, 
task-dependent abstraction proved useful as a precompilation 
method that guaranteed adequacy of the results. 

5  Discussion 
While  several  pieces  of  work  have  addressed  the  problem 
of automatically deriving appropriate models  ([Nayak,  1994; 
Levy  et  al.,  1997; Rickel  and  Porter,  1997]),  the  work  pre(cid:173)
sented here is distinctive in that it focuses  specifically on the 
granularity (resolution) of the domain  values,  and  uses rela(cid:173)
tions and partitions as a common and concise representational 
framework.  This has several  important implications. 

The narrowed focus allows us to represent the space of pos(cid:173)
sible candidate models implicitly and compactly as the space 
of  possible  domain  partitions. 
In  contrast,  [Nayak,  1994; 
Rickel  and  Porter,  1997]  define  this  space  as  the  possible 
combinations  of  model  fragments.  Candidate  models  are 
then defined by different choices (selections) of possible frag(cid:173)
ments.  Because  in  our  framework,  the  difference  between 
different candidate  models  is  well-defined  (by  means  of op(cid:173)
erators TI), we can  in contrast take on the view of transform(cid:173)
ing  (re-formulating)  models  instead  of selecting  them.  The 
general  relational  representation  subsumes  both  infinite  and 
finite constraints, and is not  limited to specific types of con(cid:173)
straints  and  special-purpose  reasoning  methods. 
It  allows 

386 

DIAGNOSIS 

us  to capture the conditions for a solution in  a  single,  con(cid:173)
cise  formula  (Definition  3)  and,  more  importantly,  allows 
to  determine  the  solutions  analytically  and  in  closed  form 
(Theorem  1).  In  contrast,  [Nayak,  1994;  Levy  et ai,  1997; 
Rickel  and  Porter,  19971  all  devise  search  procedures  that 
start from an initial model and backtrack until they find a so(cid:173)
lution.  In  general,  it can  be  said  that our limited scope  al(cid:173)
lows us to assume a less knowledge-based, more mathemati(cid:173)
cal  view of automated modeling. 

QSIM  ([Kuipers,  1986]),  a  system  for performing  quali(cid:173)
tative  simulation  of device  behavior  over  time,  incorporates 
methods  for  refining  the  domains  of  variables  by  deriving 
new  distinctions  ("landmarks")  during  the  simulation  pro(cid:173)
cess.  However,  except  for signs,  the  mapping  of qualitative 
values  to  their  base  domain  is  only  partially  known,  since 
only information on  the  ordinal  relationship and  knowledge 
about  values  that  must  be  assumed  simultaneously  ("corre(cid:173)
sponding values") is provided. Therefore, the derived distinc(cid:173)
tions can  in  general  not be used  to simplify the model.  Ex(cid:173)
tensions of QSIM  that deal  with semi-quantitative reasoning 
[Berleant and  Kuipers,  1997])  allow  to further constrain  the 
landmark values  to numeric  intervals,  but are  specific  to the 
context of simulation, and the constraints are limited to alge(cid:173)
braic relationships and  monotonic functions.  For the specific 
task of diagnosis, Torasso and Torta [Torasso and Torta, 2002] 
recently  presented  an  approach  for merging  together behav(cid:173)
ior modes that are  indistinguishable, given  the granularity of 
the observations.  However,  the method does not incorporate 
a notion of target distinctions. 

While the  theory  of task-dependent  domain  abstraction  is 
applicable  both  to  finite  and  infinite domains,  an  important 
area  for future work  is  to  efficiently derive  induced  abstrac(cid:173)
tions for real-valued base models.  [Sachenbacher,  2001] out(cid:173)
lines  a  method  for  iterative  refinement  of qualitative  values 
given  a real-valued  base  model.  [Struss,  2002]  investigates 
cases  where  distinctions can  be  obtained  for  monotonic re(cid:173)
gions of real-valued functions. 

6  Conclusion 
The  increasing complexity of engineered devices has  lead to 
an  increased  demand  for  computer-supported  behavior  pre(cid:173)
diction, diagnosis, and testing.  Given the maturity and scale 
of model-based  systems  applications, the question of how to 
re-use  behavior  models  is  of growing  interest. 
It  has  been 
shown that  a model  composed  from a library cannot be ex(cid:173)
pected  to  have  a  level  of  granularity  suitable  for  different 
tasks  right  away. 
Instead,  the  ability  to  re-formulate  the 
model after composing it is a crucial  requirement.  We iden(cid:173)
tified,  within  a common  relational  framework,  fundamental 
properties  of re-formulation  that  is  based  on  abstraction  of 
domain  values.  Observable  distinctions  and  target  distinc(cid:173)
tions allow to capture  important aspects  of a  task.  They  are 
the starting point for deriving qualitative values that are both 
adequate for the task and as simple as possible.  Our analy(cid:173)
sis reveals  that the degree of domain  abstraction that can be 
achieved  is  strongly  dependent  on  the  characteristics  of the 
task. Task-dependent qualitative domain abstraction is a con(cid:173)
tribution to further bridging the gap between quantitative and 

qualitative modeling, as it allows to express knowledge about 
component behavior without being committed early to a spe(cid:173)
cific  abstraction  level  of the  domains. 
It  can  help  to  make 
model-based  system  more  efficient  and  more  cost-effective 
due to automating steps that are currently done by hand. 

References 
[Berleant and Kuipers,  1997]  D.  Berleant  and  B.  Kuipers. 
Qualitative and quantitative simulation:  Bridging the gap. 
Artificial  Intelligence,  95(2):215-255",  1997. 

[Dechter and Pearl,  1988]  Rina  Dechter  and  Judea  Pearl. 
Network-based heuristics  for constraint-satisfaction prob(cid:173)
lems.  Artificial Intelligence,  34(1): 1-38,  1988. 

[Falkenhainer and Forbus,  19911  B.  Falkenhainer and  K.  D. 
Forbus.  Compositional modeling:  Finding the right model 
for the job.  Artificial Intelligence,  51:95-143,  1991. 

[Freuder and Sabin, 1995]  E. C. Freuder and D. Sabin. Inter-
changeability  supports  abstraction  and  reformulation  for 
constraint satisfaction. In Proceedings of SARA'95, 1995. 
IFreuder,  1991]  E.  C.  Freuder.  Eliminating interchangeable 
In  Proc.  of 

values  in  constraint  satisfaction  problems. 
AAAI-9I,  pages 227-233, Anaheim, CA,  1991. 

\Gottlob et at., 2000]  Georg  Gottlob,  Nicola  Leone,  and 
Francesco  Scarcello.  A comparison  of structural CSP de(cid:173)
composition  methods.  Artificial  Intelligence,  124(2):243-
282, 2000. 

[Hamscher et  al,  1992]  W. Hamscher, L. Console, and J. de 
Kleer, editors.  Readings in Model-based Diagnosis.  Mor(cid:173)
gan Kaufman Publishers, San Mateo, CA, 1992. 

[Kuipers,  1986]  B.J.  Kuipers.  Qualitative simulation. Artifi(cid:173)

cial  Intelligence,  29(3):289-338,1986. 

[Levy et  al,  1997]  A. Levy, Y. Iwasaki, and R. Fikes.  Auto(cid:173)
mated  model  selection for simulation based on  relevance 
reasoning.  Artificial  Intelligence,  96:351-394,1997. 

[Nayak,  1994]  P. Pandurang Nayak.  Causal approximations. 

Artificial  Intelligence,  70:277-334,  1994. 

iRickel and Porter,  1997]  J. Rickel and B. Porter. Automated 
modeling  of complex  systems  to  answer  prediction ques(cid:173)
tions.  Artificial Intelligence,  93:201-260,  1997. 

[Sachenbacher et al, 2000]  M.  Sachenbacher,  P.  Struss, and 
C. Carlcn.  A prototype for model-based on-board diagno(cid:173)
sis of automotive systems.  AI Comm.,  13(2):83-97,2000. 
[Sachenbacher,  2001]  M.  Sachenbacher.  Automated  Quali(cid:173)
tative  Abstraction  and  its Application  to  Automotive  Sys(cid:173)
tems. PhD thesis, TU Munich, 2001. 

[Struss, 2002]  P. Struss. Automated abstraction of numerical 
simulation models: Theory and practical experience. Proc. 
QR-02, Spain, 2002. 

[Torasso and Torta, 2002]  P. Torasso and G. Torta.  Merging 
indiscriminable  diagnoses:  An  approach  based  on  auto(cid:173)
matic domains abstraction.  Proc.  DX-02, Austria, 2002. 

[Weld and de Kleer,  1990]  D. Weld and J. de Kleer, editors. 
Readings  in  Qualitative  Reasoning  about  Physical  Sys(cid:173)
tems. Morgan Kaufmann, San Mateo, CA, 1990. 

DIAGNOSIS 

387 

